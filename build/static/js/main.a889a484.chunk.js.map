{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","data/data.js","data/dataTableHeader.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions/actionUtils.js","Redux/actions.js","Redux/actions/employeeAction.js","Redux/actions/branchAction.js","Redux/actions/dataAction.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/userSettings/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","Redux/actions/filterAction.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/KindOfGood.js","components/orders/cell/Brand.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","Redux/actions/clientAction.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/general/calandar/CalendarTime.js","components/general/calandar/CalendarNavi.js","components/general/calandar/CalendarOption.js","components/general/calandar/ChooseDate.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPayments.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/newOrder/orderHisroy/OrderPrint.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventsStatus.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventSimple.js","components/orders/newOrder/orderHisroy/OrderEvetns/OrderEvents.js","components/general/TableFields.js","components/orders/newOrder/orderHisroy/OrderEvetns/AddComment.js","components/orders/newOrder/orderHisroy/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/newOrder/orderHisroy/Sticker.js","components/orders/newOrder/orderHisroy/StikerToPrint.js","components/orders/cell/Subtype.js","components/orders/cell/Manager.js","components/orders/cell/MissedPayments.js","components/orders/cell/ManagerNotes.js","components/orders/cell/Cell.js","components/orders/cell/AdCampaign.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/FilterEditor.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","components/general/ChooseOfListMany.js","components/general/ChooseWithSearch.js","components/orders/setCustomFilter/SetGroup.js","components/orders/setCustomFilter/SetBrand.js","components/orders/setCustomFilter/SetSubtype.js","components/orders/setCustomFilter/SetFilter.js","components/orders/TableOrderFields.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","Redux/actions/cashboxAction.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/TableClients.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","data/dataUserMenu.js","components/sidebar/userSettings/UserSettingMenu.js","components/sidebar/userSettings/RangeSlider.js","components/sidebar/userSettings/ChangeAvatar.js","components/sidebar/userSettings/UserProfile.js","components/sidebar/userSettings/Logout.js","components/sidebar/userSettings/UserSetting.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","menuRows","id","title","image","url","group_name","permission_keys","map","per","current_menu_row","settingMenu","permission_key","current_setting_menu_row","user","JSON","parse","sessionStorage","getItem","status","status_group","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","payrules","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","csrfToken","credentials","process","login_status","error_message","url_server","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","needToResetOrder","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","inputFilterTitleChecked","errorSameMail","errorSameLogin","clientFilter","page","name","phone","search_word","badges","customFilters","general","sort","field_sort","engineer_id","overdue","status_id","status_overdue","urgent","order_type_id","manager_id","created_at","kindof_good","brand","subtype","client_id","search","temp_statuses","temp_order_types","temp_managers","temp_engineers","temp_created_at","temp_kindof_good_id","temp_brand","temp_subtype","temp_client","active_badge","active_filter","title_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","employees","tabs","showDeleted","role_title","first_name","last_name","email","notes","avatar","img","login","password","role_id","permissions","inn","doc_name","post","deleted","avaStartPosition","scale_img","order_event_types","dataTableHeader","field","width","visible","order","ordersShow","count","events","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","model","operations","parts","attachments","payments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","warranty_measures","event_filter","event","event_comment","tableFields","position_cursor","position_over","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","filter_name","filter_phone","logo","icon_trush","icon_location","icon_warning","icon_clock","icon_table","icon_briefcase","icon_bug","icon_pencil","icon_calendar","icon_right","icon_left","icon_down","icon_filter","icon_cancel","branches","current_branch","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","cashboxes","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_type","relation_id","cashbox_id","employee_id","order_id","target_cashbox_id","cashbox","employee","filter_created_at","setHours","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","payrolls","reimburse","setted_employee","payment_cashbox_type","payment_cashbox_id","payment_cashflow_category","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","session_save","Object","keys","forEach","includes","setItem","stringify","assign","token","rows","a","b","view","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","local_save","new_data","every","val","saveToApp","word","replace","role","bool","console","log","equipments_list","equipments","findIndex","phones","statusPhones","statusTitle","tag","tags_list","tab","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","bad_request","message","clear","warn","changeStatusMenuVisible","changePermissions","setClietnCheckbox","setVisibleFlag","changeVisibleState","setVisibleListFlag","changeOrderFormS","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","editClient","dispatch","fetch","then","response","json","success","catch","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addMainData","counts","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addDictService","changeEmployeeState","editEmployee","getFilter","addEmployees","filters","saveEditEmployee","changeBranchState","changeDataState","mapDispatchToProps","connect","props","useHistory","location","pathname","row","className","to","style","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","src","alt","Icon","viewBox","user_id","useState","menuVisible","setMenuVisible","handleChoose","generally_menu","some","key","report_menu","setting_menu","length","changeFilterState","resetFilter","setSearch","placeholder","onChange","target","handleChange","onKeyPressCapture","preventDefault","handleSearch","badge","opacity","changeOrderState","resetOrder","changeOrderField","getOrderFilter","kindof_good_id","brand_id","subtype_id","update_badges","addOrders","changeStatus","update_order","changeBookForm","changeBookState","resetBookEquipment","chooseBookSelected","addEquipmentType","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","find","getEmploeeName","toLocaleString","year","month","day","hour","minute","datestamp","statusGroop","deltaMinut","Math","round","abs","deltaHour","deltaDay","getDateEstimated","reorderOrderField","columnWidth","setColumnWidth","mouseMove","deltaDrag","pageX","mouseUp","window","removeEventListener","minWidth","draggable","onDragEnd","height","onMouseDown","addEventListener","display","onDragOver","order_position","changePaymentState","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","optionsShowDate","optionsShowRangeDate","showPhone","slice","check0_100","isNaN","showName","showDate","date","currentMonth","today","start_date","setDate","valueOfPhoneInput","changeClientForm","changeClientState","addClients","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","invisible","disabled","func1","func2","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","showList","setShowList","disc","CalendarTime","current_date","getHours","getMinutes","setMinutes","CalendarNavi","visibleInputYear","setVisibleInputYear","months","setCurrent_day","setMonth","getMonth","setVisibleListMonth","visibleListMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","CalendarOption","allDate","first","second","setTime","getTime","getDay","getDate","setVisibleCalendar","ChooseDate","visibleCalendar","firstDay","setFirstDay","secondDay","setSecondDay","current_days","compareDates","date1","date2","dayClassName","class1","class2","range","join","showSelected","range_date","showRangeDate","showTop","date_range","new_range","prepareRange","onMouseOver","onMouseOut","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","request_body","item","parseFloat","filter_cashboxes","filter_payments","filter_order","closed_order","orders_count","current_branch_id","order_edit","handleClose","chooseData","setChooseData","category","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","settled","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","cteateEquipmentSubtype","setSubtype","changeOrderForm","addAnotherEquipment","deleteDevice","SetOrderGroup","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","iconClassName","iconColor","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","useMemo","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","current_engineer_id","isExist","text","deletePayment","Checkbox","label","EventStatus","time","current_status","changed","new","EventSimple","checkLength","toString","marginLeft","event_type","whiteSpace","TableFields","mainCheckbox","useRef","checked_list","indeterminate","classNameMenu","minHeight","ref","addEventComment","current_status_id","textareaRef","React","useLayoutEffect","max","scrollHeight","resize","shiftKey","selectedOrder","createOrder","model_id","saveOrder","getOrder","history","goBack","Sticker","forwardRef","stickerToPrintRef","printOSticker","useReactToPrint","content","onAfterPrint","initStatusMenuVisible","list_id","editOrder","mainFilter","statusVis","tFields","table_order","tableHeight","offsetHeight","push","handleEdit","chooseCell","addClientToTempFilter","createCustomFilter","current_statuses","choosed_values","current_list","labelClassName","type_group","allStatuses","func_clear","ChooseOfListMany","len","showWord","mainLable","ChooseWithSearch","current_element","changeFilter","setType","settledType","settledBrand","resetTempFilter","deleteFilter","selectedFilter","overflow","addStatusGroup","addCustomFilters","addAdCampaign","addBadges","employee_access","changeFilterForm","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","selected","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","changeCashboxState","changeCashboxPermissions","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","perm","setPerm","available","chooseCashboxSelected","createCashbox","saveEditCashbox","list_per","tab_field","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","income_sum","outcome_sum","cashboxAvailable","setShowDeleted","ivisible","addCashboxes","active","changePayrollState","addPayrolls","editPayroll","type_payrolls","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","setTotal","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","choose","cat","catVisible","setCatVisible","mainCategory","createWarehouseCategory","request_config1","request_config2","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","addWarehouseCategories","addParts","choosePartSelected","columns","Header","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","getCellProps","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","createEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","resetEmployee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","resetBranch","editBranch","addCounters","addBranches","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","data_user_menu","min","top","left","saveAvatar","avaPosition","size","setAvaPosition","originalSize","setOriginalSize","start","deltaX","deltaY","pageY","clientWidth","clientHeight","logout","UserProfile","Logout","addStatus","addData","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","UserSetting","exact","OrderEditor","log_in","res","serverUrl","form","csrf","get","err","document","getElementsByName","app","StrictMode","ReactDOM","getElementById"],"mappings":"0SAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,uMACd,CACCD,MAAO,qBACPC,YAAa,4LAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAAO,uBACPC,YAAa,8JACd,CACCD,MAAO,qBACPC,YAAa,sLACd,CACCD,MAAO,6BACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,wHACd,CACCD,MAAO,gCACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,2DAINU,EAAa,CACvB,CACGA,WApkBoB,CACvB,CACGX,MAAO,UACPC,YAAa,8OACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,4LACd,CACCD,MAAO,uBACPC,YAAa,iJACd,CACCD,MAAO,oBACPC,YAAa,sOACd,CACCD,MAAO,aACPC,YAAa,yKACd,CACCD,MAAO,mBACPC,YAAa,sOACd,CACCD,MAAO,oBACPC,YAAa,kPACd,CACCD,MAAO,WACPC,YAAa,mGACd,CACCD,MAAO,YACPC,YAAa,0KAuiBbA,YAAa,kCACd,CACCU,WAAYZ,EACZE,YAAa,wCACd,CACCU,WAAYT,EACZD,YAAa,0DACd,CACCU,WAAYR,EACZF,YAAa,wCACd,CACCU,WAAYP,EACZH,YAAa,8CACd,CACCU,WAAYN,EACZJ,YAAa,8CACd,CACCU,WAAYL,EACZL,YAAa,kCACd,CACCU,WAAYJ,EACZN,YAAa,8CACd,CACCU,WAAYH,EACZP,YAAa,0DACd,CACCU,WAAYF,EACZR,YAAa,wCACd,CACCU,WAAYD,EACZT,YAAa,2DAINW,EAAqB,CAC/B,uBACA,iBACA,WACA,gBACA,YACA,kBAGUC,EAAuB,CAChC,yBACD,yBACA,UACA,qBACA,YACA,WACA,eACA,cACA,sBCtnBGC,EAAe,CAEjBC,SCF0B,CAC9B,CACIC,GAAI,EACJC,MAAO,uCACPC,MAAO,OACPC,IAAK,SACLC,WAAY,iBACZC,gBAAiBtB,EAAKuB,KAAI,SAAAC,GAAG,OAAIA,EAAIvB,UACvC,CACEgB,GAAI,EACJC,MAAO,yDACPC,MAAO,igBACPC,IAAK,SACLC,WAAY,iBACZC,gBAAiBnB,EAAMoB,KAAI,SAAAC,GAAG,OAAIA,EAAIvB,UACxC,CACEgB,GAAI,EACJC,MAAO,uCACPC,MAAO,0nBACPC,IAAK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,CACC7M,GAAI,EACJC,MAAO,uCACPyM,MAAO,aACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC7M,GAAI,EACJC,MAAO,gEACPyM,MAAO,oBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC7M,GAAI,EACJC,MAAO,uCACPyM,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC7M,GAAI,EACJC,MAAO,+DACPyM,MAAO,YACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC7M,GAAI,EACJC,MAAO,kFACPyM,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC7M,GAAI,EACJC,MAAO,iCACPyM,MAAO,QACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACT,CACE7M,GAAI,EACJC,MAAO,sEACPyM,MAAO,UACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC7M,GAAI,EACJC,MAAO,iFACPyM,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC7M,GAAI,GACJC,MAAO,qEACPyM,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAAI,GACJC,MAAO,oDACPyM,MAAO,aACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAAI,GACJC,MAAO,uCACPyM,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAAI,GACJC,MAAO,2BACPyM,MAAO,QACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAAI,GACJC,MAAO,8CACPyM,MAAO,kBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAAI,GACJC,MAAO,gHACPyM,MAAO,iBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAAI,GACJC,MAAO,oGACPyM,MAAO,gBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAAI,GACJC,MAAO,uCACPyM,MAAO,iBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC7M,GAA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AI,GACJC,MAAO,KACP0M,MAAO,OACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,OACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,OACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,OACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,OACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,OACRzW,MAAO,QAET,CACEhT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,QACRzW,MAAO,QACR,CACChT,GAAI,GACJC,MAAO,KACP0M,MAAO,QACP8c,OAAQ,QACRzW,MAA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","file":"static/js/main.a889a484.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   },{\n      value: 'see_payment_profit',\n      description: 'Видит транзакии ивлечения прибыли'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import {data_setting_menu} from '../../data/dataSettingRows'\nimport {data_menu_rows} from '../../data/dataSidebarRows'\n\nconst initialState = {\n\n    menuRows: data_menu_rows,\n    current_menu_row: '',\n    settingMenu: data_setting_menu,\n    current_setting_menu_row: '',\n\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    payrules: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    csrfToken: '',\n    credentials: process.env.REACT_APP_CREDENTIALS,\n    login_status: JSON.parse(sessionStorage.getItem('login_status')) || false,\n    error_message: '',\n    url_server: process.env.REACT_APP_URL_SERVER\n    // url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:80' // Мобильный\n    // url_server: 'http://10.6.1.26:80/' // VPN\n\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n\n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case 'CHANGE_DATA_STATE': {\n            const session_save = ['login_status', 'user']\n            Object.keys(action.data).forEach(field => {\n                if (session_save.includes(field)) sessionStorage.setItem(field, JSON.stringify(action.data[field]))\n            })\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'LOGIN': {\n            return {\n                ...state,\n                token: action.token\n            }\n        }\n\n        case 'LOGUOT': {\n            return {\n                ...state,\n                token: '',\n                login_status: false\n            }\n        }\n\n        case 'ADD_MENU_ROWS': {\n            return {\n                ...state,\n                menuRows: action.rows,\n            }\n        }\n\n        case 'ADD_STATUS': {\n            return {\n                ...state,\n                status: action.status,\n            }\n        }\n\n        case 'ADD_STATUS_GROUP': {\n            return {\n                ...state,\n                status_group: action.status_group,\n            }\n        }\n\n        case 'ADD_EMPLOYEES': {\n            return {\n                ...state,\n                employees: action.employees,\n            }\n        }\n\n        case 'ADD_USER': {\n            return {\n                ...state,\n                user: action.user,\n                login_status: true\n            }\n        }\n\n        case 'ADD_BADGES': {\n            return {\n                ...state,\n                badges: action.badges\n            }\n        }\n\n\n        case 'ADD_EQUIPMENT': {\n            return {\n                ...state,\n                equipment: action.equipment\n            }\n        }\n\n\n\n        case 'ADD_SETTING_MENU': {\n            return {\n                ...state,\n                settingMenu: action.rows.sort((a, b) => a.id - b.id),\n            }\n        }\n\n\n        case 'ADD_ROLES': {\n            return {\n                ...state,\n                roles: action.roles,\n            }\n        }\n\n        case 'ADD_AD_CAMPAIGN': {\n            return {\n                ...state,\n                ad_campaign: action.ad_campaign,\n            }\n        }\n\n\n        case 'ADD_DATA': {\n            return {\n                ...state,\n                [action.field]: action.data,\n            }\n        }\n\n\n        default:\n            return state\n    }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n   needToResetOrder: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: true,\n   checkedOrderKindofGood: true,\n   checkedOrderBrand: true,\n   checkedOrderSubtype: true,\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n   inputFilterTitleChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_VISIBLE_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n\n      \n\n\n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clientFilter: {\n        page: 0,\n        name: '',\n        phone: '7'\n    },\n\n    search_word: '',\n\n\n    // ========================\n    badges: [],\n    customFilters: [],\n\n    title: '',\n    general: false,\n\n    sort: JSON.parse(localStorage.getItem('sort')) || 'desc',\n    field_sort:  JSON.parse(localStorage.getItem('field_sort')) || 'id',\n    page: JSON.parse(localStorage.getItem('page')) || 0,\n\n    engineer_id: JSON.parse(localStorage.getItem('engineer_id')) || null,\n    overdue: JSON.parse(localStorage.getItem('overdue')) || null,\n    status_id: JSON.parse(localStorage.getItem('status_id')) || null,\n    status_overdue: JSON.parse(localStorage.getItem('status_overdue')) || null,\n    urgent: JSON.parse(localStorage.getItem('urgent')) || null,\n    order_type_id: JSON.parse(localStorage.getItem('order_type_id')) || null,\n    manager_id: JSON.parse(localStorage.getItem('manager_id')) || null,\n    created_at: JSON.parse(localStorage.getItem('created_at')) || null,\n    kindof_good: JSON.parse(localStorage.getItem('kindof_good')) || null,\n    brand: JSON.parse(localStorage.getItem('brand')) || null,\n    subtype: JSON.parse(localStorage.getItem('subtype')) || null,\n    client_id: JSON.parse(localStorage.getItem('client_id')) || null,\n\n    search: '',\n\n    temp_statuses: [],\n    temp_order_types: [],\n    temp_managers: [],\n    temp_engineers: [],\n    temp_created_at: [0, 0],\n    temp_kindof_good_id: null,\n    temp_brand: null,\n    temp_subtype: null,\n    temp_client: {},\n\n    active_badge: JSON.parse(localStorage.getItem('active_badge')) || 0,\n    active_filter: JSON.parse(localStorage.getItem('active_filter')) || 0\n}\n\nexport const filterReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_FILTER_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_FILTER_STATE': {\n            const local_save = ['sort', 'field_sort', 'page', 'engineer_id', 'overdue', 'status_id', 'status_overdue',\n                'urgent', 'order_type_id', 'manager_id', 'created_at', 'kindof_good', 'brand', 'subtype', 'client_id',\n                'active_badge', 'active_filter']\n            Object.keys(action.data).forEach(field => {\n                if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n            })\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_FILTER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'RESET_FILTER':\n            return {\n                ...state,\n                page: 0,\n\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n\n                active_badge: 0,\n                active_filter: 0\n            }\n\n        case 'RESET_TEMP_FILTER':\n            return {\n                ...state,\n                temp_statuses: [],\n                temp_order_types: [],\n                temp_managers: [],\n                temp_engineers: [],\n                temp_created_at: [0, 0],\n                temp_kindof_good_id: null,\n                temp_brand: null,\n                temp_subtype: null,\n                temp_client: {},\n            }\n\n        case 'RESET_DATA_FILTER':\n            return {\n                ...state,\n                title: '',\n                general: false,\n            }\n\n        // ========================\n        // case 'ADD_STATUS': {\n        //     return {\n        //         ...state,\n        //         status: action.status.map(status => status.id),\n        //     }\n        // }\n        //\n        // case 'ADD_DATA': {\n        //     if (action.field === 'order_type') {\n        //         return {\n        //             ...state,\n        //             order_type_id: action.data.map(type => type.id)\n        //         }\n        //     } else {\n        //         return state\n        //     }\n        // }\n        //\n        // case 'ADD_EMPLOYEES': {\n        //     return {\n        //         ...state,\n        //         employees: action.employees.map(employee => employee.id),\n        //     }\n        // }\n\n\n\n\n\n\n\n        case 'CHANGE_NAME_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    name: action.word,\n                    phone: ''\n                }\n            }\n        }\n\n\n        case 'CHANGE_PHONE_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    phone: action.word.replace(/[^0-9]/g, ''),\n                    name: ''\n                }\n            }\n        }\n\n\n\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n    employees: [],\n\n    tabs: 0,\n    edit: 0,\n    showDeleted: false,\n    role_title: '',\n\n    first_name: '',\n    last_name: '',\n    email: '',\n    notes: '',\n    phone: '',\n    avatar: '',\n    img: '',\n    login: '',\n    password: '',\n    role_id: 0,\n    permissions: [],\n    inn: '',\n    doc_name: '',\n    post: '',\n    deleted: false,\n\n    avaStartPosition: [0, 0],\n    scale_img: 100\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_EMPLOYEE_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n\n        case 'SET_ROLE_EMPLOYEE_EDITOR': {\n            return {\n                ...state,\n                role_id: action.role\n            }\n        }\n\n        case 'CHANGE_SHOW_DELETED': {\n            return {\n                ...state,\n                showDeleted: !state.showDeleted\n            }\n        }\n\n\n        case 'EDIT_EMPLOYEE': {\n            return {\n                ...state,\n                edit: action.employee.id,\n                first_name: action.employee.first_name || '',\n                last_name: action.employee.last_name || '',\n                email: action.employee.email || '',\n                notes: action.employee.notes || '',\n                phone: action.employee.phone || '',\n                login: action.employee.login || '',\n                role_id: action.employee.role.id,\n                role_title: action.employee.role.title || '',\n                permissions: action.employee.permissions || [],\n                inn: action.employee.inn || '',\n                doc_name: action.employee.doc_name || '',\n                post: action.employee.post || '',\n                deleted: action.employee.deleted,\n                avatar: action.employee.avatar\n            }\n        }\n\n        case 'RESET_EMPLOYEE': {\n            return {\n                ...state,\n                edit: 0,\n                first_name: '',\n                last_name: '',\n                email: '',\n                notes: '',\n                phone: '',\n                login: '',\n                password: '',\n                role_title: '',\n                role_id: 0,\n                permissions: [],\n                inn: '',\n                doc_name: '',\n                post: '',\n                deleted: false,\n                avatar: '',\n                img: ''\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","export const order_event_types = [\n    {id: 1, title: 'Заказ создан', value: 'CREATE_ORDER'},\n    {id: 2, title: 'Инженер назанчен', value: 'ASSIGN_ENGINEER'},\n    {id: 3, title: 'Инженер изменен', value: 'CHANGE_ENGINEER'},\n    {id: 4, title: 'Менеджер назначен', value: 'ASSIGN_MANAGER'},\n    {id: 5, title: 'Менеджер изменен', value: 'CHANGE_MANAGER'},\n    {id: 6, title: 'Добавлен клиент', value: 'ADD_CLIENT'},\n    {id: 7, title: 'Клиент изменен', value: 'CHANGE_CLIENT'},\n    {id: 8, title: 'Изменение данных', value: 'CHANGE_DATA'},\n    {id: 9, title: 'Срок выполнения изменен', value: 'CHANGE_ESTIMATED_DONE_AT'},\n    {id: 10, title: 'Добавлена операция', value: 'ADD_OPERATION'},\n    {id: 11, title: 'Операция удалена', value: 'DELETE_OPERATION'},\n    {id: 12, title: 'Операция изменена', value: 'CHANGE_OPERATION'},\n    {id: 13, title: 'Добавлена запчасть', value: 'ADD_ORDER_PART'},\n    {id: 14, title: 'Запчасть удалена', value: 'DELETE_ORDER_PART'},\n    {id: 15, title: 'Запчасть изменена', value: 'CHANGE_ORDER_PART'},\n    {id: 16, title: 'Платеж добавлен', value: 'ADD_PAYMENT'},\n    {id: 17, title: 'Платеж удален', value: 'DELETE_PAYMENT'},\n    {id: 18, title: 'Статус изменен', value: 'CHANGE_STATUS'},\n    {id: 19, title: 'Коментарии', value: 'ADD_COMMENT'},\n    {id: 20, title: 'SMS оповещение', value: 'SEND_SMS'},\n    {id: 21, title: 'Email оповещение', value: 'SEND_EMAIL'},\n    {id: 22, title: 'Перемещение заказа', value: 'MOVE_TO'}\n]","const dataTableHeader = [\n    {\n        id: 1,\n        title: 'Заказ №',\n        field: 'id',\n        width: 90,\n        visible: true,\n        order: 1\n    }, {\n        id: 2,\n        title: 'Создан',\n        field: 'created_at',\n        width: 150,\n        visible: true,\n        order: 2\n    }, {\n        id: 3,\n        title: 'Срок заказа',\n        field: 'estimated_done_at',\n        width: 150,\n        visible: true,\n        order: 3\n    }, {\n        id: 4,\n        title: 'Статус',\n        field: 'status.name',\n        width: 150,\n        visible: true,\n        order: 4\n    }, {\n        id: 5,\n        title: 'Устройство',\n        field: 'equipment',\n        width: 150,\n        visible: true,\n        order: 5\n    }, {\n        id: 6,\n        title: 'Тип устройства',\n        field: 'kindof_good',\n        width: 150,\n        visible: true,\n        order: 6\n    }, {\n        id: 7,\n        title: 'Бренд',\n        field: 'brand',\n        width: 130,\n        visible: true,\n        order: 7\n    },{\n        id: 8,\n        title: 'Модуль/Серия',\n        field: 'subtype',\n        width: 130,\n        visible: true,\n        order: 8\n    }, {\n        id: 9,\n        title: 'Неисправность',\n        field: 'malfunction',\n        width: 130,\n        visible: true,\n        order: 9\n    }, {\n        id: 10,\n        title: 'Исполнитель',\n        field: 'engineer_id',\n        width: 150,\n        visible: true,\n        order: 10\n    }, {\n        id: 11,\n        title: 'Менеджер ',\n        field: 'manager_id',\n        width: 150,\n        visible: true,\n        order: 11\n    }, {\n        id: 12,\n        title: 'Клиент',\n        field: 'client.name',\n        width: 150,\n        visible: true,\n        order: 12\n    }, {\n        id: 13,\n        title: 'Цена',\n        field: 'price',\n        width: 130,\n        visible: true,\n        order: 13\n    }, {\n        id: 14,\n        title: 'К оплате',\n        field: 'missed_payments',\n        width: 130,\n        visible: true,\n        order: 14\n    }, {\n        id: 15,\n        title: 'Заметки исполнителя',\n        field: 'engineer_notes',\n        width: 130,\n        visible: true,\n        order: 15\n    }, {\n        id: 16,\n        title: 'Заметки менеджера',\n        field: 'manager_notes',\n        width: 150,\n        visible: true,\n        order: 16\n    }, {\n        id: 17,\n        title: 'Ячейка',\n        field: 'engineer_notes',\n        width: 150,\n        visible: true,\n        order: 17\n    }, {\n        id: 18,\n        title: 'Рекламная компания',\n        field: 'ad_campaign_id',\n        width: 150,\n        visible: true,\n        order: 18\n    }\n]\n\nexport default dataTableHeader","import {order_event_types} from '../../data/data'\nimport dataTableHeader from '../../data/dataTableHeader'\n\nconst initialState = {\n\n    ordersShow: [],\n    count: 0,\n\n    events: [],\n\n    edit: 0,\n    tabs: 1,\n\n    created_at: 0,\n    done_at: 0,\n    closed_at: 0,\n    assigned_at: 0,\n    duration: 0,\n    estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n    scheduled_for: 0,\n    warranty_date: 0,\n    status_deadline: 0,\n\n    ad_campaign_id: 1,\n    branch_id: 0,\n    status: {},\n    client: {},\n    order_type_id: 1,\n    closed_by_id: 0,\n    created_by_id: 0,\n    manager_id: 0,\n    engineer_id: 0,\n    kindof_good: {},\n    brand: {},\n    subtype: {},\n    model: {},\n\n    operations: [],\n    parts: [],\n    attachments: [],\n    payments: [],\n\n    id_label: '',\n    prefix: '',\n    serial: '',\n    malfunction: '',\n    packagelist: '',\n    appearance: '',\n    engineer_notes: '',\n    manager_notes: '',\n    resume: '',\n    cell: '',\n\n    estimated_cost: 0,\n    missed_payments: 0,\n    discount_sum: 0,\n    payed: 0,\n    price: 0,\n    remaining: 0,\n    remaining_status: 0,\n    remaining_warranty: 0,\n\n    overdue: false,\n    status_overdue: false,\n    urgent: false,\n    warranty_measures: false,\n\n    event_filter: JSON.parse(localStorage.getItem('event_filter')) || order_event_types.map(event => event.id),\n    event_comment: '',\n\n    tableFields: JSON.parse(localStorage.getItem('tableFields')) || dataTableHeader,\n\n    position_cursor: 0,\n    position_over: null\n}\n\nexport const orderReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_ORDER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_ORDER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_ORDER_FORM': {\n\n            let equipments_list = state.equipments\n            equipments_list[action.idx][action.field] = action.value\n\n            return {...Object.assign(state, {equipments: equipments_list})}\n\n        }\n\n        case 'CHANGE_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx][action.field] = action.value\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n        case 'REORDER_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx].order = action.order + 0.5\n            tableFields = tableFields.sort( (a, b) => a.order - b.order)\n            tableFields = tableFields.map((field, idx) => {\n                field.order = idx\n                return field\n            })\n\n\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n\n        case 'ADD_ANOTHER_EQUIPMENT': {\n\n\n            return {\n                ...state,\n                equipments: state.equipments.concat([{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }])\n            }\n        }\n\n\n        case 'DELETE_DEVICE': {\n\n            let equipments_list = state.equipments\n            equipments_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                equipments: equipments_list\n            }\n        }\n\n\n        case 'CHANGE_ORDER_FORM_S': {\n\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'RESET_ORDER': {\n\n            return {\n                ...state,\n                events: [],\n                edit: 0,\n                tabs: 1,\n\n                created_at: 0,\n                done_at: 0,\n                closed_at: 0,\n                assigned_at: 0,\n                duration: 0,\n                estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n                // estimated_done_at: 0,\n                scheduled_for: 0,\n                warranty_date: 0,\n                status_deadline: 0,\n\n                ad_campaign_id: 1,\n                branch_id: 0,\n                status_id: 0,\n                client: {},\n                order_type_id: 1,\n                closed_by_id: 0,\n                created_by_id: 0,\n                manager_id: 0,\n                engineer_id: 0,\n                kindof_good: {},\n                brand: {},\n                subtype: {},\n                model: {},\n\n                operations: [],\n                parts: [],\n                attachments: [],\n                payments: [],\n\n                id_label: '',\n                prefix: '',\n                serial: '',\n                malfunction: '',\n                packagelist: '',\n                appearance: '',\n                engineer_notes: '',\n                manager_notes: '',\n                resume: '',\n                cell: '',\n\n                estimated_cost: 0,\n                missed_payments: 0,\n                discount_sum: 0,\n                payed: 0,\n                price: 0,\n                remaining: 0,\n                remaining_status: 0,\n                remaining_warranty: 0,\n\n                overdue: false,\n                status_overdue: false,\n                urgent: false,\n                warranty_measures: false,\n\n\n                equipments: [{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }],\n            }\n        }\n\n\n        case 'EDIT_ORDER': {\n\n            return {\n                ...state,\n                edit: action.order.id,\n                created_at: action.order.created_at,\n                done_at: action.order.done_at,\n                closed_at: action.order.closed_at,\n                assigned_at: action.order.assigned_at,\n                duration: action.order.duration,\n                estimated_done_at: action.order.estimated_done_at,\n                scheduled_for: action.order.scheduled_for,\n                warranty_date: action.order.warranty_date,\n                status_deadline: action.order.status_deadline,\n\n                ad_campaign_id: action.order.ad_campaign.id,\n                branch_id: action.order.branch.id,\n                status: action.order.status,\n                client: action.order.client,\n                order_type_id: action.order.order_type.id,\n                closed_by_id: action.order.closed_by_id,\n                created_by_id: action.order.created_by_id,\n                manager_id: action.order.manager_id,\n                engineer_id: action.order.engineer_id,\n                kindof_good: action.order.kindof_good,\n                brand: action.order.brand,\n                subtype: action.order.subtype,\n                model: action.order.model,\n\n                operations: action.order.operations,\n                parts: action.order.parts,\n                attachments: action.order.attachments,\n                payments: action.order.payments,\n\n                id_label: action.order.id_label,\n                prefix: action.order.prefix,\n                serial: action.order.serial,\n                malfunction: action.order.malfunction,\n                packagelist: action.order.packagelist,\n                appearance: action.order.appearance,\n                engineer_notes: action.order.engineer_notes || '',\n                manager_notes: action.order.manager_notes || '',\n                resume: action.order.resume || '',\n                cell: action.order.cell || '',\n\n                estimated_cost: action.order.estimated_cost,\n                missed_payments: action.order.missed_payments,\n                discount_sum: action.order.discount_sum,\n                payed: action.order.payed,\n                price: action.order.price,\n                remaining: action.order.remaining,\n                remaining_status: action.order.remaining_status,\n                remaining_warranty: action.order.remaining_warranty,\n\n                overdue: action.order.overdue,\n                status_overdue: action.order.status_overdue,\n                urgent: action.order.urgent,\n                warranty_measures: action.order.warranty_measures\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n    clients: [],\n\n    juridical: false,\n    supplier: false,\n    conflicted: false,\n    should_send_email: false,\n    deleted: false,\n\n    name: '',\n    name_doc: '',\n    email: '',\n    address: '',\n    phone: [{\n        title: 'Мобильный',\n        number: '',\n        notify: false\n    }],\n    ad_campaign_id: 1,\n    discount_code: '',\n    discount_goods: 0,\n    discount_goods_margin_id: 1,\n    discount_materials: 0,\n    discount_materials_margin_id: 1,\n    discount_services: 0,\n    discount_service_margin_id: 0,\n    notes: '',\n    tags: [],\n\n    ogrn: '',\n    inn: '',\n    kpp: '',\n    juridical_address: '',\n    director: '',\n    bank_name: '',\n    settlement_account: '',\n    corr_account: '',\n    bic: '',\n\n    discount_good_type: false,\n    discount_materials_type: false,\n    discount_service_type: false,\n\n    tabs: 0,\n    phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n    statusPhoneList: [false],\n    statusAddTitle: [false],\n\n    page: 0,\n    filter_name: '',\n    filter_phone: ''\n\n}\n\nexport const clientReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_CLIENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_CLIENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SET_CLIENT_CHECKBOX': {\n\n            if (action.value === 'change') {\n                return {\n                    ...state,\n                    [action.field]: !state[action.field]\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: action.value\n                }\n            }\n        }\n\n\n        case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n            let phones = state.phone\n            phones[action.idx].number = action.value\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n        case 'ADD_PHONE_COUNTER': {\n\n            return {\n                ...state,\n                phone: state.phone.concat([{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }]),\n                statusPhoneList: state.statusPhoneList.concat([false])\n            }\n        }\n\n        case 'DELETE_COUNT_NUMBER': {\n\n            let phones = state.phone\n            phones.splice(action.idx, 1)\n            const statusPhones = state.statusPhoneList\n            statusPhones.splice(action.idx, 1)\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n\n        case 'SET_PHONE_NOTIFY': {\n\n            let phones = state.phone\n            phones[action.idx].notify = !phones[action.idx].notify\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n\n        case 'SET_PHONE_TITLE': {\n\n            let phones = state.phone\n            phones[action.idx].title = action.title\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n        case 'CHANGE_STATUS_PHONE_LIST': {\n\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = false\n\n            return {\n                ...state,\n                statusPhoneList: statusPhones,\n                statusAddTitle: statusTitle\n            }\n        }\n\n\n        case 'CHANGE_STATUS_ADD_TITLE': {\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = !statusTitle[action.idx]\n\n            return {\n                ...state,\n                statusAddTitle: statusTitle\n            }\n        }\n\n        case 'SET_AD_CANMPAIGN_CLIENT': {\n\n            return {\n                ...state,\n                ad_campaign_id: action.id\n            }\n        }\n\n        case 'ADD_CLIENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_CLIENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n        case 'RESET_DATA_CLIENT': {\n            return {\n                ...state,\n                juridical: false,\n                supplier: false,\n                conflicted: false,\n                should_send_email: false,\n                deleted: false,\n\n                name: '',\n                name_doc: '',\n                email: '',\n                address: '',\n                phone: [{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }],\n                ad_campaign_id: 1,\n                discount_code: '',\n                discount_goods: 0,\n                discount_goods_margin_id: 1,\n                discount_materials: 0,\n                discount_materials_margin_id: 1,\n                discount_services: 0,\n                discount_service_margin_id: 0,\n                notes: '',\n                tags: [],\n\n                ogrn: '',\n                inn: '',\n                kpp: '',\n                juridical_address: '',\n                director: '',\n                bank_name: '',\n                settlement_account: '',\n                corr_account: '',\n                bic: '',\n\n                discount_good_type: false,\n                discount_materials_type: false,\n                discount_service_type: false,\n\n                edit: 0,\n                tabs: 0,\n                statusPhoneList: [false],\n                statusAddTitle: [false]\n\n            }\n        }\n\n        case 'CHANGE_CLIENT_TABS': {\n\n            return {\n                ...state,\n                tabs: action.tab\n            }\n        }\n\n\n        case 'EDIT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id\n            }\n        }\n\n\n        case 'EDIT_CURRENT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id,\n                tabs: 1\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n\nexport const icon_filter = 'M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z'\n\nexport const icon_cross = 'M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z'\n\nexport const icon_cancel = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z M21 8l-5 5-5-5-3 3 5 5-5 5 3 3 5-5 5 5 3-3-5-5 5-5z'\n\nexport const icon_letter = 'M29 4h-26c-1.65 0-3 1.35-3 3v20c0 1.65 1.35 3 3 3h26c1.65 0 3-1.35 3-3v-20c0-1.65-1.35-3-3-3zM12.461 17.199l-8.461 6.59v-15.676l8.461 9.086zM5.512 8h20.976l-10.488 7.875-10.488-7.875zM12.79 17.553l3.21 3.447 3.21-3.447 6.58 8.447h-19.579l6.58-8.447zM19.539 17.199l8.461-9.086v15.676l-8.461-6.59z'\n\nexport const icon_user = 'M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'\n\nexport const icon_arrow_right = 'M19.414 27.414l10-10c0.781-0.781 0.781-2.047 0-2.828l-10-10c-0.781-0.781-2.047-0.781-2.828 0s-0.781 2.047 0 2.828l6.586 6.586h-19.172c-1.105 0-2 0.895-2 2s0.895 2 2 2h19.172l-6.586 6.586c-0.39 0.39-0.586 0.902-0.586 1.414s0.195 1.024 0.586 1.414c0.781 0.781 2.047 0.781 2.828 0z'\n\nexport const icon_bubble = 'M16 6c-1.717 0-3.375 0.271-4.928 0.804-1.46 0.502-2.76 1.211-3.863 2.108-2.069 1.681-3.209 3.843-3.209 6.088 0 1.259 0.35 2.481 1.039 3.63 0.711 1.185 1.781 2.268 3.093 3.133 0.949 0.625 1.587 1.623 1.755 2.747 0.056 0.375 0.091 0.753 0.105 1.129 0.233-0.194 0.461-0.401 0.684-0.624 0.755-0.755 1.774-1.172 2.828-1.172 0.168 0 0.336 0.011 0.505 0.032 0.655 0.083 1.325 0.126 1.99 0.126 1.717 0 3.375-0.271 4.928-0.804 1.46-0.502 2.76-1.211 3.863-2.108 2.069-1.681 3.209-3.843 3.209-6.088s-1.14-4.407-3.209-6.088c-1.104-0.897-2.404-1.606-3.863-2.108-1.553-0.534-3.211-0.804-4.928-0.804zM16 2v0c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z'\n\nexport const icon_loop = 'M4 10h20v6l8-8-8-8v6h-24v12h4zM28 22h-20v-6l-8 8 8 8v-6h24v-12h-4z'\n\nexport const icon_arrow_down = 'M27.414 19.414l-10 10c-0.781 0.781-2.047 0.781-2.828 0l-10-10c-0.781-0.781-0.781-2.047 0-2.828s2.047-0.781 2.828 0l6.586 6.586v-19.172c0-1.105 0.895-2 2-2s2 0.895 2 2v19.172l6.586-6.586c0.39-0.39 0.902-0.586 1.414-0.586s1.024 0.195 1.414 0.586c0.781 0.781 0.781 2.047 0 2.828z'\n\nexport const icon_coin_dollar = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM15 29c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM16 16v-4h4v-2h-4v-2h-2v2h-4v8h4v4h-4v2h4v2h2v-2h4l-0-8h-4zM14 16h-2v-4h2v4zM18 22h-2v-4h2v4z'\n","import {icon_location} from \"../../data/icons\"\n\nconst initialState = {\n    branches: [],\n    current_branch: {},\n\n    edit: 0,\n    name: '',\n    address: '',\n    phone: '',\n    color: 'grey',\n    icon: icon_location,\n    orders_type_id: 1,\n    orders_type_strategy: 'last',\n    orders_prefix: 'OTS',\n    documents_prefix: 'A',\n    employees: [],\n    deleted: false,\n    schedule: [\n        {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 1\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 2\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 3\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 4\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 5\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: false,\n            week_day: 6\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: false,\n            week_day: 7\n        },\n    ],\n\n    showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_BRANCH_STATE': {\n            // const local_save = []\n            // Object.keys(action.data).forEach(field => {\n            //    if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n            // })\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'CHANGE_SCHEDULE': {\n\n            let list_schedule = state.schedule\n            list_schedule[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                schedule: list_schedule\n            }\n        }\n\n        case 'SET_BRANCH_EMPLOYEE': {\n            if (action.id.every(id => state.employees.includes(id))) {\n                return {\n                    ...state,\n                    employees: state.employees.filter(id => !action.id.includes(id)),\n                }\n            } else {\n                return {\n                    ...state,\n                    employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n                }\n            }\n        }\n\n        case 'RESET_BRANCH': {\n\n            return {\n                ...state,\n                name: '',\n                address: '',\n                phone: '',\n                color: 'grey',\n                icon: icon_location,\n                orders_type_id: 1,\n                orders_type_strategy: 'last',\n                orders_prefix: 'OTS',\n                documents_prefix: 'A',\n                employees: [],\n                deleted: false,\n                schedule: [\n                    {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 1\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 2\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 3\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 4\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 5\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: false,\n                        week_day: 6\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: false,\n                        week_day: 7\n                    },\n                ],\n\n                edit: 0\n            }\n        }\n\n\n        case 'EDIT_BRANCH': {\n\n            return {\n                ...state,\n                name: action.branch.name,\n                address: action.branch.address,\n                phone: action.branch.phone,\n                color: action.branch.color,\n                icon: action.branch.icon,\n                orders_type_id: action.branch.orders_type_id,\n                orders_type_strategy: action.branch.orders_type_strategy,\n                orders_prefix: action.branch.orders_prefix,\n                documents_prefix: action.branch.documents_prefix,\n                employees: action.branch.employees,\n                deleted: action.branch.deleted,\n                schedule: action.branch.schedule,\n\n                edit: action.branch.id\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_BOOK_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n\n   cashboxes: [],\n\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   showDeleted: false,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_CASHBOX_STATE': {\n         const local_save = []\n         Object.keys(action.data).forEach(field => {\n            if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n         })\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","const now = new Date()\n\nconst initialState = {\n\n    payments: [],\n\n    edit: 0,\n    sum: 0,\n    title: '',\n\n    cashflow_category: '',\n    description: '',\n\n    deposit: 0,\n    income: 0,\n    outcome: 0,\n    direction: 0,\n\n    can_print_fiscal: false,\n    deleted: false,\n    is_fiscal: false,\n\n    created_at: 0,\n    custom_created_at: null,\n\n    tags: [],\n\n    relation_type: 0,\n    relation_id: null,\n    cashbox_id: 0,\n    client_id: 0,\n    employee_id: 0,\n    order_id: 0,\n    target_cashbox_id: 0,\n\n    cashbox: {},\n    client: {},\n    employee: {},\n    order: {},\n\n    filter_created_at: [\n        parseInt(now.setHours(0, 0, 0, 0) / 1000),\n        parseInt(now.setHours(23, 59, 59, 999) / 1000)\n    ],\n    filter_tags: [],\n\n    current_type: 0,\n    context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_PAYMENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'CHOOSE_PAYMENT_SELECTED': {\n            if (action.id.every(id => state[action.field].includes(id))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n                }\n            }\n        }\n\n        case 'ADD_PAYMENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_PAYMENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n\n        case 'RESET_PAYMENTS': {\n\n            return {\n                ...state,\n                edit: 0,\n                sum: 0,\n                title: '',\n\n                cashflow_category: '',\n                description: '',\n\n                deposit: 0,\n                income: 0,\n                outcome: 0,\n                direction: 0,\n\n                can_print_fiscal: true,\n                deleted: false,\n                is_fiscal: false,\n\n                created_at: 0,\n                custom_created_at: 0,\n\n                tags: [],\n\n                relation_type: 0,\n                relation_id: null,\n                cashbox_id: 0,\n                client_id: 0,\n                employee_id: 0,\n                order_id: 0,\n                target_cashbox_id: 0,\n\n                context: {}\n            }\n        }\n\n        case 'SET_PAYMENT': {\n\n            return {\n                ...state,\n                edit: action.payment.id,\n\n                cashflow_category: action.payment.cashflow_category,\n                description: action.payment.description,\n\n                deposit: action.payment.deposit,\n                income: action.payment.income,\n                outcome: action.payment.outcome,\n                direction: action.payment.direction,\n\n                can_print_fiscal: action.payment.can_print_fiscal,\n                deleted: action.payment.deleted,\n                is_fiscal: action.payment.is_fiscal,\n\n                created_at: action.payment.created_at,\n                custom_created_at: action.payment.custom_created_at,\n\n                tags: action.payment.tags,\n\n                relation_type: action.payment.relation_type,\n                relation_id: action.payment.relation_id,\n                cashbox: action.payment.cashbox,\n                client: action.payment.client,\n                employee: action.payment.employee,\n                order: action.payment.order,\n                target_cashbox_id: action.payment.target_cashbox_id,\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            // engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const now = new Date()\n\nconst initialState = {\n\n   payrolls: [],\n\n   edit: 0,                   // id при редактировании\n\n   description: '',              // Описание\n   income: 0,                    // Входящяя сумма\n   outcome: 0,                   // Иcходящая сумму\n   direction: 0,                 // Направление платежа\n   deleted: false,               // Платеж удален\n   reimburse: false,             // Совершен возврат\n   created_at: null,             // Дата создания\n   custom_created_at: null,      // Дата установленая пользователем\n   relation_type: 0,             // Тип начисления\n   relation_id: 0,               // id связанного события\n   employee_id: 0,               // Сотрудник\n   order_id: null,               // Заказ\n\n   setted_employee: 0,           // Выбранный сотрудник\n   showDeleted: false,           // Показать удаленные\n\n   filter_created_at: [\n      parseInt(now.setHours(0, 0, 0, 0) / 1000),\n      parseInt(now.setHours(23, 59, 59, 999) / 1000)\n   ],\n   payment_cashbox_type: 0,      // Тип платежа (для создания платежа при выплате ЗП)\n   payment_cashbox_id: 0,        // id кассы (для создания платежа при выплате ЗП)\n   payment_cashflow_category: 0, // категория расходов (для создания платежа при выплате ЗП)\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_PAYROLL_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,\n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null,\n\n            payment_cashbox_type: 0,\n            payment_cashbox_id: 0,\n            payment_cashflow_category: 0\n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer,\n        compose(\n        applyMiddleware(thunk),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ))\n\n\nexport default store","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": state.data.csrfToken,\n        },\n        credentials: state.data.credentials,\n        body: JSON.stringify(body)\n    }\n}\n\nexport function bad_request(message = '') {\n    sessionStorage.clear()\n    console.warn(message)\n    return {type: 'LOGUOT'}\n}\n// 'Authorization': `Bearer ${state.data.token}`,","import store from \"./store\"\nimport {getRequestConfig} from './actions/actionUtils'\n\nfunction bad_request(message = '') {\n    sessionStorage.clear()\n    console.warn(message)\n    return {type: 'LOGUOT'}\n}\n\nexport function loginAction(token) {\n    return {\n        type: 'LOGIN',\n        token,\n    }\n}\n\nexport function loguotAction() {\n    return {\n        type: 'LOGUOT'\n    }\n}\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\n\n\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function changeVisibleState( data ) {\n    return {\n        type: 'CHANGE_VISIBLE_STATE',\n        data\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + \"/flogin\", {\n            method: \"POST\",\n            headers: {\n                // 'Accept': 'application/json, text/javascript, */*; q=0.01',\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": state.data.csrfToken\n            },\n            credentials: state.data.credentials,\n            body: JSON.stringify({email: login, password: password}),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {login_status: true}\n                    })\n                } else {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {error_message: data.message, login_status: false},\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос авторизации не выполнен'))\n    }\n}\n\n\n\nexport const csrf = () => {\n\n    const state = store.getState()\n\n    if (state.data.credentials === 'include') {\n        return dispatch => {\n\n            fetch(state.data.url_server + \"/getcsrf\", {credentials: state.data.credentials})\n                .then((res) => {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {csrfToken: res.headers.get([\"X-CSRFToken\"])}\n                    })\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    } else {\n        return dispatch => {\n            dispatch({\n                type: 'CHANGE_DATA_STATE',\n                data: {csrfToken: document.getElementsByName(\"csrf-token\")[0].content}\n            })\n        }\n    }\n\n\n}\n\n// Client ================================================================================================================\n\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\n\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n    }\n}\n\n\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов изделий не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на удаление роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {\n                            generally_info: data.generally_info,\n                            user: data.user,\n                            order_type: data.order_type,\n                            counters: data.counts,\n                            ad_campaign: data.ad_campaign,\n                            item_payments: data.item_payments,\n                            status_group: data.status_group,\n                            service_prices: data.service_prices\n                        }\n                    })\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branch},\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes}\n                    })\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос счетчиков не выполнен'))\n    }\n}\n\n\n\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос статей плтатежей не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeEmployeeState(data) {\n    return {\n        type: 'CHANGE_EMPLOYEE_STATE',\n        data\n    }\n}\n\nexport function editEmployee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmployee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\nfunction getFilter() {\n    const state = store.getState()\n    return {\n        deleted: state.employee.showDeleted,\n        page: 0\n    }\n}\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.data},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n        avatar: state.employee.avatar,\n        img: state.employee.img || null,\n        filter: getFilter()\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/employee', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusEmployeeEditor: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n    }\n}\n\nexport function saveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n        avatar: state.employee.avatar,\n        img: state.employee.img || null,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/employee', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusEmployeeEditor: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/employee', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusEmployeeEditor: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n    }\n}\n\n\nexport function saveAvatar(data) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_id: state.employee.edit,\n        left: data.avaPosition[0],\n        top: data.avaPosition[1],\n        size: data.size,\n        img: state.employee.img\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/change_avatar', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {user: data.user},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение аватара не выполнен'))\n    }\n}\n\nexport function logout() {\n    const url = process.env.REACT_APP_URL_SERVER + '/logout'\n\n\n    return dispatch => {\n        fetch(url)\n    }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeBranchState( data ) {\n    return {\n        type: 'CHANGE_BRANCH_STATE',\n        data\n    }\n}\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return {\n        type: 'EDIT_BRANCH',\n        branch\n    }\n}\n\nexport function resetBranch() {\n    return {\n        type: 'RESET_BRANCH'\n    }\n}\n\nfunction getFilter() {\n    const state = store.getState()\n    return {\n        employee_id: state.data.user.id,\n        deleted: state.branch.showDeleted,\n        page: 0\n    }\n}\n\n\n\nexport function addBranches() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(getFilter())\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_branch', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.data},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule,\n        filter: getFilter()\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branches},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusBranchEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branches},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusBranchEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branches},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusBranchEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeDataState(data) {\n    return {\n        type: 'CHANGE_DATA_STATE',\n        data\n    }\n}","import React, {useState} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {changeDataState} from '../../Redux/actions/dataAction'\n\n\n\nfunction MenuRow(props) {\n    const history = useHistory()\n    if (history.location.pathname === props.row.url) props.changeDataState({current_menu_row: props.row.url})\n\n    return (\n        <Link\n            className=\"menuRow\"\n            to={props.row.url}\n            style={props.current_menu_row === props.row.url ? {\n                backgroundColor: '#53585c',\n                borderLeftColor: props.current_branch.color\n            } : null}\n            onClick={() => props.changeDataState({current_menu_row: props.row.url})}\n        >\n            {props.row.image === 'task' ? (\n                <div className=\"taskNumber\">\n                    <span className=\"taskNumber1\">8</span>\n                </div>\n            ) : (\n                <svg className=\"sidebarIcon\">\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n                </svg>\n            )}\n            <span className=\"didebarItemsText\">{props.row.title}</span>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    current_branch: state.branch.current_branch,\n    current_menu_row: state.data.current_menu_row\n})\n\nconst mapDispatchToProps = {\n    changeDataState\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {editEmployee} from '../../../Redux/actions/employeeAction'\n\n\nfunction LogoUser(props) {\n\n    return (\n        <Link to='/user'>\n            <div\n                className='avatar'\n                // onClick={() => props.editEmployee(props.user.id)}\n            >\n\n                <img\n                    src={`${process.env.REACT_APP_URL_SERVER}/data/avatars/ava${props.user.id}.jpeg`}\n                    // src={`/data/avatars/ava${props.user.id}.jpeg`}\n                    className='imgAvatar'\n                    alt='User avatar'\n                />\n            </div>\n        </Link>\n    )\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user\n})\n\nconst mapDispatchToProps = {\n    editEmployee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoUser)\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeBranchState} from '../../Redux/actions/branchAction'\n\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n    const [menuVisible, setMenuVisible] = useState(false)\n\n    const handleChoose = (branch) => {\n        props.changeBranchState({current_branch: branch})\n        setMenuVisible(false)\n    }\n\n    return (\n        <div>\n            <div\n                className='menuBranch'\n                onClick={() => setMenuVisible(!menuVisible)}\n            >\n                <Icon\n                    className='smalIcon'\n                    icon={props.current_branch.icon}\n                    color={props.current_branch.color}\n                />\n                <div className='sidebarBranch'>\n                    {props.current_branch.name}\n                </div>\n            </div>\n            {menuVisible ? <div className='listOptionsBranch'>\n                {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n                    <div\n                        key={branch.id}\n                        className='listBranch'\n                        onClick={() => handleChoose(branch)}\n                    >\n                        <Icon\n                            className='smalIcon'\n                            icon={branch.icon}\n                            color={branch.color}\n                        />\n                        <div className='ml5'>{branch.name}</div>\n                    </div>\n                ))}\n            </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    current_branch: state.branch.current_branch,\n    branches: state.branch.branches,\n    user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeBranchState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './userSettings/LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.branch.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeFilterForm( value, field ) {\n    return {\n        type: 'CHANGE_FILTER_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeFilterState( data ) {\n    return {\n        type: 'CHANGE_FILTER_STATE',\n        data\n    }\n}\n\n// export function editFilter(filter) {\n//     return {\n//         type: 'EDIT_FILTER',\n//         filter\n//     }\n// }\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function resetTempFilter() {\n    return {\n        type: 'RESET_TEMP_FILTER'\n    }\n}\n\n\nexport function selectedFilter( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_FILTER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function addBadges() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_access: !state.data.user.role.orders_visibility ? state.data.user.id : null,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function createCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.filter.title,\n        general: state.filter.general,\n        employee_id: state.data.user.id,\n        filters: {\n            page: 0,\n            engineer_id: state.filter.temp_engineers.length ? state.filter.temp_engineers : null,\n            overdue: null,\n            status_id: state.filter.temp_statuses.length ? state.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: state.filter.temp_order_types.length ? state.filter.temp_order_types : null,\n            manager_id: state.filter.temp_managers.length ? state.filter.temp_managers : null,\n            created_at: state.filter.temp_created_at.some(date => date) ? state.filter.temp_created_at : null,\n            kindof_good: state.filter.temp_kindof_good_id,\n            brand: state.filter.temp_brand,\n            subtype: state.filter.temp_subtype,\n            client_id: Object.values(state.filter.temp_client).length ? [state.filter.temp_client.id] : null\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n\n    }\n}\n\n\nexport function deleteFilter() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.filter.active_filter,\n        employee_id: state.data.user.id\n    })\n    request_config.method = 'DELETE'\n\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {\n                            customFilters: data.data,\n                            active_filter: 0\n                        }\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\nconst Header = props => {\n\n   const [search, setSearch] = useState('')\n\n    const handleChange = event => {\n        setSearch(event.target.value)\n        if (!search) props.changeFilterState({search: ''})\n    }\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if(!props.filter.active_badge) props.resetFilter()\n        if (event.key === 'Enter') props.changeFilterState({search})\n    }\n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => handleChange(event)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\n// function MainFilter({data: {color, title, count, img, filters}, activeBadge}) {\nconst MainFilter = props => {\n\n    const handleChoose = () => {\n        if (props.active_badge !== props.badge.id) {\n            props.changeFilterState({\n                ...props.badge.filter,\n                active_badge: props.badge.id,\n                active_filter: 0\n            })\n        } else {\n            props.resetFilter()\n        }\n    }\n\n    return (\n        <div\n            className='mainFilter'\n            style={{\n                backgroundColor: props.badge.color,\n                opacity: props.active_badge === props.badge.id || props.active_badge === 0 ? 1 : 0.3\n            }}\n            onClick={handleChoose}\n        >\n            <div className='pd5'>\n                <Icon icon={props.badge.icon} className='icon-s25' color='white'/>\n            </div>\n            <div className='filterName'>\n                <div className='filterName-value'>\n                    {props.badge.count} {props.badge.count === 1 ? 'заказ' : ((props.badge.count < 5) ? 'заказа' : 'заказов')}\n                </div>\n                <div className='filterName-title'> {props.badge.title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    active_badge: state.filter.active_badge\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainFilter);","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport MainFilter from './MainFilter'\n\nconst Filters = props => {\n\n    return (\n        <div className='mainFilters'>\n            {props.badges.map(badge => (\n                    badge.count ? <MainFilter badge={badge} key={badge.id}/> : null\n                ))\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.filter.badges\n})\n\nexport default connect(mapStateToProps)(Filters)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeOrderState(data) {\n    return {\n        type: 'CHANGE_ORDER_STATE',\n        data\n    }\n}\n\nexport function selectedOrder(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_ORDER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function changeOrderField(id, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FIELD',\n        id,\n        field,\n        value\n    }\n}\n\nexport function reorderOrderField(id, order) {\n    return {\n        type: 'REORDER_ORDER_FIELD',\n        id,\n        order\n    }\n}\n\nexport function getOrderFilter() {\n    const state = store.getState()\n    return {\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good_id: state.filter.kindof_good,\n        brand_id: state.filter.brand,\n        subtype_id: state.filter.subtype,\n        client_id: state.filter.client_id,\n        branch_id: state.branch.current_branch.id,\n\n        search: state.filter.search,\n\n        update_badges: true\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(getOrderFilter())\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count}\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        created_by_id: state.data.user.id,\n        branch_id: state.branch.current_branch.id,\n        status_id: 1,\n\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id || null,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        urgent: state.order.urgent,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost,\n\n        filter: getOrderFilter()\n    })\n\n\n    return async dispatch => {\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true, statusOrderEditor: false}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: 'EDIT_ORDER',\n                    order: data.order\n                })\n                if (state.view.checkOrderSticker) {\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusOrderSticker: true, needToResetOrder: true}\n                    })\n                }\n                dispatch({\n                    type: 'CHANGE_ORDER_STATE',\n                    data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                })\n                dispatch({\n                    type: 'CHANGE_FILTER_STATE',\n                    data: {badges: data.badges}\n                })\n\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        if (state.view.checkOrderSticker) {\n             await dispatch({\n                type: 'CHANGE_VISIBLE_STATE',\n                data: {statusOrderSticker: true}\n            })\n        } else {\n            await dispatch({\n                type: 'RESET_ORDER'\n            })\n        }\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false}\n        })\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    let filter = getOrderFilter()\n    filter.update_order = state.order.edit\n\n    const request_config = getRequestConfig({\n        order_id: order_id,\n        status_id: status_id,\n        filter\n    })\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                    })\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.badges}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client_id: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent,\n        filter: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: 'EDIT_ORDER',\n                    order: data.order\n                })\n                dispatch({\n                    type: 'CHANGE_ORDER_STATE',\n                    data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                })\n                dispatch({\n                    type: 'CHANGE_FILTER_STATE',\n                    data: {badges: data.badges}\n                })\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function getOrder(order_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({id: order_id})\n\n    return async dispatch => {\n        \n        await fetch(state.data.url_server + '/get_order', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function addEventComment() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        order_id: state.order.edit,\n        current_status_id: state.order.status.id,\n        branch_id: state.branch.current_branch.id,\n        comment: state.order.event_comment\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_comment', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || [], event_comment: ''}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание коментариев не выполнен'))\n    }\n\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function changeBookState(data) {\n    return {\n        type: 'CHANGE_BOOK_STATE',\n        data\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n            title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.branch.branches.map(branch => branch.id),\n            deleted: false,\n            filter: {\n                title,\n                deleted: state.book.showDeleted\n            }\n        })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.kindof_good.id,\n        branches: state.branch.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.brand.id,\n        branches: state.branch.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.subtype.id,\n        branches: state.branch.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_type,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = props => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        const employee = props.employees.find((employee) => employee.id === id)\n        return employee ? `${employee.last_name} ${employee.first_name}`: ''\n      }\n    }\n\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(props.order.created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(props.order.created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\n\nconst Lable = props => {\n   return (\n      <td className=\"orderLabel tableRow\">\n          <Link\n              className='orderLink'\n              to={{\n                  pathname: `/orders/${props.order.id}`,\n                  state: { order_id: props.order.id }\n              }}\n          >\n              <span\n                  className={props.order.urgent && props.order.status.group < 4 ? 'fire-text': null}\n              >\n                  { props.order.id_label }\n              </span>\n          </Link>\n      </td>\n   )\n}\n\n\nconst mapDispatchToProps ={\n}\n  \n export default connect(null, mapDispatchToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = props => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 48) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!props.order.overdue && props.order.status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(props.order.remaining, props.order.status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(props.order.estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {changeOrderField, changeOrderState, reorderOrderField} from '../../Redux/actions/orderActions'\n\n\nfunction TableHeader(props) {\n\n    const [columnWidth, setColumnWidth] = useState(props.data.width)\n\n    const mouseMove = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        if (deltaDrag) setColumnWidth(columnWidth + deltaDrag)\n    }\n\n    const mouseUp = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        setColumnWidth(columnWidth + deltaDrag)\n        props.changeOrderField(props.data.id, 'width', columnWidth + deltaDrag)\n        window.removeEventListener('mousemove', mouseMove)\n        window.removeEventListener('mouseup', mouseUp)\n    }\n\n    const handleDragStart = event => {\n        props.changeOrderState({position_cursor: event.pageX})\n        window.addEventListener('mousemove', mouseMove)\n        window.addEventListener('mouseup', mouseUp)\n    }\n\n    const handleEndDrag = () => {\n        props.reorderOrderField(props.data.id, props.order.position_over)\n        props.changeOrderState({position_over: null})\n    }\n    const handleDragOver = (order_position) => {\n        if (props.order.position_over !== order_position) {\n            props.changeOrderState({position_over: order_position})\n        }\n    }\n\n\n    return (\n        <th\n            className='tableColumnHeader'\n            style={{minWidth: `${columnWidth}px`}}\n        >\n            <div className='row'>\n\n                <div\n                    className='ml5 w100 '\n                    onClick={() => props.changeFilterState({\n                        field_sort: props.data.field,\n                        sort: props.filter.sort === 'asc' ? 'desc' : 'asc'\n                    })}\n                    draggable\n                    onDragEnd={handleEndDrag}\n                >\n                    {props.data.title}\n                    <span>\n                            {props.filter.field_sort === props.data.field ? (props.filter.sort === 'asc' ? '↓' : '↑') : null}\n                        </span>\n                </div>\n                <div\n                    style={{height: '40px'}}\n                    className='curResize'\n                    onMouseDown={handleDragStart}\n                />\n                <div\n                    style={{display: props.order.position_over === props.data.order ? 'block' : 'none'}}\n                    className='dragOver'\n                />\n                <div\n                    className='overArea'\n                    onDragOver={() => handleDragOver(props.data.order)}\n                />\n            </div>\n\n        </th>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    changeOrderField,\n    changeOrderState,\n    reorderOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {getOrderFilter} from './orderActions'\n\n\nexport function changePaymentState( data ) {\n    return {\n        type: 'CHANGE_PAYMENT_STATE',\n        data\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    let request_body = {\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: parseFloat(state.payment.income),\n        outcome: -parseFloat(state.payment.outcome),\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at || now,\n        tags: state.payment.tags,\n        relation_type: state.payment.relation_type,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    }\n    if (context.type === 'payment') {\n        request_body.filter_cashboxes = {\n            deleted: null\n        }\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    if (context.type === 'order') request_body.filter_order = getOrderFilter()\n    if (context.type === 'closed_order') {\n        request_body.closed_order = {\n            order_id: context.order_id,\n            status_id: context.status_id,\n            filter: getOrderFilter()\n        }\n    }\n    const request_config = getRequestConfig(request_body)\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (context.type === 'payment') {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'CHANGE_CASHBOX_STATE',\n                            data: {cashboxes: data.cashboxes},\n                        })\n                    }\n                    if (context.type === 'order') {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    }\n                    if (context.type === 'closed_order') {\n                        if (state.order.edit) {\n                            dispatch({\n                                type: 'EDIT_ORDER',\n                                order: data.order\n                            })\n                            dispatch({\n                                type: 'CHANGE_ORDER_STATE',\n                                data: {events: data.events}\n                            })\n                        }\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, count: data.orders_count}\n                        })\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {badges: data.badges}\n                        })\n                    }\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false, statusPaymentsEditor: false}\n        })\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: state.payment.filter_created_at,\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYMENT_STATE',\n                        data: {payments: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_body = {\n        id: state.payment.edit,\n        relation_type: state.payment.relation_type,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        order_id: state.payment.order.id,\n        deleted: flag\n    }\n    if (state.order.edit) {\n        request_body.filter_order = getOrderFilter()\n    } else {\n        request_body.filter_cashboxes = {\n            deleted: null\n        }\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    let request_config = getRequestConfig(request_body)\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    } else {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                        dispatch({\n                            type: 'CHANGE_CASHBOX_STATE',\n                            data: {cashboxes: data.cashboxes}\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPaymentsCard: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос удаление платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, changeVisibleState} from '../../Redux/actions'\nimport { changePaymentState} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentState({\n                direction: income ? 2 : 1,\n                [income ? 'income': 'outcome']: Math.abs(props.order.missed_payments),\n                client_id: props.order.client.id,\n                description: income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`,\n                cashflow_category: income ? 2 : 8,\n                employee_id: props.current_user_id,\n                order_id: props.order.edit || props.order.id,\n                context: {\n                    type: 'closed_order',\n                    order_id: props.order.edit || props.order.id,\n                    status_id: status.id\n                }\n            })\n            props.editCurrentClient(props.order.client)\n            props.changeVisibleState({'statusPaymentsEditor': true})\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                // props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentState,\n    changeVisibleState,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.order.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.order.id)}\n            >\n                {props.order.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.order.id]] ? <StatusList order={props.order}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = props => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {props.order.kindof_good.title}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Brand = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.brand.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Brand)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Malfunction = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.malfunction}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Engineer = props => {\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}` : ''\n        }\n    }\n\n    return (\n        <td>\n            <div>\n                {getEmploeeName(props.order.engineer_id)}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees\n})\n\nexport default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\nconst optionsShowRangeDate = {\n   year: 'numeric',\n   month: 'numeric',\n   day: 'numeric'\n}\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 9)}-${phone.slice(9, 11)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function showRangeDate (range_date) {\n   const first = new Date(range_date[0] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   const second = new Date(range_date[1] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   return `${first} - ${second}`\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = props => {\n\n   return props.permissions.includes('see_client') ? (\n      <td>\n      <div className=\"tableClientName noWr\">{props.order.client.name}</div>\n      <div className=\"orderDate noWr\">{showPhone(props.order.client.phone[0].number)}</div>\n    </td>\n   ) : <td><div/></td>\n}\n\nconst mapStateToProps = state => ({\n    permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = props => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{props.order.price || null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = props => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {props.order.engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = props => {\n    return (\n        <td>\n            <div className=\"tableText row\">\n                <div>\n                    <img\n                        alt=''\n                        className=\"icon_equipment\"\n                        src={props.order.kindof_good.icon}\n                    />\n                </div>\n                <div>\n                    <div className='noWr'>\n                        {props.order.kindof_good.icon ? null : <span className=\"\">{props.order.kindof_good.title}</span>}\n                        <span className=\"ml5\">{props.order.brand.title}</span>\n                    </div>\n                    <div className='noWr'>\n                        <span>{props.order.subtype.title}</span>\n                        <span className=\"orderDate ml5\">{props.order.model.title}</span>\n                    </div>\n                </div>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Equipment)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeClientState( data ) {\n    return {\n        type: 'CHANGE_CLIENT_STATE',\n        data\n    }\n}\n\n\nexport function addClients() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.client.page,\n        name: state.client.filter_name,\n        phone: state.client.filter_phone\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CLIENT_STATE',\n                        data: {clients: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентов не выполнен'))\n    }\n}\n\nexport function addClientToTempFilter(id) {\n\n    const state = store.getState()\n\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (data.count) {\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {temp_client: data.data[0]}\n                        })\n                    }\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентa не выполнен'))\n\n    }\n}\n\n/*\nexport function editTemple(temple) {\n    return {\n        type: 'EDIT_TEMPLE',\n        temple\n    }\n}\n\nexport function resetTemple() {\n    return {\n        type: 'RESET_TEMPLE'\n    }\n}\n\n\nexport function selectedTemple( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_TEMPLE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addTemple() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_temple', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function createTemple() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на создание temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n\n\nexport function saveTemple() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на изменение temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.temple.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n*/","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.invisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// invisible={false}","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.invisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (current ? `${current.last_name} ${current.first_name}` : 'не назначен') :\n               (current ? (current.title || current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   invisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.invisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport {icon_trush} from '../../../data/icons'\nimport {valueOfPhoneInput} from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n    const handleChange = (idx, event) => {\n        const out = event.target.value.replace(/[^0-9]/g, '')\n        if (out.length < 12) props.changeClientEditorPhone(idx, out)\n    }\n\n    return (\n        <div>\n            {props.client.phone.map((phone, idx) => (\n                <div key={idx}>\n                    <PhoneTitle idx={idx} title={phone.title}/>\n\n                    <div className=\"inputPhoneBox\">\n                        <input\n                            className='textInput w250'\n                            onChange={event => handleChange(idx, event)}\n                            value={valueOfPhoneInput(phone.number)}\n                            onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n                            style={!props.view.inputClientPhoneChecked[idx] ? {borderColor: 'red'} : null}\n                        />\n                        {idx !== 0 ? (\n                            <div\n                                onClick={() => {\n                                    props.deleteCountNumber(idx)\n                                    props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                                }}\n                            >\n                                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                                    <path d={icon_trush}/>\n                                </svg>\n                            </div>\n                        ) : null}\n                    </div>\n                    {!props.view.inputClientPhoneChecked[idx] ? (\n                        <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n                    ) : null}\n                    <div className=\"checkbox mt5\">\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => props.setPhoneNotify(idx)}\n                            checked={phone.notify}\n                        />\n                        <label>Согласен получать SMS</label>\n                    </div>\n                </div>\n            ))}\n            <div\n                className=\"addPhone\"\n                onClick={() => {\n                    props.addPhoneCounter()\n                    props.addVisibleFlag('inputClientPhoneChecked')\n                }}\n            >\n                + Добавить телефон\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    client: state.client,\n    view: state.view,\n})\n\nconst mapDispatchToProps = {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx)}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientState} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={idx => props.changeClientState({tabs: idx})}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { editCurrentClient, changeVisibleState} from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\nimport {showPhone} from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\nimport {changeClientState} from '../../Redux/actions/clientAction'\n\nconst SetClientByName = (props) => {\n\n    const [showList, setShowList] = useState(false)\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n            !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n        ) {\n            setShowList(false)\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className='w400 h52'>\n\n            <div className='lableImput mt15'>Имя клиента</div>\n\n            <div className='blockImput'>\n                <div\n                    id='clientInputBoxOfPayments'\n                    className='orderInputBox'\n                    onClick={() => setShowList(true)}\n                >\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changeClientState({filter_name: event.target.value})}\n                    />\n                    <div\n                        className='simbolButton'\n                        onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                    >\n                        +\n                    </div>\n                    <div className='simbolButton'>&#6662;</div>\n                </div>\n\n                {showList ?\n                    <div className='listFilter' id='listClientsOfOfPayments'>\n                        {props.clients.map(client => (\n                            <div\n                                className='rowGropList'\n                                key={client.id}\n                                onClick={() => {\n                                    setShowList(false)\n                                    props.editCurrentClient(client)\n                                    props.changePaymentState({client_id: client.id})\n                                }}\n                            >\n                                <div>{client.name}</div>\n                                <div className='orderDate'>\n                                    {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                </div>\n                            </div>\n                        ))}\n                    </div> : null}\n\n            </div>\n\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.filter.clientFilter.phone,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    editCurrentClient,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentState({\n                                    [props.payment.direction === 2 ? 'income' : 'outcome']: event.target.value.replace(/[^0-9.]/g, '')\n                                 })}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.cashbox.cashboxes\n})\n\nconst mapDispatchToProps = {\n   changePaymentState,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React from 'react'\n\nconst CalendarTime = props => {\n    return props.invisible ? null : (\n        <div className='calandarTime'>\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            :\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default CalendarTime\n\n","\nimport React, {useState} from 'react'\n\nconst CalendarNavi = props => {\n\n\n    const [visibleInputYear, setVisibleInputYear] = useState(false)\n\n    const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n    const handleInputYear = (value) => {\n        let out = value.replace(/[^0-9]/g, '')\n        if (value > 9999) out = 9999\n        if (value < 0) out = 0\n        props.setCurrent_day(new Date(props.current_date.setFullYear(out)))\n    }\n\n    return (\n        <div>\n        <div className='calendarNavi'>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() - 1)))}\n            >\n                {'<'}\n            </div>\n\n            <div className='row'>\n                <div\n                    className='currMonth'\n                    onClick={() => props.setVisibleListMonth(!props.visibleListMonth)}\n                >\n                    <div>{months[props.current_date.getMonth()]}</div>\n                    <div className='gu'>&#6662;</div>\n                </div>\n\n                {visibleInputYear ?\n                    <input\n                        className='optionFilterInput w30'\n                        autoFocus\n                        onChange={event => handleInputYear(event.target.value)}\n                        value={props.current_date.getFullYear()}\n                        onBlur={() => setVisibleInputYear(false)}\n                    /> :\n                    <div\n                        className='pd5'\n                        onDoubleClick={() => setVisibleInputYear(true)}\n                    >\n                        {props.current_date.getFullYear()}\n                    </div>}\n                <div className='nextY'>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() + 1)))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() - 1)))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() + 1)))}\n            >\n                {'>'}\n            </div>\n        </div>\n        {props.visibleListMonth ?\n            <div className='monthList' id='monthList'>\n                    {months.map((month, idx) => (\n                        <div\n                            key={idx}\n                            className='month'\n                            onClick={() => {\n                                props.setCurrent_day(new Date(props.current_date.setMonth(idx)))\n                                props.setVisibleListMonth(!props.visibleListMonth)\n                            }}\n                        >\n                            {month}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\n\n\nexport default CalendarNavi","import React from 'react'\n\n\nconst CalendarOption = props => {\n\n    const chooseAllDate = () => {\n        props.func([0, 0])\n        props.setListVisible(false)\n    }\n\n    const chooseToday = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Устанавливаем время на конец дня\n        second.setHours(23, 59, 59, 999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день текущей недели\n        first.setTime(first.getTime() - (first.getDay() - 1 || 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день недели\n        // second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем первый день текущего месяца\n        first.setDate(1)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        // second.setMonth(first.getMonth() + 1)\n        // second.setDate(1)\n        // second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisYear = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало года\n        first.setMonth(0)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n\n    }\n\n    const chooseLastWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день прошлой недели\n        first.setTime(first.getTime() - ((first.getDay() - 1 || 7) + 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день прошлой недели\n        second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseLastMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем дату на начало прошлого месяца\n        first.setMonth(first.getMonth() - 1)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        second.setMonth(first.getMonth() + 1)\n        second.setDate(1)\n        second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseDate = () => {\n        props.setListVisible(false)\n        props.setVisibleCalendar(true)\n    }\n\n\n    return props.invisible ? null : (\n        <div\n            id='listCalendarOption'\n            className='listOptionsChoose'\n            style={{width: props.width}}\n        >\n            {props.allDate ? <div className='options' onClick={chooseAllDate}>Все время</div> : null}\n            <div className='options' onClick={chooseToday}>Сегодня</div>\n            <div className='options' onClick={chooseThisWeek}>Текущая неделя</div>\n            <div className='options' onClick={chooseThisMonth}>Текущий месяц</div>\n            <div className='options' onClick={chooseThisYear}>Текущий год</div>\n            <div className='options' onClick={chooseLastWeek}>Прошлая неделя</div>\n            <div className='options' onClick={chooseLastMonth}>Прошлый месяц</div>\n            <div className='options' onClick={chooseDate}>Выбрать даты</div>\n        </div>\n    )\n}\n\n\nexport default CalendarOption","import React, {useState, useEffect} from 'react'\n\n\nimport {showDate, showRangeDate} from '../utils'\n\nimport Icon from '../Icon'\nimport {icon_calendar} from '../../../data/icons'\nimport CalendarTime from './CalendarTime'\nimport CalendarNavi from './CalendarNavi'\nimport CalendarOption from './CalendarOption'\n\n\n/**\n *\n * title='title'\n *\n * className='className'\n *\n * width='100%'\n *\n * showTop={false}\n *\n * range={false}\n *\n * allDate={false}\n *\n * func={date => console.log(date)}\n *\n * current_date={props.current_date}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseDate = (props) => {\n\n    // Текущий день, от которого расчитвывается текущие показания календаря\n    const [current_date, setCurrent_day] = useState(new Date)\n    // Флаг - показать скрыть меню выбора месяца\n    const [visibleListMonth, setVisibleListMonth] = useState(false)\n    // Флаг - показать/скрыть календарь\n    const [visibleCalendar, setVisibleCalendar] = useState(false)\n    // Первый выбраный день из диапазона\n    const [firstDay, setFirstDay] = useState(0)\n    // Второй выбраный день (выбирается наводом курсора)\n    const [secondDay, setSecondDay] = useState(0)\n    // Меню выбора диапазона дат\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        // Скрываем меню выбора месяца при клику вне меню\n        if (!event.path.map(el => el.id).includes('monthList')) {\n            if (visibleListMonth) {\n                setVisibleListMonth(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('calendar')) {\n            if (visibleCalendar) {\n                setVisibleCalendar(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('listCalendarOption')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        // Добавим слушателя кликов и обработчик при создании компанента\n        window.addEventListener('click', clickHandel)\n        // и удалим слушателя при удалении компанента\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n\n    // Создаим объект даты из текущей выбранной дыты\n    let first = new Date(current_date)\n    // Утановим теущей дате 1 число\n    first.setDate(1)\n    // Отнимим от текущей даты количество дней равное дню недели (получим дату отсчета для отрисовки в поле календаря)\n    first.setTime(first.getTime() - (first.getDay() || 7) * 24 * 60 * 60 * 1000)\n\n    // создадим массив дней для отрисовки в поле календаря\n    let current_days = []\n    // Заполним массив днями приращивая по одному\n    for (let i = 0; i < 42; i++) {\n        current_days[i] = new Date(first.getTime() + 24 * 60 * 60 * 1000)\n        first.setTime(first.getTime() + 24 * 60 * 60 * 1000)\n    }\n\n    /**\n     *\n     * @param date1 - Объект Date\n     * @param date2 - Объект Date\n     * @returns {boolean} - true - если год, месяц и день совпадают, false - если нет\n     */\n    const compareDates = (date1, date2) => {\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n\n    /**\n     * Подготовка диапазона дат перед тем как вернуть данный диапазон\n     *\n     * @param date_range {array} - Массив из двух объектов Date\n     * @returns {array} - Массив из timestamp\n     */\n    const prepareRange = (date_range) => {\n        // Функция сортировки для метода sort\n        const sort_func = (a, b) => {\n            if (a > b) return 1\n            return -1\n        }\n        // Отсортируем в даты в порядке возрастания\n        let new_range = date_range.sort(sort_func)\n        // Установим время для первой даты\n        new_range[0].setHours(0, 0, 0, 0)\n        // Установим время для второй даты\n        new_range[1].setHours(23, 59, 59, 999)\n        // возвращаем новый дипазон\n        return new_range\n    }\n\n    /**\n     * Обработчик события onClick дня каледара\n     * @param day {Object} - Объект Date\n     */\n    const handleChoose = (day) => {\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если еще не выбран первый день\n            if (!firstDay) {\n                // Обнуляем текущее значение в state приложения (чтобы не отображался выбраный диапазон на календаре)\n                props.func([0, 0])\n                // Устанавливаем первый день в state копмпонета\n                setFirstDay(day)\n            // Если первый день уже выбран\n            } else {\n                // Возвращаем предварительно подготовленные данные из компонента\n                props.func(prepareRange([firstDay, day]))\n                // Обнуляем первый день в state компонента\n                setFirstDay(0)\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // возвращаем выбранную дату\n            props.func(day)\n            // устанавливаем текущую дату в state компонента\n            setCurrent_day(new Date(day))\n        }\n\n    }\n\n    /**\n     * Очень запутанная функция для определения класса стилей для каждого отрисовываемого дня в календаре\n     *\n     * @param day {Object} - Объект Date\n     * @returns {string} - набор стилей для каждого отрисованного дня в календаре\n     */\n    const dayClassName = (day) => {\n        // Общий стиль для всег дней\n        const class1 = 'calendarDay'\n        // Стиль для дней за пределами отображаемого месяца\n        const class2 =  day.getMonth() === current_date.getMonth() ? '' : 'calgr'\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если сущестует уже выбранный диапазон\n            if (props.current_date && props.current_date[0] && props.current_date[1]) {\n                // Стиль для крайних дней уже выбранного диапазона дат\n                const class3 = compareDates(new Date(props.current_date[0] * 1000), day) ||\n                               compareDates(new Date(props.current_date[1] * 1000), day) ? 'settedDay' : ''\n                // Стиль для дня внутри уже выбранного диапазона дат\n                const class4 = props.current_date[0] < day/1000 && day/1000 < props.current_date[1] ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            // Если диапазон дат еще не выбран\n            } else {\n                // Функция для определения попадает ли день в выбираемый диапазон дат\n                const showSelected = (day) => {\n                    if (firstDay && secondDay) {\n                        return  firstDay/1000 < day/1000 && day/1000 <= secondDay/1000 ||\n                            firstDay/1000 > day/1000 && day/1000 >= secondDay/1000\n                    } else { return false }\n                }\n                // Стиль для первого выбрнного дня\n                const class3 = compareDates(firstDay || new Date(0), day) ? 'settedDay' : ''\n                // Стиль для ней попадающих в выбираемый диапазон\n                const class4 = showSelected(day) ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // Стиль для выбранной даты\n            const class3 = compareDates(new Date(props.current_date), day) ? 'settedDay' : ''\n            return [class1, class2, class3].join(' ')\n        }\n    }\n\n\n    const title = props.range ?\n        (props.current_date && props.current_date.some(date => date) ? showRangeDate(props.current_date) : 'Любая')\n        : showDate(props.current_date / 1000)\n\n    const handleChangeDate = () => {\n        if (props.range) {\n            setListVisible(true)\n        } else {\n            setVisibleCalendar(true)\n        }\n    }\n\n    return props.invisible ? <div/> :(\n        <div\n            className={props.className}\n            style={{width: props.width}}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='dateContaner'\n                onClick={handleChangeDate}\n            >\n                <Icon\n                    className='icon-s2 mlr5'\n                    icon={icon_calendar}\n                    color='gray'\n                />\n                <div>{title}</div>\n            </div>\n\n            <CalendarOption\n                width={props.width}\n                invisible={!listVisible}\n                allDate={props.allDate}\n                setListVisible={setListVisible}\n                setVisibleCalendar={setVisibleCalendar}\n                func={date => props.func(date)}\n            />\n\n\n            {visibleCalendar && !props.disabled ?\n                <div className={props.showTop ? 'calendar_top' : 'calendar_down'} id='calendar'>\n\n                    <CalendarNavi\n                        func={data => props.func(data)}\n                        current_date={current_date}\n                        setCurrent_day={setCurrent_day}\n                        setVisibleListMonth={setVisibleListMonth}\n                        visibleListMonth={visibleListMonth}\n                    />\n\n                    <div className='row'>\n                        {weekDays.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className='calendarWeekDay'\n                            >\n                                {day}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className='calendarDays'>\n                        {current_days.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className={dayClassName(day)}\n                                onClick={() => handleChoose(day)}\n                                onMouseOver={() => setSecondDay(day)}\n                                onMouseOut={() => setSecondDay(0)}\n                            >\n                                {day.getDate()}\n                            </div>\n                        ))}\n                    </div>\n\n                    <CalendarTime\n                        func={data => props.func(data)}\n                        current_date={props.current_date}\n                        invisible={props.range}\n                    />\n                </div> : null}\n\n        </div>\n    )\n}\n\nexport default ChooseDate","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addItemPayments, refreshDataOrder, changeStatusMenuVisible, changeVisibleState} from '../../Redux/actions'\nimport { addPaymentTag, deletePaymentTag, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\nimport {addClients} from '../../Redux/actions/clientAction'\n\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\nimport ChooseDate from '../general/calandar/ChooseDate'\n\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            'inputPaymentSumChecked': true,\n            'inputPaymentCashboxChecked': true,\n            'inputPaymentDescChecked': true,\n            'inputPaymentCashflowChecked': true,\n            'inputPaymentEmployeeChecked': true,\n            'statusPaymentsEditor': false,\n        })\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('344')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.changeVisibleState({'inputPaymentSumChecked': false})\n            if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction))\n                props.changeVisibleState({'inputPaymentCashboxChecked': false})\n            if (!props.payment.description)\n                props.changeVisibleState({'inputPaymentDescChecked': false})\n            if (!props.payment.cashflow_category)\n                props.changeVisibleState({'inputPaymentCashflowChecked': false})\n            if (!props.payment.employee_id)\n                props.changeVisibleState({'inputPaymentEmployeeChecked': false})\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id)\n        // (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentState({custom_created_at: null})\n                            }}\n                            func2={() => {\n                                setChooseData(true)\n                                props.changePaymentState({custom_created_at: parseInt(new Date() / 1000)})\n                            }}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        <ChooseDate\n                            className='h31'\n                            width='250px'\n                            func={date => props.changePaymentState({custom_created_at: parseInt(date / 1000)})}\n                            current_date={props.payment.custom_created_at * 1000}\n                            invisible={!chooseData}\n                        />\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                            close={() => props.changeVisibleState({client_id: 0})}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 0\n                                })\n                            }}\n                            func2={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 1\n                                })\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox => props.changePaymentState({[props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'] : cashbox})}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentState({description: event.target.value})}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={category => props.changePaymentState({cashflow_category: category})}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        invisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={employee => props.changePaymentState({employee_id: employee})}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    filter: state.filter,\n    client: state.client,\n    cashboxes: state.cashbox.cashboxes,\n    current_branch_id: state.branch.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.employee.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    changeVisibleState,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = props.current_branch ? <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/> : null\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.branch.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, changeOrderFormS, changeVisibleState} from '../../../../Redux/actions'\nimport {showPhone} from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\nimport {changeClientState} from '../../../../Redux/actions/clientAction'\n\nconst SetClient = (props) => {\n\n    const [listClientsVisible, setListClientsVisible] = useState(false)\n    const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n        ) {\n            if (listClientsVisible) {\n                setListClientsVisible(false)\n            }\n        }\n    }\n\n    const clickHandel2 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n            !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n        ) {\n            if (listClientsPhoneVisible) {\n                setListClientsPhoneVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        window.addEventListener('click', clickHandel2)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n            window.removeEventListener('click', clickHandel2)\n        }\n    })\n\n\n    return (\n        <div className='cleintForm'>\n\n            <div className='formRow'>\n                <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n                <div className='blockImput'>\n                    <div\n                        id='orderInputBoxOfOrder'\n                        className='orderInputBox'\n                        onClick={() => setListClientsVisible(true)}\n                        style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => props.changeClientState({filter_name: event.target.value})}\n                            value={props.name}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n                    {props.view.checkedOrderClient ?\n                        <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n                    {listClientsVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrder'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n            </div>\n\n            <div className='formRow'>\n\n                <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n                <div className='blockImput'>\n\n                    <div\n                        id='orderInputBoxOfOrderPhone'\n                        className='orderInputBox'\n                        onClick={() => setListClientsPhoneVisible(true)}\n                    >\n                        <LableInput\n                            className='w100'\n                            inputClassName='optionFilterInput'\n                            onChange={value => props.changeClientState({filter_phone: value})}\n                            value={props.phone}\n                            isPhone={true}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n\n\n                    {listClientsPhoneVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsPhoneVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n\n            </div>\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.client.filter_phone,\n    name: state.client.filter_name,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.changeVisibleState({[props.checkedFlag]: !!event.target.value}) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n    changeVisibleState\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentBrand, addEquipmentBrand, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderBrand = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand])\n\n\n    const edit = props.order.edit\n    const disabled = !Object.values(props.book.equipment_type).length\n    const seted = !!Object.values(props.order.brand).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_brand: {}})\n    }\n\n    const setBrand = brand => {\n        props.changeOrderState({brand})\n        props.changeBookState({equipment_brand: brand, filter_brand: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderBrand: true})\n    }\n\n    return (\n        <div>\n            <button\n                id=\"optionsOrderTextOfBrand\"\n                style={!props.view.checkedOrderBrand ? {borderColor: 'red'} : null}\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder=\"Выбирете бренд\"\n                    value={seted ? props.order.brand.title : props.book.filter_brand}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderBrand ? (\n                <div className=\"errorMassageInput\">\n                    {'Необоходимо выбрать из списка'}\n                </div>\n            ) : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfBrand\">\n                    {props.book.equipment_brands.map(brand => (\n                        visibleBotton ? null :\n                            <div\n                                key={brand.id}\n                                className=\"rowGropList\"\n                                onClick={() => setBrand(brand)}\n                            >\n                                {brand.title}\n                            </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                                onKeyPress={event => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentBrand(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_brand}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить бренд\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentBrand,\n    changeVisibleState,\n    addEquipmentBrand,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentType, addEquipmentType, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\nimport {icon_cancel, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderGroupe = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const settled = !!Object.values(props.order.kindof_good).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            kindof_good: {},\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_type: {}})\n        props.changeVisibleState({checkedOrderKindofGood: true})\n    }\n\n\n    const setOrderType = equipment => {\n        props.changeOrderState({kindof_good: equipment}) \n        props.changeBookState({filter_type: '', equipment_type: equipment})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    return (\n        <div>\n            <button\n                className='optionsFilterText'\n                id='optionsOrderTextOfGroup'\n                onClick={() => setVisibleList(true)}\n                disabled={settled}\n                style={!props.view.checkedOrderKindofGood? {borderColor: 'red'} : null}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={settled ? props.order.kindof_good.title : props.book.filter_type}\n                    disabled={settled}\n                />\n                {settled && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderKindofGood ?\n                <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n                {props.book.equipment_types.map(equipment => (\n                    visibleBotton ? null :\n                    <div\n                        key={equipment.id}\n                        className='rowGropList'\n                        onClick={() => setOrderType(equipment)}\n                    >\n                        {equipment.title}\n                    </div>\n                ))}\n                <div className='btmsts'>\n                    {visibleBotton ?\n                        <input\n                            className='optionFilterInput'\n                            autoFocus\n                            onChange={event => props.changeBookState({filter_type: event.target.value})}\n                            onKeyPress={(event) => {\n                                if (event.key === 'Enter') {\n                                    props.createEquipmentType(event.target.value)\n                                    setVisisbleBotton(false)\n                                }\n                            }}\n                            onBlur={() => setVisisbleBotton(false)}\n                            value={props.book.filter_type}\n                            placeholder='Введите и нажмиете Enter'\n                        /> :\n                        <div\n                            className='btnstsTitle'\n                            onClick={() => setVisisbleBotton(true)}\n                        >\n                            Добавить тип\n                        </div>}\n                </div>\n\n            </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentType,\n    addEquipmentType,\n    changeBookState,\n    changeOrderState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {createEquipmentModel, addEquipmentModel, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderModel = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model])\n\n\n    const disabled = !Object.values(props.book.equipment_subtype).length\n    const seted = !!Object.values(props.order.model).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const setModel = model => {\n        props.changeOrderState({model})\n        props.changeBookState({equipment_model: model, filter_model: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    const reset = () => {\n        props.changeOrderState({model: {}})\n        props.changeBookState({equipment_model: {}})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfModel\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_model: event.target.value})}\n                    placeholder=\"Выбирете модель\"\n                    value={seted ? props.order.model.title : props.book.filter_model}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfModel\">\n                    {props.book.equipment_models.map((model) => (\n                        visibleBotton ? null :\n                        <div\n                            key={model.id}\n                            className=\"rowGropList\"\n                            onClick={() => setModel(model)}\n                        >\n                            {model.title}\n                        </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_model: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentModel(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_model}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модель\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentModel,\n    changeOrderState,\n    addEquipmentModel,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, addEquipmentSubtype, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Subtype from './Subtype'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(props.order.subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_subtype: {}})\n\n    }\n\n    const setSubtype = subtype => {\n        props.changeOrderState({subtype})\n        props.changeBookState({equipment_subtype: subtype, filter_subtype: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderSubtype: true})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? props.order.subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => (\n                        visibleBotton ? null :\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(subtype)}\n                            />\n                        )\n                    )}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_subtype}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    changeVisibleState,\n    addEquipmentSubtype,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS} from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n    return (\n        <div>\n\n            <div className='formRow mt15'>\n                <div className='optionsTitle'></div>\n                <div className='orderFormTitle'>Изделиe и неисправность</div>\n            </div>\n\n            <div className='orderDevice'>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Тип устройства<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderGroup idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Бренд<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderBrand idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Модуль / Серия<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderSubtype idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>Модель</div>\n                    <div className='blockImput'>\n                        <SetOrderModel idx={0}/>\n                    </div>\n                </div>\n\n                <LabelInputOrder\n                    idx={23}\n                    className='formRow'\n                    title='Неисправность'\n                    name='malfunction'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'malfunction')}\n                    value={props.order.malfunction}\n                    checkedFlag='inputMalfunctionChecked'\n                    checked={props.view.inputMalfunctionChecked}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Комплектация'\n                    name='packagelist'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'packagelist')}\n                    value={props.order.packagelist}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Внешинй вид'\n                    name='appearance'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n                    value={props.order.appearance}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <div className='formRow'>\n                    <div className='optionsTitle'>Срочно</div>\n                    <div className='blockImput'>\n                        <div className='checkbox pd-tb-5 al-itm-fs'>\n                            <input\n                                type='checkbox'\n                                onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                                checked={props.order.urgent}\n                                disabled={!props.permissions.includes('edit_info_orders')}\n                            />\n                            <label></label>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderForm,\n    addAnotherEquipment,\n    deleteDevice,\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderFormS} from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/calandar/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n    return (\n        <div>\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Рекламная компания</div>\n                <div className=\"blockImput\">\n                    <ChooseOfList\n                        id={14}\n                        list={props.ad_campaign}\n                        setElement={props.changeOrderFormS}\n                        field='ad_campaign_id'\n                        current_id={props.order.ad_campaign_id}\n                        width={'250px'}\n                        disabled={!props.permissions.includes('edit_info_orders')}\n                    />\n                </div>\n            </div>\n\n            <ChooseSingleEquipment/>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\"/>\n                <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n            </div>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Заметки приемщика</div>\n                <div className=\"blockImput mh\">\n          <textarea\n              className=\"textInput\"\n              name=\"manager_notes\"\n              onChange={(event) =>\n                  props.changeOrderFormS(event.target.value, 'manager_notes')\n              }\n              value={props.order.manager_notes}\n              disabled={!props.permissions.includes('edit_info_orders')}\n          />\n                </div>\n            </div>\n\n            <LabelInputOrder\n                className=\"formRow\"\n                title=\"Ориетнировачная стоимость\"\n                name=\"estimated_cost\"\n                onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n                value={props.order.estimated_cost}\n                disabled={!props.permissions.includes('edit_info_orders')}\n            />\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Дата готовности</div>\n                <div className=\"blockImput\">\n                    <ChooseDate\n                        func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n                        current_date={props.order.estimated_done_at * 1000}\n                        disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n                        showTop={true}\n                        // range={true}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ad_campaign: state.data.ad_campaign,\n    order: state.order,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\nimport {getOrderFilter} from './orderActions'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id,\n        filter_order: getOrderFilter()\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос создание операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id,\n        filter_order: getOrderFilter()\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос создание операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        filter_order: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        order_id: state.order.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               invisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.employee.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * invisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n *\n * icon={icon} // Иконка\n *\n * iconClassName='iconClassName' // Класс иконки\n *\n * iconColor='black' // Цвет Иконки\n */\nconst Button = (props) => {\n   return props.invisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.invisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.invisible || props.disabled}\n      >\n          <div className='row'>\n              {props.icon ? <Icon icon={props.icon} className={props.iconClassName} color={props.iconColor}/> : null}\n              {props.title ? <div className='ml5'>{props.title}</div> : null}\n          </div>\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    invisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconColor: PropTypes.string\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {getOrderFilter} from './orderActions'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id,\n\n        filter_order: getOrderFilter()\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        filter_order: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await  fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        order_id: state.order.edit,\n        deleted: flag,\n\n        filter_order: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        invisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.employee.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.cashbox.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPayments = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {editCurrentClient, changeVisibleState} from '../../../../Redux/actions'\nimport { changePaymentState} from '../../../../Redux/actions/paymentAction'\n\nimport Button from '../../../general/Button'\nimport TableOrderPayments from './TableOrderPayments'\n\nconst OrderPayments = (props) => {\n\n   const handleIncome = () => {\n      props.changePaymentState({\n         direction: 2,\n         client_id: props.order.client.id,\n         description: `Оплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 2,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   const handleOutcome = () => {\n      props.changePaymentState({\n         direction: 1,\n         client_id: props.order.client.id,\n         description: `Выплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 8,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handleIncome }\n               invisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handleOutcome }\n               invisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPayments/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeVisibleState,\n   changePaymentState,\n   editCurrentClient,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.invisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../../general/Icon'\nimport {icon_down, icon_print} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport Checkbox from '../../../general/Checkbox'\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('orderPrint') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div style={{width: '67px', height: '25px'}} id='orderPrint'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton m0 pd05 ml10'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listprint'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        invisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React from 'react'\n\nconst EventStatus = props => {\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n    return (\n        <div className='eventElement evFerst'>\n            <div className='row jc-sb'>\n                <div\n                    className='statusListRow mt0'\n                    style={{backgroundColor: props.event.current_status.color}}\n                    title={props.employee}\n                >\n                    {props.event.changed[0].new.title}\n                </div>\n                <div className='cgr'>{time}</div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default EventStatus","import React from 'react'\n\n\nimport Icon from '../../../../general/Icon'\nimport {\n    icon_arrow_down,\n    icon_arrow_right,\n    icon_briefcase,\n    icon_bubble,\n    icon_bug,\n    icon_calendar, icon_coin_dollar\n} from '../../../../../data/icons'\nimport {icon_letter, icon_loop, icon_pencil, icon_trush, icon_user} from '../../../../../data/icons'\n\n\nconst EventSimple = props => {\n\n    const chooseIcon = (event_type) => {\n        let list_type = ['ASSIGN_ENGINEER', 'CHANGE_ENGINEER', 'ASSIGN_MANAGER', 'CHANGE_MANAGER', 'ADD_CLIENT', 'CHANGE_CLIENT']\n        if (list_type.includes(event_type)) return icon_user\n        if (event_type === 'CHANGE_ESTIMATED_DONE_AT') return icon_calendar\n        if (event_type === 'ADD_OPERATION') return icon_briefcase\n        if (event_type === 'ADD_ORDER_PART') return icon_bug\n        if (['DELETE_OPERATION', 'DELETE_ORDER_PART', 'DELETE_PAYMENT'].includes(event_type)) return icon_trush\n        if (['ADD_COMMENT', 'SEND_SMS'].includes(event_type)) return  icon_bubble\n        if (event_type === 'SEND_EMAIL') return icon_letter\n        if (event_type === 'MOVE_TO') return icon_loop\n        if (event_type === 'ADD_PAYMENT') return icon_coin_dollar\n        return icon_pencil\n    }\n\n    const checkLength = (event) => {\n        let one, two\n        if (event.current && event.current.title){\n            one = event.current.title.toString().length\n        } else {\n            one = 0\n        }\n        if (event.new && event.new.title){\n            two = event.new.title.toString().length\n        } else {\n            two = 0\n        }\n        return one + two > 40\n    }\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n\n\n    return (\n\n        <div className='eventElement'>\n            {props.event.changed.map((event, idx) => (\n                <div>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <div\n                                style={{\n                                    backgroundColor: props.event.current_status.color,\n                                    display: idx ? 'none': null,\n                                    marginLeft: idx ? '30px': null\n                                }}\n                                className='boxHistoryIcon'\n                                title={props.employee}\n                            >\n                                <Icon className='icon-s2' icon={chooseIcon(props.event.event_type)} color='white'/>\n                            </div>\n                            <div\n                                className='ml10 txtb'\n                                style={{marginLeft: idx ? '28px': null}}\n                            >\n                                {event.title}\n                            </div>\n                        </div>\n                        <div className='cgr'>{time}</div>\n                    </div>\n                    <div\n                        className={`${checkLength(event) ? null : 'row'} ml30`}\n                    >\n                        {event.current && event.current.title ?\n                            <div className=''>{event.current.title}</div> : null}\n                        {event.current && event.current.title ?\n                            <Icon\n                                className='icon-sm8 mlr5'\n                                icon={checkLength(event) ? icon_arrow_down : icon_arrow_right}\n                            /> : null}\n                        <div style={{whiteSpace: \"pre-wrap\"}}>{event.new.title}</div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\n\nexport default EventSimple","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport EventStatus from './EventsStatus'\nimport EventSimple from './EventSimple'\nimport {order_event_types} from '../../../../../data/data'\n\nconst OrderEvents = props => {\n\n    const [date, setDate] = useState(0)\n\n    const compareDates = (date1, date2) => {\n        date1 = new Date(date1 * 1000)\n        date2 = new Date(date2 * 1000)\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n    const optionsShowDate = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        // hour: 'numeric',\n        // minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const showDate = (date) => {\n        return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.', '')\n    }\n    const values = order_event_types.filter(event => props.event_filter.includes(event.id)).map(event => event.value)\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}`: ''\n        }\n    }\n\n    return (\n        <div className='contentEditor mt15'>\n            <div className='ml30 h100'>\n                {props.events.filter(event => values.includes(event.event_type)).map((event, idx) => {\n\n                    if (event.event_type === 'CREATE_ORDER' || event.event_type === 'CHANGE_STATUS') {\n                        return (\n                            <div key={event.id}>\n                                {event.event_type === 'CREATE_ORDER' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <div\n                                    className='orderEvent'\n                                    style={{borderColor: event.current_status.color}}\n                                >\n                                    {event.event_type === 'CHANGE_STATUS' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                        <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                        : null\n                                    }\n                                    <EventStatus event={event} employee={getEmploeeName(event.employee_id)}/>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div\n                                key={event.id}\n                                className='orderEvent'\n                                style={{borderColor: event.current_status.color}}\n                            >\n                                {!idx || !compareDates(event.created_at, props.events[idx - 1].created_at) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <EventSimple event={event} employee={getEmploeeName(event.employee_id)}/>\n                            </div>\n                        )\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    events: state.order.events,\n    event_filter: state.order.event_filter,\n    employees: state.employee.employees\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEvents)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         style={{width: '67px', height: '26px'}}\n         className={`tableFields ml10 ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <Icon icon={props.icon || icon_table} className='icon-table'/>\n            </div>\n            <div className='cl12'>\n                  <Icon icon={icon_down} className='icon-table'/>\n               {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n            </div>\n         </div>\n\n         {listVisible ?\n            <div \n               className={props.classNameMenu}\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useLayoutEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderState, addEventComment} from '../../../../../Redux/actions/orderActions'\n\nconst AddComment = props => {\n\n    const handlePressKey = event => {\n        if (event.key === 'Enter' && event.shiftKey) {\n            event.preventDefault()\n            props.changeOrderState({event_comment: event.target.value + '\\n'})\n            return\n        }\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            props.addEventComment()\n            return\n        }\n    }\n\n\n    const MIN_TEXTAREA_HEIGHT = 16\n    const textareaRef = React.useRef(null);\n\n    useLayoutEffect(() => {\n        // Reset height - important to shrink on delete\n        textareaRef.current.style.height = '16px'\n        // Set height\n        textareaRef.current.style.height = `${Math.max(textareaRef.current.scrollHeight - 10, MIN_TEXTAREA_HEIGHT)}px`\n    }, [props.order.event_comment])\n\n    return (\n        <div className='mt15'>\n            <div className='orderCommentBox'>\n                <textarea\n                    ref={textareaRef}\n                    style={{\n                       minHeight: MIN_TEXTAREA_HEIGHT,\n                       resize: \"none\"\n                    }}\n                    className='commentInput'\n                    onChange={event => props.changeOrderState({event_comment: event.target.value})}\n                    value={props.order.event_comment}\n                    onKeyPress={handlePressKey}\n                    placeholder=\"Введите текст комментария\"\n                />\n            </div>\n            <p className='m0 ml15 mt5'><b>Enter</b>, чтобы отправить</p>\n            <p className='m0 ml15'><b>Shift + Enter</b>, чтобы добавить еще одну строчку</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderState,\n    addEventComment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment)","import React, {useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport {selectedOrder} from '../../../../Redux/actions/orderActions'\nimport {order_event_types} from '../../../../data/data'\nimport {icon_filter} from '../../../../data/icons'\n\nimport OrderPrint from './OrderPrint'\nimport OrderEvents from './OrderEvetns/OrderEvents'\nimport TableFields from '../../../general/TableFields'\nimport Button from '../../../general/Button'\nimport AddComment from './OrderEvetns/AddComment'\n\nconst OrderHistory = props => {\n\n\n    return (\n        <div className=\"orderHistory\">\n            <div className='row al-itm-fs'>\n                <OrderPrint/>\n                <TableFields\n                    id='orderEvents'\n                    className='ml5'\n                    height='200px'\n                    classNameMenu='aventFilterMenu'\n                    list={order_event_types}\n                    checked_list={props.order.event_filter}\n                    func={props.selectedOrder}\n                    field='event_filter'\n                    icon={icon_filter}\n                />\n            </div>\n            {props.order.events.length ? <OrderEvents/> : null}\n            <AddComment/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    selectedOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\n\nimport {addDiscountMargin, addDictService, changeVisibleState} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders, getOrder} from '../../../Redux/actions/orderActions'\nimport {changeOrderState} from '../../../Redux/actions/orderActions'\n\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\nimport {addClients} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\nimport OrderHistory from './orderHisroy/OrderHistory'\n\n\n\nconst OrderEditor = (props) => {\n\n    const history = useHistory()\n    // console.log(history.location)\n    const edit = history.location.state && history.location.state.order_id\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addDictService()\n        props.resetBookEquipment()\n    }, [])\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusOrderEditor: false,\n            checkedOrderClient: false,\n            checkedOrderKindofGood: true,\n            checkedOrderBrand: true,\n            checkedOrderSubtype: true\n        })\n        props.resetOrder()\n        if (edit) history.goBack()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('addOrder') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    useEffect(() => {\n        if (edit) props.getOrder(history.location.state.order_id)\n    }, [])\n\n\n    const handleCreate = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length &&\n            props.order.malfunction\n        ) {\n            props.createOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n    const handleSave = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length\n\n        ) {\n            props.saveOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n\n    return edit && !props.order.edit ? null : (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n                <div className=\"cteateNewOrderContent\">\n\n                    <div className=\"createOrderForm\">\n\n                        <TitleOrderEditor/>\n                        {props.order.edit ?\n                            <div>\n                                <Tabs\n                                    list={['Информация о заказе', 'Работы и материалы', 'Платежи']}\n                                    func={idx => props.changeOrderState({tabs: idx})}\n                                    tab={props.order.tabs}\n                                />\n                                {props.order.tabs === 0 ? <OrderInfo/> : null}\n                                {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                                {props.order.tabs === 2 ? <OrderPayments/> : null}\n                            </div> : <OrderInfo/>}\n                    </div>\n\n                    <OrderHistory/>\n                </div>\n\n                <div className=\"boxOrderButtons\">\n                    <BottomButtons\n                        edit={props.order.edit}\n                        create={handleCreate}\n                        save={handleSave}\n                        // delete={() => props.deleteClient(props.client.edit)}\n                        close={handleClose}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order,\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addClients,\n    addDiscountMargin,\n    createOrder,\n    changeOrderState,\n    resetOrder,\n    addDictService,\n    saveOrder,\n    addOrders,\n    resetBookEquipment,\n    getOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\nconst optionsShowDate = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n}\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.toLocaleString('ru', optionsShowDate).replace('г.,', '')}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Subtype = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.subtype.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Subtype)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Manager = props => {\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}`: ''\n        }\n    }\n\n    return (\n        <td>\n            <div className='noWr'>\n                {getEmploeeName(props.order.manager_id)}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees\n})\n\nexport default connect(mapStateToProps)(Manager)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst MissedPayments = props => {\n    return (\n        <td className=\"tablePrice\">\n            <span>{props.order.missed_payments || null}</span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(MissedPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ManagerNotes = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.manager_notes}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(ManagerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Cell = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.cell}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Cell)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst AdCampaign = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.ad_campaign.name}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(AdCampaign)","import React, {useEffect, useMemo, useRef} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {addOrders, editOrder, resetOrder} from '../../Redux/actions/orderActions'\nimport {changeVisibleState, initStatusMenuVisibleAction} from '../../Redux/actions'\nimport {changeBookState} from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './newOrder/orderHisroy/StikerToPrint'\nimport {useHistory} from 'react-router-dom'\nimport Subtype from './cell/Subtype'\nimport Manager from './cell/Manager'\nimport MissedPayments from './cell/MissedPayments'\nimport ManagerNotes from './cell/ManagerNotes'\nimport Cell from './cell/Cell'\nimport AdCampaign from './cell/AdCampaign'\n\n\nconst TableOrders = props => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        let statusVis = {}\n        props.order.ordersShow.forEach((order) => {\n            statusVis[order.id] = false\n        })\n        props.initStatusMenuVisible(statusVis)\n    }, [props.order.ordersShow])\n\n    const handleEdit = (order) => {\n        props.changeBookState({\n            equipment_type: order.kindof_good,\n            equipment_brand: order.brand,\n            equipment_subtype: order.subtype,\n            equipment_model: order.model\n        })\n        history.push(`/orders/${order.id}`, {order_id: order.id })\n    }\n\n    const afterPrint = () => {\n        props.changeVisibleState({statusOrderSticker: false})\n        if(props.view.needToResetOrder) {\n            props.resetOrder()\n            props.changeVisibleState({needToResetOrder: false})\n        }\n    }\n\n    const tFields = useMemo(() => props.order.tableFields.filter(header => header.visible), [props.order, props.order.tableFields])\n\n    const table_order = useRef(null)\n    // console.log(table_order.current)\n\n    const chooseCell = (field, order) => {\n        switch (field.id) {\n\n            case 1: return <Lable key={field.id} order={order}/>\n            case 2: return <Create key={field.id} order={order}/>\n            case 3: return <EstimatedDone key={field.id} order={order}/>\n            case 4: return <Status key={field.id} order={order}/>\n            case 5: return <Equipment key={field.id} order={order}/>\n            case 6: return <KindOfGood key={field.id} order={order}/>\n            case 7: return <Brand key={field.id} order={order}/>\n            case 8: return <Subtype key={field.id} order={order}/>\n            case 9: return <Malfunction key={field.id} order={order}/>\n            case 10: return <Engineer key={field.id} order={order}/>\n            case 11: return <Manager key={field.id} order={order}/>\n            case 12: return <Client key={field.id} order={order}/>\n            case 13: return <Price key={field.id} order={order}/>\n            case 14: return <MissedPayments key={field.id} order={order}/>\n            case 15: return <EngineerNotes key={field.id} order={order}/>\n            case 16: return <ManagerNotes key={field.id} order={order}/>\n            case 17: return <Cell key={field.id} order={order}/>\n            case 18: return <AdCampaign key={field.id} order={order}/>\n            default: return null\n        }\n    }\n\n    if (props.employees) {\n        return (\n            <div className=\"tableOrdersBox\">\n                <table id=\"tableOrders\" ref={table_order}>\n                    <thead className=\"tableThead\">\n                    <tr>\n                        {tFields.map(header => (\n                            <TableHeader\n                                key={header.id}\n                                data={header}\n                                tableHeight={table_order.current ? table_order.current.offsetHeight : 40}\n                            />\n                        ))}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.order.ordersShow.map(order => (\n                        <tr\n                            key={order.id}\n                            className=\"orderTableRows\"\n                            onDoubleClick={() => handleEdit(order)}\n                        >\n                            {tFields.map(header => chooseCell(header, order))}\n                            {/*{props.order.tableFields.find(header => header.id === 1).visible ? <Lable order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 2).visible ? <Create order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 3).visible ? <EstimatedDone order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 4).visible ? <Status order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 5).visible ? <Equipment order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 6).visible ? <KindOfGood order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 7).visible ? <Brand order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 8).visible ? <Subtype order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 9).visible ? <Malfunction order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 10).visible ? <Engineer order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 11).visible ? <Manager order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 12).visible ? <Client order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 13).visible ? <Price order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 14).visible ? <MissedPayments order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 15).visible ? <EngineerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 16).visible ? <ManagerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 17).visible ? <Cell order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 18).visible ? <AdCampaign order={order}/> : null}*/}\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                {props.view.statusOrderEditor ? <OrderEditor/> : null}\n                {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n                {props.view.statusOrderSticker ?\n                    <StikerToPrint onAfterPrint={afterPrint}/> : null}\n\n            </div>\n        )\n    } else {\n        return <Loader/>\n    }\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    employees: state.employee.employees,\n    user: state.data.user,\n    view: state.view,\n    mainFilter: state.filter.mainFilter\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    initStatusMenuVisible: initStatusMenuVisibleAction,\n    changeVisibleState,\n    editOrder,\n    changeBookState,\n    resetOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {addClientToTempFilter} from '../../Redux/actions/clientAction'\n\nconst CustomFilter = props => {\n\n    async function  handleChoose()  {\n        if (props.filter.active_filter !== props.data.id) {\n            if (props.data.filters.client_id) props.addClientToTempFilter(props.data.filters.client_id[0])\n            props.changeFilterState({\n                ...props.data.filters,\n                active_filter: props.data.id,\n                active_badge: 0,\n                search: '',\n                temp_statuses: props.data.filters.status_id || [],\n                temp_order_types: props.data.filters.order_type_id || [],\n                temp_managers: props.data.filters.manager_id || [],\n                temp_engineers: props.data.filters.engineer_id || [],\n                temp_created_at: props.data.filters.created_at || [0, 0],\n                temp_kindof_good_id: props.data.filters.kindof_good,\n                temp_brand: props.data.filters.brand,\n                temp_subtype: props.data.filters.subtype,\n                temp_client: {}\n            })\n        } else {\n            props.changeFilterState({\n                active_filter: 0,\n                page: 0,\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n            })\n        }\n    }\n\n    return (\n        <div\n            className='customFilter'\n            onClick={handleChoose}\n            style={{\n                backgroundColor: props.data.id === props.filter.active_filter ? '#eeeeef' : 'white',\n                opacity: props.data.id === props.filter.active_filter || props.filter.active_filter === 0 ? 1 : 0.5\n            }}\n        >\n            {props.data.title}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    addClientToTempFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../Redux/actions'\nimport LableInput from '../general/LableInput'\nimport Checkbox from '../general/Checkbox'\nimport BottomButtons from '../general/BottomButtons'\nimport {changeFilterState, createCustomFilter} from '../../Redux/actions/filterAction'\n\nconst FilterEditor = props => {\n\n    const handleClose = () => {\n        props.changeVisibleState({statusCreateNewFilter: false, inputFilterTitleChecked: true})\n    }\n\n    const clickHandel = event => {\n        if (!event.path.map((el) => el.id).includes('createNewFilterWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.filter.title) {\n            props.createCustomFilter()\n        } else {\n            props.changeVisibleState({inputFilterTitleChecked: false})\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewFilterWindow\">\n\n                <div className=\"createNewTitle w515\">{props.filter.active_filter ? props.filter.title : 'Новый фильтр'}</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                         className='mt15'\n                         title='Наименование'\n                         onChange={event => props.changeFilterState({title: event.target.value})}\n                         value={props.filter.title}\n                         checkedFlag='inputFilterTitleChecked'\n                         checked={props.inputFilterTitleChecked}\n                         redStar={true}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Общий'\n                        onChange={event => props.changeFilterState({general: event.target.checked})}\n                        checked={props.filter.general}\n                    />\n                </div>\n\n                <BottomButtons\n                    edit={props.filter.active_filter}\n                    create={handleCreate}\n                    // save={handleSave}\n                    // delete={() => props.deleteNotEvent(true)}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    inputFilterTitleChecked: state.view.inputFilterTitleChecked,\n\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    createCustomFilter,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const choosed_values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (choosed_values.length === current_statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!choosed_values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        invisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport {icon_down, icon_left} from '../../../../data/icons'\n\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\nimport Button from '../../../general/Button'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const allStatuses = props.statuses.map(status => status.id)\n\n\n    return props.invisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div className='liststatus'>\n                    <div\n                        className='blocList'\n                        style={{width: props.width ? props.width : '250px'}}\n                    >\n                        {props.status_group.map(group => (\n                            <ChooseStatusesGruoup\n                                key={group.id}\n                                label={group.name}\n                                group={group.type_group}\n                                func={value => props.func(value)}\n                                current_list={props.current_list}\n                            />\n                        ))}\n                    </div>\n                    <div className='btmsts'>\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Выбрать все'\n                            onClick={() => props.func(allStatuses)}\n                            disabled={props.current_list.length === allStatuses.length}\n                        />\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Отменить все'\n                            onClick={() => props.func_clear()}\n                        />\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5),\n    statuses: state.data.status.filter(status => status.group < 8)\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState, useRef} from 'react'\n\nimport Checkbox from './Checkbox'\nimport Icon from './Icon'\nimport {icon_down, icon_left} from '../../data/icons'\n\nconst ChooseOfListMany = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const mainCheckbox = useRef()\n\n    useEffect(() => {\n        if(mainCheckbox.current) {\n            const values = props.list.filter(el => props.checked_list.includes(el.id))\n            if (values.length === props.list.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = true\n            } else if (!values.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = false\n            } else {\n                mainCheckbox.current.indeterminate = true\n            }\n        }\n    }, [props.checked_list, listVisible])\n\n\n    const showWord = (len) => {\n        switch (len) {\n\n            case 0: {\n                return 'Ничего не выбрано'\n            }\n\n            case props.list.length: {\n                return 'Все'\n            }\n\n            default:\n                return `Выбрано ${len}`\n        }\n    }\n\n\n    return (\n        <div\n            style={{width: props.width ? props.width : '250px'}}\n            id={`chooseOfList${props.id}`}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div>{showWord(props.checked_list.length)}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='#282e33'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n\n                    <div className='checkbox'>\n                        <input\n                            ref={mainCheckbox}\n                            type='checkbox'\n                            onChange={() => props.func(props.list.map(el => el.id))}\n                            disabled={props.disabled}\n                        />\n                        <label>{props.mainLable}</label>\n                    </div>\n\n                    {props.list.map(element => {\n                        return (\n                            <div\n                                key={element.id}\n                                className='options'\n                            >\n                                <Checkbox\n                                    className='ml10'\n                                    label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                                    onChange={() => props.func([element.id])}\n                                    checked={props.checked_list.includes(element.id)}\n                                    disabled={props.disabled}\n                                />\n\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, {useEffect, useState} from 'react'\nimport {icon_cancel, icon_down, icon_left} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * id='id' // id компонента\n *\n * className='className' // className оболочки компанента\n *\n * width='250px' // ширина компонента\n *\n * title='title' // Подпись сверху\n *\n * list={props.list} // Список элементов\n *\n * current_element={props.current_element} // выбраный элемент\n *\n * setElement={() => console.log('setElement')} // функция выбора элемента\n *\n * filter={props.filter} // фильр поиска элемента\n *\n * changeFilter={() => console.log('changeFilter')} // функция изменения фильтра\n *\n * placeholder='Введите текст'\n *\n * disabled={} // заблокировать\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseWithSearch = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n\n    const clickHandel = event => {\n        if (!event.path.map(el => el.id).includes(`ChooseWithSearch${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    return (\n        <div\n            id={`ChooseWithSearch${props.id}`}\n            style={{width: props.width ? props.width : '250px'}}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <button\n                className={props.disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setListVisible(true)}\n                disabled={props.disabled || Object.values(props.current_element).length}\n            >\n                <input\n                    className={props.disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeFilter(event.target.value)}\n                    placeholder={props.placeholder}\n                    value={Object.values(props.current_element).length ? props.current_element : props.filter}\n                    disabled={props.disabled || Object.values(props.current_element).length}\n                />\n                {Object.values(props.current_element).length ?\n                    <div\n                        className='al-itm-ct'\n                        onClick={() => props.setElement({})}\n                    >\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n                    {props.list.map((element, idx) => {\n                        return (\n                            <div\n                                key={idx}\n                                className='options'\n                                onClick={() => {\n                                    props.setElement(element)\n                                    setListVisible(false)\n                                }}\n                            >\n                                {element.title || element.name}\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseWithSearch\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentType, changeBookState} from '../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nconst SetGroup = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const seted = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_kindof_good_id: null,\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_type: {},\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setType = (equipment) => {\n        props.changeFilterState({temp_kindof_good_id: equipment.id})\n        props.changeBookState({equipment_type: equipment})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Тип устройства</div>\n            <button\n                id='optionsFilterTextOfGroup'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={seted}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={seted ? props.book.equipment_type.title : props.book.filter_type}\n                    disabled={seted}\n                />\n                {seted ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfGroup'>\n                    {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className='rowGropList'\n                                onClick={() => setType(equipment)}\n                            >\n                                {equipment.title}\n                            </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentType,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetGroup)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentBrand, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetBrand = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.filter_brand, props.book.equipment_type])\n\n    const settled = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfBrand') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setBrand = (brand) => {\n        props.changeFilterState({temp_brand: brand.id})\n        props.changeBookState({equipment_brand: brand})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Бренд</div>\n            <button\n                id='optionsFilterTextOfBrand'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder='Выбирете бренд'\n                    value={settled ? props.book.equipment_brand.title : props.book.filter_brand}\n                    disabled={settled  || !settledType}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfBrand'>\n                    {props.book.equipment_brands.map(brand => (\n                        <div\n                            key={brand.id}\n                            className='rowGropList'\n                            onClick={() => setBrand(brand)}\n                        >\n                            {brand.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentBrand,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetBrand)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentSubtype, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetSubtype = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.filter_subtype, props.book.equipment_brand])\n\n    const settled = !!Object.values(props.book.equipment_subtype).length\n    const settledBrand = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfSubtype') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({temp_subtype: null})\n        props.changeBookState({\n            filter_subtype: '',\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setSubtype = (subtype) => {\n        props.changeFilterState({temp_subtype: subtype.id})\n        props.changeBookState({equipment_subtype: subtype})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Модуль/Серия</div>\n            <button\n                id='optionsFilterTextOfSubtype'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType || !settledBrand}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder='Выбирете Модуль/Серию'\n                    value={settled ? props.book.equipment_subtype.title : props.book.filter_subtype}\n                    disabled={settled  || !settledType || !settledBrand}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfSubtype'>\n                    {props.book.equipment_subtypes.map(subtype => (\n                        <div\n                            key={subtype.id}\n                            className='rowGropList'\n                            onClick={() => setSubtype(subtype)}\n                        >\n                            {subtype.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentSubtype,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetSubtype)","import React, {useEffect, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../../Redux/actions'\nimport {changeFilterState, deleteFilter, resetTempFilter, selectedFilter} from '../../../Redux/actions/filterAction'\nimport {addClients, changeClientState} from '../../../Redux/actions/clientAction'\nimport {icon_cross, icon_trush} from '../../../data/icons'\n\n\nimport FilterEditor from '../FilterEditor'\nimport Button from '../../general/Button'\nimport ChooseStatuses from '../../Settings/SettingPages/Notification/ChooseStatuses'\nimport ChooseOfListMany from '../../general/ChooseOfListMany'\nimport ChooseWithSearch from '../../general/ChooseWithSearch'\nimport ChooseDate from '../../general/calandar/ChooseDate'\nimport SetGroup from './SetGroup'\nimport SetBrand from './SetBrand'\nimport SetSubtype from './SetSubtype'\n\nconst SetFilter = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name])\n\n    const handleSet = () => {\n        const data = {\n            page: 0,\n            engineer_id: props.filter.temp_engineers.length ? props.filter.temp_engineers : null,\n            overdue: null,\n            status_id: props.filter.temp_statuses.length ? props.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: props.filter.temp_order_types.length ? props.filter.temp_order_types : null,\n            manager_id: props.filter.temp_managers.length ? props.filter.temp_managers : null,\n            created_at: props.filter.temp_created_at.length && props.filter.temp_created_at.every(el => el === 0) ? null : props.filter.temp_created_at ,\n            kindof_good: props.filter.temp_kindof_good_id,\n            brand: props.filter.temp_brand,\n            subtype: props.filter.temp_subtype,\n            client_id: Object.values(props.filter.temp_client).length ? [props.filter.temp_client.id] : null,\n            active_badge: 0,\n            active_filter: 0\n        }\n        props.changeFilterState(data)\n    }\n\n\n    return (\n        <div className=\"setCustomFilter\">\n            <div className=\"row jc-c\">\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseStatuses\n                        className='h52'\n                        width='100%'\n                        func={value => props.selectedFilter(value, 'temp_statuses')}\n                        func_clear={() => props.changeFilterState({temp_statuses: []})}\n                        current_list={props.filter.temp_statuses}\n                    />\n                    <SetGroup/>\n                    <ChooseWithSearch\n                        id='filterClient'\n                        className='mt15 h52'\n                        width='100%'\n                        title='Клиент'\n                        list={props.client.clients}\n                        current_element={Object.values(props.temp_client).length ? props.temp_client.name : ''}\n                        setElement={client => props.changeFilterState({temp_client: client})}\n                        filter={props.client.filter_name}\n                        changeFilter={filter => props.changeClientState({filter_name: filter})}\n                        placeholder='Введите имя'\n                        disabled={false}\n                    />\n                </div>\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseOfListMany\n                        id='idTypeOrders'\n                        className='h52'\n                        width='100%'\n                        title='Тип заказа'\n                        mainLable='Все'\n                        list={props.order_type}\n                        checked_list={props.filter.temp_order_types}\n                        func={value => props.selectedFilter(value, 'temp_order_types')}\n                    />\n                    <SetBrand/>\n                    <ChooseOfListMany\n                        id='idManagerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Менеджер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_managers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_managers}\n                        func={value => props.selectedFilter(value, 'temp_managers')}\n                    />\n                </div>\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseDate\n                        className='h52'\n                        title='Дата'\n                        width='100%'\n                        range={true}\n                        allDate={true}\n                        func={date => props.changeFilterState({temp_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.filter.temp_created_at}\n                    />\n                    <SetSubtype/>\n                    <ChooseOfListMany\n                        id='idEngineerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Инженер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_engineers}\n                        func={value => props.selectedFilter(value, 'temp_engineers')}\n                        disabled={!props.user.role.orders_visibility}\n                    />\n                </div>\n            </div>\n            <div className=\"buttons fs14 mt15\">\n                <Button\n                    className='blueButton'\n                    title='Применить'\n                    onClick={handleSet}\n                />\n                {props.filter.active_filter ?\n                    <Button\n                        className='whiteButton bcr'\n                        icon={icon_trush}\n                        iconClassName='icon-s1 pd1'\n                        iconColor='white'\n                        onClick={() => props.deleteFilter()}\n                    />\n                    :\n                    <Button\n                        className='whiteButton'\n                        title='Создать фильтр'\n                        onClick={() => props.changeVisibleState({statusCreateNewFilter: true})}\n                    />\n                }\n                <Button\n                    className='whiteButton'\n                    title='Сбросить параметы'\n                    onClick={() => props.resetTempFilter()}\n                    icon={icon_cross}\n                    iconClassName='icon-sm8'\n                    iconColor='#282e33'\n                />\n            </div>\n            {props.statusCreateNewFilter ? <FilterEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    statusCreateNewFilter: state.view.statusCreateNewFilter,\n    filter: state.filter,\n    order_type: state.data.order_type,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    client: state.client,\n    user: state.data.user,\n    temp_client: state.filter.temp_client\n})\n\nconst mapDispatchToProps = {\n    addClients,\n    resetTempFilter,\n    deleteFilter,\n    selectedFilter,\n    changeFilterState,\n    changeVisibleState,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport Checkbox from '../general/Checkbox'\nimport {changeOrderField} from '../../Redux/actions/orderActions'\n\n\nconst TableOrderFields = props => {\n\n    const [listVisible, setListVisible] = useState(true)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('tableOrderFields')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        setListVisible(false)\n    }, [])\n\n\n    return (\n        <div\n            id='tableOrderFields'\n            className={'tableFields otf_pos '}\n        >\n            <div\n                className='chooseFieldButton pd2'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='cl11'>\n                    <Icon icon={props.icon || icon_table} className='icon-table'/>\n                </div>\n                <div className='cl12'>\n                    <Icon icon={icon_down} className='icon-table'/>\n                    {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n                </div>\n            </div>\n\n            {listVisible ?\n                <div className='listOptionField'>\n                    <div style={{overflow: 'auto'}}>\n                        {props.order.tableFields.map(field => {\n                            return (\n                                <div\n                                    key={field.id}\n                                    className='options'\n                                >\n                                    <Checkbox\n                                        className='ml10'\n                                        label={field.title}\n                                        onChange={event => props.changeOrderField(field.id, 'visible', event.target.checked)}\n                                        checked={field.visible}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrderFields)\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport { setVisibleFlag} from '../../Redux/actions'\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {changeOrderState} from '../../Redux/actions/orderActions'\nimport {icon_filter} from '../../data/icons'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport Button from '../general/Button'\nimport TableOrderFields from './TableOrderFields'\n\nconst CustomPanel = (props) => {\n\n    const newOrder = () => {\n        // Посчитаем ориентировочную дату готовности\n        const days_to_add = 4   // Количество дней, которое прибавляем\n        let estimated_done_at = new Date()\n        for (let i = 0; i < days_to_add; ) {\n            let week_day = estimated_done_at.getDay() || 7 // вычеслим текущий день недели\n            estimated_done_at.setDate(estimated_done_at.getDate() + 1) // прибавим день\n            if (props.schedule.find(day => day.week_day === week_day).work_day) i++ // Если день рабочий, довим шаг цикла\n        }\n\n        props.changeOrderState({manager_id: props.user.id, estimated_done_at: parseInt(estimated_done_at / 1000)})\n        props.setVisibleFlag('statusOrderEditor', true)\n    }\n\n    const handleEditFilter = () => {\n        props.setVisibleFlag('statusSetCustomFilter', 'change')\n        props.changeFilterState({active_badge: 0,  active_filter: 0})\n    }\n\n    return (\n        <div className='mainCustomPanel '>\n            <div className='customPanel'>\n                <div className='row al-itm-fe'>\n                    <Button\n                        id='addOrder'\n                        className='greenButton'\n                        title='+ Заказ'\n                        onClick={newOrder}\n                        invisible={!props.permissions.includes('create_orders')}\n                    />\n                    <div className='customFilters'>\n                        <Button\n                            className='customFilter'\n                            title='Фильтр'\n                            onClick={handleEditFilter}\n                            invisible={false}\n                            icon={icon_filter}\n                            iconClassName='icon-s2'\n                            iconColor='282e33'\n                        />\n                        {props.customFilters.map(filter => {\n                            return (\n                                <CustomFilter data={filter} key={filter.id}/>\n                            )\n                        })}\n                    </div>\n                </div>\n                <TableOrderFields/>\n            </div>\n\n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customFilters: state.filter.customFilters,\n    statusSetCustomFilter: state.view.statusSetCustomFilter,\n    permissions: state.data.user.role.permissions,\n    statusOrderEditor: state.view.statusOrderEditor,\n    user: state.data.user,\n    edit: state.order.edit,\n    schedule: state.branch.current_branch.schedule\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useEffect} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport {addStatusGroupAction, addAdCampaign, addEquipment} from '../../Redux/actions'\nimport {addBadges, changeFilterForm, changeFilterState, addCustomFilters} from '../../Redux/actions/filterAction'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\n\nimport CustomPanel from './CustomPanel'\n\n\nfunction Orders(props) {\n\n    useEffect(() => {\n        if (Object.values(props.current_branch).length) props.addOrders()\n    }, [\n        props.filter.sort,\n        props.filter.field_sort,\n        props.filter.page,\n        props.filter.engineer_id,\n        props.filter.overdue,\n        props.filter.status_id,\n        props.filter.status_overdue,\n        props.filter.urgent,\n        props.filter.order_type_id,\n        props.filter.manager_id,\n        props.filter.created_at,\n        props.filter.kindof_good,\n        props.filter.brand,\n        props.filter.subtype,\n        props.filter.client_id,\n        props.filter.search,\n        props.current_branch\n    ])\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n\n\n    const pageChangeHandler = page => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changeFilterState({page: curent_page})\n        // props.changeFilterForm(curent_page, 'page')\n    }\n\n\n    useEffect(() => {\n        props.addBadges()\n    }, [])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    count: state.order.count,\n    ordersShow: state.order.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader,\n    current_branch: state.branch.current_branch\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment,\n    addBadges,\n    changeFilterState,\n    changeFilterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeCashboxState( data ) {\n    return {\n        type: 'CHANGE_CASHBOX_STATE',\n        data\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.cashbox.showDeleted,\n        branch_id: Object.values(state.branch.current_branch).length ? state.branch.current_branch.id : null\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.data, current_cashbox: data.data.length ? data.data[0] : {}},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.branch.current_branch.id,\n        filter: {\n            deleted: state.cashbox.showDeleted,\n            branch_id: Object.values(state.branch.current_branch).length ? state.branch.current_branch.id : null\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n    }\n}\n\n\n\nexport function saveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.branch.current_branch.id,\n        filter: {\n            deleted: state.cashbox.showDeleted,\n            branch_id: Object.values(state.branch.current_branch).length ? state.branch.current_branch.id : null\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag,\n        filter: {\n            deleted: state.cashbox.showDeleted,\n            branch_id: Object.values(state.branch.current_branch).length ? state.branch.current_branch.id : null\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {icone_sphere, icone_setting} from '../../../data/icons'\nimport {changeVisibleState} from '../../../Redux/actions'\nimport {changeCashboxState, editCashbox} from '../../../Redux/actions/cashboxAction'\n\nimport {changePaymentState} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\nconst Cashbox = (props) => {\n\n    const activ = (id) => {\n        return id === props.activ_cashbox_id\n    }\n\n    const edit = props.user.role.permissions.includes('edit_cash')\n\n    const income = props.user.role.permissions.includes('make_income') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('incoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n    const outcome = props.user.role.permissions.includes('make_expenditure') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n    const move = props.user.role.permissions.includes('move_money') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming_move') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n    const showBalance = props.user.role.permissions.includes('see_remains') &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('show_cashbox_remains') :\n            props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n    const handleEdit = () => {\n        props.editCashbox(props.cashbox)\n        props.changeVisibleState({'statusCashboxEditor': true})\n    }\n\n    const hanldleIncome = () => {\n        props.changePaymentState({\n            'direction': 2,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleOutcome = () => {\n        props.changePaymentState({\n            'direction': 1,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleMove = () => {\n        props.changePaymentState({\n            'direction': 0,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    return (\n        <div\n            className={`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted ? 'bcg' : 'cgr'}`}\n            onClick={() => props.changeCashboxState({current_cashbox: props.cashbox})}\n        >\n            <div className='icons'>\n                <div><Icon className='smalIcon' icon={icone_sphere}\n                           color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n                <div\n                    onClick={edit ? handleEdit : null}\n                >\n                    <Icon className='smalIcon curP' icon={icone_setting}\n                          color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n                </div>\n            </div>\n            <div>{props.cashbox.title.toUpperCase()}</div>\n            {showBalance ?\n                <div className='cacsboxBalance'>\n                    {`${props.cashbox.balance ? parseFloat(props.cashbox.balance).toFixed(2) : 0} руб.`}\n                </div>\n                : null}\n            <div className='row jc-c'>\n                <Button\n                    title='+ Приход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n                    onClick={hanldleIncome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!income}\n                />\n                <Button\n                    id='344'\n                    title='- Расход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n                    onClick={hanldleOutcome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!outcome}\n                />\n            </div>\n            <Button\n                title='Перемещение'\n                className='whiteButton'\n                onClick={hanldleMove}\n                disabled={props.cashbox.deleted}\n                invisible={!move}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user,\n    activ_cashbox_id: state.cashbox.current_cashbox.id,\n})\n\nconst mapDispatchToProps = {\n    editCashbox,\n    changeCashboxState,\n    changePaymentState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {changeCashboxPermissions} from '../../../Redux/actions/cashboxAction'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editEmployee} from '../../../Redux/actions/employeeAction'\n\nimport {changeCashboxPermissions, changeCashboxState} from '../../../Redux/actions/cashboxAction'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxState({permissions_employee: employee.id})\n      props.editEmployee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxState({permissions_employee: employee_id})\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmployee,\n   changeCashboxState,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeCashboxState, chooseCashboxSelected} from '../../../Redux/actions/cashboxAction'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\nimport LableInput from '../../general/LableInput'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={event => props.changeCashboxState({title: event.target.value})}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxState({isGlobal: true})}\n            func2 = {() => props.changeCashboxState({isGlobal: false})}\n            checked = { props.cashbox.isGlobal }\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxState({isVirtual: event.target.checked})}\n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxState({type: 0})}\n            func2={() => props.changeCashboxState({type: 1})}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxState,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { setVisibleFlag} from '../../../Redux/actions'\nimport {changeCashboxState, createCashbox, deleteCashbox, saveEditCashbox} from '../../../Redux/actions/cashboxAction'\nimport {permission_cahsbox} from \"../../../data/permissions\"\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n            props.setVisibleFlag('statusCashboxEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.cashbox.edit) {\n            let list_per = {}\n            props.employees.filter(employee => !employee.deleted).forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_cashbox = true\n                list_per[employee.id].permissions = permission_cahsbox\n            })\n            props.changeCashboxState({employees: list_per})\n        }\n    }, [])\n\n    const hangleCreate = () => {\n        if (props.cashbox.title) {\n            props.createCashbox()\n        } else {\n            if (!props.cashbox.title) {\n                props.setVisibleFlag('inputCashboxTitleChecked', false)\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (props.cashbox.title) {\n            props.saveEditCashbox()\n        } else {\n            if (!props.cashbox.title) {\n                props.setVisibleFlag('inputCashboxTitleChecked', false)\n            }\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n                </div>\n\n                <Tabs\n                    list={['Общие', 'Доcтуп']}\n                    func={idx => props.changeCashboxState({tabs_editor: idx})}\n                    tab={props.cashbox.tabs_editor}\n                    tab_field=\"tabs_editor\"\n                />\n\n                {props.cashbox.tabs_editor === 0 ? <DataCashbox/> : null}\n                {props.cashbox.tabs_editor === 1 ? <CashboxAccess/> : null}\n\n                <BottomButtons\n                    edit={props.cashbox.edit}\n                    create={hangleCreate}\n                    save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n                    deleted={props.cashbox.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    cashbox: state.cashbox,\n    employees: state.employee.employees,\n    view: state.view,\n    permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n    changeCashboxState,\n    setVisibleFlag,\n    createCashbox,\n    saveEditCashbox,\n    deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, setPayment} from '../../Redux/actions'\nimport {icon_file_text, icon_warning} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport {showDate} from '../general/utils'\n\nconst TablePayments = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payments.filter(payment => !payment.deleted).forEach(payment => {\n            income_sum += payment.income\n            outcome_sum += payment.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payments])\n\n    const showBalance = () => {\n        let cashboxAvailable = false\n        if (Object.values(props.current_cashbox).length) {\n            cashboxAvailable = (props.current_cashbox.employees[props.user.id].like_cashbox ?\n                props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n        }\n        return cashboxAvailable && props.user.role.permissions.includes('see_remains')\n    }\n\n    const payments = props.payments.filter(payment => props.showDeleted || !payment.deleted)\n        .filter(payment => props.permissions.includes('see_payment_profit') || payment.cashflow_category !== 'Прибыль')\n\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr className=''>\n                <th className='w150'>Создан</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                {showBalance() ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n            </thead>\n            <tbody>\n            {payments.map(payment => (\n                <tr\n                    key={payment.id}\n                    className={payment.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => {\n                        props.setPayment(payment)\n                        props.setVisibleFlag('statusPaymentsCard', true)\n                    }}\n                >\n                    <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                            <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                            {payment.created_at !== payment.custom_created_at ?\n                                <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}`}>\n                                    <Icon\n                                        className='icon-s2 ml5'\n                                        icon={icon_warning}\n                                        color='red'\n                                    />\n                                </div> : null}\n                        </div>\n                    </td>\n                    <td>\n                        <div>{payment.description}{payment.client.name ?` (Клиент: ${payment.client.name})` : null }</div>\n                        {payment.direction ?\n                            <div className='row'>\n                                <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                                <div className='tac ml5 cgr'>{payment.cashflow_category}</div>\n                            </div> : null}\n                    </td>\n                    <td className={payment.income ? 'greenFont tac' : 'tac'}>{payment.income}</td>\n                    <td className={payment.outcome ? 'redFont tac' : 'tac'}>{payment.outcome}</td>\n                    {showBalance() ?\n                        <td className='tac'>\n                            {payment.deposit ? parseFloat(payment.deposit).toFixed(2) : 0}\n                        </td>\n                        : null}\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payments.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    payments: state.payment.payments,\n    employees: state.employee.employees,\n    user: state.data.user,\n    current_cashbox: state.cashbox.current_cashbox,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    setPayment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addPayments, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {icon_stats_docs} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\nimport ChooseDate from '../general/calandar/ChooseDate'\nimport Button from '../general/Button'\n\n\nconst ManeyMovement = (props) => {\n\n    useEffect(() => {\n        if (props.current_cashbox) {\n            props.addPayments()\n        }\n    }, [props.current_cashbox])\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    return (\n        <div className='ml30 w100'>\n\n            <div className='row'>\n                <Icon icon={icon_stats_docs}/>\n                <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n            </div>\n            <div className='row'>\n                <ChooseDate\n                    className='h27'\n                    width='250px'\n                    range={true}\n                    func={date => props.changePaymentState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                    current_date={props.filter_created_at}\n                    ivisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Button\n                    title='Применить'\n                    className='blueButton'\n                    onClick={() => props.addPayments()}\n                    invisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Checkbox\n                    label='Показать удаленные'\n                    onChange={event => setShowDeleted(event.target.checked)}\n                    value={showDeleted}\n                    invisible={!props.permissions.includes('see_delete_payments')}\n                />\n            </div>\n\n            <TablePayments showDeleted={showDeleted}/>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    current_cashbox: state.cashbox.current_cashbox,\n    filter_created_at: state.payment.filter_created_at,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {changeVisibleState} from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport {addCashboxes, changeCashboxState} from '../../../Redux/actions/cashboxAction'\n\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n    useEffect(() => {\n        if (Object.values(props.current_branch).length)  props.addCashboxes()\n    }, [props.cashbox.showDeleted, props.current_branch])\n\n    // const cashboxes = props.cashbox.cashboxes.filter(cashbox =>\n    //    (!cashbox.deleted || showDeleted) &&\n    //    cashbox.employees[props.user.id].available &&\n    //    (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n    //    )\n\n    return (\n        <div className='contentTab'>\n\n            <div className='row al-itm-bl'>\n                <div className='cashboxes'>\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => props.changeCashboxState({showDeleted: event.target.checked})}\n                        checked={props.cashbox.showDeleted}\n                    />\n                    {props.cashbox.cashboxes.map(cashbox => {\n                        return (\n                            <Cashbox\n                                key={cashbox.id}\n                                cashbox={cashbox}\n                                active={cashbox.active}\n                            />\n                        )\n                    })}\n\n                    {props.user.role.permissions.includes('edit_cash') ?\n                        <div\n                            className='whiteButton'\n                            onClick={() => props.changeVisibleState({statusCashboxEditor: true})}\n                        >\n                            + Добавить кассу\n                        </div> : null}\n\n                </div>\n                {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null}\n\n            </div>\n            {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n            {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n            {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    cashbox: state.cashbox,\n    user: state.data.user,\n    current_branch: state.branch.current_branch,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addCashboxes,\n    changeCashboxState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\nimport {currentMonth} from '../../components/general/utils'\n\n\nexport function changePayrollState(data) {\n    return {\n        type: 'CHANGE_PAYROLL_STATE',\n        data\n    }\n}\n\nexport function editPayroll(payroll) {\n    return {\n        type: 'EDIT_PAYROLL',\n        payroll\n    }\n}\n\nexport function resetPayroll() {\n    return {\n        type: 'RESET_PAYROLL'\n    }\n}\n\n\nexport function selectedPayroll(value, field) {\n    return {\n        type: 'SELECTED_PAYROLL',\n        field,\n        value\n    }\n}\n\nfunction getFilter() {\n    const state = store.getState()\n    return {\n        custom_created_at: state.payroll.filter_created_at,\n        employee_id: state.payroll.setted_employee,\n        deleted: state.payroll.showDeleted\n    }\n}\n\nexport function addPayrolls() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(getFilter())\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payrolls', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос начислений не выполнен'))\n    }\n}\n\nexport function addMonthBalance() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: currentMonth(),\n        employee_id: state.payroll.setted_employee\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payroll_sum', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {month_balance: data.sum},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос баланса не выполнен'))\n    }\n}\n\nexport function createPayroll() {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n\n    const request_config = getRequestConfig({\n        description: state.payroll.description,\n        income: state.payroll.income,\n        outcome: -state.payroll.outcome,\n        direction: state.payroll.direction,\n        deleted: state.payroll.deleted,\n        reimburse: state.payroll.reimburse,\n        created_at: now,\n        custom_created_at: state.payroll.custom_created_at || now,\n        relation_type: state.payroll.relation_type,\n        relation_id: state.payroll.relation_id,\n        employee_id: state.payroll.employee_id,\n        order_id: state.payroll.order_id,\n        payment: state.payroll.relation_type === 12 ? {\n            cashbox_id: state.payroll.payment_cashbox_id,\n            cashflow_category: state.payroll.payment_cashflow_category\n        } : null,\n        filter: getFilter()\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payroll', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.payrolls}\n                    })\n                    dispatch({\n                        type: 'RESET_PAYROLL',\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPayrollEditor: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    }\n}\n\nexport function deletePayroll(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.payroll.edit,\n        deleted: flag,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        fetch(state.data.url_server + '/payroll', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.payrolls}\n                    })\n                    dispatch({\n                        type: 'RESET_PAYROLL',\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPayrollEditor: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановления начисления не выполнен'))\n\n    }\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {editPayroll} from '../../../Redux/actions/payrollActions'\n\nimport {showDate} from '../../general/utils'\nimport Icon from '../../general/Icon'\nimport {icon_warning} from '../../../data/icons'\n\nconst TablePayrolls = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат', 'Выплата']\n\n    const editPayroll = (payroll) => {\n        props.editPayroll(payroll)\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n            income_sum += payroll.income\n            outcome_sum += payroll.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payrolls])\n\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w135'>Дата</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                <th className='w91'>Баланс, руб.</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.payrolls.map(payroll => (\n                <tr\n                    key={payroll.id}\n                    className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => editPayroll(payroll)}\n                >\n                    <td className='pd-lr-5'>\n                        <div>\n                            <div className='row'>\n                                <div>{type_payrolls[payroll.relation_type]}</div>\n                                {payroll.created_at !== payroll.custom_created_at ?\n                                    <div title={`Добавлено задним числом\\n${showDate(payroll.created_at)}`}>\n                                        <Icon\n                                            className='icon-s2 ml5'\n                                            icon={icon_warning}\n                                            color='red'\n                                        />\n                                    </div> : null}\n                            </div>\n                            <div className='cgr'>{showDate(payroll.custom_created_at)}</div>\n                        </div>\n                    </td>\n                    <td className='pd-lr-5'>{payroll.description}</td>\n                    <td className={payroll.income ? 'greenFont tac' : 'tac'}>{payroll.income}</td>\n                    <td className={payroll.outcome ? 'redFont tac' : 'tac'}>{payroll.outcome}</td>\n                    <td className='tac'>{payroll.deposit ? payroll.deposit.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {props.payrolls.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n        </table>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    payrolls: state.payroll.payrolls\n})\n\nconst mapDispatchToProps = {\n    editPayroll,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\nconst PayrollForm = (props) => {\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const cashboxes = props.cashboxes.filter(cashbox => cashbox.type === props.payroll.payment_cashbox_type)\n\n    return (\n        <div className=''>\n            <div className='row al-itm-fe'>\n                <ChooseBotton\n                    className='mt15 mr-rg-20'\n                    title='Дата и время'\n                    name={['Текущее', 'Заданное']}\n                    func1={() => {\n                        setChooseData(false)\n                        props.changePayrollState({custom_created_at: null})\n                    }}\n                    func2={() => {\n                        setChooseData(true)\n                        props.changePayrollState({custom_created_at: parseInt(new Date() / 1000)})\n                    }}\n                    checked={true}\n                    // disabled={!props.permissions.includes('backdating')}\n                />\n                <ChooseDate\n                    className='h31'\n                    width='250px'\n                    func={date => props.changePayrollState({custom_created_at: parseInt(date / 1000)})}\n                    current_date={props.payroll.custom_created_at * 1000}\n                    invisible={!chooseData}\n                />\n            </div>\n            <LableInput\n                className='mt15'\n                width='70px'\n                title='Сумма'\n                onChange={event => props.changePayrollState({[props.payroll.direction === 2 ? 'income' : 'outcome']: parseFloat(event.target.value.replace(/[^0-9.]/g, ''))})}\n                value={props.payroll.outcome ? props.payroll.outcome : props.payroll.income}\n                unit='руб.'\n                checkedFlag='inputPayrollSumChecked'\n                checked={props.view.inputPayrollSumChecked}\n                disabled={props.payroll.deleted}\n                redStar={true}\n            />\n            <ChooseOfList\n                id='employeePayroll'\n                title='Сотрудник'\n                className='mt15'\n                list={props.employees}\n                setElement={id => props.changePayrollState({employee_id: id})}\n                current_id={props.payroll.employee_id}\n                width={'250px'}\n                employee={true}\n                checkedFlag='inputPayrollEmployeeChecked'\n                checked={props.view.inputPayrollEmployeeChecked}\n                disabled={props.payroll.deleted}\n            />\n            <LableArea\n                className='mt15'\n                title='Коментарий'\n                onChange={event => props.changePayrollState({description: event.target.value})}\n                value={props.payroll.description}\n                checkedFlag='inputPayrollDescChecked'\n                checked={props.view.inputPayrollDescChecked}\n                redStar={true}\n                disabled={props.payroll.deleted}\n            />\n            {props.payroll.relation_type === 12 ?\n                <div>\n                    <div className='orderFormTitle mt15'>Данные платежа</div>\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {props.changePayrollState({payment_cashbox_type: 0})}}\n                            func2={() => {props.changePayrollState({payment_cashbox_type: 1})}}\n                            checked={!props.payroll.payment_cashbox_type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox_id => props.changePayrollState({payment_cashbox_id : cashbox_id})}\n                            current_id={props.payroll.payment_cashbox_id }\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payroll.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === 1)}\n                        setElement={category => props.changePayrollState({payment_cashflow_category: category})}\n                        current_id={props.payroll.payment_cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payroll.deleted}\n                    />\n                </div>\n                : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    cashboxes: state.cashbox.cashboxes,\n    item_payments: state.data.item_payments\n})\n\nconst mapDispatchToProps = {\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.employee.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {resetPayroll, changePayrollState, createPayroll, deletePayroll} from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\nconst PaypolleEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPayrollEditor', false)\n        props.setVisibleFlag('inputPayrollDescChecked', true)\n        props.setVisibleFlag('inputPayrollEmployeeChecked', true)\n        props.setVisibleFlag('inputPaymentCashboxChecked', true)\n        props.setVisibleFlag('inputPaymentCashflowChecked', true)\n        props.resetPayroll()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    const hangleCreate = () => {\n        if (\n            (props.payroll.income || props.payroll.outcome) &&\n            props.payroll.employee_id &&\n            props.payroll.description &&\n            (props.payroll.relation_type !== 12 || props.payroll.payment_cashbox_id) &&\n            (props.payroll.relation_type !== 12 || props.payroll.payment_cashflow_category)\n        ) {\n            props.createPayroll()\n        } else {\n            if (!(props.payroll.income || props.payroll.outcome)) {\n                props.setVisibleFlag('inputPayrollSumChecked', false)\n            }\n            if (!props.payroll.employee_id) {\n                props.setVisibleFlag('inputPayrollEmployeeChecked', false)\n            }\n            if (!props.payroll.description) {\n                props.setVisibleFlag('inputPayrollDescChecked', false)\n            }\n            if (!props.payroll.payment_cashbox_id) {\n                props.setVisibleFlag('inputPaymentCashboxChecked', false)\n            }\n            if (!props.payroll.payment_cashflow_category) {\n                props.setVisibleFlag('inputPaymentCashflowChecked', false)\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (\n            (props.payrolle.income || props.payrolle.outcome) &&\n            props.payroll.employee_id &&\n            props.payroll.description\n        ) {\n            // props.createPayment()\n        } else {\n            if (!(props.payrolle.income || props.payrolle.outcome)) {\n                props.setVisibleFlag('inputPayrollSumChecked', false)\n            }\n            if (!props.payroll.employee_id) {\n                props.setVisibleFlag('inputPayrollEmployeeChecked', false)\n            }\n            if (!props.payroll.description) {\n                props.setVisibleFlag('inputPayrollDescChecked', false)\n            }\n        }\n    }\n\n\n    const title = ['', 'Взыскание', 'Премия']\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.payroll.edit ? type_payrolls[props.payroll.relation_type] : (title[props.payroll.direction])}\n                </div>\n\n                <div className='contentEditor'>\n\n                    {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n                </div>\n\n                <BottomButtons\n                    edit={props.payroll.edit}\n                    create={hangleCreate}\n                    // save={ hangleSave }\n                    delete={props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null}\n                    recover={props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null}\n                    close={handleClose}\n                    deleted={props.payroll.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.employee.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    setVisibleFlag,\n    resetPayroll,\n    createPayroll,\n    deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {addPayrolls, addMonthBalance, changePayrollState} from '../../../Redux/actions/payrollActions'\nimport {addEmployees} from '../../../Redux/actions/employeeAction'\n\nimport {showName} from '../../general/utils'\n\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\n\n\nconst EmployeeSalary = (props) => {\n\n    useEffect(() => {\n        props.addMonthBalance()\n        props.addEmployees()\n    }, [props.payroll.setted_employee])\n\n    const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n    const handleIncome = () => {\n        props.changePayrollState({\n            direction: 2,\n            relation_type: 9,\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handleOutcome = () => {\n        props.changePayrollState({\n            direction: 1,   \n            relation_type: 10,\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handlePaySalary = () => {\n        props.changePayrollState({\n            direction: 1,\n            relation_type: 12,\n            description: 'Выплата заработной платы',\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const month_balance = props.payroll.month_balance\n\n    return (\n        <div className=''>\n            <div className='createNewTitle fsz20 mt0'>\n                {showName(current_employee)}\n            </div>\n            <div className='txtb'>\n                <span>Начисленно в текущем месяце: </span>\n                <span className={month_balance >= 0 ? 'greenFont ml5' : 'redFont ml5'}>\n                    {month_balance ? month_balance.toFixed(2) : 0}\n                </span> руб.\n            </div>\n            <div className='txtb'>\n                <span>Баланс:</span>\n                <span\n                    className={current_employee.balance >= 0 ? 'greenFont ml5' : 'redFont ml5'}>\n                    {current_employee.balance ? current_employee.balance.toFixed(2) : 0}</span> руб.\n            </div>\n            <Button\n                title='Выплатить'\n                className='greenButton bcr'\n                onClick={handlePaySalary}\n            />\n\n            <div className='row mt15 jc-sb'>\n                <div className='row'>\n                    <ChooseDate\n                        className='h27'\n                        width='250px'\n                        range={true}\n                        func={date => props.changePayrollState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.payroll.filter_created_at}\n                    />\n                    <Button\n                        className='blueButton'\n                        title='Применить'\n                        onClick={() => props.addPayrolls()}\n                    />\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => props.changePayrollState({showDeleted: event.target.checked})}\n                        value={props.payroll.showDeleted}\n                        invisible={!props.permissions.includes('see_seleted_payrolls')}\n                    />\n                </div>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Премия'\n                        onClick={handleIncome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                    <Button\n                        className='greenButton bcr m10'\n                        title='- Взыскание'\n                        onClick={handleOutcome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                </div>\n            </div>\n            {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n            <TablePayrolls/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    statusPayrollEditor: state.view.statusPayrollEditor\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    addPayrolls,\n    addMonthBalance,\n    addEmployees,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {showName} from '../../general/utils'\nimport {changePayrollState} from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n\n    const [total, setTotal] = useState(0)\n\n    useEffect(() => {\n        let sum = 0\n        props.employees.filter(employee => employee.id !== 1).forEach(employee => {\n            sum += employee.balance\n        })\n        sum = sum ? sum.toFixed(2) : 0\n        setTotal(sum)\n    }, [props.employees])\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>Сотрудник</th>\n                <th>Баланс</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.employees.map(employee => (\n                <tr\n                    key={employee.id}\n                    onClick={() => props.changePayrollState({setted_employee: employee.id})}\n                    style={employee.id === props.payroll.setted_employee ? {backgroundColor: '#cae1f5'} : null}\n                >\n                    <td>{showName(employee)}</td>\n                    <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td>Итог:</td>\n                <td>{total}</td>\n            </tr>\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees.filter(employee => !employee.deleted && employee.id !== 0),\n    payroll: state.payroll\n})\n\nconst mapDispatchToProps = {\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollState } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollState({setted_employee: props.user_id})\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollState\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeCashboxState} from '../../Redux/actions/cashboxAction'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\nimport Loader from '../Loader/Loader'\n\nconst Payments = (props) => {\n\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Финансы</span>\n            </div>\n\n            <Tabs\n                list={['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты']}\n                func={idx => props.changeCashboxState({tabs: idx})}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <Cashboxes/> : null}\n            {props.tabs === 1 ? null : null}\n            {props.tabs === 2 ? null : null}\n            {props.tabs === 3 ? <Salaries/> : null}\n\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.cashbox.tabs,\n    statusOrderLoader: state.view.statusOrderLoader\n\n})\n\nconst mapDispatchToProps = {\n    changeCashboxState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\n/**\n *\n *\n * className='' // класс оболочки\n *\n * title='Добавить изображение'\n *\n * url={image_url} // ссылка на загуженную картинку на сервер\n *\n * onChange={file => props.someFunction(file)} // функция обработки загруженного изображения\n *\n * value={props.part.img} // только что загруженное изображение (хранящееся в state)\n *\n * disabled={false}\n *\n *\n * @returns {JSX.Element}\n *\n */\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th key={header.id}>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td key={header.title + part.id}>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td key={header.title + part.id}>{part[header.field].title}</td>\n                            return <td key={header.title + part.id}>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row al-itm-ct'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            invisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            invisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row al-itm-ct'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                invisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                invisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            classNameMenu='listOption'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={idx => props.changeWarehouseForm(idx, 'tabs')}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { useTable } from 'react-table'\nimport {addClients} from '../../Redux/actions/clientAction'\nimport {showPhone} from '../general/utils'\n\nconst TableClients = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    const data = React.useMemo(\n        () => props.client.clients.map(client => ({\n            name: client.name,\n            phone: client.phone.length ? showPhone(client.phone[0].number) : '',\n            name_doc: client.name_doc,\n            email: client.email,\n            address: client.address,\n            notes: client.notes\n        })),\n        [props.client.clients]\n    )\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Имя',\n                accessor: 'name',\n            },\n            {\n                Header: 'Телефон',\n                accessor: 'phone',\n            },\n            {\n                Header: 'Обращение',\n                accessor: 'name_doc',\n            },\n            {\n                Header: 'Email',\n                accessor: 'email',\n            },\n            {\n                Header: 'Адресс',\n                accessor: 'address',\n            },\n            {\n                Header: 'Комментарий',\n                accessor: 'notes',\n            },\n        ],\n        []\n    )\n\n    const tableInstance = useTable({ columns, data })\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = tableInstance\n\n    return (\n        // apply the table props\n        <table {...getTableProps()}>\n            <thead>\n            {// Loop over the header rows\n                headerGroups.map(headerGroup => (\n                    // Apply the header row props\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {// Loop over the headers in each row\n                            headerGroup.headers.map(column => (\n                                // Apply the header cell props\n                                <th {...column.getHeaderProps()}>\n                                    {// Render the header\n                                        column.render('Header')}\n                                </th>\n                            ))}\n                    </tr>\n                ))}\n            </thead>\n            {/* Apply the table body props */}\n            <tbody {...getTableBodyProps()}>\n            {// Loop over the table rows\n                rows.map(row => {\n                    // Prepare the row for display\n                    prepareRow(row)\n                    return (\n                        // Apply the row props\n                        <tr {...row.getRowProps()}>\n                            {// Loop over the rows cells\n                                row.cells.map(cell => {\n                                    // Apply the cell props\n                                    return (\n                                        <td {...cell.getCellProps()}>\n                                            {// Render the cell contents\n                                                cell.render('Cell')}\n                                        </td>\n                                    )\n                                })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    addClients\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableClients)","import React from 'react'\nimport {connect} from 'react-redux'\nimport TableClients from './TableClients'\n\nconst Clients = (props) => {\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Клиенты</span>\n            </div>\n            <TableClients/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {changeDataState} from '../../Redux/actions/dataAction'\n\n\n\nfunction SettingRow(props) {\n\n    const history = useHistory()\n    if (history.location.pathname === props.row.url && history.location.pathname !== props.current_setting_menu_row)\n        props.changeDataState({current_setting_menu_row: props.row.url})\n\n    return (\n        <Link\n            className=\"settingRow\"\n            to={props.row.url}\n            style={{\n                backgroundColor: props.current_setting_menu_row === props.row.url ? '#939699' : '#53585c',\n                color: props.current_setting_menu_row === props.row.url ? '#fff' : null\n            }}\n            onClick={() => props.changeDataState({current_setting_menu_row: props.row.url})}\n        >\n            <span className=\"didebarItemsText\">{props.row.title}</span>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => ({\n    settingMenu: state.data.settingMenu,\n    current_setting_menu_row: state.data.current_setting_menu_row\n})\n\nconst mapDispatchToProps = {\n    changeDataState\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  invisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport {changeEmployeeState} from '../../../../Redux/actions/employeeAction'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeeState({first_name: event.target.value})}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeeState({last_name: event.target.value})}\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeeState({email: event.target.value})}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeeState({login: event.target.value})}\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? <div className=\"errorMassageInput\">Такой Login уже существует</div> : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeeState({password: event.target.value})}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeeState({phone: value})}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeeState({inn: event.target.value})}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeeState({doc_name: event.target.value})}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event => props.changeEmployeeState({notes: event.target.value})}\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeeState({post: event.target.value})}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        setElement={id => props.changeEmployeeState({role_id: id})}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeState\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {changeEmployeeState, createEmployee, deleteEmployee, saveEditEmployee} from '../../../../Redux/actions/employeeAction'\nimport {addPayrules} from '../../../../Redux/actions/payrulleAction'\n\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from '../../../general/Tabs'\n\n\nconst EmploeeyEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusEmployeeEditor: false,\n            inputEmployeeNameChecked: true,\n            inputEmployeeEmailChecked: true,\n            inputEmployeeLoginChecked: true,\n            inputEmployeePasswordChecked: true,\n            inputEmployeeRoleChecked: true\n        })\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addPayrules()\n    }, [])\n\n    const hangleCreate = () => {\n        if (\n            props.employee.first_name &&\n            props.employee.email &&\n            props.employee.login &&\n            props.employee.password &&\n            props.employee.role_id !== 0\n        ) {\n            props.createEmployee()\n        } else {\n            if (!props.employee.first_name) {\n                props.changeVisibleState({inputEmployeeNameChecked: false})\n            }\n            if (!props.employee.email) {\n                props.changeVisibleState({inputEmployeeEmailChecked: false})\n            }\n            if (!props.employee.login) {\n                props.changeVisibleState({inputEmployeeLoginChecked: false})\n            }\n            if (!props.employee.password) {\n                props.changeVisibleState({inputEmployeePasswordChecked: false})\n            }\n            if (props.employee.role_id === 0) {\n                props.changeVisibleState({inputEmployeeRoleChecked: false})\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (\n            props.employee.first_name &&\n            props.employee.email &&\n            props.employee.login\n        ) {\n            props.saveEditEmployee()\n        } else {\n            if (!props.employee.first_name) {\n                props.changeVisibleState({inputEmployeeNameChecked: false})\n            }\n            if (!props.employee.email) {\n                props.changeVisibleState({inputEmployeeEmailChecked: false})\n            }\n            if (!props.employee.login) {\n                props.changeVisibleState({inputEmployeeLoginChecked: false})\n            }\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.edit\n                        ? `${props.employee.last_name} ${props.employee.first_name}`\n                        : 'Новый сотрудник'}\n                </div>\n\n                <Tabs\n                    list={['Общие', 'Доступ']}\n                    func={idx => props.changeEmployeeState({tabs: idx})}\n                    tab={props.tabs}\n                />\n\n                {props.tabs === 0 ? <EditEmployeeGenerally/> : null}\n                {props.tabs === 1 ? <EditEmployeePermission/> : null}\n\n                <BottomButtons\n                    edit={props.edit}\n                    create={hangleCreate}\n                    save={hangleSave}\n                    delete={() => props.deleteEmployee(true)}\n                    recover={props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n                    close={handleClose}\n                    deleted={props.employee.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    tabs: state.employee.tabs,\n    edit: state.employee.edit,\n    employee: state.employee,\n    permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n    changeEmployeeState,\n    changeVisibleState,\n    createEmployee,\n    saveEditEmployee,\n    deleteEmployee,\n    addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\nimport {editEmployee} from '../../../../Redux/actions/employeeAction'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmployee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n    editEmployee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles} from '../../../../Redux/actions'\nimport {changeEmployeeState, resetEmployee} from '../../../../Redux/actions/employeeAction'\n\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmployee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => props.changeEmployeeState({showDeleted: event.target.checked})}\n                        checked={props.showDeleted}\n                        invisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeEmployeeState,\n    resetEmployee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeShedule} from '../../../../Redux/actions/branchAction'\n\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n    const weekdays = [\n        'Понедельник',\n        'Вторник',\n        'Среда',\n        'Четверг',\n        'Пятница',\n        'Суббота',\n        'Воскрсение',\n    ]\n\n    return (\n        <div className=\"schedule mr-rg-20\">\n            <div className=\"lableImput mt15\">График работы локации</div>\n            {props.branch.schedule.sort((a, b) => a.week_day - b.week_day).map((day, idx) => {\n                return (\n                    <div className=\"row mt15\" key={idx}>\n                        <Checkbox\n                            className=\"w150\"\n                            onChange={(event) =>\n                                props.changeShedule(idx, 'work_day', event.target.checked)\n                            }\n                            checked={day.work_day}\n                            label={weekdays[idx]}\n                            disabled={props.branch.deleted}\n                        />\n\n                        {props.branch.schedule[idx].work_day ? (\n                            <div className=\"row\">\n                                <input\n                                    className=\"w70\"\n                                    onChange={event => props.changeShedule(idx, 'start_time', event.target.value)}\n                                    value={day.start_time}\n                                    disabled={props.branch.deleted}\n                                />\n                                <div className=\"w30 tac\">&#8212;</div>\n                                <input\n                                    className=\"w70\"\n                                    onChange={event => props.changeShedule(idx, 'end_time', event.target.value)}\n                                    value={day.end_time}\n                                    disabled={props.branch.deleted}\n                                />\n                            </div>\n                        ) : null}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n    changeShedule\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeBranchState} from '../../../../Redux/actions/branchAction'\n\nimport Icon from '../../../general/Icon'\nimport {icon_location, icon_map_location, icon_wrench, icon_hammer, icon_radio, icon_git, icon_svg,} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchState({color})\n                        props.changeBranchState({icon})\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setBranchEmployee} from '../../../../Redux/actions/branchAction'\n\nimport Checkbox from '../../../general/Checkbox'\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeBranchState, createBranch, deleteBranch, resetBranch, saveBranch} from '../../../../Redux/actions/branchAction'\nimport {changeVisibleState} from '../../../../Redux/actions'\n\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusBranchEditor: false,\n            inputBranchNameChecked: true,\n            inputBranchPrefixChecked: true,\n            inputBranchPrefixDocChecked: true\n        })\n        props.resetBranch()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreateBranch = () => {\n        if (\n            props.branch.name &&\n            props.branch.orders_prefix &&\n            props.branch.documents_prefix\n        ) {\n            props.createBranch()\n        } else {\n            if (!props.branch.name) {\n                props.changeVisibleState({inputBranchNameChecked: false})\n            }\n            if (!props.branch.orders_prefix) {\n                props.changeVisibleState({inputBranchPrefixChecked: false})\n            }\n            if (!props.branch.documents_prefix) {\n                props.changeVisibleState({inputBranchPrefixDocChecked: false})\n            }\n        }\n    }\n\n    const handleSaveBranch = () => {\n        if (\n            props.branch.name &&\n            props.branch.orders_prefix &&\n            props.branch.documents_prefix\n        ) {\n            props.saveBranch()\n        } else {\n            if (!props.branch.name) {\n                props.changeVisibleState({inputBranchNameChecked: false})\n            }\n            if (!props.branch.orders_prefix) {\n                props.changeVisibleState({inputBranchPrefixChecked: false})\n            }\n            if (!props.branch.documents_prefix) {\n                props.changeVisibleState({inputBranchPrefixDocChecked: false})\n            }\n        }\n    }\n    const handleRecover = () => {\n        if (props.permissions.includes('setting_recover_branch'))\n            props.deleteBranch(false)\n    }\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.branch.edit ? props.branch.name : ' Новая локация'}\n                </div>\n\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Название\"\n                    onChange={event => props.changeBranchState({name: event.target.value})}\n                    value={props.branch.name}\n                    checkedFlag=\"inputBranchNameChecked\"\n                    checked={props.view.inputBranchNameChecked}\n                    redStar={true}\n                    disabled={props.branch.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Адрес\"\n                    onChange={event => props.changeBranchState({address: event.target.value})}\n                    value={props.branch.address}\n                    disabled={props.branch.deleted}\n                />\n                <LableInput\n                    className='textInput w250'\n                    title='Телефон'\n                    onChange={value => props.changeBranchState({phone: value})}\n                    value={props.branch.phone}\n                    disabled={props.branch.deleted}\n                    isPhone={true}\n                />\n                <Schedule/>\n                <ChooseIcon/>\n                <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n                <ChooseOfList\n                    id={18}\n                    list={props.order_type}\n                    setElement={orders_type_id => props.changeBranchState({orders_type_id})}\n                    current_id={props.branch.orders_type_id}\n                    width={'250px'}\n                    disabled={props.branch.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Шаблон номера заказа\"\n                    onChange={event => props.changeBranchState({orders_prefix: event.target.value})}\n                    value={props.branch.orders_prefix}\n                    checkedFlag=\"inputBranchPrefixChecked\"\n                    checked={props.view.inputBranchPrefixChecked}\n                    redStar={true}\n                    disabled={props.branch.deleted}\n                />\n                <p className=\"mt0\">\n                    Пример:{' '}\n                    {`${props.branch.orders_prefix}-${\n                        props.counters.find((count) => count.id === 1).count\n                    }`}\n                </p>\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Шаблон номера документов\"\n                    onChange={event => props.changeBranchState({documents_prefix: event.target.value})}\n                    value={props.branch.documents_prefix}\n                    checkedFlag=\"inputBranchPrefixDocChecked\"\n                    checked={props.view.inputBranchPrefixDocChecked}\n                    redStar={true}\n                    disabled={props.branch.deleted}\n                />\n                <p className=\"mt0\">\n                    Пример:{' '}\n                    {`${props.branch.documents_prefix}-${\n                        props.counters.find((count) => count.id === 2).count\n                    }`}\n                </p>\n                <ChooseEmployees/>\n\n                <BottomButtons\n                    edit={props.branch.edit}\n                    create={handleCreateBranch}\n                    save={handleSaveBranch}\n                    recover={handleRecover}\n                    delete={() => props.deleteBranch(true)}\n                    close={handleClose}\n                    deleted={props.branch.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    branch: state.branch,\n    view: state.view,\n    order_type: state.data.order_type,\n    counters: state.data.counters,\n    permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    changeBranchState,\n    createBranch,\n    saveBranch,\n    deleteBranch,\n    resetBranch\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {showPhone} from '../../../general/utils'\nimport {editBranch} from '../../../../Redux/actions/branchAction'\nimport {changeVisibleState} from '../../../../Redux/actions'\n\nimport Icon from '../../../general/Icon'\n\n\nconst TableBranches = (props) => {\n\n    const handleEdit = (branch) => {\n        props.editBranch(branch)\n        props.changeVisibleState({statusBranchEditor: true})\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th></th>\n                <th>Название локации</th>\n                <th>Адрес</th>\n                <th>Телефон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.branches.map(branch => {\n                return (\n                    <tr\n                        key={branch.id}\n                        className={branch.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(branch)}\n                    >\n                        <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                        <td>{branch.name}</td>\n                        <td>{branch.address}</td>\n                        <td>{showPhone(branch.phone)}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    branches: state.branch.branches,\n    showDeleted: state.branch.showDeleted\n})\n\nconst mapDispatchToProps = {\n    editBranch,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState, addCounters} from '../../../../Redux/actions'\nimport {addBranches, changeBranchState} from '../../../../Redux/actions/branchAction'\n\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n    useEffect(() => {\n        props.addCounters()\n    }, [])\n\n    useEffect(() => {\n        props.addBranches()\n    }, [props.showDeleted])\n\n    const addBranch = () => {\n        props.changeVisibleState({statusBranchEditor: true})\n        props.changeBranchState({\n            employees: props.employees.filter(employee => !employee.deleted && employee.id !== 0).map(employee => employee.id)\n        })\n    }\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Локации</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n                <div className='row'>\n                    <div\n                        className='greenButton'\n                        onClick={addBranch}\n                    >\n                        + Добавить локацию\n                    </div>\n                    {props.permissions.includes('setting_see_branch') ? <Checkbox\n                        className='ml10'\n                        label='Показать удаленные'\n                        onChange={event => props.changeBranchState({showDeleted: event.target.checked})}\n                        checked={props.showDeleted}\n                    /> : null}\n                </div>\n\n                <TableBranches/>\n\n                {props.statusBranchEditor ? <BranchEditor/> : null}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusBranchEditor: state.view.statusBranchEditor,\n    showDeleted: state.branch.showDeleted,\n    permissions: state.data.user.role.permissions,\n    employees: state.employee.employees\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addCounters,\n    changeBranchState,\n    addBranches\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                invisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                invisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.branch.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\nimport {editEmployee} from '../../../../Redux/actions/employeeAction'\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmployee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmployee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={idx => props.changeWarehouseForm(idx, 'tabs')}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        invisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        invisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            invisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        invisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    invisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шиблонов не выполнен'))\n\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    invisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={idx => props.changeNotEventForm(idx, 'tabs')}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          invisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  classNameMenu='listOption'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.invisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            invisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.branch.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                invisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.branch.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments} from '../../../../Redux/actions'\nimport {changeBookState} from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n    useEffect(() => {\n        props.addEquipment()\n        props.addDictMalfunction()\n        props.addDictPackagelist()\n        props.addItemPayments()\n    }, [])\n\n    const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Справочники</span>\n            </div>\n            <div className='settingPageBody'>\n            </div>\n\n            <Tabs\n                list={tabs_list}\n                func={idx => props.changeBookState({tabs: idx})}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <BookEquipment/> : null}\n            {props.tabs === 1 ? <MalfunctionBooks/> : null}\n            {props.tabs === 2 ? <PackagelistBook/> : null}\n            {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n    changeBookState,\n    addEquipment,\n    addDictMalfunction,\n    addDictPackagelist,\n    addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","export const data_user_menu = [\n    {\n        id: 1,\n        title: 'Профиль',\n        url: '/user/profile',\n        group_name: 'user_setting',\n        permission_key: 'user_setting'\n    },{\n        id: 2,\n        title: 'Настройки',\n        url: '/user/personality',\n        group_name: 'user_setting',\n        permission_key: 'user_setting'\n    },{\n        id: 3,\n        title: 'Выход',\n        url: '/user/logout',\n        group_name: 'user_setting',\n        permission_key: 'user_setting'\n    }\n]","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport SettingRow from '../../Settings/settingRow'\nimport {data_user_menu} from '../../../data/dataUserMenu'\n\nconst UserSettingMenu = (props) => {\n    return (\n        <div className = 'settingMenuMain'>\n                {data_user_menu.map(row => <SettingRow row = {row} key = {row.id}/>)}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSettingMenu)","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst RangeSlider = (props) => {\n\n    return (\n        <div className={`${props.className} rangebox`}>\n            <input\n                type=\"range\"\n                className=\"participants\"\n                min=\"0\"\n                max=\"100\"\n                value={props.value}\n                onChange={event => props.onChange(event.target.value)}\n            />\n            <span\n                className=\"rangeslider\"\n                style={{top: '-8px', left: `${props.value - 0.15*props.value}%`}}\n            >\n                {props.value}\n            </span>\n            <div className='rangeline'/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RangeSlider)","import React, {useEffect, useMemo, useRef, useState} from 'react'\nimport { connect } from 'react-redux'\nimport Compress from 'react-image-file-resizer'\n\nimport {changeEmployeeState, saveAvatar} from '../../../Redux/actions/employeeAction'\nimport Button from '../../general/Button'\nimport RangeSlider from './RangeSlider'\n\nconst ChangeAvatar = (props) => {\n\n    const [avaPosition, setAvaPosition] = useState([0, 0])\n    const [originalSize, setOriginalSize] = useState()\n    const img = useRef(null)\n\n    const mouseMove = event => {\n        const start = props.employee.avaStartPosition\n        const deltaX = event.pageX - start[0]\n        const deltaY = event.pageY - start[1]\n        setAvaPosition([avaPosition[0] + deltaX, avaPosition[1] + deltaY])\n    }\n\n    const mouseUp = () => {\n        window.removeEventListener('mousemove', mouseMove)\n        window.removeEventListener('mouseup', mouseUp)\n    }\n\n    const fileHandlerResize = file => {\n        if (file) {\n            Compress.imageFileResizer(\n                file,\n                1000,\n                1000,\n                \"JPEG\",\n                100,\n                0,\n                (uri) => {\n                    props.changeEmployeeState({img: uri})\n                },\n                \"base64\" // blob or base64 default base64\n            )\n        }\n    }\n\n    const fileHandler = event => {\n        img.current.style.width = 'initial'\n        clear()\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.changeEmployeeState({img: e.target.result})\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n\n\n    const handleDragStart = event => {\n        props.changeEmployeeState({avaStartPosition: [event.pageX, event.pageY]})\n        window.addEventListener('mousemove', mouseMove)\n        window.addEventListener('mouseup', mouseUp)\n    }\n\n    useEffect(() => {\n        if (img.current && img.current.clientWidth) {\n            setOriginalSize(img.current.clientWidth)\n        }\n    }, [props.employee.img])\n\n    useEffect(() => {\n        if (originalSize) {\n            img.current.style.width = `${props.employee.scale_img / 100 * originalSize}px`\n        }\n    }, [props.employee.scale_img])\n\n    const clear = () => {\n        props.changeEmployeeState({img: ''})\n        setAvaPosition([0, 0])\n        props.changeEmployeeState({scale_img: 100})\n    }\n\n    const save = () => {\n        if (props.employee.img) {\n            props.saveAvatar({\n                avaPosition,\n                size: [img.current ? img.current.clientWidth: 0, img.current ? img.current.clientHeight: 0]\n            })\n        }\n    }\n\n    return (\n\n        <div className={`${props.className} boxAvatar`}>\n            <div className='lableImput'>Изменить аватар</div>\n            <div>{`Size: ${img.current ? img.current.clientWidth: 0}x${img.current ? img.current.clientHeight: 0}`}</div>\n            <div className='borderMask'>\n                <div className='mask'\n                     draggable={false}\n                     onMouseDown={handleDragStart}\n                />\n                <img\n                    style={{\n                        left: avaPosition[0],\n                        top: avaPosition[1],\n                    }}\n                    src={props.employee.img || `${process.env.PUBLIC_URL}/${props.employee.avatar}`}\n                    ref={img}\n                    className='editAvaImg'\n                />\n            </div>\n\n            <RangeSlider\n                className='mt15'\n                onChange={value => props.changeEmployeeState({scale_img: value})}\n                value={props.employee.scale_img}\n            />\n\n            <div className='row mt15'>\n\n                <label className=\"labelAva\"> Загрузить\n                    <input\n                        className='addAva'\n                        type='file'\n                        accept=\"image/*\"\n                        onChange={fileHandler}\n                        disabled={props.disabled}\n                    />\n                </label>\n                <Button\n                    className='greenButton bcr ml15'\n                    title='Очистить'\n                    onClick={clear}\n                />\n                <Button\n                    className='blueButton '\n                    title='Сохранить'\n                    onClick={save}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employee: state.employee\n})\n\nconst mapDispatchToProps = {\n    changeEmployeeState,\n    saveAvatar\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeAvatar)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeEmployeeState, editEmployee, saveEditEmployee} from '../../../Redux/actions/employeeAction'\nimport ChangeAvatar from './ChangeAvatar'\nimport LableInput from '../../general/LableInput'\nimport Button from '../../general/Button'\n\nconst UserProfile = (props) => {\n\n    useEffect(() => {\n        if (Object.values(props.user).length) props.editEmployee(props.user)\n    }, [props.user])\n\n    const handleSave = () => {\n        if (props.employee.first_name && props.employee.email) {\n            props.saveEditEmployee()\n        } else {\n            if (!props.employee.first_name) {\n                props.changeVisibleState({inputEmployeeNameChecked: false})\n            }\n            if (!props.employee.email) {\n                props.changeVisibleState({inputEmployeeEmailChecked: false})\n            }\n        }\n    }\n\n    return (\n        <div className='settingContent jc-c df'>\n            <div className='profbox'>\n                <ChangeAvatar className='ml15 mt15'/>\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Имя\"\n                    onChange={event => props.changeEmployeeState({first_name: event.target.value})}\n                    value={props.employee.first_name}\n                    checkedFlag=\"inputEmployeeNameChecked\"\n                    checked={props.view.inputEmployeeNameChecked}\n                    redStar={ true }\n                    disabled={props.employee.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Фамилия\"\n                    onChange={event => props.changeEmployeeState({last_name: event.target.value})}\n                    value={props.employee.last_name}\n                    disabled={props.employee.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"email\"\n                    onChange={event => props.changeEmployeeState({email: event.target.value})}\n                    value={props.employee.email}\n                    checkedFlag=\"inputEmployeeEmailChecked\"\n                    checked={props.view.inputEmployeeEmailChecked}\n                    redStar={ true }\n                    disabled={props.employee.deleted}\n                />\n                {props.view.errorSameMail ? (\n                    <div className=\"errorMassageInput\">Такой email уже существует</div>\n                ) : null}\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Телефон\"\n                    onChange={value => props.changeEmployeeState({phone: value})}\n                    value={props.employee.phone}\n                    disabled={props.employee.deleted}\n                    isPhone={true}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"ИНН\"\n                    onChange={event => props.changeEmployeeState({inn: event.target.value})}\n                    value={props.employee.inn}\n                    disabled={props.employee.deleted}\n                />\n                <Button\n                    className='blueButton mt15 m0'\n                    title='Сохранить'\n                    onClick={handleSave}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employee: state.employee,\n    view: state.view,\n    user: state.data.user\n})\n\nconst mapDispatchToProps = {\n    changeEmployeeState,\n    editEmployee,\n    saveEditEmployee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport {logout} from '../../../Redux/actions/employeeAction'\nimport {changeDataState} from '../../../Redux/actions/dataAction'\n\nconst Logout = (props) => {\n\n\n    useEffect(() => {\n        props.logout()\n        props.changeDataState({login_status: false})\n        props.history.push('/')\n    })\n\n    return (\n        <div className = 'tempPage'>\n            <div className = 'tempContainer'>\n                <h1 className = 'tempTitle'>Выход</h1>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n    logout,\n    changeDataState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Redirect, Route, Switch} from 'react-router-dom'\n\nimport UserSettingMenu from './UserSettingMenu'\nimport UserProfile from './UserProfile'\nimport Logout from './Logout'\n\n\nconst UserSetting = (props) => {\n    return (\n        <div className='settingPage'>\n            <UserSettingMenu/>\n            <Switch>\n                <Route path = '/user/profile' component = {UserProfile}/>\n                <Route path = '/user/logout' component = {Logout}/>\n                <Redirect from='/user' to='/user/profile'/>\n            </Switch>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSetting)","import React, {useEffect} from 'react';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux';\n\n\nimport {addMainData, addStatus, addData} from '../Redux/actions'\nimport {addEmployees} from '../Redux/actions/employeeAction'\nimport {changeBranchState} from '../Redux/actions/branchAction'\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\nimport OrderEditor from './orders/newOrder/OrderEditor'\nimport UserSetting from './sidebar/userSettings/UserSetting'\n\n\nfunction Main(props) {\n\n    useEffect(() => {\n        props.addMainData()\n        props.addStatus()\n    }, [])\n\n    useEffect(() => {\n        props.changeBranchState({\n            current_branch: props.branches.filter(branch => branch.employees.includes(props.user_id))[0] || {}\n        })\n    }, [props.branches])\n\n\n    return (\n        <div>\n            <Sidebar/>\n            <div className='contentMain'>\n                <Switch>\n                    <Route path='/tasks' component={TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path='/orders' component={Orders}/>\n                    <Route path='/shops' component={Shops}/>\n                    <Route path='/payments' component={Payments}/>\n                    <Route path='/wherehouse' component={Wherehouse}/>\n                    <Route path='/clients' component={Clients}/>\n                    <Route path='/analytics' component={Analytics}/>\n                    <Route path='/reports' component={Reports}/>\n                    <Route path='/telephony' component={Telephony}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/user' component={UserSetting}/>\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n            <Switch>\n                <Route\n                    exact path=\"/orders/:id\"\n                    // loadData={() => props.getOrder(id)}\n                    component={OrderEditor}\n                />\n            </Switch>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.branch.branches\n})\n\nconst mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData,\n    changeBranchState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport { log_in} from '../Redux/actions'\nimport {changeDataState} from '../Redux/actions/dataAction'\n\nfunction Login(props) {\n\n\n    const handleClick = ({target: {form}}) => {\n        props.log_in(form.login.value, form.password.value)\n    }\n\n\n    return (\n        <div className=\"mainLoginContaner\">\n            <div className=\"loginContanier\">\n                <h2>Войдите в аккаунт</h2>\n                {props.error_message ? (<span className=\"errorMessageLogin\">{props.error_message}</span>) : null}\n                <form id=\"loginForm\">\n                    <div>\n                        <label className=\"loginFormLable\">Логин или Email</label>\n                        <input\n                            id=\"login\"\n                            className=\"loginFormInput\"\n                            type=\"text\"\n                            onKeyPress={event => {\n                                if (event.key === 'Enter') handleClick(event)\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"loginFormLable\">Пароль</label>\n                        <input\n                            id=\"password\"\n                            className=\"loginFormInput\"\n                            type=\"password\"\n                            onKeyPress={event => {\n                                if (event.key === 'Enter') handleClick(event)\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n                            Авторизоваться\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    serverUrl: state.data.url_server,\n    error_message: state.data.error_message,\n    csrfToken: state.data.csrfToken\n})\n\nconst mapDispatchToProps = {\n    log_in,\n    changeDataState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, {useEffect} from \"react\";\nimport Main from './components/Main'\nimport {connect} from \"react-redux\";\n\n\nimport Login from './components/Login'\nimport {addMainData, csrf} from './Redux/actions'\nimport {changeDataState} from './Redux/actions/dataAction'\n\n\nfunction App(props) {\n\n\n    useEffect(() => props.csrf(), [])\n    // props.csrf()\n\n\n    useEffect(() => {\n        if (props.login_status && props.csrfToken) props.addMainData()\n    }, [props.login_status])\n\n    return (\n        <>\n            {Object.values(props.user).length && props.login_status && props.csrfToken ? <Main/> : null}\n            {props.login_status ? null : <Login/>}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    login_status: state.data.login_status,\n    user: state.data.user,\n    url_server: state.data.url_server,\n    csrfToken: state.data.csrfToken\n})\n\nconst mapDispatchToProps = {\n    addMainData,\n    changeDataState,\n    csrf\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}