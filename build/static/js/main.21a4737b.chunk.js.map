{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","Redux/actions/actionUtils.js","Redux/actions/filterAction.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/Brand.js","components/orders/cell/KindOfGood.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","Redux/actions/clientAction.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseEquipment.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/general/ChooseDate.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPaymants.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/OrderPrint.js","components/orders/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/Sticker.js","components/orders/StikerToPrint.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/FilterEditor.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","components/general/ChooseOfListMany.js","components/orders/setCustomFilter/SetFilter.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/general/TableFields.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","ordersShow","count","clientShow","count_clients","menuRows","id","title","image","url","group_name","active","permission_keys","map","per","settingMenu","permission_key","payments","employees","user","JSON","parse","sessionStorage","getItem","status","status_group","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","branches","cashboxes","payrules","payrolls","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","current_branch","token","login_status","error_message","url_server","process","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","inputFilterTitleChecked","errorSameMail","errorSameLogin","clientFilter","page","name","phone","search_word","badges","customFilters","general","sort","field_sort","engineer_id","overdue","status_id","status_overdue","urgent","order_type_id","manager_id","created_at","kindof_good","brand","subtype","client_id","search","temp_statuses","temp_order_types","temp_managers","temp_engineers","temp_created_at","temp_kindof_good_id","temp_brand","temp_subtype","temp_client","active_badge","active_filter","title_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","tabs","showDeleted","role_title","first_name","last_name","email","notes","login","password","role_id","permissions","inn","doc_name","post","deleted","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","model","operations","parts","attachments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","warranty_measures","equipments","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","logo","icon_trush","icon_close","icon_location","icon_warning","icon_clock","icon_table","icon_pencil","icon_right","icon_left","icon_down","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","img","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_id","cashbox_id","employee_id","order_id","target_cashbox_id","cashbox","employee","order","filter_created_at","Math","round","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","field","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","reimburse","relation_type","setted_employee","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","events","event","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","rows","row","a","b","view","Object","assign","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","new_data","every","val","includes","saveToApp","setItem","stringify","tempFilter","word","client_name","replace","range","role","bool","console","log","tab","equipments_list","phones","statusPhones","statusTitle","tag","tags_list","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","Accept","bad_request","massage","clear","warn","changeStatusMenuVisible","changeNameClientFilter","changePermissions","editEmoloyee","setClietnCheckbox","setVisibleFlag","changeVisibleState","setVisibleListFlag","resetEquipment","setOrderEquipment","changeOrderForm","addAnotherEquipment","deleteDevice","changeOrderFormS","changeBranchForm","changeCashboxForm","changeCashboxPermissions","addData","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","addClients","dispatch","fetch","then","response","json","success","catch","editClient","addEmployees","filters","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addCashboxes","available","addDictService","mapDispatchToProps","changeStatusMenuRow","connect","props","className","to","style","find","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","LogoUser","src","alt","Icon","viewBox","user_id","useState","menuVisibel","setMenuVisibel","generally_menu","some","key","report_menu","setting_menu","length","changeFilterState","resetFilter","setSearch","placeholder","onChange","target","handleChange","onKeyPressCapture","preventDefault","handleSearch","badge","opacity","addOrders","changeStatus","request_config1","request_config2","request_config3","changeBookForm","resetBookEquipment","chooseBookSelected","addEquipmentType","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","getEmploeeName","toLocaleString","year","month","day","hour","minute","datestamp","statusGroop","deltaMinut","abs","deltaHour","deltaDay","getDateEstimated","minWidth","width","changePaymentForm","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","window","addEventListener","removeEventListener","optionsShowDate","showPhone","slice","check0_100","isNaN","showName","showDate","date","currentMonth","today","start_date","setDate","setHours","valueOfPhoneInput","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","unvisible","disabled","func1","func2","changeClientForm","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","tab_field","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","forEach","showList","setShowList","disc","parseFloat","registerLocale","ru","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","item","request_config_2","request_config4","mainFilter","request_config5","request_config6","current_branch_id","order_edit","handleClose","chooseData","setChooseData","selected","isClearable","placeholderText","dateFormat","locale","maxDate","showTimeSelect","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","changePhoneClientFilter","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","types","useMemo","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","onMouseOver","onMouseOut","cteateEquipmentSubtype","setSubtype","SetOrderGroup","ChooseDate","current_date","setCurrent_day","visibleListMonth","setVisibleListMonth","visibleInputYear","setVisibleInputYear","visibleCalendar","setVisibleCalendar","months","first","setTime","getTime","getDay","current_days","setMonth","getMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","date1","date2","getDate","getHours","getMinutes","setMinutes","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","iconClassName","iconColor","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","height","current_engineer_id","isExist","text","deletePayment","Checkbox","label","createOrder","resetOrder","saveOrder","Sticker","forwardRef","ref","stickerToPrintRef","useRef","printOSticker","useReactToPrint","content","onAfterPrint","display","initStatusMenuVisible","list_id","editOrder","statusVis","table_headers","handleEdit","createCustomFilter","mainCheckbox","current_statuses","choosed_values","current_list","indeterminate","handleChoose","labelClassName","type_group","allStatuses","func_clear","ChooseOfListMany","checked_list","len","showWord","mainLable","resetTempFilter","deleteFilter","selectedFilter","addStatusGroup","addCustomFilters","addAdCampaign","addBadges","employee_access","changeFilterForm","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","activeCashbox","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","changeEmployeeSelected","perm","setPerm","chooseCashboxSelected","createCashbox","seveEditCashbox","list_per","setShowDeleted","selectsRange","startDate","endDate","update","changePayrollForm","addPayrolls","editPayroll","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","type_payrolls","income_sum","outcome_sum","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","category","choose","cat","catVisible","setCatVisible","mainCategory","createWarehouseCategory","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","TableFields","minHeight","addWarehouseCategories","addParts","choosePartSelected","changeStatusSettingRow","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","changeEmployeEditorForm","changeEmployeeEditorRoleOptions","setRoleEmployeeEdetor","changeEmployeeTabs","createEmployee","seveEditEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","changeShowDeleted","resetEmoloyee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","editBranch","addCounters","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableFields","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","addStatus","addMainData","counts","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","loguot","addUser","log_in","access_token","message","serverUrl","form","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"mQAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,wMAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAAO,uBACPC,YAAa,8JACd,CACCD,MAA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","file":"static/js/main.21a4737b.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import { data_setting_menu } from '../../data/dataSettingRows'\nimport { data_menu_rows } from '../../data/dataSidebarRows'\n\nconst initialState = {\n    ordersShow: [],\n    count: 0,\n    clientShow: [],\n    count_clients: 0,\n    menuRows: data_menu_rows,\n    settingMenu: data_setting_menu,\n    payments: [],\n\n    employees: [],\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    branches: [],\n    cashboxes: [],\n    payrules: [],\n    payrolls: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    current_branch: {},\n\n    token: sessionStorage.getItem('1xsndt') || '',\n    login_status: false,\n    error_message: '',\n    url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:5005' // Мобильный\n    // url_server: 'http://10.6.1.26:80/' // VPN\n\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n  \n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n  switch (action.type) {\n\n    case 'LOGIN': {\n      return {\n         ...state, \n         token: action.token\n        }}\n\n    case 'LOGUOT': {\n      return {\n         ...state, \n         token: '',\n         login_status: false \n        }}\n\n    case 'ADD_MENU_ROWS': {\n      return {\n         ...state, \n         menuRows: action.rows,\n        }}\n\n    case 'ADD_STATUS': {\n      return {\n         ...state, \n         status: action.status,\n        }}\n\n    case 'ADD_STATUS_GROUP': {\n      return {\n          ...state, \n          status_group: action.status_group,\n        }}\n    \n    case 'ADD_ORDERS_SHOW': {\n      return {\n         ...state, \n         ordersShow: action.ordersShow,\n         count: action.count\n        }}\n\n    case 'ADD_CLIENTS_SHOW': {\n      return {\n          ...state, \n          clientShow: action.clientShow,\n          count_clients: action.count\n        }}\n    \n    case 'ADD_EMPLOYEES': {\n      return {\n         ...state, \n         employees: action.employees,\n        }}\n\n    case 'ADD_USER': {\n      return {\n         ...state, \n         user: action.user,\n         login_status: true \n        }}\n\n    case 'ADD_BADGES': {\n      return {\n          ...state, \n          badges: action.badges\n      }}\n\n\n    case 'ADD_EQUIPMENT': {\n      return {\n        ...state,\n        equipment: action.equipment\n      }}\n\n    case 'CHANGE_STATUS_MENU_ROW': {\n      return {\n      ...state,\n      menuRows: state.menuRows.map(row => {\n        return {\n          ...row,\n          active: row.id === action.id\n        }})}} \n\n    \n    case 'ADD_SETTING_MENU': {\n    return {\n        ...state, \n        settingMenu: action.rows.sort((a, b) => a.id - b.id),\n      }}\n      \n    case 'CHANGE_STATUS_SETTING_ROW': {\n      return {\n        ...state,\n        settingMenu: state.settingMenu.map(row => {\n          return {\n            ...row,\n            active: row.id === action.id\n          }})}} \n\n\n\n    case 'ADD_ROLES': {\n      return {\n          ...state, \n          roles: action.roles,\n        }}\n\n    case 'ADD_AD_CAMPAIGN': {\n      return {\n          ...state, \n          ad_campaign: action.ad_campaign,\n        }\n      }\n\n        \n    case 'ADD_DATA': {\n      return {\n          ...state, \n          [action.field]: action.data,\n        }\n      }\n\n        case 'ACTIVE_CASHBOX': {\n          return {\n              ...state, \n              cashboxes: state.cashboxes.map(cashbox => {\n                cashbox.active = cashbox.id === action.id\n                return cashbox\n              }),\n            }\n          }\n\n    default:\n      return state\n  }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    active: false,\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: [true],\n   checkedOrderKindofGood: [true],\n   checkedOrderBrand: [true],\n   checkedOrderSubtype: [true],\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n   inputFilterTitleChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_VISIBLE_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n      \n      // case 'SET_ORDER_EQUIPMENT': {\n         \n      //    let checked_list = state[action.field]\n      //    checked_list[action.idx] = true\n\n      //    return {\n      //       ...state, \n      //       [action.field]: checked_list\n      //    }\n      // }\n\n      \n\n\n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clientFilter: {\n        page: 0,\n        name: '',\n        phone: '7'\n    },\n\n    search_word: '',\n\n\n    // ========================\n    badges: [],\n    customFilters: [],\n\n    title: '',\n    general: false,\n\n    sort: 'desc',\n    field_sort: 'id',\n    page: 0,\n\n    engineer_id: null,\n    overdue: null,\n    status_id: null,\n    status_overdue: null,\n    urgent: null,\n    order_type_id: null,\n    manager_id: null,\n    created_at: null,\n    kindof_good: null,\n    brand: null,\n    subtype: null,\n    client_id: null,\n\n    search: '',\n\n    temp_statuses: [],\n    temp_order_types: [],\n    temp_managers: [],\n    temp_engineers: [],\n    temp_created_at: null,\n    temp_kindof_good_id: null,\n    temp_brand: null,\n    temp_subtype: null,\n    temp_client: null,\n\n    active_badge: 0,\n    active_filter: 0\n}\n\nexport const filterReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_FILTER_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_FILTER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_FILTER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'RESET_FILTER':\n            return {\n                ...state,\n                page: 0,\n\n                engineer_id: [],\n                overdue: null,\n                status_id: [],\n                status_overdue: null,\n                urgent: null,\n\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n\n                active_badge: 0,\n                active_filter: 0\n            }\n\n        case 'RESET_TEMP_FILTER':\n            return {\n                ...state,\n                temp_statuses: [],\n                temp_order_types: [],\n                temp_managers: [],\n                temp_engineers: [],\n                temp_created_at: null,\n                temp_kindof_good_id: null,\n                temp_brand: null,\n                temp_subtype: null,\n                temp_client: null,\n            }\n\n        case 'RESET_DATA_FILTER':\n            return {\n                ...state,\n                title: '',\n                general: false,\n            }\n\n        // ========================\n        // case 'ADD_STATUS': {\n        //     return {\n        //         ...state,\n        //         status: action.status.map(status => status.id),\n        //     }\n        // }\n        //\n        // case 'ADD_DATA': {\n        //     if (action.field === 'order_type') {\n        //         return {\n        //             ...state,\n        //             order_type_id: action.data.map(type => type.id)\n        //         }\n        //     } else {\n        //         return state\n        //     }\n        // }\n        //\n        // case 'ADD_EMPLOYEES': {\n        //     return {\n        //         ...state,\n        //         employees: action.employees.map(employee => employee.id),\n        //     }\n        // }\n\n\n\n        case 'CHANGE_GROUP_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    kindof_good: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_BRAND_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    brand: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_SUBTYPE_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    subtype: action.word\n                }\n            }\n        }\n\n\n        case 'CHANGE_CLIENT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    client_name: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_NAME_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    name: action.word,\n                    phone: ''\n                }\n            }\n        }\n\n\n        case 'CHANGE_PHONE_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    phone: action.word.replace(/[^0-9]/g, ''),\n                    name: ''\n                }\n            }\n        }\n\n        case 'CHANGE_CREATE_AT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    created_at: action.range\n                }\n            }\n        }\n\n\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n  tabs: 1,\n  edit: 0,\n  showDeleted: false,\n  role_title: '',\n\n  first_name: '',\n  last_name: '',\n  email: '',\n  notes: '',\n  phone: '',\n  login: '',\n  password: '',\n  role_id: 0,\n  permissions: [],\n  inn: '',\n  doc_name: '',\n  post: '',\n  deleted: false\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_EMPLOYEE_TAB': {\n         return {\n            ...state, \n            tabs: action.tab,\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n      \n      case 'CHOOSE_EMPLOYEE_SELECTED': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n\n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            role_id: action.role\n         }\n      }\n      \n      case 'CHANGE_SHOW_DELETED': {\n         return {\n            ...state, \n            showDeleted: !state.showDeleted\n         }\n      }\n\n      \n      case 'EDIT_EMPLOYEE': {\n         return {\n            ...state, \n            edit: action.employee.id,\n            first_name: action.employee.first_name || '',\n            last_name: action.employee.last_name || '',\n            email: action.employee.email || '',\n            notes: action.employee.notes || '',\n            phone: action.employee.phone || '',\n            login: action.employee.login || '',\n            role_id: action.employee.role.id,\n            role_title: action.employee.role.title || '',\n            permissions: action.employee.permissions || [],\n            inn: action.employee.inn || '',\n            doc_name: action.employee.doc_name || '',\n            post: action.employee.post || '',\n            deleted: action.employee.deleted\n         }\n      }\n\n      case 'RESET_EMPLOYEE': {\n         return {\n            ...state, \n            edit: 0,\n            first_name: '',\n            last_name: '',\n            email: '',\n            notes: '',\n            phone: '',\n            login: '',\n            password: '',\n            role_title: '',\n            role_id: 0,\n            permissions: [],\n            inn: '',\n            doc_name: '',\n            post: '',\n            deleted: false\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,\n   tabs: 1,\n\n   created_at: 0,\n   done_at: 0,\n   closed_at: 0,\n   assigned_at: 0,\n   duration: 0,\n   estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n   scheduled_for: 0,\n   warranty_date: 0, \n   status_deadline: 0,\n\n   ad_campaign_id: 1,\n   branch_id: 0,\n   status: {},\n   client: {},\n   order_type_id: 1,\n   closed_by_id: 0,\n   created_by_id: 0,\n   manager_id: 0,\n   engineer_id: 0,\n   kindof_good: {},\n   brand: {},\n   subtype: {},\n   model: {},\n\n   operations: [],\n   parts: [], \n   attachments: [], \n   payments: [],\n\n   id_label: '',\n   prefix: '',\n   serial: '',\n   malfunction: '',\n   packagelist: '',\n   appearance: '',\n   engineer_notes: '',\n   manager_notes: '',\n   resume: '',\n   cell: '', \n\n   estimated_cost: 0,\n   missed_payments: 0,\n   discount_sum: 0,\n   payed: 0,\n   price: 0,\n   remaining: 0, \n   remaining_status: 0, \n   remaining_warranty: 0, \n\n   overdue: false,\n   status_overdue: false,\n   urgent: false,\n   warranty_measures: false,\n\n   equipments: [{\n      kindof_good: {},\n      brand: {},\n      subtype: {},\n      model: {},\n      malfunction: '',\n      packagelist: '',\n      appearance: '',\n      urgent: false\n   }],\n  \n}\n\nexport const orderReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'RESET_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {}\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n      \n      case 'SET_ORDER_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {\n            id: action.data.id,\n            icon: action.data.icon,\n            title: action.data.title,\n            url: action.data.url\n         }\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n\n        \n         return {\n            ...state, \n            equipments: state.equipments.concat([{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }])\n         }\n      }\n\n      \n      case 'DELETE_DEVICE': {\n\n         let equipments_list = state.equipments\n         equipments_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM_S': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'RESET_ORDER': {\n\n         return {\n            ...state, \n            edit: 0,\n            tabs: 1,\n\n            created_at: 0,\n            done_at: 0,\n            closed_at: 0,\n            assigned_at: 0,\n            duration: 0,\n            estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n            // estimated_done_at: 0,\n            scheduled_for: 0,\n            warranty_date: 0, \n            status_deadline: 0,\n\n            ad_campaign_id: 1,\n            branch_id: 0,\n            status_id: 0,\n            client: {},\n            order_type_id: 1,\n            closed_by_id: 0,\n            created_by_id: 0,\n            manager_id: 0,\n            engineer_id: 0,\n            kindof_good:{},\n            brand: {},\n            subtype: {},\n            model: {},\n\n            operations: [],\n            parts: [],\n            attachments: [],\n            payments: [],\n\n            id_label: '',\n            prefix: '',\n            serial: '',\n            malfunction: '',\n            packagelist: '',\n            appearance: '',\n            engineer_notes: '',\n            manager_notes: '',\n            resume: '',\n            cell: '',\n\n            estimated_cost: 0,\n            missed_payments: 0,\n            discount_sum: 0,\n            payed: 0,\n            price: 0,\n            remaining: 0, \n            remaining_status: 0, \n            remaining_warranty: 0, \n\n            overdue: false,\n            status_overdue: false,\n            urgent: false,\n            warranty_measures: false,\n\n\n            equipments: [{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }],\n         }\n      }\n\n      \n      case 'EDIT_ORDER': {\n\n         return {\n            ...state, \n            edit: action.order.id,\n            created_at: action.order.created_at,\n            done_at: action.order.done_at,\n            closed_at: action.order.closed_at,\n            assigned_at: action.order.assigned_at,\n            duration: action.order.duration,\n            estimated_done_at: action.order.estimated_done_at,\n            scheduled_for: action.order.scheduled_for,\n            warranty_date: action.order.warranty_date, \n            status_deadline: action.order.status_deadline,\n\n            ad_campaign_id: action.order.ad_campaign.id,\n            branch_id: action.order.branch.id,\n            status: action.order.status,\n            client: action.order.client,\n            order_type_id: action.order.order_type.id,\n            closed_by_id: action.order.closed_by_id,\n            created_by_id: action.order.created_by_id,\n            manager_id: action.order.manager_id,\n            engineer_id: action.order.engineer_id,\n            kindof_good: action.order.kindof_good,\n            brand: action.order.brand,\n            subtype: action.order.subtype,\n            model: action.order.model,\n\n            operations: action.order.operations,\n            parts: action.order.parts,\n            attachments: action.order.attachments,\n            payments: action.order.payments,\n\n            id_label: action.order.id_label,\n            prefix: action.order.prefix,\n            serial: action.order.serial,\n            malfunction: action.order.malfunction,\n            packagelist: action.order.packagelist,\n            appearance: action.order.appearance,\n            engineer_notes: action.order.engineer_notes,\n            manager_notes: action.order.manager_notes,\n            resume: action.order.resume,\n            cell: action.order.cell,\n\n            estimated_cost: action.order.estimated_cost,\n            missed_payments: action.order.missed_payments,\n            discount_sum: action.order.discount_sum,\n            payed: action.order.payed,\n            price: action.order.price,\n            remaining: action.order.remaining,\n            remaining_status: action.order.remaining_status,\n            remaining_warranty: action.order.remaining_warranty,\n\n            overdue: action.order.overdue,\n            status_overdue: action.order.status_overdue,\n            urgent: action.order.urgent,\n            warranty_measures: action.order.warranty_measures\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","\n\nconst initialState = {\n   juridical: false,\n   supplier: false,\n   conflicted: false,\n   should_send_email: false,\n   deleted: false,\n\n   name: '',\n   name_doc: '',\n   email: '',\n   address: '',\n   phone: [{\n      title: 'Мобильный',\n      number: '',\n      notify: false\n   }],\n   ad_campaign_id: 1,\n   discount_code: '',\n   discount_goods: 0,\n   discount_goods_margin_id: 1,\n   discount_materials: 0,\n   discount_materials_margin_id: 1,\n   discount_services: 0,\n   discount_service_margin_id: 0,\n   notes: '',\n   tags: [],\n   \n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   discount_good_type: false,\n   discount_materials_type: false,\n   discount_service_type: false,\n\n   tabs: 0,\n   phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n   statusPhoneList: [false],\n   statusAddTitle: [false]\n}\n\nexport const clientReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'SET_CLIENT_CHECKBOX': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'CHANGE_CLIENT_FORM': {\n            return {\n               ...state, \n               [action.field]: action.value\n            }\n      }\n      \n      case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n      let phones = state.phone\n      phones[action.idx].number = action.value\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n   \n   case 'ADD_PHONE_COUNTER': {\n\n         return {\n            ...state, \n            phone: state.phone.concat([{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }]),\n            statusPhoneList: state.statusPhoneList.concat([false])\n         }\n      }\n   \n   case 'DELETE_COUNT_NUMBER': {\n\n      let phones = state.phone\n      phones.splice(action.idx, 1)\n      const statusPhones = state.statusPhoneList\n      statusPhones.splice(action.idx, 1)\n\n         return {\n            ...state, \n            phone: phones,\n            statusPhoneList: statusPhones\n         }\n      }\n      \n      \n   case 'SET_PHONE_NOTIFY': {\n\n      let phones = state.phone\n      phones[action.idx].notify = !phones[action.idx].notify\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n\n      \n      case 'SET_PHONE_TITLE': {\n\n         let phones = state.phone\n         phones[action.idx].title = action.title\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n   \n            return {\n               ...state, \n               phone: phones,\n               statusPhoneList: statusPhones\n            }\n         }\n\n      case 'CHANGE_STATUS_PHONE_LIST': {\n\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = false\n\n         return {\n            ...state, \n            statusPhoneList: statusPhones,\n            statusAddTitle: statusTitle\n         }\n      }\n\n      \n      case 'CHANGE_STATUS_ADD_TITLE': {\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = !statusTitle[action.idx]\n\n         return {\n            ...state, \n            statusAddTitle: statusTitle\n         }\n      }\n\n      case 'SET_AD_CANMPAIGN_CLIENT': {\n\n         return {\n            ...state, \n            ad_campaign_id: action.id\n         }\n      }\n      \n      case 'ADD_CLIENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_CLIENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      case 'RESET_DATA_CLIENT': {\n         return {\n            ...state,\n            juridical: false,\n            supplier: false,\n            conflicted: false,\n            should_send_email: false,\n            deleted: false,\n\n            name: '',\n            name_doc: '',\n            email: '',\n            address: '',\n            phone: [{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }],\n            ad_campaign_id: 1,\n            discount_code: '',\n            discount_goods: 0,\n            discount_goods_margin_id: 1,\n            discount_materials: 0,\n            discount_materials_margin_id: 1,\n            discount_services: 0,\n            discount_service_margin_id: 0,\n            notes: '',\n            tags: [],\n            \n            ogrn: '',\n            inn: '',\n            kpp: '',\n            juridical_address: '',\n            director: '',\n            bank_name: '',\n            settlement_account: '',\n            corr_account: '',\n            bic: '',\n\n            discount_good_type: false,\n            discount_materials_type: false,\n            discount_service_type: false,\n\n            edit: 0,\n            tabs: 0,\n            statusPhoneList: [false],\n            statusAddTitle: [false]\n\n         }\n      }\n\n      case 'CHANGE_CLIENT_TABS': {\n\n         return {\n            ...state, \n            tabs: action.tab\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id\n         }\n      }\n\n      \n      case 'EDIT_CURRENT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id,\n            tabs: 1\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n\nexport const icon_filter = 'M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z'\n\nexport const icon_cross = 'M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z'\n","import { icon_location } from \"../../data/icons\"\n\nconst initialState = {\n   name: '',\n   address: '',\n   phone: '',\n   color: 'grey',\n   icon: icon_location,\n   orders_type_id: 1,\n   orders_type_strategy: 'last',\n   orders_prefix: 'OTS',\n   documents_prefix: 'A',\n   employees: [],\n   deleted: false,\n   schedule: [\n      {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 1\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 2\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 3\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 4\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 5\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 6\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 7\n      },\n   ],\n\n   edit: 0,\n   showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BRANCH_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_SCHEDULE': {\n\n         let list_schedule = state.schedule\n         list_schedule[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            schedule: list_schedule\n         }\n      }\n      \n      case 'SET_BRANCH_EMPLOYEE': {\n         if (action.id.every(id => state.employees.includes(id))) {\n            return {\n               ...state, \n               employees: state.employees.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n            }\n         }\n      }\n\n      case 'RESET_BRANCH': {\n\n         return {\n            ...state, \n            name: '',\n            address: '',\n            phone: '',\n            color: 'grey',\n            icon: icon_location,\n            orders_type_id: 1,\n            orders_type_strategy: 'last',\n            orders_prefix: 'OTS',\n            documents_prefix: 'A',\n            employees: [],\n            deleted: false,\n            schedule: [\n               {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 1\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 2\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 3\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 4\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 5\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 6\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 7\n               },\n            ],\n\n            edit: 0\n         }\n      }\n\n      \n      case 'EDIT_BRANCH': {\n\n         return {\n            ...state, \n            name: action.branch.name,\n            address: action.branch.address,\n            phone: action.branch.phone,\n            color: action.branch.color,\n            icon: action.branch.icon,\n            orders_type_id: action.branch.orders_type_id,\n            orders_type_strategy: action.branch.orders_type_strategy,\n            orders_prefix: action.branch.orders_prefix,\n            documents_prefix: action.branch.documents_prefix,\n            employees: action.branch.employees,\n            deleted: action.branch.deleted,\n            schedule: action.branch.schedule,\n\n            edit: action.branch.id\n         }\n      }\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   edit: 0,\n   sum: 0,\n   title: '',\n\n   cashflow_category: '',\n   description: '',\n\n   deposit: 0,\n   income: 0,\n   outcome: 0,\n   direction: 0,\n\n   can_print_fiscal: false,\n   deleted: false,\n   is_fiscal: false,\n\n   created_at: 0,\n   custom_created_at: 0,\n\n   tags: [],\n\n   relation_id: null,\n   cashbox_id: 0,\n   client_id: 0,\n   employee_id: 0,\n   order_id: 0,\n   target_cashbox_id: 0,\n\n   cashbox: {},\n   client: {},\n   employee: {},\n   order: {},\n\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n   filter_tags: [],\n\n   current_type: 0,\n   context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_PAYMENT_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_PAYMENT_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n\n      case 'ADD_PAYMENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_PAYMENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      \n      case 'RESET_PAYMENTS': {\n\n         return {\n            ...state, \n            edit: 0,\n            sum: 0,\n            title: '',\n\n            cashflow_category: '',\n            description: '',\n\n            deposit: 0,\n            income: 0,\n            outcome: 0,\n            direction: 0,\n\n            can_print_fiscal: true,\n            deleted: false,\n            is_fiscal: false,\n\n            created_at: 0,\n            custom_created_at: 0,\n\n            tags: [],\n\n            cashbox_id: 0,\n            client_id: 0,\n            employee_id: 0,\n            order_id: 0,\n            target_cashbox_id: 0,\n\n            context: {}\n         }\n      }\n      \n      case 'SET_PAYMENT': {\n\n         return {\n            ...state, \n            edit: action.payment.id,\n\n            cashflow_category: action.payment.cashflow_category,\n            description: action.payment.description,\n\n            deposit: action.payment.deposit,\n            income: action.payment.income,\n            outcome: action.payment.outcome,\n            direction: action.payment.direction,\n\n            can_print_fiscal: action.payment.can_print_fiscal,\n            deleted: action.payment.deleted,\n            is_fiscal: action.payment.is_fiscal,\n\n            created_at: action.payment.created_at,\n            custom_created_at: action.payment.custom_created_at,\n\n            tags: action.payment.tags,\n\n            cashbox: action.payment.cashbox,\n            client: action.payment.client,\n            employee: action.payment.employee,\n            order: action.payment.order,\n            target_cashbox_id: action.payment.target_cashbox_id,\n         }\n      }\n      \n      \n\n      \n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n       \n      //  case 'CHOOSE_EMPLOYEE_SELECTED': {\n      //     if (action.value.every(val => state[action.field].includes(val))) {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n      //        }\n      //     } else {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n      //        }\n      //     }\n      //  }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,                // id при редактировании\n\n   description: '',        // Описание\n   income: 0,              // Входящяя сумма\n   outcome: 0,             // Иcходящая сумму\n   direction: 0,           // Направление платежа\n   deleted: false,         // Платеж удален\n   reimburse: false,       // Совершен возврат\n   created_at: null,       // Дата создания\n   custom_created_at: null,// Дата установленая пользователем\n   relation_type: 0,       // Тип начисления\n   relation_id: 0,         // id связанного события\n   employee_id: 0,         // Сотрудник\n   order_id: null,         // Заказ\n\n   setted_employee: 0,     // Выбранный сотрудник\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_PAYROLL_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,  \n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null            \n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n        thunk\n    ),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store","import store from \"./store\"\n\nfunction getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${state.data.token}`,\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n\nfunction bad_request(massage = '') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return {type: 'LOGUOT'}\n}\n\nexport function loginAction(token) {\n    return {\n        type: 'LOGIN',\n        token,\n    }\n}\n\nexport function loguotAction() {\n    return {\n        type: 'LOGUOT'\n    }\n}\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\n\nexport function changeGroupListFilter() {\n    return {\n        type: 'CHANGE_GROUP_LIST_FILTER'\n    }\n}\n\nexport function changeGroupMainFilter(word) {\n    return {\n        type: 'CHANGE_GROUP_MAINFILTER',\n        word\n    }\n}\n\nexport function changeBrandListFilter() {\n    return {\n        type: 'CHANGE_BRAND_LIST_FILTER'\n    }\n}\n\nexport function changeBrandMainFilter(word) {\n    return {\n        type: 'CHANGE_BRAND_MAINFILTER',\n        word\n    }\n}\n\nexport function changeSubtypeListFilter() {\n    return {\n        type: 'CHANGE_SUBTYPE_LIST_FILTER'\n    }\n}\n\nexport function changeSubtypeMainFilter(word) {\n    return {\n        type: 'CHANGE_SUBTYPE_MAINFILTER',\n        word\n    }\n}\n\nexport function changeClientListFilter() {\n    return {\n        type: 'CHANGE_CLIENT_LIST_FILTER'\n    }\n}\n\nexport function changeClientMainFilter(word) {\n    return {\n        type: 'CHANGE_CLIENT_MAINFILTER',\n        word\n    }\n}\n\nexport function changeNameClientFilter(word) {\n    return {\n        type: 'CHANGE_NAME_CLIENTFILTER',\n        word\n    }\n}\n\nexport function changePhoneClientFilter(word) {\n    return {\n        type: 'CHANGE_PHONE_CLIENTFILTER',\n        word\n    }\n}\n\nexport function changeCreateAtMainFilter(range) {\n    return {\n        type: 'CHANGE_CREATE_AT_MAINFILTER',\n        range\n    }\n}\n\n\nexport function changeStatusMenuRow(id) {\n    return {\n        type: 'CHANGE_STATUS_MENU_ROW',\n        id\n    }\n}\n\nexport function changeStatusSettingRow(id) {\n    return {\n        type: 'CHANGE_STATUS_SETTING_ROW',\n        id\n    }\n}\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\nexport function changeEmployeeTabs(tab) {\n    return {\n        type: 'CHANGE_EMPLOYEE_TAB',\n        tab\n    }\n}\n\nexport function changeEmployeEditorForm(value, field) {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_FORM',\n        value,\n        field\n    }\n}\n\nexport function changeEmployeeSelected(value, field) {\n    return {\n        type: 'CHOOSE_EMPLOYEE_SELECTED',\n        value,\n        field\n    }\n}\n\n\nexport function changeEmployeeEditorRoleOptions() {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS'\n    }\n}\n\n\nexport function setRoleEmployeeEdetor(role) {\n    return {\n        type: 'SET_ROLE_EMPLOYEE_EDITOR',\n        role\n    }\n}\n\nexport function changeShowDeleted() {\n    return {\n        type: 'CHANGE_SHOW_DELETED'\n    }\n}\n\n\nexport function editEmoloyee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmoloyee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function changeVisibleState( data ) {\n    return {\n        type: 'CHANGE_VISIBLE_STATE',\n        data\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\nexport function resetEquipment(idx, field) {\n    return {\n        type: 'RESET_EQUIPMENT',\n        idx,\n        field\n    }\n}\n\nexport function setOrderEquipment(idx, field, data) {\n    return {\n        type: 'SET_ORDER_EQUIPMENT',\n        idx,\n        field,\n        data\n    }\n}\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeBranchForm(field, value) {\n    return {\n        type: 'CHANGE_BRANCH_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return dispatch => {\n        dispatch({\n            type: 'EDIT_BRANCH',\n            branch\n        })\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusBranchEditor',\n            value: true\n        })\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\n\nexport function changeCashboxForm(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_FORM',\n        field,\n        value\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function activeCashbox(id) {\n    return {\n        type: 'ACTIVE_CASHBOX',\n        id\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\n\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        email: login,\n        password\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/login', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    sessionStorage.setItem('1xsndt', data.access_token);\n                    sessionStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'user',\n                        data: data.user,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'login_status',\n                        data: true,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'token',\n                        data: data.access_token,\n                    })\n                } else {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'error_message',\n                        data: data.message,\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос авторизации не выполнен'))\n    }\n}\n\n\n// Client ================================================================================================================\nexport function addClients() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig(state.filter.clientFilter))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_CLIENTS_SHOW',\n                        clientShow: data.data,\n                        count: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентов не выполнен'))\n    }\n}\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function seveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов изделий не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на удаление роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'generally_info',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.branch,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'order_type',\n                        data: data.order_type,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.counts,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ad_campaign',\n                        data: data.ad_campaign,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'status_group',\n                        data: data.status_group,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.cashboxes,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.service_prices,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос счетчиков не выполнен'))\n    }\n}\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос флиалов не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статей плтатежей не выполнен'))\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_FORM',\n                        field: 'current_cashbox',\n                        value: data.data.filter(cashbox =>\n                            !cashbox.deleted &&\n                            cashbox.employees[state.data.user.id].available &&\n                            (cashbox.branch_id === (state.data.current_branch ? state.data.current_branch.id : false) || cashbox.isGlobal)\n                        )[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function seveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuRow } from '../../Redux/actions'\n\n\nfunction MenuRow(props) {\n  return (\n    <Link \n      className=\"menuRow\" \n      to={props.row.url}\n      style={props.menuRows.find(row => row.id === props.row.id).active ? {\n        backgroundColor: '#53585c',\n        borderLeftColor: props.current_branch.color \n      } : null}\n      onClick={() => props.changeStatusMenuRow(props.row.id)}\n    >\n      {props.row.image === 'task' ? (\n        <div className=\"taskNumber\">\n          <span className=\"taskNumber1\">8</span>\n        </div>\n      ) : (\n        <svg className=\"sidebarIcon\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n        </svg>\n      )}\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n  menuRows: state.data.menuRows,\n  current_branch: state.data.current_branch\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\n\n\n\nfunction LogoUser() {\n    \n    return (\n        <div className = 'avatar'> \n        \n            <img \n                src = {`${process.env.PUBLIC_URL}/data/avatars/ava.jpeg`}\n                className = 'imgAvatar' \n                alt = 'User avatar' \n            />\n        </div>\n    )\n    \n}\n\nexport default LogoUser;\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addData } from '../../Redux/actions'\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n   const [menuVisibel, setMenuVisibel] = useState(false)\n\n   return (\n      <div>\n      <div \n         className='menuBranch'\n         onClick={() => setMenuVisibel(!menuVisibel)}\n      >\n         <Icon \n            className='smalIcon'\n            icon={props.current_branch.icon} \n            color={props.current_branch.color}\n         />\n         <div className='sidebarBranch'>\n           {props.current_branch.name}\n         </div>\n      </div>\n      {menuVisibel ? <div className='listOptionsBranch'>\n         {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n            <div \n               key={branch.id}\n               className='listBranch'\n               onClick={() => {\n                  props.addData(branch, 'current_branch')\n                  setMenuVisibel(false)\n               }}\n            >\n               <Icon \n                  className='smalIcon'\n                  icon={branch.icon} \n                  color={branch.color}\n               />\n               <div className='ml5'>{branch.name}</div>\n            </div>\n         ))}\n      </div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_branch: state.data.current_branch,\n   branches: state.data.branches,\n   user_id: state.data.user.id\n   })\n\nconst mapDispatchToProps = {\n   addData\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.data.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nexport function bad_request(massage='') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return { type: 'LOGUOT' }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeFilterForm( value, field ) {\n    return {\n        type: 'CHANGE_FILTER_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeFilterState( data ) {\n    return {\n        type: 'CHANGE_FILTER_STATE',\n        data\n    }\n}\n\n// export function editFilter(filter) {\n//     return {\n//         type: 'EDIT_FILTER',\n//         filter\n//     }\n// }\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function resetTempFilter() {\n    return {\n        type: 'RESET_TEMP_FILTER'\n    }\n}\n\n\nexport function selectedFilter( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_FILTER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function addBadges() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_access: !state.data.user.role.orders_visibility ? state.data.user.id : null,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.data}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function createCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.filter.title,\n        general: state.filter.general,\n        employee_id: state.data.user.id,\n        filters: {\n            page: 0,\n            engineer_id: state.filter.temp_engineers.length ? state.filter.temp_engineers : null,\n            overdue: null,\n            status_id: state.filter.temp_statuses.length ? state.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: state.filter.temp_order_types.length ? state.filter.temp_order_types : null,\n            manager_id: state.filter.temp_managers.length ? state.filter.temp_managers : null,\n            created_at: state.filter.temp_created_at,\n            kindof_good: state.filter.temp_kindof_good_id,\n            brand: state.filter.temp_brand,\n            subtype: state.filter.temp_subtype,\n            client_id: state.filter.temp_client\n        }\n    })\n\n    const request_config2 = getRequestConfig({\n        employee_id: state.data.user.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config1)\n            .catch(() => bad_request('Запрос на создание пользовательского фильтра не выполнен'))\n\n        await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n\n    }\n}\n\n\nexport function deleteFilter() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.filter.active_filter\n    })\n    request_config1.method = 'DELETE'\n\n    const request_config2 = getRequestConfig({employee_id: state.data.user.id})\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config1)\n            .catch(() => bad_request('Запрос на удаление фильтра не выполнен'))\n\n        await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {\n                            customFilters: data.data,\n                            active_filter: 0\n                        }\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\nconst Header = props => {\n\n   const [search, setSearch] = useState('')\n\n    const handleChange = event => {\n        setSearch(event.target.value)\n        if (!search) props.changeFilterState({search: ''})\n    }\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if(!props.filter.active_badge) props.resetFilter()\n        if (event.key === 'Enter') props.changeFilterState({search})\n    }\n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => handleChange(event)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\n// function MainFilter({data: {color, title, count, img, filters}, activeBadge}) {\nconst MainFilter = props => {\n\n    const handleChoose = () => {\n        if (props.active_badge !== props.badge.id) {\n            props.changeFilterState({\n                ...props.badge.filter,\n                active_badge: props.badge.id,\n                active_filter: 0\n            })\n        } else {\n            props.resetFilter()\n        }\n    }\n\n    return (\n        <div\n            className='mainFilter'\n            style={{\n                backgroundColor: props.badge.color,\n                opacity: props.active_badge === props.badge.id || props.active_badge === 0 ? 1 : 0.3\n            }}\n            onClick={handleChoose}\n        >\n            <div className='pd5'>\n                <Icon icon={props.badge.icon} className='icon-s25' color='white'/>\n            </div>\n            <div className='filterName'>\n                <div className='filterName-value'>\n                    {props.badge.count} {props.badge.count === 1 ? 'заказ' : ((props.badge.count < 5) ? 'заказа' : 'заказов')}\n                </div>\n                <div className='filterName-title'> {props.badge.title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    active_badge: state.filter.active_badge\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainFilter);","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport MainFilter from './MainFilter'\n\nconst Filters = props => {\n\n    return (\n        <div className='mainFilters'>\n            {props.badges.map(badge => (\n                    badge.count ? <MainFilter badge={badge} key={badge.id}/> : null\n                ))\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.filter.badges\n})\n\nexport default connect(mapStateToProps)(Filters)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        created_by_id: state.data.user.id,\n        branch_id: state.data.current_branch.id,\n        status_id: 1,\n\n        equipments: state.order.equipments,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost\n    })\n\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderEditor',\n            value: false\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config1)\n            .then(response => response.json())\n            .then(data => {\n                if(state.view.checkOrderSticker) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderSticker',\n                        value: true\n                    })\n                }\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig(request_config2))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ordersShow',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count',\n                        data: data.count\n                    })\n                    dispatch({\n                        type: 'RESET_ORDER'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        id: order_id,\n        status_id: status_id\n    })\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    const request_config3 = getRequestConfig({id: state.order.edit})\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config1)\n            .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        if (state.order.edit) {\n            await fetch(state.data.url_server + '/get_orders', request_config3)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0],\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good: state.order.kindof_good.id,\n        brand: state.order.brand.id,\n        subtype: state.order.subtype.id,\n        model: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config1)\n            .catch(() => bad_request('Запрос на изменение заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig(request_config2))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на создание типа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config1)\n            .catch(() => bad_request('Запрос на создание бренда не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config1)\n            .catch(() => bad_request('Запрос на создание подтипа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .catch(() => bad_request('Запрос на создание модели не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    const state = store.getState()\n\n    const request_config1 = title ? getRequestConfig({title})\n        : getRequestConfig({\n            title: state.book.title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.book.branches,\n            deleted: false\n        })\n\n    const request_config2 = getRequestConfig({\n        title,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на создание типа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(idx, title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.edit\n            ? state.order.kindof_good.id\n            : state.order.equipments[idx].kindof_good.id,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title,\n        equipment_type_id: state.book.equipment_type.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .catch(() => bad_request('Запрос на создание бренда не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.edit\n            ? state.order.brand.id\n            : state.order.equipments[idx].brand.id,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title,\n        equipment_brand_id: state.book.equipment_brand.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .catch(() => bad_request('Запрос на создание подтипа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.edit ?\n            state.order.subtype.id\n            : state.order.equipments[idx].subtype.id,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .catch(() => bad_request('Запрос на создание модели не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\n// export function seveEditEquipment( ) {\n\n//   const state = store.getState()\n\n//   const field_lidt = ['equipment', 'equipment_type_id', 'equipment_brand_id', 'equipment_subtype_id']\n//   const url_list = ['/equipment_type', '/equipment_brand', '/equipment_subtype', '/equipment_model']\n//   const list_func = [addEquipmentType, addEquipmentBrand, addEquipmentSubtype, addEquipmentModel]\n\n//   let request_config = getRequestConfig({\n//     id: state.book.edit,\n//     title: state.book.title,\n//     icon: state.book.icon,\n//     url: state.book.url,\n//     [field_lidt[state.book.type]]: state.book.parent_id,\n//     branches: state.book.branches\n//   })\n//   request_config.method = 'PUT'\n\n//   return async dispatch => {\n\n//     await fetch(state.data.url_server + url_list[state.book.type], request_config)\n//     .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n//     list_func[state.book.type]()\n//   }\n// }\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_model', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_type,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_model', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = ({data: { created_by_id, created_at}, employees}) => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Lable = ({data: {id_label, urgent}}) => {\n   return (\n      <td className=\"orderLabel tableRow\">\n         <span className={urgent ? 'fire-text': null}>{ id_label }</span>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = ({data : {estimated_done_at, overdue, status, remaining }}) => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 24) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!overdue && status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(remaining, status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\n\n\nfunction TableHeader(props) {\n\n    //  let startDrag = 0\n    //  let endDrag = 0\n    //  let deltaDrag = 0\n\n\n    //  function handleDragStart(event) {\n    //     startDrag = event.pageX\n\n\n    //  }\n\n    //  function handleDragEnd(event) {\n    //     endDrag = event.pageX\n    //     deltaDrag = endDrag - startDrag\n    //     console.log('отрезок :', deltaDrag)\n    //     const currentSize = parseInt(tableOrdersHeaders.find(header => header.field === data.field).width)\n    //     resizeOrderHeader(data.field,  currentSize + deltaDrag)\n\n    //  }\n\n\n    return (\n        <>\n            <th\n                className='tableColumnHeader'\n                style={{minWidth: `${props.data.width}px`}}\n                onClick={() => props.changeFilterState({\n                    field_sort: props.data.field,\n                    sort: props.filter.sort === 'asc' ? 'desc' : 'asc'\n                })}\n            >\n                {props.data.title}\n                <span>\n        {props.filter.field_sort === props.data.field ? (props.filter.sort === 'asc' ? '↓' : '↑') : null}\n      </span>\n            </th>\n            {/* <th\n    className = 'cursorResizeTable'\n    onDragStart = {handleDragStart}\n    onDragEnd = {handleDragEnd}\n    /> */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changePaymentForm(value, field) {\n    return {\n        type: 'CHANGE_PAYMENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.data.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    const request_config = getRequestConfig({\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: state.payment.income,\n        outcome: -state.payment.outcome,\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at ? state.payment.custom_created_at : now,\n        tags: state.payment.tags,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    })\n\n    const request_config_2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n        if (context.type === 'payment') {\n            await fetch(state.data.url_server + '/get_payments', request_config_2)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'payments',\n                            data: data.data,\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос платежей не выполнен'))\n\n            await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'cashboxes',\n                            data: data.data,\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос касс не выполнен'))\n        }\n\n        if (context.type === 'order') {\n            fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0]\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order') {\n            const request_config3 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config4 = getRequestConfig(state.filter.mainFilter)\n\n            await fetch(state.data.url_server + '/change_order_status', request_config3)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config4)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_ORDERS_SHOW',\n                            ordersShow: data.data,\n                            count: data.count\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order_editor') {\n            const request_config5 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config6 = getRequestConfig({\n                id: context.order_id\n            })\n\n            await fetch(state.data.url_server + '/change_order_status', request_config5)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config6)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0],\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n        }\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.payment.edit,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление платежа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_payments', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPaymentsCard',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PAYMENTS'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, setVisibleFlag} from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentForm(income ? 2 : 1, 'direction')\n            props.changePaymentForm(Math.abs(props.order.price - props.order.payed), income ? 'income': 'outcome')\n            props.changePaymentForm(props.order.client.id, 'client_id')\n            props.editCurrentClient(props.order.client)\n            props.changePaymentForm(income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`, 'description')\n            props.changePaymentForm(income ? 2 : 1, 'direction')\n            props.changePaymentForm(income ? 2 : 8, 'cashflow_category')\n            props.changePaymentForm(props.current_user_id, 'employee_id')\n            props.changePaymentForm(props.order.edit || props.order.id, 'order_id')\n            const context = {\n                type: props.order.edit ? 'closed_order_editor' : 'closed_order',\n                order_id: props.order.edit || props.order.id,\n                status_id: status.id\n            }\n            props.changePaymentForm(context, 'context')\n            props.setVisibleFlag('statusPaymentsEditor', true)\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    // order: state.order,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentForm,\n    setVisibleFlag,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.data.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.data.id)}\n            >\n                {props.data.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.data.id]] ? <StatusList order={props.data}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Brand = ({data: {brand}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {brand.title}\n     </span>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Brand)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = ({data: {kindof_good}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {kindof_good}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Malfunction = ({data: {malfunction}}) => {\n   return (\n    <td>\n      <div className=\"tableText tableOne\">\n         {malfunction}\n      </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Engineer = ({data: {engineer_id}, employees}) => {\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n\n   return (\n     <td>\n     <div>\n        {getEmploeeName(engineer_id)}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 10)}-${phone.slice(9, 12)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = ({data: {client}}) => {\n   return (\n      <td>\n      <div className=\"tableClientName\">{client.name}</div>\n      <div className=\"orderDate\">{showPhone(client.phone[0].number)}</div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = ({data: {price}}) => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{price ? price : null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = ({data: {engineer_notes}}) => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = ({ data }) => {\n   return (\n     <td>\n         <div className=\"tableText row\">\n            <div>\n               <img\n                  className=\"icon_equipment\"\n                  src={data.kindof_good.icon}\n               />\n            </div>\n            <div>\n               <div className='noWr'>\n                  {data.kindof_good.icon ? null : <span className=\"\">{data.kindof_good.title}</span>}\n                  <span className=\"ml5\">{data.brand.title}</span>\n               </div>\n               <div className='noWr'>\n                  <span>{data.subtype.title}</span>\n                  <span className=\"orderDate ml5\">{data.model.title}</span>\n               </div>\n            </div>\n         </div>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Equipment)","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.unvisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    unvisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// unvisible={false}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\n/*\nexport function editTemple(temple) {\n    return {\n        type: 'EDIT_TEMPLE',\n        temple\n    }\n}\n\nexport function resetTemple() {\n    return {\n        type: 'RESET_TEMPLE'\n    }\n}\n\n\nexport function selectedTemple( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_TEMPLE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addTemple() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_temple', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function createTemple() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на создание temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n\n\nexport function saveTemple() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на изменение temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.temple.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n*/","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.unvisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (props.current_id ? `${current.last_name} ${current.first_name}` : 'не назначен') : \n               (props.current_id ? (current.title ? current.title : current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   unvisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // unvisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.unvisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  unvisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport { icon_trush } from '../../../data/icons'\nimport { valueOfPhoneInput } from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n  const handleChange = (idx, event) => {\n    const out = event.target.value.replace(/[^0-9]/g, '')\n    if (out.length < 12) props.changeClientEditorPhone(idx, out)\n }\n\n  return (\n    <div>\n      {props.client.phone.map((phone, idx) => (\n        <div key={idx}>\n          <PhoneTitle idx={idx} title={phone.title} />\n\n          <div className=\"inputPhoneBox\">\n            <input\n              className='textInput w250'\n              onChange={event => handleChange(idx, event)}\n              value={valueOfPhoneInput(phone.number)}\n              onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n              style={ !props.view.inputClientPhoneChecked[idx] ? { borderColor: 'red' } : null}\n            />\n            {idx !== 0 ? (\n              <div\n                onClick={() => {\n                  props.deleteCountNumber(idx)\n                  props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                }}\n              >\n                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                  <path d={icon_trush} />\n                </svg>\n              </div>\n            ) : null}\n          </div>\n          {!props.view.inputClientPhoneChecked[idx] ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n          <div className=\"checkbox mt5\">\n            <input\n              type=\"checkbox\"\n              onChange={() => props.setPhoneNotify(idx)}\n              checked={phone.notify}\n            />\n            <label>Согласен получать SMS</label>\n          </div>\n        </div>\n      ))}\n      <div\n        className=\"addPhone\"\n        onClick={() => {\n          props.addPhoneCounter()\n          props.addVisibleFlag('inputClientPhoneChecked')\n        }}\n      >\n        + Добавить телефон\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx, props.tab_field ? props.tab_field : 'tabs')}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={props.changeClientForm}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","\nimport React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeNameClientFilter, setVisibleFlag,  editCurrentClient } from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport { showPhone } from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\n\nconst SetClientByName = (props) => {\n\n   const [showList, setShowList] = useState(false)\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n         !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n         ) {\n            setShowList(false)\n      }\n    }\n\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n   return (\n      <div className='w400 h52'>\n         \n         <div className='lableImput mt15'>Имя клиента</div>\n\n         <div className='blockImput'>\n            <div \n               id='clientInputBoxOfPayments'\n               className='orderInputBox'\n               onClick={() => setShowList(true)}\n            >\n               <input\n                  className='optionFilterInput'\n                  onChange={event => props.changeNameClientFilter(event.target.value)}\n               />\n               <div \n               className='simbolButton'\n               onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n               >\n                  +\n               </div>\n               <div className='simbolButton'>&#6662;</div> \n            </div>\n\n            {showList ? \n            <div className='listFilter' id='listClientsOfOfPayments'>\n            {props.clientShow.map(client => (\n               <div \n                  className='rowGropList' \n                  key={client.id}\n                  onClick={() => {\n                     setShowList(false)\n                     props.editCurrentClient(client)\n                     props.changePaymentForm(client.id, 'client_id')\n                  }}\n               >\n                  <div>{client.name}</div>\n                  <div className='orderDate'>\n                     {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                  </div>\n               </div>\n            ))}\n            </div> : null}\n\n         </div>\n         \n\n\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   clientShow: state.data.clientShow,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   setVisibleFlag,\n   changePaymentForm,\n   editCurrentClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payment.direction === 2 ? 'income' : 'outcome')}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order_editor' || props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.data.cashboxes\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, {registerLocale} from 'react-datepicker'\n\nimport {\n    setVisibleFlag,\n    addClients,\n    addItemPayments,\n    refreshDataOrder,\n    changeStatusMenuVisible\n} from '../../Redux/actions'\nimport {changePaymentForm, addPaymentTag, deletePaymentTag} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {check0_999} from '../general/utils';\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\nregisterLocale('ru', ru)\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputPaymentSumChecked', true)\n        props.setVisibleFlag('inputPaymentCashboxChecked', true)\n        props.setVisibleFlag('inputPaymentDescChecked', true)\n        props.setVisibleFlag('inputPaymentCashflowChecked', true)\n        props.setVisibleFlag('inputPaymentEmployeeChecked', true)\n        props.setVisibleFlag('statusPaymentsEditor', false)\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.clientFilter])\n\n    useEffect(() => {\n        // props.addItemPayments()\n        props.changePaymentForm(props.user_id, 'employee_id')\n        props.changePaymentForm(props.current_cashbox.id, 'cashbox_id')\n    }, [])\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.setVisibleFlag('inputPaymentSumChecked', false)\n            if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction))\n                props.setVisibleFlag('inputPaymentCashboxChecked', false)\n            if (!props.payment.description)\n                props.setVisibleFlag('inputPaymentDescChecked', false)\n            if (!props.payment.cashflow_category)\n                props.setVisibleFlag('inputPaymentCashflowChecked', false)\n            if (!props.payment.employee_id)\n                props.setVisibleFlag('inputPaymentEmployeeChecked', false)\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type  &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id) &&\n        !cashbox.deleted &&\n        (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentForm(0, 'custom_created_at')\n                            }}\n                            func2={() => setChooseData(true)}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        {chooseData ?\n                            <DatePicker\n                                selected={props.payment.custom_created_at ? new Date(props.payment.custom_created_at * 1000) : Date.now()}\n                                onChange={(date) => {\n                                    props.changePaymentForm(date / 1000, 'custom_created_at')\n                                }}\n                                isClearable={true}\n                                placeholderText='Выбирите дату'\n                                className=\"optionFilterInputDate\"\n                                dateFormat='dd.MM.yyyy HH:mm'\n                                locale={'ru'}\n                                maxDate={Date.now()}\n                                // startDate={Date.now()}\n                                showTimeSelect\n                            /> : null}\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                            close={() => props.changePaymentForm(0, 'client_id')}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                                props.changePaymentForm(0, 'current_type')\n                            }}\n                            func2={() => {\n                                props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                                props.changePaymentForm(1, 'current_type')\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            field={props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'}\n                            setElement={props.changePaymentForm}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentForm(event.target.value, 'description')}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={props.changePaymentForm}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        unvisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={props.changePaymentForm}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    clientFilter: state.filter.clientFilter,\n    cashboxes: state.data.cashboxes,\n    current_branch_id: state.data.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.data.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentForm,\n    setVisibleFlag,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/>\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.data.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeNameClientFilter, changePhoneClientFilter, setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\n\nconst SetClient = (props) => {\n\n   const [listClientsVisible, setListClientsVisible] = useState(false)\n   const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n   const clickHandel1 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n         ) {\n         if (listClientsVisible) {\n            setListClientsVisible(false)\n      }}\n    }\n\n    const clickHandel2 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n         !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n         ) {\n         if (listClientsPhoneVisible) {\n            setListClientsPhoneVisible(false)\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel1)\n      window.addEventListener('click', clickHandel2)\n      return () => {\n        window.removeEventListener('click', clickHandel1)\n        window.removeEventListener('click', clickHandel2)\n      }\n    })\n\n\n\n   return (\n      <div className='cleintForm'>\n\n         <div className = 'formRow'>\n            <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n            <div className='blockImput'>\n               <div \n                  id='orderInputBoxOfOrder'\n                  className='orderInputBox'\n                  onClick={() => setListClientsVisible(true)}\n                  style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n               >\n                  <input\n                     className='optionFilterInput'\n                     onChange={event => props.changeNameClientFilter(event.target.value)}\n                     // onBlur={() => props.setVisibleFlag('checkedOrderClient', !Object.values(props.client).length)}\n                  />\n                  <div \n                     className='simbolButton'\n                     onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                  >\n                     +\n                  </div>\n                  <div className='simbolButton'>&#6662;</div> \n               </div>\n               {props.view.checkedOrderClient ? <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n               {listClientsVisible ? \n               <div className='listFilter' id='listFilterOfOrOrder'>\n               {props.clientShow.map(client => (\n                  <div \n                     className='rowGropList' \n                     key={client.id}\n                     onClick={() => {\n                        props.changeOrderFormS(client, 'client')\n                        setListClientsVisible(false)\n                     }}\n                  >\n                     <div>{client.name}</div>\n                     <div className='orderDate'>\n                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                     </div>\n                  </div>\n               ))}\n               </div> : null}\n\n            </div>\n            </div>\n\n            <div className = 'formRow'>\n\n               <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n               <div className='blockImput'>\n\n                  <div \n                     id='orderInputBoxOfOrderPhone'\n                     className='orderInputBox'\n                     onClick={() => setListClientsPhoneVisible(true)}\n                  >\n                    <LableInput\n                        className='w100'\n                        inputClassName='optionFilterInput'\n                        onChange={value => props.changePhoneClientFilter(value)}\n                        value={props.phone}\n                        isPhone={true}\n                    />\n                     <div \n                        className='simbolButton'\n                        onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                     >\n                        +\n                     </div>\n                     <div className='simbolButton'>&#6662;</div> \n                  </div>\n\n                 \n\n                  {listClientsPhoneVisible ? \n                  <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                  {props.clientShow.map(client => (\n                     <div \n                        className='rowGropList' \n                        key={client.id}\n                        onClick={() => {\n                           props.changeOrderFormS(client, 'client')\n                           setListClientsPhoneVisible(false)\n                        }}\n                     >\n                        <div>{client.name}</div>\n                        <div className='orderDate'>\n                           {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                        </div>\n                     </div>\n                  ))}\n                  </div> : null}\n\n               </div>\n               \n            </div>\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   clientShow: state.data.clientShow,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   changePhoneClientFilter,\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleListFlag } from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleListFlag(props.checkedFlag, props.idx, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleListFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { createEquipmentBrand, addEquipmentBrand, changeBookForm} from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderBrand = (props) => {\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n  }, [props.book.equipment_type, props.book.filter_brand])\n\n\n  const edit = props.order.edit\n  const disabled = !Object.values(props.book.equipment_type).length\n  const brand = props.order.edit ? props.order.brand : props.order.equipments[props.idx].brand\n  const seted = !!Object.values(brand).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS({}, 'brand')\n      props.changeOrderFormS({}, 'subtype')\n      props.changeOrderFormS({}, 'model')\n    } else {\n      props.resetEquipment(props.idx, 'brand')\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_brand')\n  }\n\n  const setBrand = (idx, brand) => {\n    edit ? props.changeOrderFormS(brand, 'brand') : props.setOrderEquipment(idx, 'brand', brand)\n    props.changeBookForm(brand, 'equipment_brand')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.setVisibleListFlag('checkedOrderBrand', props.idx, true)\n    props.changeBookForm('', 'filter_brand')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfBrand\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n        style={!props.view.checkedOrderBrand[props.idx] ? { borderColor: 'red' } : null}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={event => props.changeBookForm(event.target.value, 'filter_brand')}\n          placeholder=\"Выбирете бренд\"\n          value={seted ? brand.title : props.book.filter_brand}\n          disabled={disabled || seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ? \n          <svg\n            className=\"icon-close\"\n            viewBox=\"0 0 22 22\"\n            onClick={ reset }\n          >\n            <path d={icon_close} />\n          </svg> : <span>&#6662;</span>}\n      </button>\n      {!props.view.checkedOrderBrand[props.idx] ? (\n        <div className=\"errorMassageInput\">\n          {'Необоходимо выбрать из списка'}\n        </div>\n      ) : null}\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfBrand\">\n          {props.book.equipment_brands.map(brand => {\n              return  (\n                <div\n                  key={brand.id}\n                  className=\"rowGropList\"\n                  onClick={() => setBrand(props.idx, brand)}\n                >\n                  {brand.title}\n                </div>\n              ) \n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                    props.createEquipmentBrand(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_brand')\n                    // props.addEquipmentBrand()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить бренд\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentBrand,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addEquipmentBrand,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport { createEquipmentType, addEquipmentType, changeBookForm } from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderGroupe = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    props.addEquipmentType()\n  }, [props.book.filter_type])\n\n  const edit = props.order.edit\n  // const types = edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good\n  const types = useMemo(() => edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good, [props.order.kindof_good, props.order.equipments[props.idx].kindof_good])\n  const seted = !!Object.values(types).length \n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n       !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n       ) {\n       if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS( {}, 'kindof_good' )\n      props.changeOrderFormS( {}, 'brand' )\n      props.changeOrderFormS( {}, 'subtype' )\n      props.changeOrderFormS( {}, 'model' ) \n    } else {\n      props.resetEquipment(props.idx, 'kindof_good')\n      props.resetEquipment(props.idx, 'brand')\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_type')\n  }\n\n\n  const setOrderType = (idx, equipment) => {\n    edit ? props.changeOrderFormS( equipment, 'kindof_good' ) : props.setOrderEquipment(idx, 'kindof_good', equipment)\n    props.changeBookForm(equipment, 'equipment_type')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_type')\n  }\n\n   return (\n    <>\n    \n      <button \n        className='optionsFilterText'\n        id='optionsOrderTextOfGroup'\n        onClick={() => setVisibleList(true)}\n        disabled={seted}\n        style={!props.view.checkedOrderKindofGood[props.idx] ? {borderColor: 'red'} : null}\n      > \n        <input \n          className='optionFilterInput'\n          onChange={event => props.changeBookForm(event.target.value, 'filter_type')}\n          placeholder='Выбирете группу'\n          value={seted ? types.title : props.book.filter_type}\n          disabled={seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ?\n        <svg \n          className=\"icon-close\"  \n          viewBox=\"0 0 22 22\"\n          onClick={ reset }\n        >\n          <path d={icon_close}/>\n        </svg> :\n        <span>&#6662;</span> }\n      </button>\n      {!props.view.checkedOrderKindofGood[props.idx] ? <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n      {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n        {props.book.equipment_types.map(equipment => {\n      \n        return (\n          <div\n            key={equipment.id} \n            className='rowGropList'\n            onClick={() => setOrderType(props.idx, equipment) }\n          >\n            {equipment.title}\n          </div> \n        )})}\n        <div className='btmsts'>\n        {visibleBotton ? \n        <input \n          className='optionFilterInput'\n          autoFocus\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') { \n              props.createEquipmentType(event.target.value)\n              props.changeBookForm(event.target.value, 'filter_type')\n              // props.addEquipmentType()\n              setVisisbleBotton(false)\n              \n            } \n          }}\n          placeholder = 'Введите и нажмиете Enter' \n        /> :\n        <div \n          className='btnstsTitle'\n          onClick={() => setVisisbleBotton(true)}\n        >\n          Добавить тип\n        </div>}\n        </div>\n\n      </div> : null}\n      </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  order: state.order,\n  view: state.view,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentType,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addEquipmentType,\n  changeBookForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, changeOrderFormS } from '../../../../Redux/actions'\nimport { createEquipmentModel, addEquipmentModel, changeBookForm } from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderModel = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n  }, [props.book.equipment_subtype, props.book.filter_model])\n\n  const edit = props.order.edit\n\n  const model = edit ? props.order.model: props.order.equipments[props.idx].model\n  const disabled = !Object.values(props.book.equipment_subtype).length\n  // const disabled = edit ? !Object.values(props.order.subtype).length : !Object.values(props.order.equipments[props.idx].subtype).length\n  const seted = !!Object.values(model).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const setModel = (idx, model) => {\n    edit ? props.changeOrderFormS(model, 'model') : props.setOrderEquipment(idx, 'model', model)\n    props.changeBookForm(model, 'equipment_model')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_model')\n  }\n\n  const reset = () => {\n    edit ? props.changeOrderFormS({}, 'model') : props.resetEquipment(props.idx, 'model')\n    props.changeBookForm({}, 'equipment_model')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfModel\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={ event => props.changeBookForm(event.target.value, 'filter_model')}\n          placeholder=\"Выбирете модель\"\n          value={seted ? model.title : props.book.filter_model}\n          disabled={disabled || seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ? (\n          <svg\n            className=\"icon-close\"\n            viewBox=\"0 0 22 22\"\n            onClick={ reset }\n          >\n            <path d={icon_close} />\n          </svg>\n        ) : (\n          <span>&#6662;</span>\n        )}\n      </button>\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfModel\">\n          {props.book.equipment_models.map((model) => {\n              return (\n                <div\n                  key={model.id}\n                  className=\"rowGropList\"\n                  onClick={() => setModel(props.idx, model) }\n                >\n                  {model.title}\n                </div>\n              ) \n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={(event) => {\n                  if (event.key === 'Enter') {\n                    props.createEquipmentModel(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_model')\n                    // props.addEquipmentModel()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить модель\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentModel,\n  setOrderEquipment,\n  resetEquipment,\n  changeOrderFormS,\n  addEquipmentModel,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, changeBookForm, addEquipmentSubtype} from '../../../../Redux/actions/bookActions'\nimport {icon_close} from '../../../../data/icons'\nimport Subtype from './Subtype'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const edit = props.order.edit\n    const subtype = edit ? props.order.subtype : props.order.equipments[props.idx].subtype\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        if (edit) {\n            props.changeOrderFormS({}, 'subtype')\n            props.changeOrderFormS({}, 'model')\n        } else {\n            props.resetEquipment(props.idx, 'subtype')\n            props.resetEquipment(props.idx, 'model')\n        }\n        props.changeBookForm({}, 'equipment_subtype')\n\n    }\n\n    const setSubtype = (idx, subtype) => {\n        edit ? props.changeOrderFormS(subtype, 'subtype') : props.setOrderEquipment(idx, 'subtype', subtype)\n        props.changeBookForm(subtype, 'equipment_subtype')\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.setVisibleListFlag('checkedOrderSubtype', props.idx, true)\n        props.changeBookForm('', 'filter_subtype')\n    }\n\n    return (\n        <>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype[props.idx] ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookForm(event.target.value, 'filter_subtype')}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <svg className=\"icon-close\" viewBox=\"0 0 22 22\" onClick={reset}>\n                        <path d={icon_close}/>\n                    </svg> : <span>&#6662;</span>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype[props.idx] ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => {\n                        return (\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(props.idx, subtype)}\n                            />\n                        )\n                    })}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(props.idx, event.target.value)\n                                        props.changeBookForm(event.target.value, 'filter_subtype')\n                                        // props.addEquipmentSubtype()\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    setOrderEquipment,\n    resetEquipment,\n    setVisibleListFlag,\n    changeOrderFormS,\n    changeBookForm,\n    addEquipmentSubtype\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n} from '../../../../Redux/actions'\nimport { icon_trush } from '../../../../data/icons'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\nimport { sortedIndex } from 'lodash'\n\nconst ChooseEquipment = (props) => {\n  return (\n    <div>\n      <div className=\"formRow mt15\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle\">Изделиe и неисправность</div>\n      </div>\n      {props.order.equipments.map((equipment, idx) => {\n        return (\n          <div className=\"orderDevice\" key={idx}>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Тип устройства<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderGroup idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Бренд<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderBrand idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Модуль / Серия<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderSubtype idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Модель</div>\n              <div className=\"blockImput\">\n                <SetOrderModel idx={idx} />\n              </div>\n            </div>\n            <LabelInputOrder\n              idx={idx}\n              className=\"formRow\"\n              title=\"Неисправность\"\n              name=\"malfunction\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'malfunction', event.target.value)\n              }\n              value={props.order.equipments[idx].malfunction}\n              checkedFlag=\"inputMalfunctionChecked\"\n              checked={props.view.inputMalfunctionChecked[idx]}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Комплектация\"\n              name=\"packagelist\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'packagelist', event.target.value)\n              }\n              value={props.order.equipments[idx].packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Внешинй вид\"\n              name=\"appearance\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'appearance', event.target.value)\n              }\n              value={props.order.equipments[idx].appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Срочно</div>\n              <div className=\"blockImput\">\n                <div className=\"checkbox pd-tb-5 al-itm-fs\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={(event) =>\n                      props.changeOrderForm(idx, 'urgent', event.target.checked)\n                    }\n                    checked={props.order.equipments[idx].urgent}\n                  />\n                  <label></label>\n                  <div\n                    className=\"whiteButton simbolBotton pz-r320\"\n                    onClick={() => props.deleteDevice(idx)}\n                  >\n                    <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                      <path d={icon_trush} />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n\n      <div className=\"formRow jc-c\">\n        <div\n          className=\"fs14 addPhone\"\n          onClick={() => props.addAnotherEquipment()}\n        >\n          + Устройство\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseEquipment)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS } from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n  return (\n    <div>\n\n      <div className='formRow mt15'>\n        <div className='optionsTitle'></div>\n        <div className='orderFormTitle'>Изделиe и неисправность</div>\n      </div>\n\n          <div className='orderDevice'>\n            \n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Тип устройства<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderGroup idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Бренд<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderBrand idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Модуль / Серия<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderSubtype idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>Модель</div>\n              <div className='blockImput'>\n                <SetOrderModel idx={0} />\n              </div>\n            </div>\n\n            <LabelInputOrder\n              idx={23}\n              className='formRow'\n              title='Неисправность'\n              name='malfunction'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'malfunction') }\n              value={props.order.malfunction}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Комплектация'\n              name='packagelist'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'packagelist')}\n              value={props.order.packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Внешинй вид'\n              name='appearance'\n              onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n              value={props.order.appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className='formRow'>\n              <div className='optionsTitle'>Срочно</div>\n              <div className='blockImput'>\n                <div className='checkbox pd-tb-5 al-itm-fs'>\n                  <input\n                    type='checkbox'\n                    onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                    checked={props.order.urgent}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                  />\n                  <label></label>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, { useState, useEffect } from 'react'\n\n\nimport { showDate } from './utils'\n\nimport Icon from './Icon'\nimport { icon_calendar } from '../../data/icons'\n\nconst ChooseDate = (props) => {\n\n   const [current_date, setCurrent_day] = useState(new Date) \n   const [visibleListMonth, setVisibleListMonth] = useState(false)\n   const [visibleInputYear, setVisibleInputYear] = useState(false)\n   const [visibleCalendar, setVisibleCalendar] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`monthList`) ) {\n         if (visibleListMonth) {\n            setVisibleListMonth(false)\n      }}\n      if (!event.path.map(el => el.id).includes(`calendar`) ) {\n         if (visibleCalendar) {\n            setVisibleCalendar(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n   const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n   let first = new Date(current_date)\n   // first.setHours(0, 0, 0, 0)\n   first.setDate(1)\n   first.setTime(first.getTime() - (first.getDay() || 7)*24*60*60*1000)\n   \n\n   let current_days = []\n   for (let i=0; i<42; i++) {\n      current_days[i] = new Date(first.getTime() + 24*60*60*1000)\n      first.setTime(first.getTime() + 24*60*60*1000)\n   }\n\n   const compareDates = (date1, date2) => {\n      return   date1.getDate() === date2.getDate() && \n               date1.getMonth() === date2.getMonth() && \n               date1.getFullYear() === date2.getFullYear()\n   }\n\n   const handleInputYear = (value) => {\n      let out = value.replace(/[^0-9]/g, '')\n      if (value > 9999) out = 9999\n      if (value < 0) out = 0\n      setCurrent_day(new Date(current_date.setFullYear(out)))\n   }\n\n   return (\n      <div>\n         <div \n            className='dateContaner'\n            onClick={() => setVisibleCalendar(true)}\n         >\n            <Icon \n               className='icon-s2 mlr5'\n               icon={icon_calendar}\n               color='gray'\n            />\n            <div>{showDate(props.current_date/1000)}</div>\n         </div>\n\n         {visibleCalendar && !props.disabled ? \n         <div className='calendar' id='calendar'>\n\n            <div className='calendarNavi'>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() - 1)))}\n               >\n                  {'<'}\n               </div>\n\n               <div className='row'>\n                  <div \n                     className='currMonth'\n                     onClick={() => setVisibleListMonth(!visibleListMonth)}\n                  >\n                     <div>{months[current_date.getMonth()]}</div><div className='gu'>&#6662;</div>\n                  </div>\n\n                  {visibleInputYear ? \n                  <input\n                     className='optionFilterInput w30'\n                     autoFocus\n                     onChange={event => handleInputYear(event.target.value)}\n                     value={current_date.getFullYear()}\n                     onBlur={() => setVisibleInputYear(false)}\n                  /> :\n                  <div \n                     className='pd5'\n                     onDoubleClick={() => setVisibleInputYear(true)}\n                  >\n                     {current_date.getFullYear()}\n                  </div>}\n                  <div className='nextY'>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() + 1)))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() - 1)))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() + 1)))}\n               >\n                  {'>'}\n               </div>\n            </div>\n           { visibleListMonth ?\n           <div className='monthList' id='monthList'>\n               {months.map((month, idx) => (\n                  <div \n                     key={idx}\n                     className='month'\n                     onClick={() => {\n                        setCurrent_day(new Date(current_date.setMonth(idx)))\n                        setVisibleListMonth(!visibleListMonth)\n                     }}\n                  >\n                     {month}\n                  </div>\n                     ))}\n            </div> : null}\n\n            <div className='row'>\n               {weekDays.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className='calendarWeekDay'\n                  >\n                     {day}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calendarDays'>\n               {current_days.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className={`calendarDay \n                        ${compareDates(new Date(props.current_date), day) ? 'settedDay' : null}\n                     `}\n                     style={{\n                        color: day.getMonth() === current_date.getMonth() ? null : '#aaaaaa'\n                     }}\n                     onClick={() => {\n                        props.func(day)\n                        setCurrent_day(new Date(day))\n                     }}\n                  >\n                     {day.getDate()}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calandarTime'>\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                  <div className='ssm'>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>:\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                  <div className='ssm'>\n                  <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div> : null }\n\n      </div>\n   )\n}\n\n export default ChooseDate","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEquipment from './ChooseEquipment'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n  return (\n    <div>\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Рекламная компания</div>\n        <div className=\"blockImput\">\n          <ChooseOfList\n            id={14}\n            list={props.ad_campaign}\n            setElement={props.changeOrderFormS}\n            field='ad_campaign_id'\n            current_id={props.order.ad_campaign_id}\n            width={'250px'}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      {props.order.edit ? <ChooseSingleEquipment/> : <ChooseEquipment/>}\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n      </div>\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Заметки приемщика</div>\n        <div className=\"blockImput mh\">\n          <textarea\n            className=\"textInput\"\n            name=\"manager_notes\"\n            onChange={(event) =>\n              props.changeOrderFormS(event.target.value, 'manager_notes')\n            }\n            value={props.order.manager_notes}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      <LabelInputOrder\n        className=\"formRow\"\n        title=\"Ориетнировачная стоимость\"\n        name=\"estimated_cost\"\n        onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n        value={props.order.estimated_cost}\n        disabled={!props.permissions.includes('edit_info_orders')}\n      />\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Дата готовности</div>\n        <div className=\"blockImput\">\n          <ChooseDate\n              func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n              current_date={props.order.estimated_done_at * 1000}\n              disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  ad_campaign: state.data.ad_campaign,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    // const price = state.order.client.discount_service_type ? (\n    //     state.data.service_prices.find(price =>\n    //         price.service_id === service.id &&\n    //         price.discount_margin_id === state.order.client.discount_service_margin_id\n    //     ).cost || 0\n    // ) : (service.price)\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               unvisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * unvisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n *\n * icon={icon} // Иконка\n *\n * iconClassName='iconClassName' // Класс иконки\n *\n * iconColor='black' // Цвет Иконки\n */\nconst Button = (props) => {\n   return props.unvisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.unvisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.unvisible || props.disabled}\n      >\n          <div className='row'>\n              {props.icon ? <Icon icon={props.icon} className={props.iconClassName} color={props.iconColor}/> : null}\n              {props.title ? <div className='ml5'>{props.title}</div> : null}\n          </div>\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    unvisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconColor: PropTypes.string\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на создание запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на изменение запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        unvisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.data.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.data.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPaymants = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPaymants)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addItemPayments, editCurrentClient, addCashboxes } from '../../../../Redux/actions'\nimport {changePaymentForm} from '../../../../Redux/actions/paymentAction'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport TableOrderPaymants from './TableOrderPaymants'\n// import PaymentsEditor from '../../../Payments/PaymentsEditor'\n\nconst OrderPayments = (props) => {\n\n   const handelIncome = () => {\n      props.changePaymentForm(2, 'direction')\n      props.changePaymentForm(props.order.client.id, 'client_id')\n      props.editCurrentClient(props.order.client)\n      props.changePaymentForm(`Оплата по заказу № ${props.order.id_label}`, 'description')\n      props.changePaymentForm(2, 'cashflow_category')\n      props.changePaymentForm(props.current_user_id, 'employee_id')\n      props.changePaymentForm(props.order.edit, 'order_id')\n      props.changePaymentForm({type: 'order'}, 'context')\n      props.setVisibleFlag('statusPaymentsEditor', true)\n   }\n\n   const handelOutcome = () => {\n      props.changePaymentForm(1, 'direction')\n      props.changePaymentForm(props.order.client.id, 'client_id')\n      props.editCurrentClient(props.order.client)\n      props.changePaymentForm(`Выплата по заказу № ${props.order.id_label}`, 'description')\n      props.changePaymentForm(8, 'cashflow_category')\n      props.changePaymentForm(props.current_user_id, 'employee_id')\n      props.changePaymentForm(props.order.edit, 'order_id')\n      props.changePaymentForm({type: 'order'}, 'context')\n      props.setVisibleFlag('statusPaymentsEditor', true)\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handelIncome }\n               unvisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handelOutcome }\n               unvisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPaymants/>\n          {/*{props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}*/}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   setVisibleFlag,\n   changePaymentForm,\n   addItemPayments,\n   editCurrentClient,\n   addCashboxes\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.unvisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    unvisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// unvisible={false}","import React, { useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {icon_down, icon_print} from '../../data/icons'\nimport Button from '../general/Button'\nimport Checkbox from '../general/Checkbox'\nimport {setVisibleFlag} from '../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div className='blockImput mwmc'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listFilter'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        unvisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React, {useRef} from 'react'\nimport { connect } from 'react-redux'\nimport OrderPrint from './OrderPrint'\n\n\nconst OrderHistory = (props) => {\n\n\n    return (\n        <div className=\"orderHistory\">\n        <div className='row'>\n            <OrderPrint/>\n\n        </div>\n\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n\n                    <h1 className = 'tempTitle'>История</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addDictService\n} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders, saveOrderPyaments} from '../../../Redux/actions/orderActions'\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\n\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\n// import * as PropTypes from 'prop-types'\nimport OrderHistory from '../OrderHistory'\n\n// function ComponentToPrint(props) {\n//   return null\n// }\n//\n// ComponentToPrint.propTypes = {ref: PropTypes.any}\n\nconst OrderEditor = (props) => {\n\n  useEffect(() => {\n    props.addClients()\n  }, [props.clientFilter])\n\n  useEffect(() => {\n    props.addDiscountMargin()\n    props.addDictService()\n    props.resetBookEquipment()\n  }, [])\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusOrderEditor', false)\n    props.resetOrder()\n    props.setVisibleFlag('checkedOrderClient', false)\n    props.setVisibleListFlag('checkedOrderKindofGood', 0, true)\n    props.setVisibleListFlag('checkedOrderBrand', 0, true)\n    props.setVisibleListFlag('checkedOrderSubtype', 0, true)\n  }\n\n  const clickHandel = (event) => {\n    if (\n        !event.path.map((el) => el.id).includes('createNewOrder') &&\n        !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n    ) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  // useEffect(() => {\n  //   let sum = 0\n  //   props.order.payments.filter(payment => !payment.deleted).forEach(payment => {\n  //     sum += payment.income\n  //     sum += payment.outcome\n  //   })\n  //   props.changeOrderFormS(sum, 'payed')\n  // }, [props.order.payments])\n  //\n  // useEffect(() => {\n  //   let price = 0\n  //   let discount = 0\n  //   props.order.operations.filter(operation => !operation.deleted).forEach(operation => {\n  //     price += operation.total\n  //     discount += operation.discount_value\n  //   })\n  //   props.order.parts.filter(part => !part.deleted).forEach(part => {\n  //     price += part.total\n  //     discount += part.discount_value\n  //   })\n  //   props.changeOrderFormS(price, 'price')\n  //   props.changeOrderFormS(discount, 'discount_sum')\n  // }, [props.order.operations, props.order.parts])\n\n  \n\n  const handleCreate = () => {\n    if (\n      Object.values(props.order.client).length &&\n      props.order.equipments.every(\n        (equipment) =>\n          Object.values(equipment.kindof_good).length &&\n          Object.values(equipment.brand).length &&\n          Object.values(equipment.subtype).length &&\n          equipment.malfunction\n      )\n    ) {\n      props.createOrder()\n    } else {\n      if (!Object.values(props.order.client).length) {\n        props.setVisibleFlag('checkedOrderClient', true)\n      }\n      props.order.equipments.forEach((equipment, idx) => {\n        if (!Object.values(equipment.kindof_good).length) {\n          props.setVisibleListFlag('checkedOrderKindofGood', idx, false)\n        }\n        if (!Object.values(equipment.brand).length) {\n          props.setVisibleListFlag('checkedOrderBrand', idx, false)\n        }\n        if (!Object.values(equipment.subtype).length) {\n          props.setVisibleListFlag('checkedOrderSubtype', idx, false)\n        }\n        if (!equipment.malfunction) {\n          props.setVisibleListFlag('inputMalfunctionChecked', idx, false)\n        }\n      })\n    }\n  }\n\n  const handleSave = () => {\n    if (\n      Object.values(props.order.client).length &&\n      Object.values(props.order.kindof_good).length &&\n      Object.values(props.order.brand).length &&\n      Object.values(props.order.subtype).length\n      \n    ) {\n      props.saveOrder()\n    } else {\n      if (!Object.values(props.order.client).length) props.setVisibleFlag('checkedOrderClient', true)\n      if (!Object.values(props.order.kindof_good).length) props.setVisibleListFlag('checkedOrderKindofGood', 0, false)\n      if (!Object.values(props.order.brand).length) props.setVisibleListFlag('checkedOrderBrand', 0, false)\n      if (!Object.values(props.order.subtype).length) props.setVisibleListFlag('checkedOrderSubtype', 0, false)\n    }\n  }\n\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n        <div className=\"cteateNewOrderContent\">\n          \n          <div className=\"createOrderForm\">\n\n            <TitleOrderEditor/>\n            {props.order.edit ?\n              <div>\n                <Tabs\n                  list={ ['Информация о заказе', 'Работы и материалы', 'Платежи'] }\n                  func={props.changeOrderFormS}\n                  tab={props.order.tabs}\n                />\n                  {props.order.tabs === 0 ? <OrderInfo/> : null}\n                  {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                  {props.order.tabs === 2 ? <OrderPayments/> : null}\n                </div> : <OrderInfo/> }\n          </div>\n\n         <OrderHistory/>\n        </div>\n\n        <div className=\"boxOrderButtons\">\n          <BottomButtons\n            edit={ props.order.edit }\n            create={ handleCreate }\n            save={ handleSave }\n            // delete={() => props.deleteClient(props.client.edit)}\n            close={ handleClose }\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  clientFilter: state.filter.clientFilter,\n  order: state.order\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  createOrder,\n  changeOrderFormS,\n  resetOrder,\n  addDictService,\n  saveOrder,\n  addOrders,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\n\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { addOrders,editOrder } from '../../Redux/actions/orderActions'\nimport { initStatusMenuVisibleAction, setVisibleFlag } from '../../Redux/actions'\nimport { changeBookForm } from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './StikerToPrint'\n\n// const optionsShowDate = {\n//   year: 'numeric',\n//   month: 'long',\n//   day: 'numeric',\n//   hour: 'numeric',\n//   minute: 'numeric',\n//   // second: 'numeric'\n// }\n\n\nfunction TableOrders(props) {\n\n  \n\n  useEffect(() => {\n    let statusVis = {}\n    props.ordersShow.forEach((order) => {\n    statusVis[order.id] = false\n    })\n    props.initStatusMenuVisible(statusVis)\n  }, [props.ordersShow])\n\n  const handleEdit = (order) => {\n    props.editOrder(order)\n    props.changeBookForm(order.kindof_good, 'equipment_type')\n    props.changeBookForm(order.brand, 'equipment_brand')\n    props.changeBookForm(order.subtype, 'equipment_subtype')\n    props.changeBookForm(order.model, 'equipment_model')\n    props.setVisibleFlag('statusOrderEditor', true)\n  }\n  \n   \n\n  if (props.user.table_headers && props.employees) {\n    return (\n      <div className=\"tableOrders\">\n        <table className=\"tableOrders\">\n          <thead className=\"tableThead\">\n            <tr>\n              {Object.values(props.user.table_headers).map((header) => (\n                <TableHeader data={header} key={header.id}/>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {props.ordersShow.map((order) => (\n              <tr \n                key={order.id} \n                className=\"orderTableRows\"\n                onDoubleClick={ () => handleEdit(order)}\n              >\n                <Lable data = {order}/>\n                <Create data = {order}/>\n                <EstimatedDone data = {order}/>\n                <Status data = {order}/>\n                <Equipment data = {order}/>\n                {/* <KindOfGood data = {order}/> */}\n                <Brand data = {order}/>\n                <Malfunction data = {order}/>\n                <Engineer data = {order}/>\n                {props.permissions.includes('see_client') ? <Client data = {order}/> : <div/>}\n                <Price data = {order}/>\n                <EngineerNotes data = {order}/>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {props.view.statusOrderEditor ? <OrderEditor/> : null}\n        {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n        {props.view.statusOrderSticker ? <StikerToPrint onAfterPrint={() => props.setVisibleFlag('statusOrderSticker', false)}/> : null}\n\n      </div>\n    )\n  } else {\n    return <Loader />\n  }\n}\n\nconst mapStateToProps = state => ({\n  ordersShow: state.data.ordersShow,\n  employees: state.data.employees, \n  user: state.data.user,\n  view: state.view,\n  mainFilter: state.filter.mainFilter,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addOrders,\n  initStatusMenuVisible: initStatusMenuVisibleAction,\n  setVisibleFlag,\n  editOrder,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\n\nconst CustomFilter = props => {\n\n    const handleChoose = () => {\n        if (props.filter.active_filter !== props.data.id) {\n            props.changeFilterState({\n                ...props.data.filters,\n                active_filter: props.data.id,\n                active_badge: 0,\n                search: '',\n                temp_statuses: props.data.filters.status_id || [],\n                temp_order_types: props.data.filters.order_type_id || [],\n                temp_managers: props.data.filters.manager_id || [],\n                temp_engineers: props.data.filters.engineer_id || [],\n                temp_created_at: props.data.filters.created_at,\n                temp_kindof_good_id: props.data.filters.kindof_good,\n                temp_brand: props.data.filters.brand,\n                temp_subtype: props.data.filters.subtype,\n                temp_client: props.data.filters.client_id\n            })\n        } else {\n            props.changeFilterState({\n                active_filter: 0,\n                page: 0,\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n            })\n        }\n    }\n\n    return (\n        <div\n            className='customFilter'\n            onClick={handleChoose}\n            style={{\n                backgroundColor: props.data.id === props.filter.active_filter ? '#eeeeef' : 'white',\n                opacity: props.data.id === props.filter.active_filter || props.filter.active_filter === 0 ? 1 : 0.5\n            }}\n        >\n            {props.data.title}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../Redux/actions'\nimport LableInput from '../general/LableInput'\nimport Checkbox from '../general/Checkbox'\nimport BottomButtons from '../general/BottomButtons'\nimport {changeFilterState, createCustomFilter} from '../../Redux/actions/filterAction'\n\nconst FilterEditor = props => {\n\n    const handleClose = () => {\n        props.changeVisibleState({statusCreateNewFilter: false, inputFilterTitleChecked: true})\n    }\n\n    const clickHandel = event => {\n        if (!event.path.map((el) => el.id).includes('createNewFilterWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.filter.title) {\n            props.createCustomFilter()\n        } else {\n            props.changeVisibleState({inputFilterTitleChecked: false})\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewFilterWindow\">\n\n                <div className=\"createNewTitle w515\">{props.filter.active_filter ? props.filter.title : 'Новый фильтр'}</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                         className='mt15'\n                         title='Наименование'\n                         onChange={event => props.changeFilterState({title: event.target.value})}\n                         value={props.filter.title}\n                         checkedFlag='inputFilterTitleChecked'\n                         checked={props.inputFilterTitleChecked}\n                         redStar={true}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Общий'\n                        onChange={event => props.changeFilterState({general: event.target.checked})}\n                        checked={props.filter.general}\n                    />\n                </div>\n\n                <BottomButtons\n                    edit={props.filter.active_filter}\n                    create={handleCreate}\n                    // save={handleSave}\n                    // delete={() => props.deleteNotEvent(true)}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    inputFilterTitleChecked: state.view.inputFilterTitleChecked,\n\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    createCustomFilter,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const choosed_values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (choosed_values.length === current_statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!choosed_values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        unvisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport {icon_down, icon_left} from '../../../../data/icons'\n\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\nimport Button from '../../../general/Button'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const allStatuses = props.statuses.map(status => status.id)\n\n\n    return props.unvisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div className='liststatus'>\n                    <div\n                        className='blocList'\n                        style={{width: props.width ? props.width : '250px'}}\n                    >\n                        {props.status_group.map(group => (\n                            <ChooseStatusesGruoup\n                                key={group.id}\n                                label={group.name}\n                                group={group.type_group}\n                                func={value => props.func(value)}\n                                current_list={props.current_list}\n                            />\n                        ))}\n                    </div>\n                    <div className='btmsts'>\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Выбрать все'\n                            onClick={() => props.func(allStatuses)}\n                            disabled={props.current_list.length === allStatuses.length}\n                        />\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Отменить все'\n                            onClick={() => props.func_clear()}\n                        />\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5),\n    statuses: state.data.status.filter(status => status.group < 8)\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// unvisible={false}","import React, {useEffect, useState, useRef} from 'react'\n\nimport Checkbox from './Checkbox'\nimport Icon from './Icon'\nimport {icon_down, icon_left} from '../../data/icons'\n\nconst ChooseOfListMany = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const mainCheckbox = useRef()\n\n    useEffect(() => {\n        if(mainCheckbox.current) {\n            const values = props.list.filter(el => props.checked_list.includes(el.id))\n            if (values.length === props.list.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = true\n            } else if (!values.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = false\n            } else {\n                mainCheckbox.current.indeterminate = true\n            }\n        }\n    }, [props.checked_list, listVisible])\n\n\n    const showWord = (len) => {\n        switch (len) {\n\n            case 0: {\n                return 'Ничего не выбрано'\n            }\n\n            case props.list.length: {\n                return 'Все'\n            }\n\n            default:\n                return `Выбрано ${len}`\n        }\n    }\n\n\n    return (\n        <div\n            style={{width: props.width ? props.width : '250px'}}\n            id={`chooseOfList${props.id}`}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div>{showWord(props.checked_list.length)}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='#282e33'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n\n                    <div className='checkbox'>\n                        <input\n                            ref={mainCheckbox}\n                            type='checkbox'\n                            onChange={() => props.func(props.list.map(el => el.id))}\n                            disabled={props.disabled}\n                        />\n                        <label>{props.mainLable}</label>\n                    </div>\n\n                    {props.list.map(element => {\n                        return (\n                            <div\n                                key={element.id}\n                                className='options'\n                            >\n                                <Checkbox\n                                    className='ml10'\n                                    label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                                    onChange={() => props.func([element.id])}\n                                    checked={props.checked_list.includes(element.id)}\n                                    disabled={props.disabled}\n                                />\n\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addClients, changeVisibleState,} from '../../../Redux/actions'\nimport {changeFilterState, deleteFilter, resetTempFilter, selectedFilter} from '../../../Redux/actions/filterAction'\nimport {icon_cross, icon_trush} from '../../../data/icons'\n\n// import SetBrand from './SetBrand'\n// import SetClient from './SetClient'\n// import SetDataCreate from './SetDataCreate'\n// import SetGroup from './SetGroup'\n// import SetSubtype from './SetSubtype'\nimport FilterEditor from '../FilterEditor'\nimport Button from '../../general/Button'\nimport ChooseStatuses from '../../Settings/SettingPages/Notification/ChooseStatuses'\nimport ChooseOfListMany from '../../general/ChooseOfListMany'\n\nconst SetFilter = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.clientFilter])\n\n    const handleSet = () => {\n        const data = {\n            page: 0,\n            engineer_id: props.filter.temp_engineers.length ? props.filter.temp_engineers : null,\n            overdue: null,\n            status_id: props.filter.temp_statuses.length ? props.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: props.filter.temp_order_types.length ? props.filter.temp_order_types : null,\n            manager_id: props.filter.temp_managers.length ? props.filter.temp_managers : null,\n            created_at: props.filter.temp_created_at,\n            kindof_good: props.filter.temp_kindof_good_id,\n            brand: props.filter.temp_brand,\n            subtype: props.filter.temp_subtype,\n            client_id: props.filter.temp_client,\n            active_badge: 0,\n            active_filter: 0\n        }\n        props.changeFilterState(data)\n    }\n\n    return (\n        <div className=\"setCustomFilter\">\n            <div className=\"row jc-c\">\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseStatuses\n                        className='h52'\n                        width='100%'\n                        func={value => props.selectedFilter(value, 'temp_statuses')}\n                        func_clear={() => props.changeFilterState({temp_statuses: []})}\n                        current_list={props.filter.temp_statuses}\n                    />\n                    {/*<div className='mt15'><SetGroup/></div>*/}\n                    {/*<div className='mt15'><SetClient/></div>*/}\n                </div>\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseOfListMany\n                        id='idTypeOrders'\n                        className='h52'\n                        width='100%'\n                        title='Тип заказа'\n                        mainLable='Все'\n                        list={props.order_type}\n                        checked_list={props.filter.temp_order_types}\n                        func={value => props.selectedFilter(value, 'temp_order_types')}\n                    />\n                    {/*<div className='mt15'><SetBrand/></div>*/}\n                    <ChooseOfListMany\n                        id='idManagerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Менеджер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_managers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_managers}\n                        func={value => props.selectedFilter(value, 'temp_managers')}\n                    />\n                </div>\n                <div className=\"jc-sb w100 m10\">\n                    {/*<SetDataCreate/>*/}\n                    {/*<div className='mt15'><SetSubtype/></div>*/}\n                    <ChooseOfListMany\n                        id='idEngineerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Инженер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_engineers}\n                        func={value => props.selectedFilter(value, 'temp_engineers')}\n                        disabled={!props.user.role.orders_visibility}\n                    />\n                </div>\n            </div>\n            <div className=\"buttons fs14 mt15\">\n                <Button\n                    className='blueButton'\n                    title='Применить'\n                    onClick={handleSet}\n                />\n                {props.filter.active_filter ?\n                    <Button\n                        className='whiteButton bcr'\n                        icon={icon_trush}\n                        iconClassName='icon-s1 pd1'\n                        iconColor='white'\n                        onClick={() => props.deleteFilter()}\n                    />\n                    :\n                    <Button\n                        className='whiteButton'\n                        title='Создать фильтр'\n                        onClick={() => props.changeVisibleState({statusCreateNewFilter: true})}\n                    />\n                }\n                <Button\n                    className='whiteButton'\n                    title='Сбросить параметы'\n                    onClick={() => props.resetTempFilter()}\n                    icon={icon_cross}\n                    iconClassName='icon-sm8'\n                    iconColor='#282e33'\n                />\n            </div>\n            {props.statusCreateNewFilter ? <FilterEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    clientFilter: state.filter.clientFilter,\n    statusCreateNewFilter: state.view.statusCreateNewFilter,\n    filter: state.filter,\n    order_type: state.data.order_type,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    user: state.data.user,\n})\n\nconst mapDispatchToProps = {\n    addClients,\n    resetTempFilter,\n    deleteFilter,\n    selectedFilter,\n    changeFilterState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport { setVisibleFlag, changeOrderFormS} from '../../Redux/actions'\nimport {icon_down, icon_filter, icon_table} from '../../data/icons'\nimport Button from '../general/Button'\nimport Icon from '../general/Icon'\nimport {changeFilterState} from '../../Redux/actions/filterAction'\n\nconst CustomPanel = (props) => {\n\n    const newOrder = () => {\n        props.changeOrderFormS(props.user.id, 'manager_id')\n        props.setVisibleFlag('statusOrderEditor', true)\n    }\n\n    const handleEditFilter = () => {\n        props.setVisibleFlag('statusSetCustomFilter', 'change')\n        props.changeFilterState({active_badge: 0,  active_filter: 0})\n    }\n\n    return (\n        <div className='mainCustomPanel '>\n            <div className='customPanel'>\n                <Button\n                    className='greenButton'\n                    title='+ Заказ'\n                    onClick={newOrder}\n                    unvisible={!props.permissions.includes('create_orders')}\n                />\n                <div className='customFilters'>\n                    <Button\n                        className='customFilter'\n                        title='Фильтр'\n                        onClick={handleEditFilter}\n                        unvisible={false}\n                        icon={icon_filter}\n                        iconClassName='icon-s2'\n                        iconColor='282e33'\n                    />\n                    {props.customFilters.map(filter => {\n                        return (\n                            <CustomFilter data={filter} key={filter.id}/>\n                        )\n                    })}\n                </div>\n                <div\n                    className='chooseFieldButton'\n                    onClick={() => console.log('ckick on \"set table\"')}\n                >\n                    <div className='cl11'>\n                        <Icon icon={icon_table} className='icon-table'/>\n                    </div>\n                    <div className='cl12'>\n                        <Icon icon={icon_down} className='icon-table mt5'/>\n                    </div>\n                </div>\n            </div>\n\n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customFilters: state.filter.customFilters,\n    statusSetCustomFilter: state.view.statusSetCustomFilter,\n    permissions: state.data.user.role.permissions,\n    statusOrderEditor: state.view.statusOrderEditor,\n    user: state.data.user,\n    edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useEffect} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport {addStatusGroupAction, addAdCampaign, addEquipment} from '../../Redux/actions'\nimport {addBadges, changeFilterForm, changeFilterState, addCustomFilters} from '../../Redux/actions/filterAction'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\n\nimport CustomPanel from './CustomPanel'\n\n\nfunction Orders(props) {\n\n    useEffect(() => {\n        props.addOrders()\n    }, [\n        props.filter.sort,\n        props.filter.field_sort,\n        props.filter.page,\n        props.filter.engineer_id,\n        props.filter.overdue,\n        props.filter.status_id,\n        props.filter.status_overdue,\n        props.filter.urgent,\n        props.filter.order_type_id,\n        props.filter.manager_id,\n        props.filter.created_at,\n        props.filter.kindof_good,\n        props.filter.brand,\n        props.filter.subtype,\n        props.filter.client_id,\n        props.filter.search\n    ])\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n\n\n    const pageChangeHandler = page => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changeFilterState({page: curent_page})\n        // props.changeFilterForm(curent_page, 'page')\n    }\n\n\n    useEffect(() => {\n        props.addBadges()\n    }, [])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    count: state.data.count,\n    ordersShow: state.data.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment,\n    addBadges,\n    changeFilterState,\n    changeFilterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icone_sphere, icone_setting } from '../../../data/icons'\nimport { activeCashbox, editCashbox, setVisibleFlag, changeCashboxForm } from '../../../Redux/actions'\nimport {changePaymentForm} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\n\nconst Cashbox = (props) => {\n\n   const activ = (id) => {\n      return id === props.activ_cashbox_id\n   }\n\n   const edit = props.user.role.permissions.includes('edit_cash')\n\n   const income = props.user.role.permissions.includes('make_income') &&\n                  activ(props.cashbox.id) && \n                  (props.cashbox.employees[props.user.id].like_cashbox ? \n                  props.cashbox.permissions.includes('incoming') :\n                  props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n   const outcome = props.user.role.permissions.includes('make_expenditure') &&\n                   activ(props.cashbox.id) && \n                   (props.cashbox.employees[props.user.id].like_cashbox ? \n                   props.cashbox.permissions.includes('outcoming') :\n                   props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n   const move = props.user.role.permissions.includes('move_money') &&\n                activ(props.cashbox.id) && \n                (props.cashbox.employees[props.user.id].like_cashbox ? \n                props.cashbox.permissions.includes('outcoming_move') :\n                props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n   const showBalance = props.user.role.permissions.includes('see_remains') &&\n                       (props.cashbox.employees[props.user.id].like_cashbox ? \n                       props.cashbox.permissions.includes('show_cashbox_remains') :\n                       props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n   function handleEdit () {\n      props.editCashbox(props.cashbox)\n      props.setVisibleFlag('statusCashboxEditor', true)\n   }\n\n\n   return (\n      <div \n         className = {`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted  ? 'bcg' : 'cgr'}`}\n         onClick={() => props.changeCashboxForm(props.cashbox, 'current_cashbox')}\n      >\n         <div className='icons'>\n               <div><Icon className='smalIcon' icon={icone_sphere} color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n               <div\n                  onClick={edit ? handleEdit : null}\n               >\n                  <Icon className='smalIcon curP' icon={icone_setting} color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n               </div>\n         </div>\n         <div>{props.cashbox.title.toUpperCase()}</div>\n         {showBalance ? \n         <div className='cacsboxBalance'>{`${parseFloat(props.cashbox.balance).toFixed(2)} руб.`}</div> : null}\n         <div className='row jc-c'>\n            <Button\n               title='+ Приход'\n               className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n               onClick={() => {\n                  props.changePaymentForm(2, 'direction')\n                  props.changePaymentForm({type: 'payment'}, 'context')\n                  props.setVisibleFlag('statusPaymentsEditor', true)\n               }}\n               disabled={props.cashbox.deleted}\n               unvisible={!income}\n            />\n            <Button\n               title='- Расход'\n               className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n               onClick={() => {\n                  props.changePaymentForm(1, 'direction')\n                  props.changePaymentForm({type: 'payment'}, 'context')\n                  props.setVisibleFlag('statusPaymentsEditor', true)\n               }}\n               disabled={props.cashbox.deleted}\n               unvisible={!outcome}\n            /> \n         </div>\n         <Button\n            title='Перемещение'\n            className='whiteButton'\n            onClick={() => {\n               props.changePaymentForm(0, 'direction')\n               props.changePaymentForm(props.cashbox.id, 'cashbox_id')\n               props.changePaymentForm({type: 'payment'}, 'context')\n               props.setVisibleFlag('statusPaymentsEditor', true)\n            }}\n            disabled={props.cashbox.deleted}\n            unvisible={!move}\n         /> \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   user: state.data.user,\n   activ_cashbox_id: state.cashbox.current_cashbox.id\n})\n\nconst mapDispatchToProps = {\n   activeCashbox,\n   editCashbox,\n   setVisibleFlag,\n   changePaymentForm,\n   changeCashboxForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeEmployeeSelected, changeCashboxPermissions } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeEmployeeSelected,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEmoloyee, changeCashboxForm, changeCashboxPermissions } from '../../../Redux/actions'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxForm(employee.id, 'permissions_employee')\n      props.editEmoloyee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxForm(employee_id, 'permissions_employee')\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmoloyee,\n   changeCashboxForm,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../general/LableInput'\n\nimport { changeCashboxForm, chooseCashboxSelected } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={(event) => props.changeCashboxForm(event.target.value, 'title')}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxForm(true, 'isGlobal')}\n            func2 = {() => props.changeCashboxForm(false, 'isGlobal')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxForm(event.target.checked, 'isVirtual')} \n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxForm(0, 'type')}\n            func2={() => props.changeCashboxForm(1, 'type')}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxForm,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm, setVisibleFlag, createCashbox, seveEditCashbox, deleteCashbox } from '../../../Redux/actions'\nimport { permission_cahsbox } from \"../../../data/permissions\";\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n      props.setVisibleFlag('statusCashboxEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   useEffect(() => {\n     if (!props.cashbox.edit) {\n      let list_per = {}\n      props.employees.filter(employee => !employee.deleted).forEach(employee => {\n         list_per[employee.id] = {}\n         list_per[employee.id].available = true\n         list_per[employee.id].like_cashbox = true\n         list_per[employee.id].permissions = permission_cahsbox\n      })\n      props.changeCashboxForm(list_per, 'employees')\n    }\n   }, [])\n\n  const hangleCreate = () => {\n    if (props.cashbox.title) {\n      props.createCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (props.cashbox.title) {\n      props.seveEditCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n        </div>\n\n        <Tabs\n          list={['Общие', 'Доcтуп']}\n          func={props.changeCashboxForm}\n          tab={props.cashbox.tabs_editor}\n          tab_field=\"tabs_editor\"\n        />\n\n        {props.cashbox.tabs_editor === 0 ? <DataCashbox /> : null}\n        {props.cashbox.tabs_editor === 1 ? <CashboxAccess /> : null}\n\n        <BottomButtons\n          edit={props.cashbox.edit}\n          create={ hangleCreate }\n          save={ hangleSave }\n          delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null }\n          recover={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null }\n          close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n          deleted={props.cashbox.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  cashbox: state.cashbox,\n  employees: state.data.employees,\n  view: state.view,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm,\n  setVisibleFlag,\n  createCashbox,\n  seveEditCashbox,\n  deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, setPayment } from '../../Redux/actions'\nimport { icon_file_text, icon_warning } from '../../data/icons'\nimport Icon from '../general/Icon'\nimport { showDate } from '../general/utils'\n\nconst TablePayments = (props) => {\n\n   const showBalance = props.user.role.permissions.includes('see_remains') \n                     //   (props.current_cashbox.employees[props.user.id].like_cashbox ? \n                     //   props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                     //   props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains')) \n\n   return (\n      <table className = 'mt15'>\n         <thead>\n            <tr className=''>\n               <th className='w150'>Создан</th>\n               <th>Описание</th>\n               <th className='w91'>Приход, руб.</th>\n               <th className='w91'>Расход, руб.</th>\n               {showBalance ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n         </thead>\n         <tbody>\n            {props.payments.filter(payment => props.showDeleted || !payment.deleted ).map(payment => (\n               <tr \n                  key={payment.id}\n                  className={payment.deleted ? 'rowDeleted redBorder' : null}\n                  onDoubleClick={() => {\n                     props.setPayment(payment)\n                     props.setVisibleFlag('statusPaymentsCard', true)\n                  }}\n               >\n                  <td>\n                     <div>{payment.employee.name}</div>\n                     <div className='row'>\n                        <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                        {payment.created_at !== payment.custom_created_at ?\n                           <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                           <Icon \n                              className='icon-s2 ml5'\n                              icon={icon_warning} \n                              color='red' \n                           /> \n                        </div> : null}\n                     </div>\n                  </td>\n                  <td>\n                     <div>{payment.description}</div>\n                     {payment.direction ? \n                     <div className='row'>\n                        <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                        <div className='tac ml5 cgr'>{payment.cashflow_category}</div> \n                     </div> : null }\n                  </td>\n                  <td className={payment.income ? 'greenFont tac': 'tac'}>{payment.income}</td>\n                  <td className={payment.outcome ? 'redFont tac': 'tac'}>{payment.outcome}</td>\n                  {showBalance ? <td className='tac'>{parseFloat(payment.deposit).toFixed(2)}</td> : null }\n               </tr> \n            ))}\n         </tbody>\n         \n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payments: state.data.payments,\n   employees: state.data.employees,\n   user: state.data.user,\n   current_cashbox: state.cashbox.current_cashbox\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   setPayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { addPayments } from '../../Redux/actions/paymentAction'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport { icon_stats_docs } from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\n\nregisterLocale('ru', ru)\n\nconst ManeyMovement = (props) => {\n\n   useEffect(() => {\n      if (props.current_cashbox) { props.addPayments() }\n   }, [props.current_cashbox])\n\n   const [showDeleted, setShowDeleted] = useState(false)\n   \n   return (\n      <div className = 'ml30 w100'>\n\n         <div className='row'>\n            <Icon icon={icon_stats_docs}/>\n            <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n         </div>\n\n         <div className='row'>\n            {props.permissions.includes('see_moving_money_all_time') ? <>\n            <div className='w250'>\n               <DatePicker \n                  selectsRange={true}\n                  startDate={props.filter_created_at[0] ? new Date(props.filter_created_at[0] * 1000) : null}\n                  endDate={props.filter_created_at[1] ? new Date(props.filter_created_at[1] * 1000) : null}\n                  onChange={(update) => {\n                     props.changePaymentForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat=\"dd.MM.yyyy\"\n                  locale={'ru'}\n                  maxDate={ Date.now() + 84600000 }\n               />\n            </div>\n\n            <button \n               className='blueButton'\n               onClick={() => props.addPayments()}\n            >\n               Применить\n            </button>\n            </> : null}\n\n            {props.permissions.includes('see_delete_payments') ? \n            <Checkbox\n               label='Показать удаленные'\n               onChange={event => setShowDeleted(event.target.checked)}\n               value={showDeleted}\n            /> : null}\n         </div>\n\n         <TablePayments showDeleted = { showDeleted }/>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_cashbox: state.cashbox.current_cashbox,\n   filter_created_at: state.payment.filter_created_at,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag, addCashboxes, changeCashboxForm } from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addCashboxes()\n   },[])\n\n   const cashboxes = props.cashboxes.filter(cashbox => \n      (!cashbox.deleted || showDeleted) && \n      cashbox.employees[props.user.id].available &&\n      (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n      )\n   \n   \n   // useEffect(() => {\n   //    props.changeCashboxForm(cashboxes[0], 'current_cashbox')\n   // },[])\n\n   return (\n      <div className = 'contentTab'>\n\n         <div className = 'row al-itm-bl'>\n            <div className='cashboxes'>\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  checked={showDeleted}\n               />\n               {cashboxes.map(cashbox => {\n               return (\n                  <Cashbox\n                     key={cashbox.id}\n                     cashbox={cashbox}\n                     active={cashbox.active}\n                  />\n               )})}\n               \n               {props.user.role.permissions.includes('edit_cash') ?\n               <div \n                  className='whiteButton'\n                  onClick={() => props.setVisibleFlag('statusCashboxEditor', true)}\n               >\n                     + Добавить кассу\n               </div> : null}\n\n            </div>\n            {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null }\n           \n         </div>\n         {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n         {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n         {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view,\n   cashboxes: state.data.cashboxes,\n   user: state.data.user,\n   current_branch: state.data.current_branch,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   addCashboxes,\n   changeCashboxForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport { currentMonth } from '../../components/general/utils'\n\n\nexport function changePayrollForm( value, field ) {\n   return {\n     type: 'CHANGE_PAYROLL_FORM',\n     field,\n     value\n   }\n }\n\nexport function editPayroll(payroll) {\n   return {\n     type: 'EDIT_PAYROLL',\n     payroll\n   }\n }\n \n export function resetPayroll() {\n   return {\n     type: 'RESET_PAYROLL'\n   }\n }\n \n \n export function selectedPayroll( value, field ) {\n   return {\n     type: 'SELECTED_PAYROLL',\n     field,\n     value\n   }\n }\n\nexport function addPayrolls() {\n\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n \n   return dispatch => {\n \n     fetch(state.data.url_server + '/get_payrolls', request_config)\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrolls',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос начислений не выполнен'))\n   }\n }\n\n export function addMonthBalance() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n   custom_created_at: currentMonth(),\n   employee_id: state.payroll.setted_employee\n })\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_payroll_sum', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_PAYROLL_FORM',\n          field: 'month_balance',\n          value: data.sum,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос баланса не выполнен'))\n  }\n}\n\nexport function createPayroll() {\n\n  const state = store.getState()\n\n  const request_config1 = getRequestConfig({\n    description: state.payroll.description,      \n    income: state.payroll.income,\n    outcome: -state.payroll.outcome,\n    direction: state.payroll.direction,\n    deleted: state.payroll.deleted,\n    reimburse: state.payroll.reimburse,\n    created_at: state.payroll.created_at,\n    custom_created_at: state.payroll.custom_created_at,\n    relation_type: state.payroll.relation_type,\n    relation_id: state.payroll.relation_id,\n    employee_id: state.payroll.employee_id,\n    order_id: state.payroll.order_id\n  })\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    await fetch(state.data.url_server + '/get_payrolls', request_config2)\n      .then(response =>  response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'payrolls',\n            data: data.data,\n          })\n          dispatch({\n            type: 'RESET_PAYROLL',\n          })\n          dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusPayrollEditor',\n            value: false\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}\n\nexport function deletePayroll(flag) {\n\n  const state = store.getState()\n\n  let request_config1 = getRequestConfig({\n    id: state.payroll.edit,      \n    deleted: flag\n  })\n  request_config1.method = 'PUT'\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    fetch(state.data.url_server + '/get_payrolls', request_config2)\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payrolls',\n          data: data.data,\n        })\n        dispatch({\n          type: 'RESET_PAYROLL',\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPayrollEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { editPayroll } from '../../../Redux/actions/payrollActions'\n\nimport { showDate } from '../../general/utils'\n\nconst TablePayrolls = (props) => {\n\n   const [incomeSum, setIncomeSum] = useState(0)\n   const [outcomeSum, setOutcomeSum] = useState(0)\n\n   const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n   const editPayroll = (payroll) => {\n      props.editPayroll(payroll)\n      props.setVisibleFlag('statusPayrollEditor', true)\n   }\n\n   const payrolls = props.payrolls.filter(payroll => props.showDeleted || !payroll.deleted)\n\n   \n   useEffect(() => {\n      let income_sum = 0\n      let outcome_sum = 0\n      props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n         income_sum += payroll.income\n         outcome_sum += payroll.outcome\n      })\n      setIncomeSum(income_sum)\n      setOutcomeSum(outcome_sum)\n   }, [props.payrolls])\n   \n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w135'>Дата</th>\n               <th>Описание</th>\n               <th className='w91'>Приход, руб.</th>\n               <th className='w91'>Расход, руб.</th>\n               <th className='w91'>Баланс, руб.</th>\n            </tr>\n         </thead>\n         <tbody>\n            {payrolls.map(payroll => (\n               <tr \n                  key={payroll.id}\n                  className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                  onDoubleClick={() => editPayroll(payroll)}\n               >\n                  <td className='pd-lr-5'>\n                     <div>\n                        <div>{type_payrolls[payroll.relation_type]}</div>\n                        <div className='cgr'>{showDate(payroll.created_at)}</div>\n                     </div>\n                  </td>\n                  <td className='pd-lr-5'>{payroll.description}</td>\n                  <td className={payroll.income ? 'greenFont tac': 'tac'}>{payroll.income}</td>\n                  <td className={payroll.outcome ? 'redFont tac': 'tac'}>{payroll.outcome}</td>\n                  <td className='tac'>{payroll.deposit.toFixed(2)}</td>\n               </tr>\n            ))}\n            <tr>\n               <td colSpan='2'>Всего - {payrolls.length}</td>\n               <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n               <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n               <td></td>\n            </tr>\n         </tbody>\n      </table>\n\n   )\n}\n\nconst mapStateToProps = state => ({\n   payrolls: state.data.payrolls\n   })\n\nconst mapDispatchToProps = {\n   editPayroll,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { changePayrollForm } from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\n\nregisterLocale('ru', ru)\n\nconst PayrollForm = (props) => {\n\n   const [chooseData, setChooseData] = useState(false)\n\n   return (\n      <div className=''>\n         <div className='row al-itm-fe'>\n               <ChooseBotton\n                  className='mt15 mr-rg-20'\n                  title='Дата и время'\n                  name={['Текущее', 'Заданное']}\n                  func1 = {() => {\n                    setChooseData(false)\n                    props.changePayrollForm( null, 'custom_created_at')\n                  }}\n                  func2 = {() => setChooseData(true)}\n                  checked = { true }\n                  // disabled={!props.permissions.includes('backdating')}\n               />\n               {chooseData ? \n               <DatePicker \n                  selected={props.payroll.custom_created_at ? new Date(props.payroll.custom_created_at * 1000) : Date.now()}\n                  onChange={(date) => {\n                     props.changePayrollForm( date / 1000, 'custom_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat='dd.MM.yyyy HH:mm'\n                  locale={'ru'}\n                  maxDate={ Date.now() }\n                  // startDate={Date.now()}\n                  showTimeSelect\n               /> : null }\n            </div> \n            <LableInput\n               className='mt15'\n               width='70px'\n               title='Сумма'\n               onChange={event => props.changePayrollForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payroll.direction === 2 ? 'income' : 'outcome')}\n               value={props.payroll.outcome ?  props.payroll.outcome : props.payroll.income}\n               unit='руб.'\n               checkedFlag='inputPayrollSumChecked'\n               checked={props.view.inputPayrollSumChecked}\n               disabled={props.payroll.deleted}\n               redStar={ true }\n            />\n            <ChooseOfList\n               id='employeePayroll'\n               title='Сотрудник'\n               className='mt15'\n               list={props.employees}\n               field='employee_id'\n               setElement={props.changePayrollForm}\n               current_id={props.payroll.employee_id}\n               width={'250px'}\n               employee={true}\n               checkedFlag='inputPayrollEmployeeChecked'\n               checked={props.view.inputPayrollEmployeeChecked}\n               disabled={props.payroll.deleted}\n               // unvisible={false}\n            />\n            <LableArea\n               className='mt15'\n               title='Коментарий'\n               onChange={event => props.changePayrollForm(event.target.value, 'description')}\n               value={props.payroll.description}\n               checkedFlag='inputPayrollDescChecked'\n               checked={props.view.inputPayrollDescChecked}\n               redStar={ true }\n               disabled={props.payroll.deleted}\n            />      \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view, \n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.data.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { resetPayroll, changePayrollForm, createPayroll, deletePayroll } from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\n\nconst PaypolleEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusPayrollEditor', false)\n      props.setVisibleFlag('inputPayrollDescChecked', true )\n      props.setVisibleFlag('inputPayrollEmployeeChecked', true )\n      props.resetPayroll()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      props.changePayrollForm(props.payroll.setted_employee, 'employee_id')\n   }, [])\n\n \n\n   const hangleCreate = () => {\n      if (\n         (props.payroll.income || props.payroll.outcome) &&\n         props.payroll.employee_id  && \n         props.payroll.description\n         ) {\n         props.createPayroll()\n      } else {\n         if (!(props.payroll.income || props.payroll.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n         if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n         if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n      }\n   }\n\n  const hangleSave = () => {\n   if (\n      (props.payrolle.income || props.payrolle.outcome) &&\n      props.payroll.employee_id  && \n      props.payroll.description\n      ) {\n      // props.createPayment()\n   } else {\n      if (!(props.payrolle.income || props.payrolle.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n      if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n      if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n   }\n  }\n\n  \n\n  const title = ['', 'Взыскание', 'Премия']\n\n  const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n  return (\n      <div className=\"rightBlock\">\n         <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n         <div className=\"createNewTitle\">\n            {props.payroll.edit ? type_payrolls[props.payroll.relation_type] :(title[props.payroll.direction])}\n         </div>\n\n         <div className='contentEditor'>\n           \n           {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n         </div>\n       \n        <BottomButtons\n            edit={props.payroll.edit}\n            create={ hangleCreate }\n            // save={ hangleSave }\n            delete={ props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null }\n            recover={ props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null }\n            close={ handleClose }\n            deleted={props.payroll.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view, \n  payroll: state.payroll,\n  permissions: state.data.user.role.permissions,\n  employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   setVisibleFlag,\n   resetPayroll,\n   createPayroll,\n   deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","\nimport React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { addEmployees, setVisibleFlag } from '../../../Redux/actions';\nimport { changePayrollForm, addPayrolls, addMonthBalance } from '../../../Redux/actions/payrollActions'\nimport { showName } from '../../general/utils'\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\n\nregisterLocale('ru', ru)\n\n\nconst EmployeeSalary = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addMonthBalance()\n      props.addEmployees()\n   }, [props.payroll.setted_employee])\n\n   const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n   const handleIncome = () => {\n      props.changePayrollForm(2, 'direction')\n      props.changePayrollForm(9, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n\n   const handleOutcome = () => {\n      props.changePayrollForm(1, 'direction')\n      props.changePayrollForm(10, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n   \n\n   return (\n      <div className = ''>\n         <div className='createNewTitle fsz20 mt0'>\n            {showName(current_employee)}\n         </div>\n         <div className='txtb'>\n            <span>Начисленно в текущем месяце: </span>\n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{props.payroll.month_balance.toFixed(2)}</span> руб.\n            </div>\n         <div className='txtb'>\n            <span>Баланс:</span> \n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{current_employee.balance.toFixed(2)}</span> руб.\n            </div>\n\n         <div className='row mt15 jc-sb'>\n           <div className='row'>\n               <div className='w250'>\n                  <DatePicker \n                     selectsRange={true}\n                     startDate={props.payroll.filter_created_at[0] ? new Date(props.payroll.filter_created_at[0] * 1000) : null}\n                     endDate={props.payroll.filter_created_at[1] ? new Date(props.payroll.filter_created_at[1] * 1000) : null}\n                     onChange={(update) => {\n                        props.changePayrollForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                     }}\n                     isClearable={true}\n                     placeholderText='Выбирите дату'\n                     className=\"optionFilterInputDate\"\n                     dateFormat=\"dd.MM.yyyy\"\n                     locale={'ru'}\n                     maxDate={ Date.now() + 84600000 }\n                  />\n               </div>\n               <Button\n                  className='blueButton'\n                  title='Применить'\n                  onClick={() => props.addPayrolls()}\n               />\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  value={showDeleted}\n                  unvisible={!props.permissions.includes('see_seleted_payrolls')}\n               />\n            </div>\n            <div className='row'>\n               <Button\n                  className='greenButton'\n                  title='+ Премия'\n                  onClick={ handleIncome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n               <Button\n                  className='greenButton bcr m10'\n                  title='- Взыскание'\n                  onClick={ handleOutcome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n            </div>\n         </div>\n         {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n         <TablePayrolls showDeleted={showDeleted}/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   statusPayrollEditor: state.view.statusPayrollEditor\n   })\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   addPayrolls,\n   addMonthBalance,\n   addEmployees,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showName } from '../../general/utils'\nimport { changePayrollForm } from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Сотрудник</th>\n               <th>Баланс</th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.employees.map(employee => (\n               <tr \n                  key={employee.id}\n                  onClick={() => props.changePayrollForm(employee.id, 'setted_employee')}\n                  style={employee.id === props.payroll.setted_employee ? { backgroundColor: '#cae1f5'} : null}\n               >\n                  <td>{showName(employee)}</td>\n                  <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n               </tr>\n            ))}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   payroll: state.payroll\n   })\n\nconst mapDispatchToProps = {\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollForm } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollForm(props.user_id, 'setted_employee')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm  } from '../../Redux/actions'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\n\nconst Payments = (props) => {\n\n  useEffect(() => {\n \n  }, [])\n\n\n  return (\n    <div className='pageContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Финансы</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ ['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты'] }\n        func={props.changeCashboxForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <Cashboxes/>: null}\n         {props.tabs === 1 ? null : null}\n         {props.tabs === 2 ? null : null}\n         {props.tabs === 3 ? <Salaries/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.cashbox.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td>{part[header.field].title}</td>\n                            return <td>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport { icon_table } from '../../data/icons'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         className={`tableFields ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1 h24'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                  <path d={icon_table}></path>\n               </svg>\n            </div>\n            <div className='cl12'>\n               <span className=\"fieldSeparate\">&#6662;</span>\n            </div>   \n         </div>\n\n         {listVisible ?\n            <div \n               className='listOptions'\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            unvisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            unvisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                unvisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                unvisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={props.changeWarehouseForm}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clients = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут клиенты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusSettingRow } from '../../Redux/actions'\n\n\nfunction SettingRow(props) {\n  return (\n    <Link \n    className=\"settingRow\" \n    to={props.row.url}\n    style={{\n       backgroundColor: props.settingMenu.find(row => row.id === props.row.id).active ? '#939699' : '#53585c',\n       color: props.settingMenu.find(row => row.id === props.row.id).active ? '#fff' : null\n      }}\n    onClick={() => props.changeStatusSettingRow(props.row.id)}\n    >\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n   settingMenu: state.data.settingMenu\n})\n\nconst mapDispatchToProps = {\n   changeStatusSettingRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  unvisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport { changeEmployeEditorForm, changeEmployeeEditorRoleOptions, setRoleEmployeeEdetor } from '../../../../Redux/actions'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'first_name')}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'last_name') }\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'email')}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'login') }\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? (\n        <div className=\"errorMassageInput\">Такой Login уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'password')}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeEditorForm(value, 'phone')}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'inn')}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'doc_name')}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event =>\n          props.changeEmployeEditorForm(event.target.value, 'notes')\n        }\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'post')}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        field=\"role_id\"\n        setElement={props.changeEmployeEditorForm}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeEditorForm,\n  changeEmployeeEditorRoleOptions,\n  setRoleEmployeeEdetor,\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee\n} from '../../../../Redux/actions'\nimport { addPayrules } from '../../../../Redux/actions/payrulleAction'\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst EmploeeyEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusEmployeeEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n    props.addPayrules()\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login &&\n      props.employee.password &&\n      props.employee.role_id !== 0\n    ) {\n      props.createEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n      if (!props.employee.password) {\n        props.setVisibleFlag('inputEmployeePasswordChecked', false)\n      }\n      if (props.employee.role_id === 0) {\n        props.setVisibleFlag('inputEmployeeRoleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login\n    ) {\n      props.seveEditEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit\n            ? `${props.employee.last_name} ${props.employee.first_name}`\n            : 'Новый сотрудник'}\n        </div>\n\n        <div className=\"tabs\">\n          <div\n            className={props.tabs === 1 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(1)}\n          >\n            Общие\n          </div>\n          <div\n            className={props.tabs === 2 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(2)}\n          >\n            Доступ\n          </div>\n        </div>\n\n        {props.tabs === 1 ? <EditEmployeeGenerally /> : null}\n        {props.tabs === 2 ? <EditEmployeePermission /> : null}\n\n        <BottomButtons\n          edit={props.edit}\n          create={hangleCreate}\n          save={hangleSave}\n          delete={() => props.deleteEmployee(true)}\n          recover={ props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n          close={() => props.setVisibleFlag('statusEmployeeEditor', false)}\n          deleted={props.employee.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tabs: state.employee.tabs,\n  edit: state.employee.edit,\n  employee: state.employee,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee,\n  addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editEmoloyee, setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmoloyee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n   editEmoloyee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles, changeShowDeleted, resetEmoloyee} from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmoloyee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={() => props.changeShowDeleted()}\n                        checked={props.showDeleted}\n                        unvisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeShowDeleted,\n    resetEmoloyee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeShedule } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n  const weekdays = [\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n    'Воскрсение',\n  ]\n\n  return (\n    <div className=\"schedule mr-rg-20\">\n      <div className=\"lableImput mt15\">График работы локации</div>\n      {props.branch.schedule.map((day, idx) => {\n        return (\n          <div className=\"row mt15\" key={idx}>\n            <Checkbox\n              className=\"w150\"\n              onChange={(event) =>\n                props.changeShedule(idx, 'work_day', event.target.checked)\n              }\n              checked={day.work_day}\n              label={weekdays[idx]}\n              disabled={props.branch.deleted}\n            />\n\n            {props.branch.schedule[idx].work_day ? (\n              <div className=\"row\">\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'start_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.start_time}\n                />\n                <div className=\"w30 tac\">&#8212;</div>\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'end_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.end_time}\n                />\n              </div>\n            ) : null}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n  changeShedule,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeBranchForm } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\nimport {\n  icon_location,\n  icon_map_location,\n  icon_wrench,\n  icon_hammer,\n  icon_radio,\n  icon_git,\n  icon_svg,\n} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchForm('color', color)\n                        props.changeBranchForm('icon', icon)\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setBranchEmployee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\n\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.filter(employee => !employee.deleted).map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n} from '../../../../Redux/actions'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n      props.setVisibleFlag('statusBranchEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateBranch = () => {\n    if (\n      props.branch.name &&\n      props.branch.orders_prefix &&\n      props.branch.documents_prefix\n    ) {\n      props.createBranch()\n    } else {\n      if (!props.branch.name) {\n        props.setVisibleFlag('inputBranchNameChecked', false)\n      }\n      if (!props.branch.orders_prefix) {\n        props.setVisibleFlag('inputBranchPrefixChecked', false)\n      }\n      if (!props.branch.documents_prefix) {\n        props.setVisibleFlag('inputBranchPrefixDocChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.branch.edit ? props.branch.name : ' Новая локация'}\n        </div>\n\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Название\"\n          onChange={(event) => props.changeBranchForm('name', event.target.value)}\n          value={props.branch.name}\n          checkedFlag=\"inputBranchNameChecked\"\n          checked={props.view.inputBranchNameChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Адрес\"\n          onChange={(event) => props.changeBranchForm('address', event.target.value)}\n          value={props.branch.address}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className='textInput w250'\n          title='Телефон'\n          onChange={value => props.changeBranchForm('phone', value)}\n          value={props.branch.phone}\n          disabled={props.branch.deleted}\n          isPhone={true}\n        />\n        <Schedule />\n        <ChooseIcon />\n        <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n        <ChooseOfList\n          id={18}\n          list={props.order_type}\n          field=\"orders_type_id\"\n          setElement={props.changeBranchForm}\n          current_id={props.branch.orders_type_id}\n          width={'250px'}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера заказа\"\n          onChange={(event) => props.changeBranchForm('orders_prefix', event.target.value)}\n          value={props.branch.orders_prefix}\n          checkedFlag=\"inputBranchPrefixChecked\"\n          checked={props.view.inputBranchPrefixChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.orders_prefix}-${\n            props.counters.find((count) => count.id === 1).count\n          }`}\n        </p>\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера документов\"\n          onChange={(event) => props.changeBranchForm('documents_prefix', event.target.value)}\n          value={props.branch.documents_prefix}\n          checkedFlag=\"inputBranchPrefixDocChecked\"\n          checked={props.view.inputBranchPrefixDocChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.documents_prefix}-${\n            props.counters.find((count) => count.id === 2).count\n          }`}\n        </p>\n        <ChooseEmployees />\n\n        <BottomButtons\n          edit={props.branch.edit}\n          create={handleCreateBranch}\n          save={() => props.saveBranch()}\n          recover={\n            props.permissions.includes('setting_recover_branch')\n              ? () => props.deleteBranch(false)\n              : null\n          }\n          delete={() => props.deleteBranch(true)}\n          close={() => props.setVisibleFlag('statusBranchEditor', false)}\n          deleted={props.branch.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  view: state.view,\n  order_type: state.data.order_type,\n  counters: state.data.counters,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editBranch } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\n\nconst TableBranches = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th></th>\n               <th>Название локации</th>\n               <th>Адрес</th>\n               <th>Телефон</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.branches.filter(branch => props.showDeleted || !branch.deleted).map(branch =>{\n            return (\n               <tr \n                  key={branch.id}\n                  className={branch.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => props.editBranch(branch)} \n               >\n                  <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                  <td>{branch.name}</td>\n                  <td>{branch.address}</td>\n                  <td>{showPhone(branch.phone)}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   branches: state.data.branches,\n   showDeleted: state.branch.showDeleted\n   })\n\nconst mapDispatchToProps = {\n   editBranch\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addCounters, changeBranchForm } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n  useEffect(() => {\n    props.addCounters()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n          <span className='headerTitle'>Локации</span>\n        </div>\n\n        <div className='settingPageBody'>\n        <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n        <div className='row'>\n          <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusBranchEditor', true)}\n          > \n            + Добавить локацию\n          </div>\n          {props.permissions.includes('setting_see_branch') ? <Checkbox\n            className='ml10'\n            label='Показать удаленные'\n            onChange={event => props.changeBranchForm('showDeleted', event.target.checked)}\n            checked={props.showDeleted}\n          /> : null}\n        </div>\n\n        <TableBranches/>\n\n        {props.statusBranchEditor ? <BranchEditor/> : null}\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusBranchEditor: state.view.statusBranchEditor,\n  showDeleted: state.branch.showDeleted,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addCounters,\n  changeBranchForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                unvisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                unvisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.data.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { editEmoloyee, setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmoloyee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmoloyee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={props.changeWarehouseForm}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        unvisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        unvisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            unvisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        unvisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    unvisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    unvisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шиблонов не выполнен'))\n\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    unvisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    unvisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={props.changeNotEventForm}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          unvisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.unvisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            unvisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                unvisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.data.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n  useEffect(() => {\n    props.addEquipment()\n    props.addDictMalfunction()\n    props.addDictPackagelist()\n    props.addItemPayments()\n  }, [])\n\n  const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Справочники</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ tabs_list }\n        func={props.changeBookForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <BookEquipment/> : null}\n         {props.tabs === 1 ? <MalfunctionBooks/> : null}\n         {props.tabs === 2 ? <PackagelistBook/> : null}\n         {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n  addEquipment,\n  addDictMalfunction,\n  addDictPackagelist,\n  addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n      {/* <div className='settingContent'> */}\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n          {/* </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\n\nimport { addMainData, addEmployees, addStatus, addData } from '../Redux/actions';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\n\n\n\n\nfunction Main(props) {\n\n    // Загружаем строки меню в State\n    useEffect(() => {\n        props.addMainData()\n        props.addEmployees()\n        props.addStatus()\n    }, [])\n    useEffect(() => {\n        props.addData(props.branches.filter(branch => branch.employees.includes(props.user_id))[0], 'current_branch')\n    }, [props.branches])\n\n\n    \n    return (\n        <div>\n            <Sidebar/>\n            <div className = 'contentMain'>\n                <Switch>\n                    <Route path = '/tasks' component = {TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path = '/orders' component = {Orders}/>\n                    <Route path = '/shops' component = {Shops}/>\n                    <Route path = '/payments' component = {Payments}/>\n                    <Route path = '/wherehouse' component = {Wherehouse}/>\n                    <Route path = '/clients' component = {Clients}/>\n                    <Route path = '/analytics' component = {Analytics}/>\n                    <Route path = '/reports' component = {Reports}/>\n                    <Route path = '/telephony' component = {Telephony}/>\n                    <Route path = '/settings' component = {Settings}/>\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.data.branches\n})\n\n  const mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loginAction, loguotAction, addUserAction, log_in } from '../Redux/actions'\n\nfunction Login(props) {\n\n\n  const handleClick = ({target: {form}}) => {\n     props.log_in(form.login.value, form.password.value)\n  }\n\n\n\n  return (\n    <div className=\"mainLoginContaner\">\n      <div className=\"loginContanier\">\n        <h2>Войдите в аккаунт</h2>\n        {props.error_message ? (\n          <span className=\"errorMessageLogin\">{props.error_message}</span>\n        ) : null}\n        <form id=\"loginForm\">\n          <div>\n            <label className=\"loginFormLable\">Логин или Email</label>\n            <input \n              id=\"login\"\n              className=\"loginFormInput\" \n              type=\"text\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <label className=\"loginFormLable\">Пароль</label>\n            <input \n              id=\"password\" \n              className=\"loginFormInput\" \n              type=\"password\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n              Авторизоваться\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  serverUrl: state.data.url_server,\n  error_message: state.data.error_message\n})\n\nconst mapDispatchToProps = {\n    // explicitly forwarding arguments\n    login: loginAction,\n    loguot: loguotAction,\n    addUser: addUserAction,\n    log_in\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)\n","import React  from \"react\";\nimport Main from './components/Main'\nimport { connect } from \"react-redux\";\n\n\nimport Login from './components/Login'\n\n\nfunction App(props) {\n\n\n  return props.token ? <Main/> : <Login/>\n\n  \n}\n\nconst mapStateToProps = state => ({\n  token: state.data.token\n})\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}