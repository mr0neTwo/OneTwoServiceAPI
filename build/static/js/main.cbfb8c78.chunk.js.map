{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","Redux/actions/actionUtils.js","Redux/actions/filterAction.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/Brand.js","components/orders/cell/KindOfGood.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","Redux/actions/clientAction.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseEquipment.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/general/ChooseDate.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPayments.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/OrderPrint.js","components/orders/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/Sticker.js","components/orders/StikerToPrint.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/FilterEditor.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","components/general/ChooseOfListMany.js","components/general/ChooseWithSearch.js","components/orders/setCustomFilter/SetFilter.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/general/TableFields.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","ordersShow","count","menuRows","id","title","image","url","group_name","active","permission_keys","map","per","settingMenu","permission_key","payments","employees","user","JSON","parse","sessionStorage","getItem","status","status_group","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","branches","cashboxes","payrules","payrolls","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","current_branch","token","login_status","error_message","url_server","process","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","inputFilterTitleChecked","errorSameMail","errorSameLogin","clientFilter","page","name","phone","search_word","badges","customFilters","general","sort","field_sort","engineer_id","overdue","status_id","status_overdue","urgent","order_type_id","manager_id","created_at","kindof_good","brand","subtype","client_id","search","temp_statuses","temp_order_types","temp_managers","temp_engineers","temp_created_at","temp_kindof_good_id","temp_brand","temp_subtype","temp_client","active_badge","active_filter","title_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","tabs","showDeleted","role_title","first_name","last_name","email","notes","login","password","role_id","permissions","inn","doc_name","post","deleted","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","model","operations","parts","attachments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","warranty_measures","equipments","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","filter_name","filter_phone","logo","icon_trush","icon_close","icon_location","icon_warning","icon_clock","icon_table","icon_pencil","icon_right","icon_left","icon_down","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","img","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_id","cashbox_id","employee_id","order_id","target_cashbox_id","cashbox","employee","order","filter_created_at","Math","round","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","field","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","reimburse","relation_type","setted_employee","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","events","event","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","rows","row","a","b","view","Object","assign","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","new_data","every","val","includes","saveToApp","setItem","stringify","tempFilter","word","client_name","replace","range","role","bool","console","log","tab","equipments_list","phones","statusPhones","statusTitle","tag","tags_list","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","Accept","bad_request","massage","clear","warn","changeStatusMenuVisible","changeNameClientFilter","changePermissions","editEmoloyee","setClietnCheckbox","setVisibleFlag","changeVisibleState","setVisibleListFlag","resetEquipment","setOrderEquipment","changeOrderForm","addAnotherEquipment","deleteDevice","changeOrderFormS","changeBranchForm","changeCashboxForm","changeCashboxPermissions","addData","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","editClient","dispatch","fetch","then","response","json","success","catch","addEmployees","filters","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addDictService","mapDispatchToProps","changeStatusMenuRow","connect","props","className","to","style","find","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","LogoUser","src","alt","Icon","viewBox","user_id","useState","menuVisibel","setMenuVisibel","generally_menu","some","key","report_menu","setting_menu","length","changeFilterState","resetFilter","setSearch","placeholder","onChange","target","handleChange","onKeyPressCapture","preventDefault","handleSearch","badge","opacity","addOrders","changeStatus","request_config1","request_config2","request_config3","changeBookForm","resetBookEquipment","chooseBookSelected","addEquipmentType","message","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","getEmploeeName","toLocaleString","year","month","day","hour","minute","datestamp","statusGroop","deltaMinut","abs","deltaHour","deltaDay","getDateEstimated","minWidth","width","changePaymentForm","changePaymentState","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","window","addEventListener","removeEventListener","optionsShowDate","showPhone","slice","check0_100","isNaN","showName","showDate","date","currentMonth","today","start_date","setDate","setHours","valueOfPhoneInput","changeClientForm","addClients","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","unvisible","disabled","func1","func2","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","tab_field","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","forEach","showList","setShowList","disc","parseFloat","registerLocale","ru","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","item","request_config_2","request_config4","mainFilter","request_config5","request_config6","current_branch_id","order_edit","handleClose","chooseData","setChooseData","selected","isClearable","placeholderText","dateFormat","locale","maxDate","showTimeSelect","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","changePhoneClientFilter","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","types","useMemo","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","onMouseOver","onMouseOut","cteateEquipmentSubtype","setSubtype","SetOrderGroup","ChooseDate","current_date","setCurrent_day","visibleListMonth","setVisibleListMonth","visibleInputYear","setVisibleInputYear","visibleCalendar","setVisibleCalendar","months","first","setTime","getTime","getDay","current_days","setMonth","getMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","date1","date2","getDate","getHours","getMinutes","setMinutes","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","iconClassName","iconColor","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","height","current_engineer_id","isExist","text","deletePayment","Checkbox","label","createOrder","resetOrder","saveOrder","Sticker","forwardRef","ref","stickerToPrintRef","useRef","printOSticker","useReactToPrint","content","onAfterPrint","display","initStatusMenuVisible","list_id","editOrder","statusVis","table_headers","handleEdit","addClientToTempFilter","createCustomFilter","mainCheckbox","current_statuses","choosed_values","current_list","indeterminate","handleChoose","labelClassName","type_group","allStatuses","func_clear","ChooseOfListMany","checked_list","len","showWord","mainLable","ChooseWithSearch","current_element","changeFilter","resetTempFilter","deleteFilter","selectedFilter","changeClientState","addStatusGroup","addCustomFilters","addAdCampaign","addBadges","employee_access","changeFilterForm","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","activeCashbox","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","changeEmployeeSelected","perm","setPerm","available","chooseCashboxSelected","createCashbox","seveEditCashbox","list_per","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","income_sum","outcome_sum","cashboxAvailable","setShowDeleted","selectsRange","startDate","endDate","update","addCashboxes","changePayrollForm","addPayrolls","editPayroll","type_payrolls","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","setTotal","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","category","choose","cat","catVisible","setCatVisible","mainCategory","createWarehouseCategory","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","TableFields","minHeight","addWarehouseCategories","addParts","choosePartSelected","changeStatusSettingRow","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","changeEmployeEditorForm","changeEmployeeEditorRoleOptions","setRoleEmployeeEdetor","changeEmployeeTabs","createEmployee","seveEditEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","changeShowDeleted","resetEmoloyee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","editBranch","addCounters","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableFields","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","addStatus","addMainData","counts","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","loguot","addUser","log_in","access_token","serverUrl","form","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"kQAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,wMAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAAO,uBACPC,YAAa,8JACd,CACCD,MAA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","file":"static/js/main.cbfb8c78.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import { data_setting_menu } from '../../data/dataSettingRows'\nimport { data_menu_rows } from '../../data/dataSidebarRows'\n\nconst initialState = {\n    ordersShow: [],\n    count: 0,\n    menuRows: data_menu_rows,\n    settingMenu: data_setting_menu,\n    payments: [],\n\n    employees: [],\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    branches: [],\n    cashboxes: [],\n    payrules: [],\n    payrolls: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    current_branch: {},\n\n    token: sessionStorage.getItem('1xsndt') || '',\n    login_status: false,\n    error_message: '',\n    url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:5005' // Мобильный\n    // url_server: 'http://10.6.1.26:80/' // VPN\n\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n  \n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n  switch (action.type) {\n\n    case 'LOGIN': {\n      return {\n         ...state, \n         token: action.token\n        }}\n\n    case 'LOGUOT': {\n      return {\n         ...state, \n         token: '',\n         login_status: false \n        }}\n\n    case 'ADD_MENU_ROWS': {\n      return {\n         ...state, \n         menuRows: action.rows,\n        }}\n\n    case 'ADD_STATUS': {\n      return {\n         ...state, \n         status: action.status,\n        }}\n\n    case 'ADD_STATUS_GROUP': {\n      return {\n          ...state, \n          status_group: action.status_group,\n        }}\n    \n    case 'ADD_ORDERS_SHOW': {\n      return {\n         ...state, \n         ordersShow: action.ordersShow,\n         count: action.count\n        }}\n\n    \n    case 'ADD_EMPLOYEES': {\n      return {\n         ...state, \n         employees: action.employees,\n        }}\n\n    case 'ADD_USER': {\n      return {\n         ...state, \n         user: action.user,\n         login_status: true \n        }}\n\n    case 'ADD_BADGES': {\n      return {\n          ...state, \n          badges: action.badges\n      }}\n\n\n    case 'ADD_EQUIPMENT': {\n      return {\n        ...state,\n        equipment: action.equipment\n      }}\n\n    case 'CHANGE_STATUS_MENU_ROW': {\n      return {\n      ...state,\n      menuRows: state.menuRows.map(row => {\n        return {\n          ...row,\n          active: row.id === action.id\n        }})}} \n\n    \n    case 'ADD_SETTING_MENU': {\n    return {\n        ...state, \n        settingMenu: action.rows.sort((a, b) => a.id - b.id),\n      }}\n      \n    case 'CHANGE_STATUS_SETTING_ROW': {\n      return {\n        ...state,\n        settingMenu: state.settingMenu.map(row => {\n          return {\n            ...row,\n            active: row.id === action.id\n          }})}} \n\n\n\n    case 'ADD_ROLES': {\n      return {\n          ...state, \n          roles: action.roles,\n        }}\n\n    case 'ADD_AD_CAMPAIGN': {\n      return {\n          ...state, \n          ad_campaign: action.ad_campaign,\n        }\n      }\n\n        \n    case 'ADD_DATA': {\n      return {\n          ...state, \n          [action.field]: action.data,\n        }\n      }\n\n        case 'ACTIVE_CASHBOX': {\n          return {\n              ...state, \n              cashboxes: state.cashboxes.map(cashbox => {\n                cashbox.active = cashbox.id === action.id\n                return cashbox\n              }),\n            }\n          }\n\n    default:\n      return state\n  }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    active: false,\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: [true],\n   checkedOrderKindofGood: [true],\n   checkedOrderBrand: [true],\n   checkedOrderSubtype: [true],\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n   inputFilterTitleChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_VISIBLE_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n      \n      // case 'SET_ORDER_EQUIPMENT': {\n         \n      //    let checked_list = state[action.field]\n      //    checked_list[action.idx] = true\n\n      //    return {\n      //       ...state, \n      //       [action.field]: checked_list\n      //    }\n      // }\n\n      \n\n\n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clientFilter: {\n        page: 0,\n        name: '',\n        phone: '7'\n    },\n\n    search_word: '',\n\n\n    // ========================\n    badges: [],\n    customFilters: [],\n\n    title: '',\n    general: false,\n\n    sort: 'desc',\n    field_sort: 'id',\n    page: 0,\n\n    engineer_id: null,\n    overdue: null,\n    status_id: null,\n    status_overdue: null,\n    urgent: null,\n    order_type_id: null,\n    manager_id: null,\n    created_at: null,\n    kindof_good: null,\n    brand: null,\n    subtype: null,\n    client_id: null,\n\n    search: '',\n\n    temp_statuses: [],\n    temp_order_types: [],\n    temp_managers: [],\n    temp_engineers: [],\n    temp_created_at: null,\n    temp_kindof_good_id: null,\n    temp_brand: null,\n    temp_subtype: null,\n    temp_client: {},\n\n    active_badge: 0,\n    active_filter: 0\n}\n\nexport const filterReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_FILTER_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_FILTER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_FILTER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'RESET_FILTER':\n            return {\n                ...state,\n                page: 0,\n\n                engineer_id: [],\n                overdue: null,\n                status_id: [],\n                status_overdue: null,\n                urgent: null,\n\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n\n                active_badge: 0,\n                active_filter: 0\n            }\n\n        case 'RESET_TEMP_FILTER':\n            return {\n                ...state,\n                temp_statuses: [],\n                temp_order_types: [],\n                temp_managers: [],\n                temp_engineers: [],\n                temp_created_at: null,\n                temp_kindof_good_id: null,\n                temp_brand: null,\n                temp_subtype: null,\n                temp_client: {},\n            }\n\n        case 'RESET_DATA_FILTER':\n            return {\n                ...state,\n                title: '',\n                general: false,\n            }\n\n        // ========================\n        // case 'ADD_STATUS': {\n        //     return {\n        //         ...state,\n        //         status: action.status.map(status => status.id),\n        //     }\n        // }\n        //\n        // case 'ADD_DATA': {\n        //     if (action.field === 'order_type') {\n        //         return {\n        //             ...state,\n        //             order_type_id: action.data.map(type => type.id)\n        //         }\n        //     } else {\n        //         return state\n        //     }\n        // }\n        //\n        // case 'ADD_EMPLOYEES': {\n        //     return {\n        //         ...state,\n        //         employees: action.employees.map(employee => employee.id),\n        //     }\n        // }\n\n\n\n        case 'CHANGE_GROUP_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    kindof_good: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_BRAND_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    brand: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_SUBTYPE_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    subtype: action.word\n                }\n            }\n        }\n\n\n        case 'CHANGE_CLIENT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    client_name: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_NAME_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    name: action.word,\n                    phone: ''\n                }\n            }\n        }\n\n\n        case 'CHANGE_PHONE_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    phone: action.word.replace(/[^0-9]/g, ''),\n                    name: ''\n                }\n            }\n        }\n\n        case 'CHANGE_CREATE_AT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    created_at: action.range\n                }\n            }\n        }\n\n\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n  tabs: 1,\n  edit: 0,\n  showDeleted: false,\n  role_title: '',\n\n  first_name: '',\n  last_name: '',\n  email: '',\n  notes: '',\n  phone: '',\n  login: '',\n  password: '',\n  role_id: 0,\n  permissions: [],\n  inn: '',\n  doc_name: '',\n  post: '',\n  deleted: false\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_EMPLOYEE_TAB': {\n         return {\n            ...state, \n            tabs: action.tab,\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n      \n      case 'CHOOSE_EMPLOYEE_SELECTED': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n\n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            role_id: action.role\n         }\n      }\n      \n      case 'CHANGE_SHOW_DELETED': {\n         return {\n            ...state, \n            showDeleted: !state.showDeleted\n         }\n      }\n\n      \n      case 'EDIT_EMPLOYEE': {\n         return {\n            ...state, \n            edit: action.employee.id,\n            first_name: action.employee.first_name || '',\n            last_name: action.employee.last_name || '',\n            email: action.employee.email || '',\n            notes: action.employee.notes || '',\n            phone: action.employee.phone || '',\n            login: action.employee.login || '',\n            role_id: action.employee.role.id,\n            role_title: action.employee.role.title || '',\n            permissions: action.employee.permissions || [],\n            inn: action.employee.inn || '',\n            doc_name: action.employee.doc_name || '',\n            post: action.employee.post || '',\n            deleted: action.employee.deleted\n         }\n      }\n\n      case 'RESET_EMPLOYEE': {\n         return {\n            ...state, \n            edit: 0,\n            first_name: '',\n            last_name: '',\n            email: '',\n            notes: '',\n            phone: '',\n            login: '',\n            password: '',\n            role_title: '',\n            role_id: 0,\n            permissions: [],\n            inn: '',\n            doc_name: '',\n            post: '',\n            deleted: false\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,\n   tabs: 1,\n\n   created_at: 0,\n   done_at: 0,\n   closed_at: 0,\n   assigned_at: 0,\n   duration: 0,\n   estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n   scheduled_for: 0,\n   warranty_date: 0, \n   status_deadline: 0,\n\n   ad_campaign_id: 1,\n   branch_id: 0,\n   status: {},\n   client: {},\n   order_type_id: 1,\n   closed_by_id: 0,\n   created_by_id: 0,\n   manager_id: 0,\n   engineer_id: 0,\n   kindof_good: {},\n   brand: {},\n   subtype: {},\n   model: {},\n\n   operations: [],\n   parts: [], \n   attachments: [], \n   payments: [],\n\n   id_label: '',\n   prefix: '',\n   serial: '',\n   malfunction: '',\n   packagelist: '',\n   appearance: '',\n   engineer_notes: '',\n   manager_notes: '',\n   resume: '',\n   cell: '', \n\n   estimated_cost: 0,\n   missed_payments: 0,\n   discount_sum: 0,\n   payed: 0,\n   price: 0,\n   remaining: 0, \n   remaining_status: 0, \n   remaining_warranty: 0, \n\n   overdue: false,\n   status_overdue: false,\n   urgent: false,\n   warranty_measures: false,\n\n   equipments: [{\n      kindof_good: {},\n      brand: {},\n      subtype: {},\n      model: {},\n      malfunction: '',\n      packagelist: '',\n      appearance: '',\n      urgent: false\n   }],\n  \n}\n\nexport const orderReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'RESET_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {}\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n      \n      case 'SET_ORDER_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {\n            id: action.data.id,\n            icon: action.data.icon,\n            title: action.data.title,\n            url: action.data.url\n         }\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n\n        \n         return {\n            ...state, \n            equipments: state.equipments.concat([{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }])\n         }\n      }\n\n      \n      case 'DELETE_DEVICE': {\n\n         let equipments_list = state.equipments\n         equipments_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM_S': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'RESET_ORDER': {\n\n         return {\n            ...state, \n            edit: 0,\n            tabs: 1,\n\n            created_at: 0,\n            done_at: 0,\n            closed_at: 0,\n            assigned_at: 0,\n            duration: 0,\n            estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n            // estimated_done_at: 0,\n            scheduled_for: 0,\n            warranty_date: 0, \n            status_deadline: 0,\n\n            ad_campaign_id: 1,\n            branch_id: 0,\n            status_id: 0,\n            client: {},\n            order_type_id: 1,\n            closed_by_id: 0,\n            created_by_id: 0,\n            manager_id: 0,\n            engineer_id: 0,\n            kindof_good:{},\n            brand: {},\n            subtype: {},\n            model: {},\n\n            operations: [],\n            parts: [],\n            attachments: [],\n            payments: [],\n\n            id_label: '',\n            prefix: '',\n            serial: '',\n            malfunction: '',\n            packagelist: '',\n            appearance: '',\n            engineer_notes: '',\n            manager_notes: '',\n            resume: '',\n            cell: '',\n\n            estimated_cost: 0,\n            missed_payments: 0,\n            discount_sum: 0,\n            payed: 0,\n            price: 0,\n            remaining: 0, \n            remaining_status: 0, \n            remaining_warranty: 0, \n\n            overdue: false,\n            status_overdue: false,\n            urgent: false,\n            warranty_measures: false,\n\n\n            equipments: [{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }],\n         }\n      }\n\n      \n      case 'EDIT_ORDER': {\n\n         return {\n            ...state, \n            edit: action.order.id,\n            created_at: action.order.created_at,\n            done_at: action.order.done_at,\n            closed_at: action.order.closed_at,\n            assigned_at: action.order.assigned_at,\n            duration: action.order.duration,\n            estimated_done_at: action.order.estimated_done_at,\n            scheduled_for: action.order.scheduled_for,\n            warranty_date: action.order.warranty_date, \n            status_deadline: action.order.status_deadline,\n\n            ad_campaign_id: action.order.ad_campaign.id,\n            branch_id: action.order.branch.id,\n            status: action.order.status,\n            client: action.order.client,\n            order_type_id: action.order.order_type.id,\n            closed_by_id: action.order.closed_by_id,\n            created_by_id: action.order.created_by_id,\n            manager_id: action.order.manager_id,\n            engineer_id: action.order.engineer_id,\n            kindof_good: action.order.kindof_good,\n            brand: action.order.brand,\n            subtype: action.order.subtype,\n            model: action.order.model,\n\n            operations: action.order.operations,\n            parts: action.order.parts,\n            attachments: action.order.attachments,\n            payments: action.order.payments,\n\n            id_label: action.order.id_label,\n            prefix: action.order.prefix,\n            serial: action.order.serial,\n            malfunction: action.order.malfunction,\n            packagelist: action.order.packagelist,\n            appearance: action.order.appearance,\n            engineer_notes: action.order.engineer_notes,\n            manager_notes: action.order.manager_notes,\n            resume: action.order.resume,\n            cell: action.order.cell,\n\n            estimated_cost: action.order.estimated_cost,\n            missed_payments: action.order.missed_payments,\n            discount_sum: action.order.discount_sum,\n            payed: action.order.payed,\n            price: action.order.price,\n            remaining: action.order.remaining,\n            remaining_status: action.order.remaining_status,\n            remaining_warranty: action.order.remaining_warranty,\n\n            overdue: action.order.overdue,\n            status_overdue: action.order.status_overdue,\n            urgent: action.order.urgent,\n            warranty_measures: action.order.warranty_measures\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   clients: [],\n\n   juridical: false,\n   supplier: false,\n   conflicted: false,\n   should_send_email: false,\n   deleted: false,\n\n   name: '',\n   name_doc: '',\n   email: '',\n   address: '',\n   phone: [{\n      title: 'Мобильный',\n      number: '',\n      notify: false\n   }],\n   ad_campaign_id: 1,\n   discount_code: '',\n   discount_goods: 0,\n   discount_goods_margin_id: 1,\n   discount_materials: 0,\n   discount_materials_margin_id: 1,\n   discount_services: 0,\n   discount_service_margin_id: 0,\n   notes: '',\n   tags: [],\n   \n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   discount_good_type: false,\n   discount_materials_type: false,\n   discount_service_type: false,\n\n   tabs: 0,\n   phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n   statusPhoneList: [false],\n   statusAddTitle: [false],\n\n   page: 0,\n   filter_name: '',\n   filter_phone: ''\n\n}\n\nexport const clientReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CLIENT_FORM': {\n         return {\n            ...state,\n            [action.field]: action.value\n         }\n      }\n\n      case 'CHANGE_CLIENT_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'SET_CLIENT_CHECKBOX': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n\n      \n      case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n      let phones = state.phone\n      phones[action.idx].number = action.value\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n   \n   case 'ADD_PHONE_COUNTER': {\n\n         return {\n            ...state, \n            phone: state.phone.concat([{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }]),\n            statusPhoneList: state.statusPhoneList.concat([false])\n         }\n      }\n   \n   case 'DELETE_COUNT_NUMBER': {\n\n      let phones = state.phone\n      phones.splice(action.idx, 1)\n      const statusPhones = state.statusPhoneList\n      statusPhones.splice(action.idx, 1)\n\n         return {\n            ...state, \n            phone: phones,\n            statusPhoneList: statusPhones\n         }\n      }\n      \n      \n   case 'SET_PHONE_NOTIFY': {\n\n      let phones = state.phone\n      phones[action.idx].notify = !phones[action.idx].notify\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n\n      \n      case 'SET_PHONE_TITLE': {\n\n         let phones = state.phone\n         phones[action.idx].title = action.title\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n   \n            return {\n               ...state, \n               phone: phones,\n               statusPhoneList: statusPhones\n            }\n         }\n\n      case 'CHANGE_STATUS_PHONE_LIST': {\n\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = false\n\n         return {\n            ...state, \n            statusPhoneList: statusPhones,\n            statusAddTitle: statusTitle\n         }\n      }\n\n      \n      case 'CHANGE_STATUS_ADD_TITLE': {\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = !statusTitle[action.idx]\n\n         return {\n            ...state, \n            statusAddTitle: statusTitle\n         }\n      }\n\n      case 'SET_AD_CANMPAIGN_CLIENT': {\n\n         return {\n            ...state, \n            ad_campaign_id: action.id\n         }\n      }\n      \n      case 'ADD_CLIENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_CLIENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      case 'RESET_DATA_CLIENT': {\n         return {\n            ...state,\n            juridical: false,\n            supplier: false,\n            conflicted: false,\n            should_send_email: false,\n            deleted: false,\n\n            name: '',\n            name_doc: '',\n            email: '',\n            address: '',\n            phone: [{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }],\n            ad_campaign_id: 1,\n            discount_code: '',\n            discount_goods: 0,\n            discount_goods_margin_id: 1,\n            discount_materials: 0,\n            discount_materials_margin_id: 1,\n            discount_services: 0,\n            discount_service_margin_id: 0,\n            notes: '',\n            tags: [],\n            \n            ogrn: '',\n            inn: '',\n            kpp: '',\n            juridical_address: '',\n            director: '',\n            bank_name: '',\n            settlement_account: '',\n            corr_account: '',\n            bic: '',\n\n            discount_good_type: false,\n            discount_materials_type: false,\n            discount_service_type: false,\n\n            edit: 0,\n            tabs: 0,\n            statusPhoneList: [false],\n            statusAddTitle: [false]\n\n         }\n      }\n\n      case 'CHANGE_CLIENT_TABS': {\n\n         return {\n            ...state, \n            tabs: action.tab\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id\n         }\n      }\n\n      \n      case 'EDIT_CURRENT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id,\n            tabs: 1\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n\nexport const icon_filter = 'M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z'\n\nexport const icon_cross = 'M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z'\n\nexport const icon_cancel = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z M21 8l-5 5-5-5-3 3 5 5-5 5 3 3 5-5 5 5 3-3-5-5 5-5z'\n","import { icon_location } from \"../../data/icons\"\n\nconst initialState = {\n   name: '',\n   address: '',\n   phone: '',\n   color: 'grey',\n   icon: icon_location,\n   orders_type_id: 1,\n   orders_type_strategy: 'last',\n   orders_prefix: 'OTS',\n   documents_prefix: 'A',\n   employees: [],\n   deleted: false,\n   schedule: [\n      {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 1\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 2\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 3\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 4\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 5\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 6\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 7\n      },\n   ],\n\n   edit: 0,\n   showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BRANCH_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_SCHEDULE': {\n\n         let list_schedule = state.schedule\n         list_schedule[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            schedule: list_schedule\n         }\n      }\n      \n      case 'SET_BRANCH_EMPLOYEE': {\n         if (action.id.every(id => state.employees.includes(id))) {\n            return {\n               ...state, \n               employees: state.employees.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n            }\n         }\n      }\n\n      case 'RESET_BRANCH': {\n\n         return {\n            ...state, \n            name: '',\n            address: '',\n            phone: '',\n            color: 'grey',\n            icon: icon_location,\n            orders_type_id: 1,\n            orders_type_strategy: 'last',\n            orders_prefix: 'OTS',\n            documents_prefix: 'A',\n            employees: [],\n            deleted: false,\n            schedule: [\n               {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 1\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 2\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 3\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 4\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 5\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 6\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 7\n               },\n            ],\n\n            edit: 0\n         }\n      }\n\n      \n      case 'EDIT_BRANCH': {\n\n         return {\n            ...state, \n            name: action.branch.name,\n            address: action.branch.address,\n            phone: action.branch.phone,\n            color: action.branch.color,\n            icon: action.branch.icon,\n            orders_type_id: action.branch.orders_type_id,\n            orders_type_strategy: action.branch.orders_type_strategy,\n            orders_prefix: action.branch.orders_prefix,\n            documents_prefix: action.branch.documents_prefix,\n            employees: action.branch.employees,\n            deleted: action.branch.deleted,\n            schedule: action.branch.schedule,\n\n            edit: action.branch.id\n         }\n      }\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   edit: 0,\n   sum: 0,\n   title: '',\n\n   cashflow_category: '',\n   description: '',\n\n   deposit: 0,\n   income: 0,\n   outcome: 0,\n   direction: 0,\n\n   can_print_fiscal: false,\n   deleted: false,\n   is_fiscal: false,\n\n   created_at: 0,\n   custom_created_at: 0,\n\n   tags: [],\n\n   relation_id: null,\n   cashbox_id: 0,\n   client_id: 0,\n   employee_id: 0,\n   order_id: 0,\n   target_cashbox_id: 0,\n\n   cashbox: {},\n   client: {},\n   employee: {},\n   order: {},\n\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n   filter_tags: [],\n\n   current_type: 0,\n   context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_PAYMENT_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_PAYMENT_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'CHOOSE_PAYMENT_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n\n      case 'ADD_PAYMENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_PAYMENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      \n      case 'RESET_PAYMENTS': {\n\n         return {\n            ...state, \n            edit: 0,\n            sum: 0,\n            title: '',\n\n            cashflow_category: '',\n            description: '',\n\n            deposit: 0,\n            income: 0,\n            outcome: 0,\n            direction: 0,\n\n            can_print_fiscal: true,\n            deleted: false,\n            is_fiscal: false,\n\n            created_at: 0,\n            custom_created_at: 0,\n\n            tags: [],\n\n            cashbox_id: 0,\n            client_id: 0,\n            employee_id: 0,\n            order_id: 0,\n            target_cashbox_id: 0,\n\n            context: {}\n         }\n      }\n      \n      case 'SET_PAYMENT': {\n\n         return {\n            ...state, \n            edit: action.payment.id,\n\n            cashflow_category: action.payment.cashflow_category,\n            description: action.payment.description,\n\n            deposit: action.payment.deposit,\n            income: action.payment.income,\n            outcome: action.payment.outcome,\n            direction: action.payment.direction,\n\n            can_print_fiscal: action.payment.can_print_fiscal,\n            deleted: action.payment.deleted,\n            is_fiscal: action.payment.is_fiscal,\n\n            created_at: action.payment.created_at,\n            custom_created_at: action.payment.custom_created_at,\n\n            tags: action.payment.tags,\n\n            cashbox: action.payment.cashbox,\n            client: action.payment.client,\n            employee: action.payment.employee,\n            order: action.payment.order,\n            target_cashbox_id: action.payment.target_cashbox_id,\n         }\n      }\n      \n      \n\n      \n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n       \n      //  case 'CHOOSE_EMPLOYEE_SELECTED': {\n      //     if (action.value.every(val => state[action.field].includes(val))) {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n      //        }\n      //     } else {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n      //        }\n      //     }\n      //  }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,                // id при редактировании\n\n   description: '',        // Описание\n   income: 0,              // Входящяя сумма\n   outcome: 0,             // Иcходящая сумму\n   direction: 0,           // Направление платежа\n   deleted: false,         // Платеж удален\n   reimburse: false,       // Совершен возврат\n   created_at: null,       // Дата создания\n   custom_created_at: null,// Дата установленая пользователем\n   relation_type: 0,       // Тип начисления\n   relation_id: 0,         // id связанного события\n   employee_id: 0,         // Сотрудник\n   order_id: null,         // Заказ\n\n   setted_employee: 0,     // Выбранный сотрудник\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_PAYROLL_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,  \n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null            \n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n        thunk\n    ),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store","import store from \"./store\"\n\nfunction getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${state.data.token}`,\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n\nfunction bad_request(massage = '') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return {type: 'LOGUOT'}\n}\n\nexport function loginAction(token) {\n    return {\n        type: 'LOGIN',\n        token,\n    }\n}\n\nexport function loguotAction() {\n    return {\n        type: 'LOGUOT'\n    }\n}\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\n\nexport function changeGroupListFilter() {\n    return {\n        type: 'CHANGE_GROUP_LIST_FILTER'\n    }\n}\n\nexport function changeGroupMainFilter(word) {\n    return {\n        type: 'CHANGE_GROUP_MAINFILTER',\n        word\n    }\n}\n\nexport function changeBrandListFilter() {\n    return {\n        type: 'CHANGE_BRAND_LIST_FILTER'\n    }\n}\n\nexport function changeBrandMainFilter(word) {\n    return {\n        type: 'CHANGE_BRAND_MAINFILTER',\n        word\n    }\n}\n\nexport function changeSubtypeListFilter() {\n    return {\n        type: 'CHANGE_SUBTYPE_LIST_FILTER'\n    }\n}\n\nexport function changeSubtypeMainFilter(word) {\n    return {\n        type: 'CHANGE_SUBTYPE_MAINFILTER',\n        word\n    }\n}\n\nexport function changeClientListFilter() {\n    return {\n        type: 'CHANGE_CLIENT_LIST_FILTER'\n    }\n}\n\nexport function changeClientMainFilter(word) {\n    return {\n        type: 'CHANGE_CLIENT_MAINFILTER',\n        word\n    }\n}\n\nexport function changeNameClientFilter(word) {\n    return {\n        type: 'CHANGE_NAME_CLIENTFILTER',\n        word\n    }\n}\n\nexport function changePhoneClientFilter(word) {\n    return {\n        type: 'CHANGE_PHONE_CLIENTFILTER',\n        word\n    }\n}\n\nexport function changeCreateAtMainFilter(range) {\n    return {\n        type: 'CHANGE_CREATE_AT_MAINFILTER',\n        range\n    }\n}\n\n\nexport function changeStatusMenuRow(id) {\n    return {\n        type: 'CHANGE_STATUS_MENU_ROW',\n        id\n    }\n}\n\nexport function changeStatusSettingRow(id) {\n    return {\n        type: 'CHANGE_STATUS_SETTING_ROW',\n        id\n    }\n}\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\nexport function changeEmployeeTabs(tab) {\n    return {\n        type: 'CHANGE_EMPLOYEE_TAB',\n        tab\n    }\n}\n\nexport function changeEmployeEditorForm(value, field) {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_FORM',\n        value,\n        field\n    }\n}\n\nexport function changeEmployeeSelected(value, field) {\n    return {\n        type: 'CHOOSE_EMPLOYEE_SELECTED',\n        value,\n        field\n    }\n}\n\n\nexport function changeEmployeeEditorRoleOptions() {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS'\n    }\n}\n\n\nexport function setRoleEmployeeEdetor(role) {\n    return {\n        type: 'SET_ROLE_EMPLOYEE_EDITOR',\n        role\n    }\n}\n\nexport function changeShowDeleted() {\n    return {\n        type: 'CHANGE_SHOW_DELETED'\n    }\n}\n\n\nexport function editEmoloyee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmoloyee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function changeVisibleState( data ) {\n    return {\n        type: 'CHANGE_VISIBLE_STATE',\n        data\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\nexport function resetEquipment(idx, field) {\n    return {\n        type: 'RESET_EQUIPMENT',\n        idx,\n        field\n    }\n}\n\nexport function setOrderEquipment(idx, field, data) {\n    return {\n        type: 'SET_ORDER_EQUIPMENT',\n        idx,\n        field,\n        data\n    }\n}\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeBranchForm(field, value) {\n    return {\n        type: 'CHANGE_BRANCH_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return dispatch => {\n        dispatch({\n            type: 'EDIT_BRANCH',\n            branch\n        })\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusBranchEditor',\n            value: true\n        })\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\n\nexport function changeCashboxForm(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_FORM',\n        field,\n        value\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function activeCashbox(id) {\n    return {\n        type: 'ACTIVE_CASHBOX',\n        id\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\n\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        email: login,\n        password\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/login', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    sessionStorage.setItem('1xsndt', data.access_token);\n                    sessionStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'user',\n                        data: data.user,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'login_status',\n                        data: true,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'token',\n                        data: data.access_token,\n                    })\n                } else {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'error_message',\n                        data: data.message,\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос авторизации не выполнен'))\n    }\n}\n\n\n// Client ================================================================================================================\n\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function seveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов изделий не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на удаление роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'generally_info',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.branch,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'order_type',\n                        data: data.order_type,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.counts,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ad_campaign',\n                        data: data.ad_campaign,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'status_group',\n                        data: data.status_group,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.cashboxes,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.service_prices,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос счетчиков не выполнен'))\n    }\n}\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос флиалов не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статей плтатежей не выполнен'))\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_FORM',\n                        field: 'current_cashbox',\n                        value: data.data.filter(cashbox =>\n                            !cashbox.deleted &&\n                            cashbox.employees[state.data.user.id].available &&\n                            (cashbox.branch_id === (state.data.current_branch ? state.data.current_branch.id : false) || cashbox.isGlobal)\n                        )[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function seveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuRow } from '../../Redux/actions'\n\n\nfunction MenuRow(props) {\n  return (\n    <Link \n      className=\"menuRow\" \n      to={props.row.url}\n      style={props.menuRows.find(row => row.id === props.row.id).active ? {\n        backgroundColor: '#53585c',\n        borderLeftColor: props.current_branch.color \n      } : null}\n      onClick={() => props.changeStatusMenuRow(props.row.id)}\n    >\n      {props.row.image === 'task' ? (\n        <div className=\"taskNumber\">\n          <span className=\"taskNumber1\">8</span>\n        </div>\n      ) : (\n        <svg className=\"sidebarIcon\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n        </svg>\n      )}\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n  menuRows: state.data.menuRows,\n  current_branch: state.data.current_branch\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\n\n\n\nfunction LogoUser() {\n    \n    return (\n        <div className = 'avatar'> \n        \n            <img \n                src = {`${process.env.PUBLIC_URL}/data/avatars/ava.jpeg`}\n                className = 'imgAvatar' \n                alt = 'User avatar' \n            />\n        </div>\n    )\n    \n}\n\nexport default LogoUser;\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addData } from '../../Redux/actions'\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n   const [menuVisibel, setMenuVisibel] = useState(false)\n\n   return (\n      <div>\n      <div \n         className='menuBranch'\n         onClick={() => setMenuVisibel(!menuVisibel)}\n      >\n         <Icon \n            className='smalIcon'\n            icon={props.current_branch.icon} \n            color={props.current_branch.color}\n         />\n         <div className='sidebarBranch'>\n           {props.current_branch.name}\n         </div>\n      </div>\n      {menuVisibel ? <div className='listOptionsBranch'>\n         {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n            <div \n               key={branch.id}\n               className='listBranch'\n               onClick={() => {\n                  props.addData(branch, 'current_branch')\n                  setMenuVisibel(false)\n               }}\n            >\n               <Icon \n                  className='smalIcon'\n                  icon={branch.icon} \n                  color={branch.color}\n               />\n               <div className='ml5'>{branch.name}</div>\n            </div>\n         ))}\n      </div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_branch: state.data.current_branch,\n   branches: state.data.branches,\n   user_id: state.data.user.id\n   })\n\nconst mapDispatchToProps = {\n   addData\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.data.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nexport function bad_request(massage='') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return { type: 'LOGUOT' }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeFilterForm( value, field ) {\n    return {\n        type: 'CHANGE_FILTER_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeFilterState( data ) {\n    return {\n        type: 'CHANGE_FILTER_STATE',\n        data\n    }\n}\n\n// export function editFilter(filter) {\n//     return {\n//         type: 'EDIT_FILTER',\n//         filter\n//     }\n// }\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function resetTempFilter() {\n    return {\n        type: 'RESET_TEMP_FILTER'\n    }\n}\n\n\nexport function selectedFilter( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_FILTER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function addBadges() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_access: !state.data.user.role.orders_visibility ? state.data.user.id : null,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.data}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function createCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.filter.title,\n        general: state.filter.general,\n        employee_id: state.data.user.id,\n        filters: {\n            page: 0,\n            engineer_id: state.filter.temp_engineers.length ? state.filter.temp_engineers : null,\n            overdue: null,\n            status_id: state.filter.temp_statuses.length ? state.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: state.filter.temp_order_types.length ? state.filter.temp_order_types : null,\n            manager_id: state.filter.temp_managers.length ? state.filter.temp_managers : null,\n            created_at: state.filter.temp_created_at,\n            kindof_good: state.filter.temp_kindof_good_id,\n            brand: state.filter.temp_brand,\n            subtype: state.filter.temp_subtype,\n            client_id: Object.values(state.filter.temp_client).length ? [state.filter.temp_client.id] : null\n        }\n    })\n\n    const request_config2 = getRequestConfig({\n        employee_id: state.data.user.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config1)\n            .catch(() => bad_request('Запрос на создание пользовательского фильтра не выполнен'))\n\n        await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n\n    }\n}\n\n\nexport function deleteFilter() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.filter.active_filter\n    })\n    request_config1.method = 'DELETE'\n\n    const request_config2 = getRequestConfig({employee_id: state.data.user.id})\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config1)\n            .catch(() => bad_request('Запрос на удаление фильтра не выполнен'))\n\n        await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {\n                            customFilters: data.data,\n                            active_filter: 0\n                        }\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\nconst Header = props => {\n\n   const [search, setSearch] = useState('')\n\n    const handleChange = event => {\n        setSearch(event.target.value)\n        if (!search) props.changeFilterState({search: ''})\n    }\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if(!props.filter.active_badge) props.resetFilter()\n        if (event.key === 'Enter') props.changeFilterState({search})\n    }\n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => handleChange(event)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\n// function MainFilter({data: {color, title, count, img, filters}, activeBadge}) {\nconst MainFilter = props => {\n\n    const handleChoose = () => {\n        if (props.active_badge !== props.badge.id) {\n            props.changeFilterState({\n                ...props.badge.filter,\n                active_badge: props.badge.id,\n                active_filter: 0\n            })\n        } else {\n            props.resetFilter()\n        }\n    }\n\n    return (\n        <div\n            className='mainFilter'\n            style={{\n                backgroundColor: props.badge.color,\n                opacity: props.active_badge === props.badge.id || props.active_badge === 0 ? 1 : 0.3\n            }}\n            onClick={handleChoose}\n        >\n            <div className='pd5'>\n                <Icon icon={props.badge.icon} className='icon-s25' color='white'/>\n            </div>\n            <div className='filterName'>\n                <div className='filterName-value'>\n                    {props.badge.count} {props.badge.count === 1 ? 'заказ' : ((props.badge.count < 5) ? 'заказа' : 'заказов')}\n                </div>\n                <div className='filterName-title'> {props.badge.title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    active_badge: state.filter.active_badge\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainFilter);","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport MainFilter from './MainFilter'\n\nconst Filters = props => {\n\n    return (\n        <div className='mainFilters'>\n            {props.badges.map(badge => (\n                    badge.count ? <MainFilter badge={badge} key={badge.id}/> : null\n                ))\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.filter.badges\n})\n\nexport default connect(mapStateToProps)(Filters)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        created_by_id: state.data.user.id,\n        branch_id: state.data.current_branch.id,\n        status_id: 1,\n\n        equipments: state.order.equipments,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost\n    })\n\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderEditor',\n            value: false\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config1)\n            .then(response => response.json())\n            .then(data => {\n                if(state.view.checkOrderSticker) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderSticker',\n                        value: true\n                    })\n                }\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig(request_config2))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ordersShow',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count',\n                        data: data.count\n                    })\n                    dispatch({\n                        type: 'RESET_ORDER'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        id: order_id,\n        status_id: status_id\n    })\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    const request_config3 = getRequestConfig({id: state.order.edit})\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config1)\n            .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        if (state.order.edit) {\n            await fetch(state.data.url_server + '/get_orders', request_config3)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0],\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good: state.order.kindof_good.id,\n        brand: state.order.brand.id,\n        subtype: state.order.subtype.id,\n        model: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config1)\n            .catch(() => bad_request('Запрос на изменение заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {'statusOrderLoader': false}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n            title: state.book.title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.data.branches.map(branch => branch.id),\n            deleted: false,\n            filter: {\n                title,\n                deleted: state.book.showDeleted\n            }\n        })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(idx, title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.equipments[idx].kindof_good.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.equipments[idx].brand.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.equipments[idx].subtype.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_type,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = ({data: { created_by_id, created_at}, employees}) => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Lable = ({data: {id_label, urgent}}) => {\n   return (\n      <td className=\"orderLabel tableRow\">\n         <span className={urgent ? 'fire-text': null}>{ id_label }</span>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = ({data : {estimated_done_at, overdue, status, remaining }}) => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 24) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!overdue && status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(remaining, status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\n\n\nfunction TableHeader(props) {\n\n    //  let startDrag = 0\n    //  let endDrag = 0\n    //  let deltaDrag = 0\n\n\n    //  function handleDragStart(event) {\n    //     startDrag = event.pageX\n\n\n    //  }\n\n    //  function handleDragEnd(event) {\n    //     endDrag = event.pageX\n    //     deltaDrag = endDrag - startDrag\n    //     console.log('отрезок :', deltaDrag)\n    //     const currentSize = parseInt(tableOrdersHeaders.find(header => header.field === data.field).width)\n    //     resizeOrderHeader(data.field,  currentSize + deltaDrag)\n\n    //  }\n\n\n    return (\n        <>\n            <th\n                className='tableColumnHeader'\n                style={{minWidth: `${props.data.width}px`}}\n                onClick={() => props.changeFilterState({\n                    field_sort: props.data.field,\n                    sort: props.filter.sort === 'asc' ? 'desc' : 'asc'\n                })}\n            >\n                {props.data.title}\n                <span>\n        {props.filter.field_sort === props.data.field ? (props.filter.sort === 'asc' ? '↓' : '↑') : null}\n      </span>\n            </th>\n            {/* <th\n    className = 'cursorResizeTable'\n    onDragStart = {handleDragStart}\n    onDragEnd = {handleDragEnd}\n    /> */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changePaymentForm(value, field) {\n    return {\n        type: 'CHANGE_PAYMENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changePaymentState( data ) {\n    return {\n        type: 'CHANGE_PAYMENT_STATE',\n        data\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.data.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    const request_config = getRequestConfig({\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: state.payment.income,\n        outcome: -state.payment.outcome,\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at ? state.payment.custom_created_at : now,\n        tags: state.payment.tags,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    })\n\n    const request_config_2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n        if (context.type === 'payment') {\n            await fetch(state.data.url_server + '/get_payments', request_config_2)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'payments',\n                            data: data.data,\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос платежей не выполнен'))\n\n            await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'cashboxes',\n                            data: data.data,\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос касс не выполнен'))\n        }\n\n        if (context.type === 'order') {\n            fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0]\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order') {\n            const request_config3 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config4 = getRequestConfig(state.filter.mainFilter)\n\n            await fetch(state.data.url_server + '/change_order_status', request_config3)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config4)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_ORDERS_SHOW',\n                            ordersShow: data.data,\n                            count: data.count\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order_editor') {\n            const request_config5 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config6 = getRequestConfig({\n                id: context.order_id\n            })\n\n            await fetch(state.data.url_server + '/change_order_status', request_config5)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config6)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0],\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n        }\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.payment.edit,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление платежа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_payments', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPaymentsCard',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PAYMENTS'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, changeVisibleState} from '../../Redux/actions'\nimport { changePaymentState} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentState({\n                direction: income ? 2 : 1,\n                [income ? 'income': 'outcome']: Math.abs(props.order.missed_payments),\n                client_id: props.order.client.id,\n                description: income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`,\n                cashflow_category: income ? 2 : 8,\n                employee_id: props.current_user_id,\n                order_id: props.order.edit || props.order.id,\n                context: {\n                    type: props.order.edit ? 'closed_order_editor' : 'closed_order',\n                    order_id: props.order.edit || props.order.id,\n                    status_id: status.id\n                }\n            })\n            props.editCurrentClient(props.order.client)\n            props.changeVisibleState({'statusPaymentsEditor': true})\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentState,\n    changeVisibleState,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.data.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.data.id)}\n            >\n                {props.data.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.data.id]] ? <StatusList order={props.data}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Brand = ({data: {brand}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {brand.title}\n     </span>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Brand)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = ({data: {kindof_good}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {kindof_good}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Malfunction = ({data: {malfunction}}) => {\n   return (\n    <td>\n      <div className=\"tableText tableOne\">\n         {malfunction}\n      </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Engineer = ({data: {engineer_id}, employees}) => {\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n\n   return (\n     <td>\n     <div>\n        {getEmploeeName(engineer_id)}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 9)}-${phone.slice(9, 11)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = ({data: {client}}) => {\n   return (\n      <td>\n      <div className=\"tableClientName\">{client.name}</div>\n      <div className=\"orderDate\">{showPhone(client.phone[0].number)}</div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = ({data: {price}}) => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{price ? price : null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = ({data: {engineer_notes}}) => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = ({ data }) => {\n   return (\n     <td>\n         <div className=\"tableText row\">\n            <div>\n               <img\n                  className=\"icon_equipment\"\n                  src={data.kindof_good.icon}\n               />\n            </div>\n            <div>\n               <div className='noWr'>\n                  {data.kindof_good.icon ? null : <span className=\"\">{data.kindof_good.title}</span>}\n                  <span className=\"ml5\">{data.brand.title}</span>\n               </div>\n               <div className='noWr'>\n                  <span>{data.subtype.title}</span>\n                  <span className=\"orderDate ml5\">{data.model.title}</span>\n               </div>\n            </div>\n         </div>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Equipment)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeClientState( data ) {\n    return {\n        type: 'CHANGE_CLIENT_STATE',\n        data\n    }\n}\n\n\nexport function addClients() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.client.page,\n        name: state.client.filter_name,\n        phone: state.client.filter_phone\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CLIENT_STATE',\n                        data: {clients: data.data}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентов не выполнен'))\n    }\n}\n\nexport function addClientToTempFilter(id) {\n\n    const state = store.getState()\n\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (data.count) {\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {temp_client: data.data[0]}\n                        })\n                    }\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентa не выполнен'))\n\n    }\n}\n\n/*\nexport function editTemple(temple) {\n    return {\n        type: 'EDIT_TEMPLE',\n        temple\n    }\n}\n\nexport function resetTemple() {\n    return {\n        type: 'RESET_TEMPLE'\n    }\n}\n\n\nexport function selectedTemple( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_TEMPLE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addTemple() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_temple', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function createTemple() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на создание temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n\n\nexport function saveTemple() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на изменение temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.temple.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n*/","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.unvisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    unvisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// unvisible={false}","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.unvisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (current ? `${current.last_name} ${current.first_name}` : 'не назначен') :\n               (current ? (current.title || current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   unvisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // unvisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.unvisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  unvisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport { icon_trush } from '../../../data/icons'\nimport { valueOfPhoneInput } from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n  const handleChange = (idx, event) => {\n    const out = event.target.value.replace(/[^0-9]/g, '')\n    if (out.length < 12) props.changeClientEditorPhone(idx, out)\n }\n\n  return (\n    <div>\n      {props.client.phone.map((phone, idx) => (\n        <div key={idx}>\n          <PhoneTitle idx={idx} title={phone.title} />\n\n          <div className=\"inputPhoneBox\">\n            <input\n              className='textInput w250'\n              onChange={event => handleChange(idx, event)}\n              value={valueOfPhoneInput(phone.number)}\n              onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n              style={ !props.view.inputClientPhoneChecked[idx] ? { borderColor: 'red' } : null}\n            />\n            {idx !== 0 ? (\n              <div\n                onClick={() => {\n                  props.deleteCountNumber(idx)\n                  props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                }}\n              >\n                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                  <path d={icon_trush} />\n                </svg>\n              </div>\n            ) : null}\n          </div>\n          {!props.view.inputClientPhoneChecked[idx] ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n          <div className=\"checkbox mt5\">\n            <input\n              type=\"checkbox\"\n              onChange={() => props.setPhoneNotify(idx)}\n              checked={phone.notify}\n            />\n            <label>Согласен получать SMS</label>\n          </div>\n        </div>\n      ))}\n      <div\n        className=\"addPhone\"\n        onClick={() => {\n          props.addPhoneCounter()\n          props.addVisibleFlag('inputClientPhoneChecked')\n        }}\n      >\n        + Добавить телефон\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx, props.tab_field ? props.tab_field : 'tabs')}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={props.changeClientForm}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","\nimport React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeNameClientFilter, setVisibleFlag,  editCurrentClient } from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport { showPhone } from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\n\nconst SetClientByName = (props) => {\n\n   const [showList, setShowList] = useState(false)\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n         !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n         ) {\n            setShowList(false)\n      }\n    }\n\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n   return (\n      <div className='w400 h52'>\n         \n         <div className='lableImput mt15'>Имя клиента</div>\n\n         <div className='blockImput'>\n            <div \n               id='clientInputBoxOfPayments'\n               className='orderInputBox'\n               onClick={() => setShowList(true)}\n            >\n               <input\n                  className='optionFilterInput'\n                  onChange={event => props.changeNameClientFilter(event.target.value)}\n               />\n               <div \n               className='simbolButton'\n               onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n               >\n                  +\n               </div>\n               <div className='simbolButton'>&#6662;</div> \n            </div>\n\n            {showList ? \n            <div className='listFilter' id='listClientsOfOfPayments'>\n            {props.clients.map(client => (\n               <div \n                  className='rowGropList' \n                  key={client.id}\n                  onClick={() => {\n                     setShowList(false)\n                     props.editCurrentClient(client)\n                     props.changePaymentForm(client.id, 'client_id')\n                  }}\n               >\n                  <div>{client.name}</div>\n                  <div className='orderDate'>\n                     {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                  </div>\n               </div>\n            ))}\n            </div> : null}\n\n         </div>\n         \n\n\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   setVisibleFlag,\n   changePaymentForm,\n   editCurrentClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payment.direction === 2 ? 'income' : 'outcome')}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order_editor' || props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.data.cashboxes\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, {registerLocale} from 'react-datepicker'\n\nimport {\n    addItemPayments,\n    refreshDataOrder,\n    changeStatusMenuVisible,\n    changeVisibleState\n} from '../../Redux/actions'\nimport {changePaymentForm, addPaymentTag, deletePaymentTag} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\nimport {addClients} from '../../Redux/actions/clientAction'\n\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\n\nregisterLocale('ru', ru)\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            'inputPaymentSumChecked': true,\n            'inputPaymentCashboxChecked': true,\n            'inputPaymentDescChecked': true,\n            'inputPaymentCashflowChecked': true,\n            'inputPaymentEmployeeChecked': true,\n            'statusPaymentsEditor': false,\n        })\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('344')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.changeVisibleState({'in}putPaymentSumChecked': false})\n            if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction))\n                props.changeVisibleState({'inputPaymentCashboxChecked': false})\n            if (!props.payment.description)\n                props.changeVisibleState({'inputPaymentDescChecked': false})\n            if (!props.payment.cashflow_category)\n                props.changeVisibleState({'inputPaymentCashflowChecked': false})\n            if (!props.payment.employee_id)\n                props.changeVisibleState({'inputPaymentEmployeeChecked': false})\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type  &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id) &&\n        !cashbox.deleted &&\n        (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentForm(0, 'custom_created_at')\n                            }}\n                            func2={() => setChooseData(true)}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        {chooseData ?\n                            <DatePicker\n                                selected={props.payment.custom_created_at ? new Date(props.payment.custom_created_at * 1000) : Date.now()}\n                                onChange={(date) => {\n                                    props.changePaymentForm(date / 1000, 'custom_created_at')\n                                }}\n                                isClearable={true}\n                                placeholderText='Выбирите дату'\n                                className=\"optionFilterInputDate\"\n                                dateFormat='dd.MM.yyyy HH:mm'\n                                locale={'ru'}\n                                maxDate={Date.now()}\n                                // startDate={Date.now()}\n                                showTimeSelect\n                            /> : null}\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                            close={() => props.changePaymentForm(0, 'client_id')}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                                props.changePaymentForm(0, 'current_type')\n                            }}\n                            func2={() => {\n                                props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                                props.changePaymentForm(1, 'current_type')\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            field={props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'}\n                            setElement={props.changePaymentForm}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentForm(event.target.value, 'description')}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={props.changePaymentForm}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        unvisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={props.changePaymentForm}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    filter: state.filter,\n    client: state.client,\n    cashboxes: state.data.cashboxes,\n    current_branch_id: state.data.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.data.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentForm,\n    changeVisibleState,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/>\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.data.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeNameClientFilter, changePhoneClientFilter, setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\n\nconst SetClient = (props) => {\n\n   const [listClientsVisible, setListClientsVisible] = useState(false)\n   const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n   const clickHandel1 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n         ) {\n         if (listClientsVisible) {\n            setListClientsVisible(false)\n      }}\n    }\n\n    const clickHandel2 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n         !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n         ) {\n         if (listClientsPhoneVisible) {\n            setListClientsPhoneVisible(false)\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel1)\n      window.addEventListener('click', clickHandel2)\n      return () => {\n        window.removeEventListener('click', clickHandel1)\n        window.removeEventListener('click', clickHandel2)\n      }\n    })\n\n\n\n   return (\n      <div className='cleintForm'>\n\n         <div className = 'formRow'>\n            <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n            <div className='blockImput'>\n               <div \n                  id='orderInputBoxOfOrder'\n                  className='orderInputBox'\n                  onClick={() => setListClientsVisible(true)}\n                  style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n               >\n                  <input\n                     className='optionFilterInput'\n                     onChange={event => props.changeNameClientFilter(event.target.value)}\n                     // onBlur={() => props.setVisibleFlag('checkedOrderClient', !Object.values(props.client).length)}\n                  />\n                  <div \n                     className='simbolButton'\n                     onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                  >\n                     +\n                  </div>\n                  <div className='simbolButton'>&#6662;</div> \n               </div>\n               {props.view.checkedOrderClient ? <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n               {listClientsVisible ? \n               <div className='listFilter' id='listFilterOfOrOrder'>\n               {props.clients.map(client => (\n                  <div \n                     className='rowGropList' \n                     key={client.id}\n                     onClick={() => {\n                        props.changeOrderFormS(client, 'client')\n                        setListClientsVisible(false)\n                     }}\n                  >\n                     <div>{client.name}</div>\n                     <div className='orderDate'>\n                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                     </div>\n                  </div>\n               ))}\n               </div> : null}\n\n            </div>\n            </div>\n\n            <div className = 'formRow'>\n\n               <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n               <div className='blockImput'>\n\n                  <div \n                     id='orderInputBoxOfOrderPhone'\n                     className='orderInputBox'\n                     onClick={() => setListClientsPhoneVisible(true)}\n                  >\n                    <LableInput\n                        className='w100'\n                        inputClassName='optionFilterInput'\n                        onChange={value => props.changePhoneClientFilter(value)}\n                        value={props.phone}\n                        isPhone={true}\n                    />\n                     <div \n                        className='simbolButton'\n                        onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                     >\n                        +\n                     </div>\n                     <div className='simbolButton'>&#6662;</div> \n                  </div>\n\n                 \n\n                  {listClientsPhoneVisible ? \n                  <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                  {props.clients.map(client => (\n                     <div \n                        className='rowGropList' \n                        key={client.id}\n                        onClick={() => {\n                           props.changeOrderFormS(client, 'client')\n                           setListClientsPhoneVisible(false)\n                        }}\n                     >\n                        <div>{client.name}</div>\n                        <div className='orderDate'>\n                           {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                        </div>\n                     </div>\n                  ))}\n                  </div> : null}\n\n               </div>\n               \n            </div>\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   changePhoneClientFilter,\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleListFlag } from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleListFlag(props.checkedFlag, props.idx, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleListFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport {createEquipmentBrand, addEquipmentBrand, changeBookForm} from '../../../../Redux/actions/bookActions'\nimport {icon_close} from '../../../../data/icons'\n\nconst SetOrderBrand = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand])\n\n\n    const edit = props.order.edit\n    const disabled = !Object.values(props.book.equipment_type).length\n    const brand = props.order.edit ? props.order.brand : props.order.equipments[props.idx].brand\n    const seted = !!Object.values(brand).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        if (edit) {\n            props.changeOrderFormS({}, 'brand')\n            props.changeOrderFormS({}, 'subtype')\n            props.changeOrderFormS({}, 'model')\n        } else {\n            props.resetEquipment(props.idx, 'brand')\n            props.resetEquipment(props.idx, 'subtype')\n            props.resetEquipment(props.idx, 'model')\n        }\n        props.changeBookForm({}, 'equipment_brand')\n    }\n\n    const setBrand = (idx, brand) => {\n        edit ? props.changeOrderFormS(brand, 'brand') : props.setOrderEquipment(idx, 'brand', brand)\n        props.changeBookForm(brand, 'equipment_brand')\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.setVisibleListFlag('checkedOrderBrand', props.idx, true)\n        props.changeBookForm('', 'filter_brand')\n    }\n\n    return (\n        <div>\n            <button\n                id=\"optionsOrderTextOfBrand\"\n                style={!props.view.checkedOrderBrand[props.idx] ? {borderColor: 'red'} : null}\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookForm(event.target.value, 'filter_brand')}\n                    placeholder=\"Выбирете бренд\"\n                    value={seted ? brand.title : props.book.filter_brand}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <svg\n                        className=\"icon-close\"\n                        viewBox=\"0 0 22 22\"\n                        onClick={reset}\n                    >\n                        <path d={icon_close}/>\n                    </svg> : <span>&#6662;</span>}\n            </button>\n            {!props.view.checkedOrderBrand[props.idx] ? (\n                <div className=\"errorMassageInput\">\n                    {'Необоходимо выбрать из списка'}\n                </div>\n            ) : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfBrand\">\n                    {props.book.equipment_brands.map(brand => {\n                        return (\n                            <div\n                                key={brand.id}\n                                className=\"rowGropList\"\n                                onClick={() => setBrand(props.idx, brand)}\n                            >\n                                {brand.title}\n                            </div>\n                        )\n                    })}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onKeyPress={event => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentBrand(props.idx, event.target.value)\n                                        props.changeBookForm(event.target.value, 'filter_brand')\n                                        // props.addEquipmentBrand()\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить бренд\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentBrand,\n    setOrderEquipment,\n    resetEquipment,\n    setVisibleListFlag,\n    changeOrderFormS,\n    addEquipmentBrand,\n    changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport { createEquipmentType, addEquipmentType, changeBookForm } from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderGroupe = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    props.addEquipmentType()\n  }, [props.book.filter_type])\n\n  const edit = props.order.edit\n  // const types = edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good\n  const types = useMemo(() => edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good, [props.order.kindof_good, props.order.equipments[props.idx].kindof_good])\n  const seted = !!Object.values(types).length \n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n       !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n       ) {\n       if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS( {}, 'kindof_good' )\n      props.changeOrderFormS( {}, 'brand' )\n      props.changeOrderFormS( {}, 'subtype' )\n      props.changeOrderFormS( {}, 'model' ) \n    } else {\n      props.resetEquipment(props.idx, 'kindof_good')\n      props.resetEquipment(props.idx, 'brand')\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_type')\n  }\n\n\n  const setOrderType = (idx, equipment) => {\n    edit ? props.changeOrderFormS( equipment, 'kindof_good' ) : props.setOrderEquipment(idx, 'kindof_good', equipment)\n    props.changeBookForm(equipment, 'equipment_type')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_type')\n  }\n\n   return (\n    <>\n    \n      <button \n        className='optionsFilterText'\n        id='optionsOrderTextOfGroup'\n        onClick={() => setVisibleList(true)}\n        disabled={seted}\n        style={!props.view.checkedOrderKindofGood[props.idx] ? {borderColor: 'red'} : null}\n      > \n        <input \n          className='optionFilterInput'\n          onChange={event => props.changeBookForm(event.target.value, 'filter_type')}\n          placeholder='Выбирете группу'\n          value={seted ? types.title : props.book.filter_type}\n          disabled={seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ?\n        <svg \n          className=\"icon-close\"  \n          viewBox=\"0 0 22 22\"\n          onClick={ reset }\n        >\n          <path d={icon_close}/>\n        </svg> :\n        <span>&#6662;</span> }\n      </button>\n      {!props.view.checkedOrderKindofGood[props.idx] ? <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n      {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n        {props.book.equipment_types.map(equipment => {\n      \n        return (\n          <div\n            key={equipment.id} \n            className='rowGropList'\n            onClick={() => setOrderType(props.idx, equipment) }\n          >\n            {equipment.title}\n          </div> \n        )})}\n        <div className='btmsts'>\n        {visibleBotton ? \n        <input \n          className='optionFilterInput'\n          autoFocus\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') { \n              props.createEquipmentType(event.target.value)\n              props.changeBookForm(event.target.value, 'filter_type')\n              // props.addEquipmentType()\n              setVisisbleBotton(false)\n              \n            } \n          }}\n          placeholder = 'Введите и нажмиете Enter' \n        /> :\n        <div \n          className='btnstsTitle'\n          onClick={() => setVisisbleBotton(true)}\n        >\n          Добавить тип\n        </div>}\n        </div>\n\n      </div> : null}\n      </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  order: state.order,\n  view: state.view,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentType,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addEquipmentType,\n  changeBookForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, changeOrderFormS } from '../../../../Redux/actions'\nimport { createEquipmentModel, addEquipmentModel, changeBookForm } from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderModel = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n  }, [props.book.equipment_subtype, props.book.filter_model])\n\n  const edit = props.order.edit\n\n  const model = edit ? props.order.model: props.order.equipments[props.idx].model\n  const disabled = !Object.values(props.book.equipment_subtype).length\n  // const disabled = edit ? !Object.values(props.order.subtype).length : !Object.values(props.order.equipments[props.idx].subtype).length\n  const seted = !!Object.values(model).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const setModel = (idx, model) => {\n    edit ? props.changeOrderFormS(model, 'model') : props.setOrderEquipment(idx, 'model', model)\n    props.changeBookForm(model, 'equipment_model')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_model')\n  }\n\n  const reset = () => {\n    edit ? props.changeOrderFormS({}, 'model') : props.resetEquipment(props.idx, 'model')\n    props.changeBookForm({}, 'equipment_model')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfModel\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={ event => props.changeBookForm(event.target.value, 'filter_model')}\n          placeholder=\"Выбирете модель\"\n          value={seted ? model.title : props.book.filter_model}\n          disabled={disabled || seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ? (\n          <svg\n            className=\"icon-close\"\n            viewBox=\"0 0 22 22\"\n            onClick={ reset }\n          >\n            <path d={icon_close} />\n          </svg>\n        ) : (\n          <span>&#6662;</span>\n        )}\n      </button>\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfModel\">\n          {props.book.equipment_models.map((model) => {\n              return (\n                <div\n                  key={model.id}\n                  className=\"rowGropList\"\n                  onClick={() => setModel(props.idx, model) }\n                >\n                  {model.title}\n                </div>\n              ) \n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={(event) => {\n                  if (event.key === 'Enter') {\n                    props.createEquipmentModel(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_model')\n                    // props.addEquipmentModel()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить модель\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentModel,\n  setOrderEquipment,\n  resetEquipment,\n  changeOrderFormS,\n  addEquipmentModel,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, changeBookForm, addEquipmentSubtype} from '../../../../Redux/actions/bookActions'\nimport {icon_close} from '../../../../data/icons'\nimport Subtype from './Subtype'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const edit = props.order.edit\n    const subtype = edit ? props.order.subtype : props.order.equipments[props.idx].subtype\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        if (edit) {\n            props.changeOrderFormS({}, 'subtype')\n            props.changeOrderFormS({}, 'model')\n        } else {\n            props.resetEquipment(props.idx, 'subtype')\n            props.resetEquipment(props.idx, 'model')\n        }\n        props.changeBookForm({}, 'equipment_subtype')\n\n    }\n\n    const setSubtype = (idx, subtype) => {\n        edit ? props.changeOrderFormS(subtype, 'subtype') : props.setOrderEquipment(idx, 'subtype', subtype)\n        props.changeBookForm(subtype, 'equipment_subtype')\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.setVisibleListFlag('checkedOrderSubtype', props.idx, true)\n        props.changeBookForm('', 'filter_subtype')\n    }\n\n    return (\n        <>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype[props.idx] ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookForm(event.target.value, 'filter_subtype')}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <svg className=\"icon-close\" viewBox=\"0 0 22 22\" onClick={reset}>\n                        <path d={icon_close}/>\n                    </svg> : <span>&#6662;</span>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype[props.idx] ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => {\n                        return (\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(props.idx, subtype)}\n                            />\n                        )\n                    })}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(props.idx, event.target.value)\n                                        props.changeBookForm(event.target.value, 'filter_subtype')\n                                        // props.addEquipmentSubtype()\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    setOrderEquipment,\n    resetEquipment,\n    setVisibleListFlag,\n    changeOrderFormS,\n    changeBookForm,\n    addEquipmentSubtype\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n} from '../../../../Redux/actions'\nimport { icon_trush } from '../../../../data/icons'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\nimport { sortedIndex } from 'lodash'\n\nconst ChooseEquipment = (props) => {\n  return (\n    <div>\n      <div className=\"formRow mt15\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle\">Изделиe и неисправность</div>\n      </div>\n      {props.order.equipments.map((equipment, idx) => {\n        return (\n          <div className=\"orderDevice\" key={idx}>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Тип устройства<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderGroup idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Бренд<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderBrand idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Модуль / Серия<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderSubtype idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Модель</div>\n              <div className=\"blockImput\">\n                <SetOrderModel idx={idx} />\n              </div>\n            </div>\n            <LabelInputOrder\n              idx={idx}\n              className=\"formRow\"\n              title=\"Неисправность\"\n              name=\"malfunction\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'malfunction', event.target.value)\n              }\n              value={props.order.equipments[idx].malfunction}\n              checkedFlag=\"inputMalfunctionChecked\"\n              checked={props.view.inputMalfunctionChecked[idx]}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Комплектация\"\n              name=\"packagelist\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'packagelist', event.target.value)\n              }\n              value={props.order.equipments[idx].packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Внешинй вид\"\n              name=\"appearance\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'appearance', event.target.value)\n              }\n              value={props.order.equipments[idx].appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Срочно</div>\n              <div className=\"blockImput\">\n                <div className=\"checkbox pd-tb-5 al-itm-fs\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={(event) =>\n                      props.changeOrderForm(idx, 'urgent', event.target.checked)\n                    }\n                    checked={props.order.equipments[idx].urgent}\n                  />\n                  <label></label>\n                  <div\n                    className=\"whiteButton simbolBotton pz-r320\"\n                    onClick={() => props.deleteDevice(idx)}\n                  >\n                    <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                      <path d={icon_trush} />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n\n      <div className=\"formRow jc-c\">\n        <div\n          className=\"fs14 addPhone\"\n          onClick={() => props.addAnotherEquipment()}\n        >\n          + Устройство\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseEquipment)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS } from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n  return (\n    <div>\n\n      <div className='formRow mt15'>\n        <div className='optionsTitle'></div>\n        <div className='orderFormTitle'>Изделиe и неисправность</div>\n      </div>\n\n          <div className='orderDevice'>\n            \n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Тип устройства<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderGroup idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Бренд<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderBrand idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Модуль / Серия<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderSubtype idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>Модель</div>\n              <div className='blockImput'>\n                <SetOrderModel idx={0} />\n              </div>\n            </div>\n\n            <LabelInputOrder\n              idx={23}\n              className='formRow'\n              title='Неисправность'\n              name='malfunction'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'malfunction') }\n              value={props.order.malfunction}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Комплектация'\n              name='packagelist'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'packagelist')}\n              value={props.order.packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Внешинй вид'\n              name='appearance'\n              onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n              value={props.order.appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className='formRow'>\n              <div className='optionsTitle'>Срочно</div>\n              <div className='blockImput'>\n                <div className='checkbox pd-tb-5 al-itm-fs'>\n                  <input\n                    type='checkbox'\n                    onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                    checked={props.order.urgent}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                  />\n                  <label></label>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, { useState, useEffect } from 'react'\n\n\nimport { showDate } from './utils'\n\nimport Icon from './Icon'\nimport { icon_calendar } from '../../data/icons'\n\nconst ChooseDate = (props) => {\n\n   const [current_date, setCurrent_day] = useState(new Date) \n   const [visibleListMonth, setVisibleListMonth] = useState(false)\n   const [visibleInputYear, setVisibleInputYear] = useState(false)\n   const [visibleCalendar, setVisibleCalendar] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`monthList`) ) {\n         if (visibleListMonth) {\n            setVisibleListMonth(false)\n      }}\n      if (!event.path.map(el => el.id).includes(`calendar`) ) {\n         if (visibleCalendar) {\n            setVisibleCalendar(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n   const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n   let first = new Date(current_date)\n   // first.setHours(0, 0, 0, 0)\n   first.setDate(1)\n   first.setTime(first.getTime() - (first.getDay() || 7)*24*60*60*1000)\n   \n\n   let current_days = []\n   for (let i=0; i<42; i++) {\n      current_days[i] = new Date(first.getTime() + 24*60*60*1000)\n      first.setTime(first.getTime() + 24*60*60*1000)\n   }\n\n   const compareDates = (date1, date2) => {\n      return   date1.getDate() === date2.getDate() && \n               date1.getMonth() === date2.getMonth() && \n               date1.getFullYear() === date2.getFullYear()\n   }\n\n   const handleInputYear = (value) => {\n      let out = value.replace(/[^0-9]/g, '')\n      if (value > 9999) out = 9999\n      if (value < 0) out = 0\n      setCurrent_day(new Date(current_date.setFullYear(out)))\n   }\n\n   return (\n      <div>\n         <div \n            className='dateContaner'\n            onClick={() => setVisibleCalendar(true)}\n         >\n            <Icon \n               className='icon-s2 mlr5'\n               icon={icon_calendar}\n               color='gray'\n            />\n            <div>{showDate(props.current_date/1000)}</div>\n         </div>\n\n         {visibleCalendar && !props.disabled ? \n         <div className='calendar' id='calendar'>\n\n            <div className='calendarNavi'>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() - 1)))}\n               >\n                  {'<'}\n               </div>\n\n               <div className='row'>\n                  <div \n                     className='currMonth'\n                     onClick={() => setVisibleListMonth(!visibleListMonth)}\n                  >\n                     <div>{months[current_date.getMonth()]}</div><div className='gu'>&#6662;</div>\n                  </div>\n\n                  {visibleInputYear ? \n                  <input\n                     className='optionFilterInput w30'\n                     autoFocus\n                     onChange={event => handleInputYear(event.target.value)}\n                     value={current_date.getFullYear()}\n                     onBlur={() => setVisibleInputYear(false)}\n                  /> :\n                  <div \n                     className='pd5'\n                     onDoubleClick={() => setVisibleInputYear(true)}\n                  >\n                     {current_date.getFullYear()}\n                  </div>}\n                  <div className='nextY'>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() + 1)))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() - 1)))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() + 1)))}\n               >\n                  {'>'}\n               </div>\n            </div>\n           { visibleListMonth ?\n           <div className='monthList' id='monthList'>\n               {months.map((month, idx) => (\n                  <div \n                     key={idx}\n                     className='month'\n                     onClick={() => {\n                        setCurrent_day(new Date(current_date.setMonth(idx)))\n                        setVisibleListMonth(!visibleListMonth)\n                     }}\n                  >\n                     {month}\n                  </div>\n                     ))}\n            </div> : null}\n\n            <div className='row'>\n               {weekDays.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className='calendarWeekDay'\n                  >\n                     {day}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calendarDays'>\n               {current_days.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className={`calendarDay \n                        ${compareDates(new Date(props.current_date), day) ? 'settedDay' : null}\n                     `}\n                     style={{\n                        color: day.getMonth() === current_date.getMonth() ? null : '#aaaaaa'\n                     }}\n                     onClick={() => {\n                        props.func(day)\n                        setCurrent_day(new Date(day))\n                     }}\n                  >\n                     {day.getDate()}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calandarTime'>\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                  <div className='ssm'>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>:\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                  <div className='ssm'>\n                  <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div> : null }\n\n      </div>\n   )\n}\n\n export default ChooseDate","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEquipment from './ChooseEquipment'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n  return (\n    <div>\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Рекламная компания</div>\n        <div className=\"blockImput\">\n          <ChooseOfList\n            id={14}\n            list={props.ad_campaign}\n            setElement={props.changeOrderFormS}\n            field='ad_campaign_id'\n            current_id={props.order.ad_campaign_id}\n            width={'250px'}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      {props.order.edit ? <ChooseSingleEquipment/> : <ChooseEquipment/>}\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n      </div>\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Заметки приемщика</div>\n        <div className=\"blockImput mh\">\n          <textarea\n            className=\"textInput\"\n            name=\"manager_notes\"\n            onChange={(event) =>\n              props.changeOrderFormS(event.target.value, 'manager_notes')\n            }\n            value={props.order.manager_notes}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      <LabelInputOrder\n        className=\"formRow\"\n        title=\"Ориетнировачная стоимость\"\n        name=\"estimated_cost\"\n        onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n        value={props.order.estimated_cost}\n        disabled={!props.permissions.includes('edit_info_orders')}\n      />\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Дата готовности</div>\n        <div className=\"blockImput\">\n          <ChooseDate\n              func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n              current_date={props.order.estimated_done_at * 1000}\n              disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  ad_campaign: state.data.ad_campaign,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    // const price = state.order.client.discount_service_type ? (\n    //     state.data.service_prices.find(price =>\n    //         price.service_id === service.id &&\n    //         price.discount_margin_id === state.order.client.discount_service_margin_id\n    //     ).cost || 0\n    // ) : (service.price)\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               unvisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * unvisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n *\n * icon={icon} // Иконка\n *\n * iconClassName='iconClassName' // Класс иконки\n *\n * iconColor='black' // Цвет Иконки\n */\nconst Button = (props) => {\n   return props.unvisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.unvisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.unvisible || props.disabled}\n      >\n          <div className='row'>\n              {props.icon ? <Icon icon={props.icon} className={props.iconClassName} color={props.iconColor}/> : null}\n              {props.title ? <div className='ml5'>{props.title}</div> : null}\n          </div>\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    unvisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconColor: PropTypes.string\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на создание запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на изменение запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        unvisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.data.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.data.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPayments = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {editCurrentClient, changeVisibleState} from '../../../../Redux/actions'\nimport { changePaymentState} from '../../../../Redux/actions/paymentAction'\n\nimport Button from '../../../general/Button'\nimport TableOrderPayments from './TableOrderPayments'\n\nconst OrderPayments = (props) => {\n\n   const handleIncome = () => {\n      props.changePaymentState({\n         direction: 2,\n         client_id: props.order.client.id,\n         description: `Оплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 2,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   const handleOutcome = () => {\n      props.changePaymentState({\n         direction: 1,\n         client_id: props.order.client.id,\n         description: `Выплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 8,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handleIncome }\n               unvisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handleOutcome }\n               unvisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPayments/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeVisibleState,\n   changePaymentState,\n   editCurrentClient,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.unvisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    unvisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// unvisible={false}","import React, { useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {icon_down, icon_print} from '../../data/icons'\nimport Button from '../general/Button'\nimport Checkbox from '../general/Checkbox'\nimport {setVisibleFlag} from '../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div className='blockImput mwmc'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listFilter'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        unvisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React, {useRef} from 'react'\nimport { connect } from 'react-redux'\nimport OrderPrint from './OrderPrint'\n\n\nconst OrderHistory = (props) => {\n\n\n    return (\n        <div className=\"orderHistory\">\n        <div className='row'>\n            <OrderPrint/>\n\n        </div>\n\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n\n                    <h1 className = 'tempTitle'>История</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  addDiscountMargin,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addDictService\n} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders} from '../../../Redux/actions/orderActions'\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\nimport {addClients} from '../../../Redux/actions/clientAction'\n\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\n// import * as PropTypes from 'prop-types'\nimport OrderHistory from '../OrderHistory'\n\n// function ComponentToPrint(props) {\n//   return null\n// }\n//\n// ComponentToPrint.propTypes = {ref: PropTypes.any}\n\nconst OrderEditor = (props) => {\n\n  useEffect(() => {\n    props.addClients()\n  }, [props.client.filter_name, props.client.filter_phone])\n\n  useEffect(() => {\n    props.addDiscountMargin()\n    props.addDictService()\n    props.resetBookEquipment()\n  }, [])\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusOrderEditor', false)\n    props.resetOrder()\n    props.setVisibleFlag('checkedOrderClient', false)\n    props.setVisibleListFlag('checkedOrderKindofGood', 0, true)\n    props.setVisibleListFlag('checkedOrderBrand', 0, true)\n    props.setVisibleListFlag('checkedOrderSubtype', 0, true)\n  }\n\n  const clickHandel = (event) => {\n    if (\n        !event.path.map((el) => el.id).includes('createNewOrder') &&\n        !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n    ) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  // useEffect(() => {\n  //   let sum = 0\n  //   props.order.payments.filter(payment => !payment.deleted).forEach(payment => {\n  //     sum += payment.income\n  //     sum += payment.outcome\n  //   })\n  //   props.changeOrderFormS(sum, 'payed')\n  // }, [props.order.payments])\n  //\n  // useEffect(() => {\n  //   let price = 0\n  //   let discount = 0\n  //   props.order.operations.filter(operation => !operation.deleted).forEach(operation => {\n  //     price += operation.total\n  //     discount += operation.discount_value\n  //   })\n  //   props.order.parts.filter(part => !part.deleted).forEach(part => {\n  //     price += part.total\n  //     discount += part.discount_value\n  //   })\n  //   props.changeOrderFormS(price, 'price')\n  //   props.changeOrderFormS(discount, 'discount_sum')\n  // }, [props.order.operations, props.order.parts])\n\n  \n\n  const handleCreate = () => {\n    if (\n      Object.values(props.order.client).length &&\n      props.order.equipments.every(\n        (equipment) =>\n          Object.values(equipment.kindof_good).length &&\n          Object.values(equipment.brand).length &&\n          Object.values(equipment.subtype).length &&\n          equipment.malfunction\n      )\n    ) {\n      props.createOrder()\n    } else {\n      if (!Object.values(props.order.client).length) {\n        props.setVisibleFlag('checkedOrderClient', true)\n      }\n      props.order.equipments.forEach((equipment, idx) => {\n        if (!Object.values(equipment.kindof_good).length) {\n          props.setVisibleListFlag('checkedOrderKindofGood', idx, false)\n        }\n        if (!Object.values(equipment.brand).length) {\n          props.setVisibleListFlag('checkedOrderBrand', idx, false)\n        }\n        if (!Object.values(equipment.subtype).length) {\n          props.setVisibleListFlag('checkedOrderSubtype', idx, false)\n        }\n        if (!equipment.malfunction) {\n          props.setVisibleListFlag('inputMalfunctionChecked', idx, false)\n        }\n      })\n    }\n  }\n\n  const handleSave = () => {\n    if (\n      Object.values(props.order.client).length &&\n      Object.values(props.order.kindof_good).length &&\n      Object.values(props.order.brand).length &&\n      Object.values(props.order.subtype).length\n      \n    ) {\n      props.saveOrder()\n    } else {\n      if (!Object.values(props.order.client).length) props.setVisibleFlag('checkedOrderClient', true)\n      if (!Object.values(props.order.kindof_good).length) props.setVisibleListFlag('checkedOrderKindofGood', 0, false)\n      if (!Object.values(props.order.brand).length) props.setVisibleListFlag('checkedOrderBrand', 0, false)\n      if (!Object.values(props.order.subtype).length) props.setVisibleListFlag('checkedOrderSubtype', 0, false)\n    }\n  }\n\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n        <div className=\"cteateNewOrderContent\">\n          \n          <div className=\"createOrderForm\">\n\n            <TitleOrderEditor/>\n            {props.order.edit ?\n              <div>\n                <Tabs\n                  list={ ['Информация о заказе', 'Работы и материалы', 'Платежи'] }\n                  func={props.changeOrderFormS}\n                  tab={props.order.tabs}\n                />\n                  {props.order.tabs === 0 ? <OrderInfo/> : null}\n                  {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                  {props.order.tabs === 2 ? <OrderPayments/> : null}\n                </div> : <OrderInfo/> }\n          </div>\n\n         <OrderHistory/>\n        </div>\n\n        <div className=\"boxOrderButtons\">\n          <BottomButtons\n            edit={ props.order.edit }\n            create={ handleCreate }\n            save={ handleSave }\n            // delete={() => props.deleteClient(props.client.edit)}\n            close={ handleClose }\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  order: state.order,\n  client: state.client\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  createOrder,\n  changeOrderFormS,\n  resetOrder,\n  addDictService,\n  saveOrder,\n  addOrders,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\n\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { addOrders,editOrder } from '../../Redux/actions/orderActions'\nimport { initStatusMenuVisibleAction, setVisibleFlag } from '../../Redux/actions'\nimport { changeBookForm } from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './StikerToPrint'\n\n// const optionsShowDate = {\n//   year: 'numeric',\n//   month: 'long',\n//   day: 'numeric',\n//   hour: 'numeric',\n//   minute: 'numeric',\n//   // second: 'numeric'\n// }\n\n\nfunction TableOrders(props) {\n\n  \n\n  useEffect(() => {\n    let statusVis = {}\n    props.ordersShow.forEach((order) => {\n    statusVis[order.id] = false\n    })\n    props.initStatusMenuVisible(statusVis)\n  }, [props.ordersShow])\n\n  const handleEdit = (order) => {\n    props.editOrder(order)\n    props.changeBookForm(order.kindof_good, 'equipment_type')\n    props.changeBookForm(order.brand, 'equipment_brand')\n    props.changeBookForm(order.subtype, 'equipment_subtype')\n    props.changeBookForm(order.model, 'equipment_model')\n    props.setVisibleFlag('statusOrderEditor', true)\n  }\n  \n   \n\n  if (props.user.table_headers && props.employees) {\n    return (\n      <div className=\"tableOrders\">\n        <table className=\"tableOrders\">\n          <thead className=\"tableThead\">\n            <tr>\n              {Object.values(props.user.table_headers).map((header) => (\n                <TableHeader data={header} key={header.id}/>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {props.ordersShow.map((order) => (\n              <tr \n                key={order.id} \n                className=\"orderTableRows\"\n                onDoubleClick={ () => handleEdit(order)}\n              >\n                <Lable data = {order}/>\n                <Create data = {order}/>\n                <EstimatedDone data = {order}/>\n                <Status data = {order}/>\n                <Equipment data = {order}/>\n                {/* <KindOfGood data = {order}/> */}\n                <Brand data = {order}/>\n                <Malfunction data = {order}/>\n                <Engineer data = {order}/>\n                {props.permissions.includes('see_client') ? <Client data = {order}/> : <div/>}\n                <Price data = {order}/>\n                <EngineerNotes data = {order}/>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {props.view.statusOrderEditor ? <OrderEditor/> : null}\n        {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n        {props.view.statusOrderSticker ? <StikerToPrint onAfterPrint={() => props.setVisibleFlag('statusOrderSticker', false)}/> : null}\n\n      </div>\n    )\n  } else {\n    return <Loader />\n  }\n}\n\nconst mapStateToProps = state => ({\n  ordersShow: state.data.ordersShow,\n  employees: state.data.employees, \n  user: state.data.user,\n  view: state.view,\n  mainFilter: state.filter.mainFilter,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addOrders,\n  initStatusMenuVisible: initStatusMenuVisibleAction,\n  setVisibleFlag,\n  editOrder,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {addClientToTempFilter} from '../../Redux/actions/clientAction'\n\nconst CustomFilter = props => {\n\n    async function  handleChoose()  {\n        if (props.filter.active_filter !== props.data.id) {\n            if (props.data.filters.client_id) props.addClientToTempFilter(props.data.filters.client_id[0])\n            props.changeFilterState({\n                ...props.data.filters,\n                active_filter: props.data.id,\n                active_badge: 0,\n                search: '',\n                temp_statuses: props.data.filters.status_id || [],\n                temp_order_types: props.data.filters.order_type_id || [],\n                temp_managers: props.data.filters.manager_id || [],\n                temp_engineers: props.data.filters.engineer_id || [],\n                temp_created_at: props.data.filters.created_at,\n                temp_kindof_good_id: props.data.filters.kindof_good,\n                temp_brand: props.data.filters.brand,\n                temp_subtype: props.data.filters.subtype,\n                temp_client: {}\n            })\n        } else {\n            props.changeFilterState({\n                active_filter: 0,\n                page: 0,\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n            })\n        }\n    }\n\n    return (\n        <div\n            className='customFilter'\n            onClick={handleChoose}\n            style={{\n                backgroundColor: props.data.id === props.filter.active_filter ? '#eeeeef' : 'white',\n                opacity: props.data.id === props.filter.active_filter || props.filter.active_filter === 0 ? 1 : 0.5\n            }}\n        >\n            {props.data.title}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    addClientToTempFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../Redux/actions'\nimport LableInput from '../general/LableInput'\nimport Checkbox from '../general/Checkbox'\nimport BottomButtons from '../general/BottomButtons'\nimport {changeFilterState, createCustomFilter} from '../../Redux/actions/filterAction'\n\nconst FilterEditor = props => {\n\n    const handleClose = () => {\n        props.changeVisibleState({statusCreateNewFilter: false, inputFilterTitleChecked: true})\n    }\n\n    const clickHandel = event => {\n        if (!event.path.map((el) => el.id).includes('createNewFilterWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.filter.title) {\n            props.createCustomFilter()\n        } else {\n            props.changeVisibleState({inputFilterTitleChecked: false})\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewFilterWindow\">\n\n                <div className=\"createNewTitle w515\">{props.filter.active_filter ? props.filter.title : 'Новый фильтр'}</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                         className='mt15'\n                         title='Наименование'\n                         onChange={event => props.changeFilterState({title: event.target.value})}\n                         value={props.filter.title}\n                         checkedFlag='inputFilterTitleChecked'\n                         checked={props.inputFilterTitleChecked}\n                         redStar={true}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Общий'\n                        onChange={event => props.changeFilterState({general: event.target.checked})}\n                        checked={props.filter.general}\n                    />\n                </div>\n\n                <BottomButtons\n                    edit={props.filter.active_filter}\n                    create={handleCreate}\n                    // save={handleSave}\n                    // delete={() => props.deleteNotEvent(true)}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    inputFilterTitleChecked: state.view.inputFilterTitleChecked,\n\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    createCustomFilter,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const choosed_values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (choosed_values.length === current_statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!choosed_values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        unvisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport {icon_down, icon_left} from '../../../../data/icons'\n\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\nimport Button from '../../../general/Button'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const allStatuses = props.statuses.map(status => status.id)\n\n\n    return props.unvisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div className='liststatus'>\n                    <div\n                        className='blocList'\n                        style={{width: props.width ? props.width : '250px'}}\n                    >\n                        {props.status_group.map(group => (\n                            <ChooseStatusesGruoup\n                                key={group.id}\n                                label={group.name}\n                                group={group.type_group}\n                                func={value => props.func(value)}\n                                current_list={props.current_list}\n                            />\n                        ))}\n                    </div>\n                    <div className='btmsts'>\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Выбрать все'\n                            onClick={() => props.func(allStatuses)}\n                            disabled={props.current_list.length === allStatuses.length}\n                        />\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Отменить все'\n                            onClick={() => props.func_clear()}\n                        />\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5),\n    statuses: state.data.status.filter(status => status.group < 8)\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// unvisible={false}","import React, {useEffect, useState, useRef} from 'react'\n\nimport Checkbox from './Checkbox'\nimport Icon from './Icon'\nimport {icon_down, icon_left} from '../../data/icons'\n\nconst ChooseOfListMany = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const mainCheckbox = useRef()\n\n    useEffect(() => {\n        if(mainCheckbox.current) {\n            const values = props.list.filter(el => props.checked_list.includes(el.id))\n            if (values.length === props.list.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = true\n            } else if (!values.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = false\n            } else {\n                mainCheckbox.current.indeterminate = true\n            }\n        }\n    }, [props.checked_list, listVisible])\n\n\n    const showWord = (len) => {\n        switch (len) {\n\n            case 0: {\n                return 'Ничего не выбрано'\n            }\n\n            case props.list.length: {\n                return 'Все'\n            }\n\n            default:\n                return `Выбрано ${len}`\n        }\n    }\n\n\n    return (\n        <div\n            style={{width: props.width ? props.width : '250px'}}\n            id={`chooseOfList${props.id}`}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div>{showWord(props.checked_list.length)}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='#282e33'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n\n                    <div className='checkbox'>\n                        <input\n                            ref={mainCheckbox}\n                            type='checkbox'\n                            onChange={() => props.func(props.list.map(el => el.id))}\n                            disabled={props.disabled}\n                        />\n                        <label>{props.mainLable}</label>\n                    </div>\n\n                    {props.list.map(element => {\n                        return (\n                            <div\n                                key={element.id}\n                                className='options'\n                            >\n                                <Checkbox\n                                    className='ml10'\n                                    label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                                    onChange={() => props.func([element.id])}\n                                    checked={props.checked_list.includes(element.id)}\n                                    disabled={props.disabled}\n                                />\n\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, {useEffect, useState} from 'react'\nimport {icon_cancel, icon_down, icon_left} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * id='id' // id компонента\n *\n * className='className' // className оболочки компанента\n *\n * width='250px' // ширина компонента\n *\n * title='title' // Подпись сверху\n *\n * list={props.list} // Список элементов\n *\n * current_element={props.current_element} // выбраный элемент\n *\n * setElement={() => console.log('setElement')} // функция выбора элемента\n *\n * filter={props.filter} // фильр поиска элемента\n *\n * changeFilter={() => console.log('changeFilter')} // функция изменения фильтра\n *\n * placeholder='Введите текст'\n *\n * disabled={} // заблокировать\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseWithSearch = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n\n    const clickHandel = event => {\n        if (!event.path.map(el => el.id).includes(`ChooseWithSearch${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    return (\n        <div\n            id={`ChooseWithSearch${props.id}`}\n            style={{width: props.width ? props.width : '250px'}}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <button\n                className={props.disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setListVisible(true)}\n                disabled={props.disabled || Object.values(props.current_element).length}\n            >\n                <input\n                    className={props.disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeFilter(event.target.value)}\n                    placeholder={props.placeholder}\n                    value={Object.values(props.current_element).length ? props.current_element : props.filter}\n                    disabled={props.disabled || Object.values(props.current_element).length}\n                />\n                {Object.values(props.current_element).length ?\n                    <div\n                        className='al-itm-ct'\n                        onClick={() => props.setElement({})}\n                    >\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n                    {props.list.map((element, idx) => {\n                        return (\n                            <div\n                                key={idx}\n                                className='options'\n                                onClick={() => {\n                                    props.setElement(element)\n                                    setListVisible(false)\n                                }}\n                            >\n                                {element.title || element.name}\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseWithSearch\n\n\n\n","import React, {useEffect, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../../Redux/actions'\nimport {changeFilterState, deleteFilter, resetTempFilter, selectedFilter} from '../../../Redux/actions/filterAction'\nimport {addClients, changeClientState} from '../../../Redux/actions/clientAction'\nimport {icon_cross, icon_trush} from '../../../data/icons'\n\n// import SetBrand from './SetBrand'\n// import SetClient from './SetClient'\n// import SetDataCreate from './SetDataCreate'\n// import SetGroup from './SetGroup'\n// import SetSubtype from './SetSubtype'\nimport FilterEditor from '../FilterEditor'\nimport Button from '../../general/Button'\nimport ChooseStatuses from '../../Settings/SettingPages/Notification/ChooseStatuses'\nimport ChooseOfListMany from '../../general/ChooseOfListMany'\nimport ChooseWithSearch from '../../general/ChooseWithSearch'\n\nconst SetFilter = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name])\n\n    const handleSet = () => {\n        const data = {\n            page: 0,\n            engineer_id: props.filter.temp_engineers.length ? props.filter.temp_engineers : null,\n            overdue: null,\n            status_id: props.filter.temp_statuses.length ? props.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: props.filter.temp_order_types.length ? props.filter.temp_order_types : null,\n            manager_id: props.filter.temp_managers.length ? props.filter.temp_managers : null,\n            created_at: props.filter.temp_created_at,\n            kindof_good: props.filter.temp_kindof_good_id,\n            brand: props.filter.temp_brand,\n            subtype: props.filter.temp_subtype,\n            client_id: Object.values(props.filter.temp_client).length ? [props.filter.temp_client.id] : null,\n            active_badge: 0,\n            active_filter: 0\n        }\n        props.changeFilterState(data)\n    }\n\n    // const current_client = useMemo(() => Object.values(props.temp_client).length ? props.temp_client.name : '', [props.filter.temp_client])\n\n    return (\n        <div className=\"setCustomFilter\">\n            <div className=\"row jc-c\">\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseStatuses\n                        className='h52'\n                        width='100%'\n                        func={value => props.selectedFilter(value, 'temp_statuses')}\n                        func_clear={() => props.changeFilterState({temp_statuses: []})}\n                        current_list={props.filter.temp_statuses}\n                    />\n                    {/*<div className='mt15'><SetGroup/></div>*/}\n                    <ChooseWithSearch\n                        id='filterClient'\n                        className='mt15 h52'\n                        width='100%'\n                        title='Клиент'\n                        list={props.client.clients}\n                        current_element={Object.values(props.temp_client).length ? props.temp_client.name : ''}\n                        setElement={client => props.changeFilterState({temp_client: client})}\n                        filter={props.client.filter_name}\n                        changeFilter={filter => props.changeClientState({filter_name: filter})}\n                        placeholder='Введите имя'\n                        disabled={false}\n                    />\n                </div>\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseOfListMany\n                        id='idTypeOrders'\n                        className='h52'\n                        width='100%'\n                        title='Тип заказа'\n                        mainLable='Все'\n                        list={props.order_type}\n                        checked_list={props.filter.temp_order_types}\n                        func={value => props.selectedFilter(value, 'temp_order_types')}\n                    />\n                    {/*<div className='mt15'><SetBrand/></div>*/}\n                    <ChooseOfListMany\n                        id='idManagerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Менеджер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_managers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_managers}\n                        func={value => props.selectedFilter(value, 'temp_managers')}\n                    />\n                </div>\n                <div className=\"jc-sb w100 m10\">\n                    {/*<SetDataCreate/>*/}\n                    {/*<div className='mt15'><SetSubtype/></div>*/}\n                    <ChooseOfListMany\n                        id='idEngineerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Инженер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_engineers}\n                        func={value => props.selectedFilter(value, 'temp_engineers')}\n                        disabled={!props.user.role.orders_visibility}\n                    />\n                </div>\n            </div>\n            <div className=\"buttons fs14 mt15\">\n                <Button\n                    className='blueButton'\n                    title='Применить'\n                    onClick={handleSet}\n                />\n                {props.filter.active_filter ?\n                    <Button\n                        className='whiteButton bcr'\n                        icon={icon_trush}\n                        iconClassName='icon-s1 pd1'\n                        iconColor='white'\n                        onClick={() => props.deleteFilter()}\n                    />\n                    :\n                    <Button\n                        className='whiteButton'\n                        title='Создать фильтр'\n                        onClick={() => props.changeVisibleState({statusCreateNewFilter: true})}\n                    />\n                }\n                <Button\n                    className='whiteButton'\n                    title='Сбросить параметы'\n                    onClick={() => props.resetTempFilter()}\n                    icon={icon_cross}\n                    iconClassName='icon-sm8'\n                    iconColor='#282e33'\n                />\n            </div>\n            {props.statusCreateNewFilter ? <FilterEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    statusCreateNewFilter: state.view.statusCreateNewFilter,\n    filter: state.filter,\n    order_type: state.data.order_type,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    client: state.client,\n    user: state.data.user,\n    temp_client: state.filter.temp_client\n})\n\nconst mapDispatchToProps = {\n    addClients,\n    resetTempFilter,\n    deleteFilter,\n    selectedFilter,\n    changeFilterState,\n    changeVisibleState,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport { setVisibleFlag, changeOrderFormS} from '../../Redux/actions'\nimport {icon_down, icon_filter, icon_table} from '../../data/icons'\nimport Button from '../general/Button'\nimport Icon from '../general/Icon'\nimport {changeFilterState} from '../../Redux/actions/filterAction'\n\nconst CustomPanel = (props) => {\n\n    const newOrder = () => {\n        props.changeOrderFormS(props.user.id, 'manager_id')\n        props.setVisibleFlag('statusOrderEditor', true)\n    }\n\n    const handleEditFilter = () => {\n        props.setVisibleFlag('statusSetCustomFilter', 'change')\n        props.changeFilterState({active_badge: 0,  active_filter: 0})\n    }\n\n    return (\n        <div className='mainCustomPanel '>\n            <div className='customPanel'>\n                <Button\n                    className='greenButton'\n                    title='+ Заказ'\n                    onClick={newOrder}\n                    unvisible={!props.permissions.includes('create_orders')}\n                />\n                <div className='customFilters'>\n                    <Button\n                        className='customFilter'\n                        title='Фильтр'\n                        onClick={handleEditFilter}\n                        unvisible={false}\n                        icon={icon_filter}\n                        iconClassName='icon-s2'\n                        iconColor='282e33'\n                    />\n                    {props.customFilters.map(filter => {\n                        return (\n                            <CustomFilter data={filter} key={filter.id}/>\n                        )\n                    })}\n                </div>\n                <div\n                    className='chooseFieldButton'\n                    onClick={() => console.log('ckick on \"set table\"')}\n                >\n                    <div className='cl11'>\n                        <Icon icon={icon_table} className='icon-table'/>\n                    </div>\n                    <div className='cl12'>\n                        <Icon icon={icon_down} className='icon-table mt5'/>\n                    </div>\n                </div>\n            </div>\n\n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customFilters: state.filter.customFilters,\n    statusSetCustomFilter: state.view.statusSetCustomFilter,\n    permissions: state.data.user.role.permissions,\n    statusOrderEditor: state.view.statusOrderEditor,\n    user: state.data.user,\n    edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useEffect} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport {addStatusGroupAction, addAdCampaign, addEquipment} from '../../Redux/actions'\nimport {addBadges, changeFilterForm, changeFilterState, addCustomFilters} from '../../Redux/actions/filterAction'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\n\nimport CustomPanel from './CustomPanel'\n\n\nfunction Orders(props) {\n\n    useEffect(() => {\n        props.addOrders()\n    }, [\n        props.filter.sort,\n        props.filter.field_sort,\n        props.filter.page,\n        props.filter.engineer_id,\n        props.filter.overdue,\n        props.filter.status_id,\n        props.filter.status_overdue,\n        props.filter.urgent,\n        props.filter.order_type_id,\n        props.filter.manager_id,\n        props.filter.created_at,\n        props.filter.kindof_good,\n        props.filter.brand,\n        props.filter.subtype,\n        props.filter.client_id,\n        props.filter.search\n    ])\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n\n\n    const pageChangeHandler = page => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changeFilterState({page: curent_page})\n        // props.changeFilterForm(curent_page, 'page')\n    }\n\n\n    useEffect(() => {\n        props.addBadges()\n    }, [])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    count: state.data.count,\n    ordersShow: state.data.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment,\n    addBadges,\n    changeFilterState,\n    changeFilterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {icone_sphere, icone_setting} from '../../../data/icons'\nimport {activeCashbox, editCashbox, changeCashboxForm, changeVisibleState} from '../../../Redux/actions'\nimport {changePaymentState} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\nconst Cashbox = (props) => {\n\n    const activ = (id) => {\n        return id === props.activ_cashbox_id\n    }\n\n    const edit = props.user.role.permissions.includes('edit_cash')\n\n    const income = props.user.role.permissions.includes('make_income') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('incoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n    const outcome = props.user.role.permissions.includes('make_expenditure') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n    const move = props.user.role.permissions.includes('move_money') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming_move') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n    const showBalance = props.user.role.permissions.includes('see_remains') &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('show_cashbox_remains') :\n            props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n    const handleEdit = () => {\n        props.editCashbox(props.cashbox)\n        props.changeVisibleState({'statusCashboxEditor': true})\n    }\n\n    const hanldleIncome = () => {\n        props.changePaymentState({\n            'direction': 2,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleOutcome = () => {\n        props.changePaymentState({\n            'direction': 1,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleMove = () => {\n        props.changePaymentState({\n            'direction': 0,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    return (\n        <div\n            className={`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted ? 'bcg' : 'cgr'}`}\n            onClick={() => props.changeCashboxForm(props.cashbox, 'current_cashbox')}\n        >\n            <div className='icons'>\n                <div><Icon className='smalIcon' icon={icone_sphere}\n                           color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n                <div\n                    onClick={edit ? handleEdit : null}\n                >\n                    <Icon className='smalIcon curP' icon={icone_setting}\n                          color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n                </div>\n            </div>\n            <div>{props.cashbox.title.toUpperCase()}</div>\n            {showBalance ?\n                <div className='cacsboxBalance'>{`${parseFloat(props.cashbox.balance).toFixed(2)} руб.`}</div> : null}\n            <div className='row jc-c'>\n                <Button\n                    title='+ Приход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n                    onClick={hanldleIncome}\n                    disabled={props.cashbox.deleted}\n                    unvisible={!income}\n                />\n                <Button\n                    id='344'\n                    title='- Расход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n                    onClick={hanldleOutcome}\n                    disabled={props.cashbox.deleted}\n                    unvisible={!outcome}\n                />\n            </div>\n            <Button\n                title='Перемещение'\n                className='whiteButton'\n                onClick={hanldleMove}\n                disabled={props.cashbox.deleted}\n                unvisible={!move}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user,\n    activ_cashbox_id: state.cashbox.current_cashbox.id,\n})\n\nconst mapDispatchToProps = {\n    activeCashbox,\n    editCashbox,\n    changeCashboxForm,\n    changePaymentState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeEmployeeSelected, changeCashboxPermissions } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeEmployeeSelected,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEmoloyee, changeCashboxForm, changeCashboxPermissions } from '../../../Redux/actions'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxForm(employee.id, 'permissions_employee')\n      props.editEmoloyee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxForm(employee_id, 'permissions_employee')\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmoloyee,\n   changeCashboxForm,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../general/LableInput'\n\nimport { changeCashboxForm, chooseCashboxSelected } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={(event) => props.changeCashboxForm(event.target.value, 'title')}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxForm(true, 'isGlobal')}\n            func2 = {() => props.changeCashboxForm(false, 'isGlobal')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxForm(event.target.checked, 'isVirtual')} \n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxForm(0, 'type')}\n            func2={() => props.changeCashboxForm(1, 'type')}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxForm,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm, setVisibleFlag, createCashbox, seveEditCashbox, deleteCashbox } from '../../../Redux/actions'\nimport { permission_cahsbox } from \"../../../data/permissions\";\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n      props.setVisibleFlag('statusCashboxEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   useEffect(() => {\n     if (!props.cashbox.edit) {\n      let list_per = {}\n      props.employees.filter(employee => !employee.deleted).forEach(employee => {\n         list_per[employee.id] = {}\n         list_per[employee.id].available = true\n         list_per[employee.id].like_cashbox = true\n         list_per[employee.id].permissions = permission_cahsbox\n      })\n      props.changeCashboxForm(list_per, 'employees')\n    }\n   }, [])\n\n  const hangleCreate = () => {\n    if (props.cashbox.title) {\n      props.createCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (props.cashbox.title) {\n      props.seveEditCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n        </div>\n\n        <Tabs\n          list={['Общие', 'Доcтуп']}\n          func={props.changeCashboxForm}\n          tab={props.cashbox.tabs_editor}\n          tab_field=\"tabs_editor\"\n        />\n\n        {props.cashbox.tabs_editor === 0 ? <DataCashbox /> : null}\n        {props.cashbox.tabs_editor === 1 ? <CashboxAccess /> : null}\n\n        <BottomButtons\n          edit={props.cashbox.edit}\n          create={ hangleCreate }\n          save={ hangleSave }\n          delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null }\n          recover={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null }\n          close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n          deleted={props.cashbox.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  cashbox: state.cashbox,\n  employees: state.data.employees,\n  view: state.view,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm,\n  setVisibleFlag,\n  createCashbox,\n  seveEditCashbox,\n  deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, setPayment} from '../../Redux/actions'\nimport {icon_file_text, icon_warning} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport {showDate} from '../general/utils'\n\nconst TablePayments = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payments.filter(payment => !payment.deleted).forEach(payment => {\n            income_sum += payment.income\n            outcome_sum += payment.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payments])\n\n    const showBalance = () => {\n        let cashboxAvailable = false\n        if (Object.values(props.current_cashbox).length) {\n            cashboxAvailable = (props.current_cashbox.employees[props.user.id].like_cashbox ?\n                props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n        }\n        return cashboxAvailable && props.user.role.permissions.includes('see_remains')\n    }\n\n    const payments = props.payments.filter(payment => props.showDeleted || !payment.deleted)\n\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr className=''>\n                <th className='w150'>Создан</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                {showBalance() ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n            </thead>\n            <tbody>\n            {payments.map(payment => (\n                <tr\n                    key={payment.id}\n                    className={payment.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => {\n                        props.setPayment(payment)\n                        props.setVisibleFlag('statusPaymentsCard', true)\n                    }}\n                >\n                    <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                            <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                            {payment.created_at !== payment.custom_created_at ?\n                                <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}`}>\n                                    <Icon\n                                        className='icon-s2 ml5'\n                                        icon={icon_warning}\n                                        color='red'\n                                    />\n                                </div> : null}\n                        </div>\n                    </td>\n                    <td>\n                        <div>{payment.description}{payment.client.name ?` (Клиент: ${payment.client.name})` : null }</div>\n                        {payment.direction ?\n                            <div className='row'>\n                                <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                                <div className='tac ml5 cgr'>{payment.cashflow_category}</div>\n                            </div> : null}\n                    </td>\n                    <td className={payment.income ? 'greenFont tac' : 'tac'}>{payment.income}</td>\n                    <td className={payment.outcome ? 'redFont tac' : 'tac'}>{payment.outcome}</td>\n                    {showBalance() ? <td className='tac'>{parseFloat(payment.deposit).toFixed(2)}</td> : null}\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payments.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    payments: state.data.payments,\n    employees: state.data.employees,\n    user: state.data.user,\n    current_cashbox: state.cashbox.current_cashbox\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    setPayment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { addPayments } from '../../Redux/actions/paymentAction'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport { icon_stats_docs } from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\n\nregisterLocale('ru', ru)\n\nconst ManeyMovement = (props) => {\n\n   useEffect(() => {\n      if (props.current_cashbox) { props.addPayments() }\n   }, [props.current_cashbox])\n\n   const [showDeleted, setShowDeleted] = useState(false)\n   \n   return (\n      <div className = 'ml30 w100'>\n\n         <div className='row'>\n            <Icon icon={icon_stats_docs}/>\n            <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n         </div>\n\n         <div className='row'>\n            {props.permissions.includes('see_moving_money_all_time') ? <>\n            <div className='w250'>\n               <DatePicker \n                  selectsRange={true}\n                  startDate={props.filter_created_at[0] ? new Date(props.filter_created_at[0] * 1000) : null}\n                  endDate={props.filter_created_at[1] ? new Date(props.filter_created_at[1] * 1000) : null}\n                  onChange={(update) => {\n                     props.changePaymentForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat=\"dd.MM.yyyy\"\n                  locale={'ru'}\n                  maxDate={ Date.now() + 84600000 }\n               />\n            </div>\n\n            <button \n               className='blueButton'\n               onClick={() => props.addPayments()}\n            >\n               Применить\n            </button>\n            </> : null}\n\n            {props.permissions.includes('see_delete_payments') ? \n            <Checkbox\n               label='Показать удаленные'\n               onChange={event => setShowDeleted(event.target.checked)}\n               value={showDeleted}\n            /> : null}\n         </div>\n\n         <TablePayments showDeleted = { showDeleted }/>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_cashbox: state.cashbox.current_cashbox,\n   filter_created_at: state.payment.filter_created_at,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag, addCashboxes, changeCashboxForm } from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addCashboxes()\n   },[])\n\n   const cashboxes = props.cashboxes.filter(cashbox => \n      (!cashbox.deleted || showDeleted) && \n      cashbox.employees[props.user.id].available &&\n      (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n      )\n   \n   \n   // useEffect(() => {\n   //    props.changeCashboxForm(cashboxes[0], 'current_cashbox')\n   // },[])\n\n   return (\n      <div className = 'contentTab'>\n\n         <div className = 'row al-itm-bl'>\n            <div className='cashboxes'>\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  checked={showDeleted}\n               />\n               {cashboxes.map(cashbox => {\n               return (\n                  <Cashbox\n                     key={cashbox.id}\n                     cashbox={cashbox}\n                     active={cashbox.active}\n                  />\n               )})}\n               \n               {props.user.role.permissions.includes('edit_cash') ?\n               <div \n                  className='whiteButton'\n                  onClick={() => props.setVisibleFlag('statusCashboxEditor', true)}\n               >\n                     + Добавить кассу\n               </div> : null}\n\n            </div>\n            {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null }\n           \n         </div>\n         {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n         {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n         {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view,\n   cashboxes: state.data.cashboxes,\n   user: state.data.user,\n   current_branch: state.data.current_branch,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   addCashboxes,\n   changeCashboxForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport { currentMonth } from '../../components/general/utils'\n\n\nexport function changePayrollForm( value, field ) {\n   return {\n     type: 'CHANGE_PAYROLL_FORM',\n     field,\n     value\n   }\n }\n\nexport function editPayroll(payroll) {\n   return {\n     type: 'EDIT_PAYROLL',\n     payroll\n   }\n }\n \n export function resetPayroll() {\n   return {\n     type: 'RESET_PAYROLL'\n   }\n }\n \n \n export function selectedPayroll( value, field ) {\n   return {\n     type: 'SELECTED_PAYROLL',\n     field,\n     value\n   }\n }\n\nexport function addPayrolls() {\n\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n \n   return dispatch => {\n \n     fetch(state.data.url_server + '/get_payrolls', request_config)\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrolls',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос начислений не выполнен'))\n   }\n }\n\n export function addMonthBalance() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n   custom_created_at: currentMonth(),\n   employee_id: state.payroll.setted_employee\n })\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_payroll_sum', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_PAYROLL_FORM',\n          field: 'month_balance',\n          value: data.sum,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос баланса не выполнен'))\n  }\n}\n\nexport function createPayroll() {\n\n  const state = store.getState()\n\n  const request_config1 = getRequestConfig({\n    description: state.payroll.description,      \n    income: state.payroll.income,\n    outcome: -state.payroll.outcome,\n    direction: state.payroll.direction,\n    deleted: state.payroll.deleted,\n    reimburse: state.payroll.reimburse,\n    created_at: state.payroll.created_at,\n    custom_created_at: state.payroll.custom_created_at,\n    relation_type: state.payroll.relation_type,\n    relation_id: state.payroll.relation_id,\n    employee_id: state.payroll.employee_id,\n    order_id: state.payroll.order_id\n  })\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    await fetch(state.data.url_server + '/get_payrolls', request_config2)\n      .then(response =>  response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'payrolls',\n            data: data.data,\n          })\n          dispatch({\n            type: 'RESET_PAYROLL',\n          })\n          dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusPayrollEditor',\n            value: false\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}\n\nexport function deletePayroll(flag) {\n\n  const state = store.getState()\n\n  let request_config1 = getRequestConfig({\n    id: state.payroll.edit,      \n    deleted: flag\n  })\n  request_config1.method = 'PUT'\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    fetch(state.data.url_server + '/get_payrolls', request_config2)\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payrolls',\n          data: data.data,\n        })\n        dispatch({\n          type: 'RESET_PAYROLL',\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPayrollEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {editPayroll} from '../../../Redux/actions/payrollActions'\n\nimport {showDate} from '../../general/utils'\nimport Icon from '../../general/Icon'\nimport {icon_warning} from '../../../data/icons'\n\nconst TablePayrolls = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n    const editPayroll = (payroll) => {\n        props.editPayroll(payroll)\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const payrolls = props.payrolls.filter(payroll => props.showDeleted || !payroll.deleted)\n\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n            income_sum += payroll.income\n            outcome_sum += payroll.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payrolls])\n\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w135'>Дата</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                <th className='w91'>Баланс, руб.</th>\n            </tr>\n            </thead>\n            <tbody>\n            {payrolls.map(payroll => (\n                <tr\n                    key={payroll.id}\n                    className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => editPayroll(payroll)}\n                >\n                    <td className='pd-lr-5'>\n                        <div>\n                            <div className='row'>\n                                <div>{type_payrolls[payroll.relation_type]}</div>\n                                {payroll.created_at !== payroll.custom_created_at ?\n                                    <div title={`Добавлено задним числом\\n${showDate(payroll.created_at)}`}>\n                                        <Icon\n                                            className='icon-s2 ml5'\n                                            icon={icon_warning}\n                                            color='red'\n                                        />\n                                    </div> : null}\n                            </div>\n                            <div className='cgr'>{showDate(payroll.custom_created_at)}</div>\n                        </div>\n                    </td>\n                    <td className='pd-lr-5'>{payroll.description}</td>\n                    <td className={payroll.income ? 'greenFont tac' : 'tac'}>{payroll.income}</td>\n                    <td className={payroll.outcome ? 'redFont tac' : 'tac'}>{payroll.outcome}</td>\n                    <td className='tac'>{payroll.deposit.toFixed(2)}</td>\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payrolls.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n        </table>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    payrolls: state.data.payrolls\n})\n\nconst mapDispatchToProps = {\n    editPayroll,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { changePayrollForm } from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\n\nregisterLocale('ru', ru)\n\nconst PayrollForm = (props) => {\n\n   const [chooseData, setChooseData] = useState(false)\n\n   return (\n      <div className=''>\n         <div className='row al-itm-fe'>\n               <ChooseBotton\n                  className='mt15 mr-rg-20'\n                  title='Дата и время'\n                  name={['Текущее', 'Заданное']}\n                  func1 = {() => {\n                    setChooseData(false)\n                    props.changePayrollForm( null, 'custom_created_at')\n                  }}\n                  func2 = {() => setChooseData(true)}\n                  checked = { true }\n                  // disabled={!props.permissions.includes('backdating')}\n               />\n               {chooseData ? \n               <DatePicker \n                  selected={props.payroll.custom_created_at ? new Date(props.payroll.custom_created_at * 1000) : Date.now()}\n                  onChange={(date) => {\n                     props.changePayrollForm( date / 1000, 'custom_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat='dd.MM.yyyy HH:mm'\n                  locale={'ru'}\n                  maxDate={ Date.now() }\n                  // startDate={Date.now()}\n                  showTimeSelect\n               /> : null }\n            </div> \n            <LableInput\n               className='mt15'\n               width='70px'\n               title='Сумма'\n               onChange={event => props.changePayrollForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payroll.direction === 2 ? 'income' : 'outcome')}\n               value={props.payroll.outcome ?  props.payroll.outcome : props.payroll.income}\n               unit='руб.'\n               checkedFlag='inputPayrollSumChecked'\n               checked={props.view.inputPayrollSumChecked}\n               disabled={props.payroll.deleted}\n               redStar={ true }\n            />\n            <ChooseOfList\n               id='employeePayroll'\n               title='Сотрудник'\n               className='mt15'\n               list={props.employees}\n               field='employee_id'\n               setElement={props.changePayrollForm}\n               current_id={props.payroll.employee_id}\n               width={'250px'}\n               employee={true}\n               checkedFlag='inputPayrollEmployeeChecked'\n               checked={props.view.inputPayrollEmployeeChecked}\n               disabled={props.payroll.deleted}\n               // unvisible={false}\n            />\n            <LableArea\n               className='mt15'\n               title='Коментарий'\n               onChange={event => props.changePayrollForm(event.target.value, 'description')}\n               value={props.payroll.description}\n               checkedFlag='inputPayrollDescChecked'\n               checked={props.view.inputPayrollDescChecked}\n               redStar={ true }\n               disabled={props.payroll.deleted}\n            />      \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view, \n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.data.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { resetPayroll, changePayrollForm, createPayroll, deletePayroll } from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\n\nconst PaypolleEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusPayrollEditor', false)\n      props.setVisibleFlag('inputPayrollDescChecked', true )\n      props.setVisibleFlag('inputPayrollEmployeeChecked', true )\n      props.resetPayroll()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      props.changePayrollForm(props.payroll.setted_employee, 'employee_id')\n   }, [])\n\n \n\n   const hangleCreate = () => {\n      if (\n         (props.payroll.income || props.payroll.outcome) &&\n         props.payroll.employee_id  && \n         props.payroll.description\n         ) {\n         props.createPayroll()\n      } else {\n         if (!(props.payroll.income || props.payroll.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n         if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n         if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n      }\n   }\n\n  const hangleSave = () => {\n   if (\n      (props.payrolle.income || props.payrolle.outcome) &&\n      props.payroll.employee_id  && \n      props.payroll.description\n      ) {\n      // props.createPayment()\n   } else {\n      if (!(props.payrolle.income || props.payrolle.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n      if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n      if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n   }\n  }\n\n  \n\n  const title = ['', 'Взыскание', 'Премия']\n\n  const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n  return (\n      <div className=\"rightBlock\">\n         <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n         <div className=\"createNewTitle\">\n            {props.payroll.edit ? type_payrolls[props.payroll.relation_type] :(title[props.payroll.direction])}\n         </div>\n\n         <div className='contentEditor'>\n           \n           {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n         </div>\n       \n        <BottomButtons\n            edit={props.payroll.edit}\n            create={ hangleCreate }\n            // save={ hangleSave }\n            delete={ props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null }\n            recover={ props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null }\n            close={ handleClose }\n            deleted={props.payroll.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view, \n  payroll: state.payroll,\n  permissions: state.data.user.role.permissions,\n  employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   setVisibleFlag,\n   resetPayroll,\n   createPayroll,\n   deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","\nimport React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { addEmployees, setVisibleFlag } from '../../../Redux/actions';\nimport { changePayrollForm, addPayrolls, addMonthBalance } from '../../../Redux/actions/payrollActions'\nimport { showName } from '../../general/utils'\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\n\nregisterLocale('ru', ru)\n\n\nconst EmployeeSalary = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addMonthBalance()\n      props.addEmployees()\n   }, [props.payroll.setted_employee])\n\n   const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n   const handleIncome = () => {\n      props.changePayrollForm(2, 'direction')\n      props.changePayrollForm(9, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n\n   const handleOutcome = () => {\n      props.changePayrollForm(1, 'direction')\n      props.changePayrollForm(10, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n   \n\n   return (\n      <div className = ''>\n         <div className='createNewTitle fsz20 mt0'>\n            {showName(current_employee)}\n         </div>\n         <div className='txtb'>\n            <span>Начисленно в текущем месяце: </span>\n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{props.payroll.month_balance.toFixed(2)}</span> руб.\n            </div>\n         <div className='txtb'>\n            <span>Баланс:</span> \n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{current_employee.balance.toFixed(2)}</span> руб.\n            </div>\n\n         <div className='row mt15 jc-sb'>\n           <div className='row'>\n               <div className='w250'>\n                  <DatePicker \n                     selectsRange={true}\n                     startDate={props.payroll.filter_created_at[0] ? new Date(props.payroll.filter_created_at[0] * 1000) : null}\n                     endDate={props.payroll.filter_created_at[1] ? new Date(props.payroll.filter_created_at[1] * 1000) : null}\n                     onChange={(update) => {\n                        props.changePayrollForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                     }}\n                     isClearable={true}\n                     placeholderText='Выбирите дату'\n                     className=\"optionFilterInputDate\"\n                     dateFormat=\"dd.MM.yyyy\"\n                     locale={'ru'}\n                     maxDate={ Date.now() + 84600000 }\n                  />\n               </div>\n               <Button\n                  className='blueButton'\n                  title='Применить'\n                  onClick={() => props.addPayrolls()}\n               />\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  value={showDeleted}\n                  unvisible={!props.permissions.includes('see_seleted_payrolls')}\n               />\n            </div>\n            <div className='row'>\n               <Button\n                  className='greenButton'\n                  title='+ Премия'\n                  onClick={ handleIncome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n               <Button\n                  className='greenButton bcr m10'\n                  title='- Взыскание'\n                  onClick={ handleOutcome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n            </div>\n         </div>\n         {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n         <TablePayrolls showDeleted={showDeleted}/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   statusPayrollEditor: state.view.statusPayrollEditor\n   })\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   addPayrolls,\n   addMonthBalance,\n   addEmployees,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {showName} from '../../general/utils'\nimport {changePayrollForm} from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n\n    const [total, setTotal] = useState(0)\n\n    useEffect(() => {\n        let sum = 0\n        props.employees.filter(employee => employee.id != 1).forEach(employee => {\n            sum += employee.balance\n        })\n        setTotal(sum)\n    }, [props.employees])\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>Сотрудник</th>\n                <th>Баланс</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.employees.map(employee => (\n                <tr\n                    key={employee.id}\n                    onClick={() => props.changePayrollForm(employee.id, 'setted_employee')}\n                    style={employee.id === props.payroll.setted_employee ? {backgroundColor: '#cae1f5'} : null}\n                >\n                    <td>{showName(employee)}</td>\n                    <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td>Итог:</td>\n                <td>{total}</td>\n            </tr>\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n    payroll: state.payroll\n})\n\nconst mapDispatchToProps = {\n    changePayrollForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollForm } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollForm(props.user_id, 'setted_employee')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeCashboxForm} from '../../Redux/actions'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\nimport Loader from '../Loader/Loader'\n\nconst Payments = (props) => {\n\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Финансы</span>\n            </div>\n            <div className='settingPageBody'>\n            </div>\n\n            <Tabs\n                list={['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты']}\n                func={props.changeCashboxForm}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <Cashboxes/> : null}\n            {props.tabs === 1 ? null : null}\n            {props.tabs === 2 ? null : null}\n            {props.tabs === 3 ? <Salaries/> : null}\n\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.cashbox.tabs,\n    statusOrderLoader: state.view.statusOrderLoader\n\n})\n\nconst mapDispatchToProps = {\n    changeCashboxForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td>{part[header.field].title}</td>\n                            return <td>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport { icon_table } from '../../data/icons'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         className={`tableFields ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1 h24'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                  <path d={icon_table}></path>\n               </svg>\n            </div>\n            <div className='cl12'>\n               <span className=\"fieldSeparate\">&#6662;</span>\n            </div>   \n         </div>\n\n         {listVisible ?\n            <div \n               className='listOptions'\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            unvisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            unvisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                unvisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                unvisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={props.changeWarehouseForm}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clients = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут клиенты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusSettingRow } from '../../Redux/actions'\n\n\nfunction SettingRow(props) {\n  return (\n    <Link \n    className=\"settingRow\" \n    to={props.row.url}\n    style={{\n       backgroundColor: props.settingMenu.find(row => row.id === props.row.id).active ? '#939699' : '#53585c',\n       color: props.settingMenu.find(row => row.id === props.row.id).active ? '#fff' : null\n      }}\n    onClick={() => props.changeStatusSettingRow(props.row.id)}\n    >\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n   settingMenu: state.data.settingMenu\n})\n\nconst mapDispatchToProps = {\n   changeStatusSettingRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  unvisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport { changeEmployeEditorForm, changeEmployeeEditorRoleOptions, setRoleEmployeeEdetor } from '../../../../Redux/actions'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'first_name')}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'last_name') }\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'email')}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'login') }\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? (\n        <div className=\"errorMassageInput\">Такой Login уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'password')}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeEditorForm(value, 'phone')}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'inn')}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'doc_name')}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event =>\n          props.changeEmployeEditorForm(event.target.value, 'notes')\n        }\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'post')}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        field=\"role_id\"\n        setElement={props.changeEmployeEditorForm}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeEditorForm,\n  changeEmployeeEditorRoleOptions,\n  setRoleEmployeeEdetor,\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee\n} from '../../../../Redux/actions'\nimport { addPayrules } from '../../../../Redux/actions/payrulleAction'\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst EmploeeyEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusEmployeeEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n    props.addPayrules()\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login &&\n      props.employee.password &&\n      props.employee.role_id !== 0\n    ) {\n      props.createEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n      if (!props.employee.password) {\n        props.setVisibleFlag('inputEmployeePasswordChecked', false)\n      }\n      if (props.employee.role_id === 0) {\n        props.setVisibleFlag('inputEmployeeRoleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login\n    ) {\n      props.seveEditEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit\n            ? `${props.employee.last_name} ${props.employee.first_name}`\n            : 'Новый сотрудник'}\n        </div>\n\n        <div className=\"tabs\">\n          <div\n            className={props.tabs === 1 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(1)}\n          >\n            Общие\n          </div>\n          <div\n            className={props.tabs === 2 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(2)}\n          >\n            Доступ\n          </div>\n        </div>\n\n        {props.tabs === 1 ? <EditEmployeeGenerally /> : null}\n        {props.tabs === 2 ? <EditEmployeePermission /> : null}\n\n        <BottomButtons\n          edit={props.edit}\n          create={hangleCreate}\n          save={hangleSave}\n          delete={() => props.deleteEmployee(true)}\n          recover={ props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n          close={() => props.setVisibleFlag('statusEmployeeEditor', false)}\n          deleted={props.employee.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tabs: state.employee.tabs,\n  edit: state.employee.edit,\n  employee: state.employee,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee,\n  addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editEmoloyee, setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmoloyee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n   editEmoloyee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles, changeShowDeleted, resetEmoloyee} from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmoloyee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={() => props.changeShowDeleted()}\n                        checked={props.showDeleted}\n                        unvisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeShowDeleted,\n    resetEmoloyee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeShedule } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n  const weekdays = [\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n    'Воскрсение',\n  ]\n\n  return (\n    <div className=\"schedule mr-rg-20\">\n      <div className=\"lableImput mt15\">График работы локации</div>\n      {props.branch.schedule.map((day, idx) => {\n        return (\n          <div className=\"row mt15\" key={idx}>\n            <Checkbox\n              className=\"w150\"\n              onChange={(event) =>\n                props.changeShedule(idx, 'work_day', event.target.checked)\n              }\n              checked={day.work_day}\n              label={weekdays[idx]}\n              disabled={props.branch.deleted}\n            />\n\n            {props.branch.schedule[idx].work_day ? (\n              <div className=\"row\">\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'start_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.start_time}\n                />\n                <div className=\"w30 tac\">&#8212;</div>\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'end_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.end_time}\n                />\n              </div>\n            ) : null}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n  changeShedule,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeBranchForm } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\nimport {\n  icon_location,\n  icon_map_location,\n  icon_wrench,\n  icon_hammer,\n  icon_radio,\n  icon_git,\n  icon_svg,\n} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchForm('color', color)\n                        props.changeBranchForm('icon', icon)\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setBranchEmployee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\n\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.filter(employee => !employee.deleted).map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n} from '../../../../Redux/actions'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n      props.setVisibleFlag('statusBranchEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateBranch = () => {\n    if (\n      props.branch.name &&\n      props.branch.orders_prefix &&\n      props.branch.documents_prefix\n    ) {\n      props.createBranch()\n    } else {\n      if (!props.branch.name) {\n        props.setVisibleFlag('inputBranchNameChecked', false)\n      }\n      if (!props.branch.orders_prefix) {\n        props.setVisibleFlag('inputBranchPrefixChecked', false)\n      }\n      if (!props.branch.documents_prefix) {\n        props.setVisibleFlag('inputBranchPrefixDocChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.branch.edit ? props.branch.name : ' Новая локация'}\n        </div>\n\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Название\"\n          onChange={(event) => props.changeBranchForm('name', event.target.value)}\n          value={props.branch.name}\n          checkedFlag=\"inputBranchNameChecked\"\n          checked={props.view.inputBranchNameChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Адрес\"\n          onChange={(event) => props.changeBranchForm('address', event.target.value)}\n          value={props.branch.address}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className='textInput w250'\n          title='Телефон'\n          onChange={value => props.changeBranchForm('phone', value)}\n          value={props.branch.phone}\n          disabled={props.branch.deleted}\n          isPhone={true}\n        />\n        <Schedule />\n        <ChooseIcon />\n        <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n        <ChooseOfList\n          id={18}\n          list={props.order_type}\n          field=\"orders_type_id\"\n          setElement={props.changeBranchForm}\n          current_id={props.branch.orders_type_id}\n          width={'250px'}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера заказа\"\n          onChange={(event) => props.changeBranchForm('orders_prefix', event.target.value)}\n          value={props.branch.orders_prefix}\n          checkedFlag=\"inputBranchPrefixChecked\"\n          checked={props.view.inputBranchPrefixChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.orders_prefix}-${\n            props.counters.find((count) => count.id === 1).count\n          }`}\n        </p>\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера документов\"\n          onChange={(event) => props.changeBranchForm('documents_prefix', event.target.value)}\n          value={props.branch.documents_prefix}\n          checkedFlag=\"inputBranchPrefixDocChecked\"\n          checked={props.view.inputBranchPrefixDocChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.documents_prefix}-${\n            props.counters.find((count) => count.id === 2).count\n          }`}\n        </p>\n        <ChooseEmployees />\n\n        <BottomButtons\n          edit={props.branch.edit}\n          create={handleCreateBranch}\n          save={() => props.saveBranch()}\n          recover={\n            props.permissions.includes('setting_recover_branch')\n              ? () => props.deleteBranch(false)\n              : null\n          }\n          delete={() => props.deleteBranch(true)}\n          close={() => props.setVisibleFlag('statusBranchEditor', false)}\n          deleted={props.branch.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  view: state.view,\n  order_type: state.data.order_type,\n  counters: state.data.counters,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editBranch } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\n\nconst TableBranches = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th></th>\n               <th>Название локации</th>\n               <th>Адрес</th>\n               <th>Телефон</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.branches.filter(branch => props.showDeleted || !branch.deleted).map(branch =>{\n            return (\n               <tr \n                  key={branch.id}\n                  className={branch.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => props.editBranch(branch)} \n               >\n                  <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                  <td>{branch.name}</td>\n                  <td>{branch.address}</td>\n                  <td>{showPhone(branch.phone)}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   branches: state.data.branches,\n   showDeleted: state.branch.showDeleted\n   })\n\nconst mapDispatchToProps = {\n   editBranch\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addCounters, changeBranchForm } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n  useEffect(() => {\n    props.addCounters()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n          <span className='headerTitle'>Локации</span>\n        </div>\n\n        <div className='settingPageBody'>\n        <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n        <div className='row'>\n          <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusBranchEditor', true)}\n          > \n            + Добавить локацию\n          </div>\n          {props.permissions.includes('setting_see_branch') ? <Checkbox\n            className='ml10'\n            label='Показать удаленные'\n            onChange={event => props.changeBranchForm('showDeleted', event.target.checked)}\n            checked={props.showDeleted}\n          /> : null}\n        </div>\n\n        <TableBranches/>\n\n        {props.statusBranchEditor ? <BranchEditor/> : null}\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusBranchEditor: state.view.statusBranchEditor,\n  showDeleted: state.branch.showDeleted,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addCounters,\n  changeBranchForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                unvisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                unvisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.data.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { editEmoloyee, setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmoloyee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmoloyee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={props.changeWarehouseForm}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        unvisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        unvisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            unvisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        unvisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    unvisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    unvisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шиблонов не выполнен'))\n\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    unvisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    unvisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={props.changeNotEventForm}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          unvisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.unvisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            unvisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                unvisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.data.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n  useEffect(() => {\n    props.addEquipment()\n    props.addDictMalfunction()\n    props.addDictPackagelist()\n    props.addItemPayments()\n  }, [])\n\n  const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Справочники</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ tabs_list }\n        func={props.changeBookForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <BookEquipment/> : null}\n         {props.tabs === 1 ? <MalfunctionBooks/> : null}\n         {props.tabs === 2 ? <PackagelistBook/> : null}\n         {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n  addEquipment,\n  addDictMalfunction,\n  addDictPackagelist,\n  addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n      {/* <div className='settingContent'> */}\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n          {/* </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\n\nimport { addMainData, addEmployees, addStatus, addData } from '../Redux/actions';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\n\n\n\n\nfunction Main(props) {\n\n    // Загружаем строки меню в State\n    useEffect(() => {\n        props.addMainData()\n        props.addEmployees()\n        props.addStatus()\n    }, [])\n    useEffect(() => {\n        props.addData(props.branches.filter(branch => branch.employees.includes(props.user_id))[0], 'current_branch')\n    }, [props.branches])\n\n\n    \n    return (\n        <div>\n            <Sidebar/>\n            <div className = 'contentMain'>\n                <Switch>\n                    <Route path = '/tasks' component = {TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path = '/orders' component = {Orders}/>\n                    <Route path = '/shops' component = {Shops}/>\n                    <Route path = '/payments' component = {Payments}/>\n                    <Route path = '/wherehouse' component = {Wherehouse}/>\n                    <Route path = '/clients' component = {Clients}/>\n                    <Route path = '/analytics' component = {Analytics}/>\n                    <Route path = '/reports' component = {Reports}/>\n                    <Route path = '/telephony' component = {Telephony}/>\n                    <Route path = '/settings' component = {Settings}/>\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.data.branches\n})\n\n  const mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loginAction, loguotAction, addUserAction, log_in } from '../Redux/actions'\n\nfunction Login(props) {\n\n\n  const handleClick = ({target: {form}}) => {\n     props.log_in(form.login.value, form.password.value)\n  }\n\n\n\n  return (\n    <div className=\"mainLoginContaner\">\n      <div className=\"loginContanier\">\n        <h2>Войдите в аккаунт</h2>\n        {props.error_message ? (\n          <span className=\"errorMessageLogin\">{props.error_message}</span>\n        ) : null}\n        <form id=\"loginForm\">\n          <div>\n            <label className=\"loginFormLable\">Логин или Email</label>\n            <input \n              id=\"login\"\n              className=\"loginFormInput\" \n              type=\"text\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <label className=\"loginFormLable\">Пароль</label>\n            <input \n              id=\"password\" \n              className=\"loginFormInput\" \n              type=\"password\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n              Авторизоваться\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  serverUrl: state.data.url_server,\n  error_message: state.data.error_message\n})\n\nconst mapDispatchToProps = {\n    // explicitly forwarding arguments\n    login: loginAction,\n    loguot: loguotAction,\n    addUser: addUserAction,\n    log_in\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)\n","import React  from \"react\";\nimport Main from './components/Main'\nimport { connect } from \"react-redux\";\n\n\nimport Login from './components/Login'\n\n\nfunction App(props) {\n\n\n  return props.token ? <Main/> : <Login/>\n\n  \n}\n\nconst mapStateToProps = state => ({\n  token: state.data.token\n})\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}