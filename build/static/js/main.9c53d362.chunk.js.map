{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","data/data.js","data/dataTableHeader.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","Redux/actions/actionUtils.js","Redux/actions/filterAction.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/KindOfGood.js","components/orders/cell/Brand.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","Redux/actions/clientAction.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/general/calandar/CalendarTime.js","components/general/calandar/CalendarNavi.js","components/general/calandar/CalendarOption.js","components/general/calandar/ChooseDate.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPayments.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/newOrder/orderHisroy/OrderPrint.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventsStatus.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventSimple.js","components/orders/newOrder/orderHisroy/OrderEvetns/OrderEvents.js","components/general/TableFields.js","components/orders/newOrder/orderHisroy/OrderEvetns/AddComment.js","components/orders/newOrder/orderHisroy/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/newOrder/orderHisroy/Sticker.js","components/orders/newOrder/orderHisroy/StikerToPrint.js","components/orders/cell/Subtype.js","components/orders/cell/Manager.js","components/orders/cell/MissedPayments.js","components/orders/cell/ManagerNotes.js","components/orders/cell/Cell.js","components/orders/cell/AdCampaign.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/FilterEditor.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","components/general/ChooseOfListMany.js","components/general/ChooseWithSearch.js","components/orders/setCustomFilter/SetGroup.js","components/orders/setCustomFilter/SetBrand.js","components/orders/setCustomFilter/SetSubtype.js","components/orders/setCustomFilter/SetFilter.js","components/orders/TableOrderFields.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/TableClients.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","menuRows","id","title","image","url","group_name","active","permission_keys","map","per","settingMenu","permission_key","employees","user","JSON","parse","sessionStorage","getItem","status","status_group","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","branches","cashboxes","payrules","payrolls","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","current_branch","token","login_status","error_message","url_server","process","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","needToResetOrder","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","inputFilterTitleChecked","errorSameMail","errorSameLogin","clientFilter","page","name","phone","search_word","badges","customFilters","general","sort","field_sort","engineer_id","overdue","status_id","status_overdue","urgent","order_type_id","manager_id","created_at","kindof_good","brand","subtype","client_id","search","temp_statuses","temp_order_types","temp_managers","temp_engineers","temp_created_at","temp_kindof_good_id","temp_brand","temp_subtype","temp_client","active_badge","active_filter","title_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","tabs","showDeleted","role_title","first_name","last_name","email","notes","login","password","role_id","permissions","inn","doc_name","post","deleted","order_event_types","dataTableHeader","field","width","visible","order","ordersShow","count","events","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","model","operations","parts","attachments","payments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","warranty_measures","event_filter","event","event_comment","tableFields","position_cursor","position_over","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","filter_name","filter_phone","logo","icon_trush","icon_location","icon_warning","icon_clock","icon_table","icon_briefcase","icon_bug","icon_pencil","icon_calendar","icon_right","icon_left","icon_down","icon_filter","icon_cancel","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","img","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_id","cashbox_id","employee_id","order_id","target_cashbox_id","cashbox","employee","filter_created_at","setHours","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","reimburse","relation_type","setted_employee","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","rows","row","a","b","view","Object","assign","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","new_data","every","val","includes","saveToApp","setItem","stringify","tempFilter","client_name","word","replace","range","role","bool","console","log","tab","equipments_list","equipments","findIndex","phones","statusPhones","statusTitle","tag","tags_list","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","Accept","bad_request","message","clear","warn","changeStatusMenuVisible","changePermissions","editEmoloyee","setClietnCheckbox","setVisibleFlag","changeVisibleState","setVisibleListFlag","changeOrderFormS","changeBranchForm","changeCashboxForm","changeCashboxPermissions","addData","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","editClient","dispatch","fetch","then","response","json","success","catch","addEmployees","filters","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addDictService","mapDispatchToProps","changeStatusMenuRow","connect","props","className","to","style","find","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","LogoUser","src","alt","Icon","viewBox","user_id","useState","menuVisibel","setMenuVisibel","generally_menu","some","key","report_menu","setting_menu","length","changeFilterState","resetFilter","setSearch","placeholder","onChange","target","handleChange","onKeyPressCapture","preventDefault","handleSearch","badge","opacity","changeOrderState","resetOrder","changeOrderField","addOrders","kindof_good_id","brand_id","subtype_id","changeStatus","update_order","update_badges","changeBookForm","changeBookState","resetBookEquipment","chooseBookSelected","addEquipmentType","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","getEmploeeName","toLocaleString","year","month","day","hour","minute","pathname","datestamp","statusGroop","deltaMinut","Math","round","abs","deltaHour","deltaDay","getDateEstimated","reorderOrderField","columnWidth","setColumnWidth","mouseMove","deltaDrag","pageX","mouseUp","window","removeEventListener","minWidth","draggable","onDragEnd","height","onMouseDown","addEventListener","display","onDragOver","order_position","changePaymentState","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","optionsShowDate","optionsShowRangeDate","showPhone","slice","check0_100","isNaN","showName","showDate","date","currentMonth","today","start_date","setDate","valueOfPhoneInput","changeClientForm","changeClientState","addClients","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","invisible","disabled","func1","func2","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","tab_field","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","forEach","showList","setShowList","disc","parseFloat","CalendarTime","current_date","getHours","getMinutes","setMinutes","CalendarNavi","visibleInputYear","setVisibleInputYear","months","setCurrent_day","setMonth","getMonth","setVisibleListMonth","visibleListMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","CalendarOption","allDate","first","second","setTime","getTime","getDay","getDate","setVisibleCalendar","ChooseDate","visibleCalendar","firstDay","setFirstDay","secondDay","setSecondDay","current_days","compareDates","date1","date2","dayClassName","class1","class2","join","showSelected","range_date","showRangeDate","showTop","date_range","new_range","prepareRange","handleChoose","onMouseOver","onMouseOut","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","request_body","item","filter_cashboxes","filter_payments","filter_order","closed_order","orders_count","current_branch_id","order_edit","handleClose","chooseData","setChooseData","category","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","settled","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","cteateEquipmentSubtype","setSubtype","changeOrderForm","addAnotherEquipment","deleteDevice","SetOrderGroup","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","iconClassName","iconColor","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","useMemo","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","current_engineer_id","isExist","text","deletePayment","Checkbox","label","EventStatus","time","current_status","changed","new","EventSimple","checkLength","one","two","toString","marginLeft","event_type","whiteSpace","TableFields","mainCheckbox","useRef","checked_list","indeterminate","classNameMenu","minHeight","ref","addEventComment","current_status_id","textareaRef","React","useLayoutEffect","max","scrollHeight","resize","shiftKey","selectedOrder","createOrder","model_id","saveOrder","getOrder","history","useHistory","location","goBack","Sticker","forwardRef","stickerToPrintRef","printOSticker","useReactToPrint","content","onAfterPrint","initStatusMenuVisible","list_id","editOrder","mainFilter","statusVis","tFields","table_order","tableHeight","offsetHeight","push","handleEdit","chooseCell","addClientToTempFilter","createCustomFilter","current_statuses","choosed_values","current_list","labelClassName","type_group","allStatuses","func_clear","ChooseOfListMany","len","showWord","mainLable","ChooseWithSearch","current_element","changeFilter","setType","settledType","settledBrand","resetTempFilter","deleteFilter","selectedFilter","overflow","addStatusGroup","addCustomFilters","addAdCampaign","addBadges","employee_access","changeFilterForm","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","selected","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","activeCashbox","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","changeEmployeeSelected","perm","setPerm","available","chooseCashboxSelected","createCashbox","seveEditCashbox","list_per","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","income_sum","outcome_sum","cashboxAvailable","setShowDeleted","ivisible","addCashboxes","changePayrollForm","changePayrollState","addPayrolls","editPayroll","type_payrolls","resetPayroll","createPayroll","request_config1","request_config2","deletePayroll","addMonthBalance","current_employee","setTotal","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","choose","cat","catVisible","setCatVisible","mainCategory","createWarehouseCategory","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","addWarehouseCategories","addParts","choosePartSelected","columns","Header","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","getCellProps","changeStatusSettingRow","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","changeEmployeEditorForm","changeEmployeeEditorRoleOptions","setRoleEmployeeEdetor","changeEmployeeTabs","createEmployee","seveEditEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","changeShowDeleted","resetEmoloyee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","editBranch","addCounters","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","addStatus","addMainData","counts","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","exact","OrderEditor","loguot","addUser","log_in","access_token","serverUrl","form","app","StrictMode","ReactDOM","document","getElementById"],"mappings":"0SAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,uMACd,CACCD,MAAO,qBACPC,YAAa,4LAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAA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","file":"static/js/main.9c53d362.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   },{\n      value: 'see_payment_profit',\n      description: 'Видит транзакии ивлечения прибыли'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import { data_setting_menu } from '../../data/dataSettingRows'\nimport { data_menu_rows } from '../../data/dataSidebarRows'\n\nconst initialState = {\n\n    menuRows: data_menu_rows,\n    settingMenu: data_setting_menu,\n\n    employees: [],\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    branches: [],\n    cashboxes: [],\n    payrules: [],\n    payrolls: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    current_branch: {},\n\n    token: sessionStorage.getItem('1xsndt') || '',\n    login_status: false,\n    error_message: '',\n    url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:80' // Мобильный\n    // url_server: 'http://10.6.1.26:80/' // VPN\n\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n  \n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n  switch (action.type) {\n\n    case 'LOGIN': {\n      return {\n         ...state, \n         token: action.token\n        }}\n\n    case 'LOGUOT': {\n      return {\n         ...state, \n         token: '',\n         login_status: false \n        }}\n\n    case 'ADD_MENU_ROWS': {\n      return {\n         ...state, \n         menuRows: action.rows,\n        }}\n\n    case 'ADD_STATUS': {\n      return {\n         ...state, \n         status: action.status,\n        }}\n\n    case 'ADD_STATUS_GROUP': {\n      return {\n          ...state, \n          status_group: action.status_group,\n        }}\n    \n    case 'ADD_EMPLOYEES': {\n      return {\n         ...state, \n         employees: action.employees,\n        }}\n\n    case 'ADD_USER': {\n      return {\n         ...state, \n         user: action.user,\n         login_status: true \n        }}\n\n    case 'ADD_BADGES': {\n      return {\n          ...state, \n          badges: action.badges\n      }}\n\n\n    case 'ADD_EQUIPMENT': {\n      return {\n        ...state,\n        equipment: action.equipment\n      }}\n\n    case 'CHANGE_STATUS_MENU_ROW': {\n      return {\n      ...state,\n      menuRows: state.menuRows.map(row => {\n        return {\n          ...row,\n          active: row.id === action.id\n        }})}} \n\n    \n    case 'ADD_SETTING_MENU': {\n    return {\n        ...state, \n        settingMenu: action.rows.sort((a, b) => a.id - b.id),\n      }}\n      \n    case 'CHANGE_STATUS_SETTING_ROW': {\n      return {\n        ...state,\n        settingMenu: state.settingMenu.map(row => {\n          return {\n            ...row,\n            active: row.id === action.id\n          }})}} \n\n\n\n    case 'ADD_ROLES': {\n      return {\n          ...state, \n          roles: action.roles,\n        }}\n\n    case 'ADD_AD_CAMPAIGN': {\n      return {\n          ...state, \n          ad_campaign: action.ad_campaign,\n        }\n      }\n\n        \n    case 'ADD_DATA': {\n      return {\n          ...state, \n          [action.field]: action.data,\n        }\n      }\n\n        case 'ACTIVE_CASHBOX': {\n          return {\n              ...state, \n              cashboxes: state.cashboxes.map(cashbox => {\n                cashbox.active = cashbox.id === action.id\n                return cashbox\n              }),\n            }\n          }\n\n    default:\n      return state\n  }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    active: false,\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n   needToResetOrder: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: true,\n   checkedOrderKindofGood: true,\n   checkedOrderBrand: true,\n   checkedOrderSubtype: true,\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n   inputFilterTitleChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_VISIBLE_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n\n      \n\n\n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clientFilter: {\n        page: 0,\n        name: '',\n        phone: '7'\n    },\n\n    search_word: '',\n\n\n    // ========================\n    badges: [],\n    customFilters: [],\n\n    title: '',\n    general: false,\n\n    sort: 'desc',\n    field_sort: 'id',\n    page: 0,\n\n    engineer_id: null,\n    overdue: null,\n    status_id: null,\n    status_overdue: null,\n    urgent: null,\n    order_type_id: null,\n    manager_id: null,\n    created_at: null,\n    kindof_good: null,\n    brand: null,\n    subtype: null,\n    client_id: null,\n\n    search: '',\n\n    temp_statuses: [],\n    temp_order_types: [],\n    temp_managers: [],\n    temp_engineers: [],\n    temp_created_at: [0, 0],\n    temp_kindof_good_id: null,\n    temp_brand: null,\n    temp_subtype: null,\n    temp_client: {},\n\n    active_badge: 0,\n    active_filter: 0\n}\n\nexport const filterReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_FILTER_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_FILTER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_FILTER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'RESET_FILTER':\n            return {\n                ...state,\n                page: 0,\n\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n\n                active_badge: 0,\n                active_filter: 0\n            }\n\n        case 'RESET_TEMP_FILTER':\n            return {\n                ...state,\n                temp_statuses: [],\n                temp_order_types: [],\n                temp_managers: [],\n                temp_engineers: [],\n                temp_created_at: [0, 0],\n                temp_kindof_good_id: null,\n                temp_brand: null,\n                temp_subtype: null,\n                temp_client: {},\n            }\n\n        case 'RESET_DATA_FILTER':\n            return {\n                ...state,\n                title: '',\n                general: false,\n            }\n\n        // ========================\n        // case 'ADD_STATUS': {\n        //     return {\n        //         ...state,\n        //         status: action.status.map(status => status.id),\n        //     }\n        // }\n        //\n        // case 'ADD_DATA': {\n        //     if (action.field === 'order_type') {\n        //         return {\n        //             ...state,\n        //             order_type_id: action.data.map(type => type.id)\n        //         }\n        //     } else {\n        //         return state\n        //     }\n        // }\n        //\n        // case 'ADD_EMPLOYEES': {\n        //     return {\n        //         ...state,\n        //         employees: action.employees.map(employee => employee.id),\n        //     }\n        // }\n\n\n\n\n\n        case 'CHANGE_CLIENT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    client_name: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_NAME_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    name: action.word,\n                    phone: ''\n                }\n            }\n        }\n\n\n        case 'CHANGE_PHONE_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    phone: action.word.replace(/[^0-9]/g, ''),\n                    name: ''\n                }\n            }\n        }\n\n        case 'CHANGE_CREATE_AT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    created_at: action.range\n                }\n            }\n        }\n\n\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n  tabs: 1,\n  edit: 0,\n  showDeleted: false,\n  role_title: '',\n\n  first_name: '',\n  last_name: '',\n  email: '',\n  notes: '',\n  phone: '',\n  login: '',\n  password: '',\n  role_id: 0,\n  permissions: [],\n  inn: '',\n  doc_name: '',\n  post: '',\n  deleted: false\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_EMPLOYEE_TAB': {\n         return {\n            ...state, \n            tabs: action.tab,\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n      \n      case 'CHOOSE_EMPLOYEE_SELECTED': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n\n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            role_id: action.role\n         }\n      }\n      \n      case 'CHANGE_SHOW_DELETED': {\n         return {\n            ...state, \n            showDeleted: !state.showDeleted\n         }\n      }\n\n      \n      case 'EDIT_EMPLOYEE': {\n         return {\n            ...state, \n            edit: action.employee.id,\n            first_name: action.employee.first_name || '',\n            last_name: action.employee.last_name || '',\n            email: action.employee.email || '',\n            notes: action.employee.notes || '',\n            phone: action.employee.phone || '',\n            login: action.employee.login || '',\n            role_id: action.employee.role.id,\n            role_title: action.employee.role.title || '',\n            permissions: action.employee.permissions || [],\n            inn: action.employee.inn || '',\n            doc_name: action.employee.doc_name || '',\n            post: action.employee.post || '',\n            deleted: action.employee.deleted\n         }\n      }\n\n      case 'RESET_EMPLOYEE': {\n         return {\n            ...state, \n            edit: 0,\n            first_name: '',\n            last_name: '',\n            email: '',\n            notes: '',\n            phone: '',\n            login: '',\n            password: '',\n            role_title: '',\n            role_id: 0,\n            permissions: [],\n            inn: '',\n            doc_name: '',\n            post: '',\n            deleted: false\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const order_event_types = [\n    {id: 1, title: 'Заказ создан', value: 'CREATE_ORDER'},\n    {id: 2, title: 'Инженер назанчен', value: 'ASSIGN_ENGINEER'},\n    {id: 3, title: 'Инженер изменен', value: 'CHANGE_ENGINEER'},\n    {id: 4, title: 'Менеджер назначен', value: 'ASSIGN_MANAGER'},\n    {id: 5, title: 'Менеджер изменен', value: 'CHANGE_MANAGER'},\n    {id: 6, title: 'Добавлен клиент', value: 'ADD_CLIENT'},\n    {id: 7, title: 'Клиент изменен', value: 'CHANGE_CLIENT'},\n    {id: 8, title: 'Изменение данных', value: 'CHANGE_DATA'},\n    {id: 9, title: 'Срок выполнения изменен', value: 'CHANGE_ESTIMATED_DONE_AT'},\n    {id: 10, title: 'Добавлена операция', value: 'ADD_OPERATION'},\n    {id: 11, title: 'Операция удалена', value: 'DELETE_OPERATION'},\n    {id: 12, title: 'Операция изменена', value: 'CHANGE_OPERATION'},\n    {id: 13, title: 'Добавлена запчасть', value: 'ADD_ORDER_PART'},\n    {id: 14, title: 'Запчасть удалена', value: 'DELETE_ORDER_PART'},\n    {id: 15, title: 'Запчасть изменена', value: 'CHANGE_ORDER_PART'},\n    {id: 16, title: 'Платеж добавлен', value: 'ADD_PAYMENT'},\n    {id: 17, title: 'Платеж удален', value: 'DELETE_PAYMENT'},\n    {id: 18, title: 'Статус изменен', value: 'CHANGE_STATUS'},\n    {id: 19, title: 'Коментарии', value: 'ADD_COMMENT'},\n    {id: 20, title: 'SMS оповещение', value: 'SEND_SMS'},\n    {id: 21, title: 'Email оповещение', value: 'SEND_EMAIL'},\n    {id: 22, title: 'Перемещение заказа', value: 'MOVE_TO'}\n]","const dataTableHeader = [\n    {\n        id: 1,\n        title: 'Заказ №',\n        field: 'id',\n        width: 90,\n        visible: true,\n        order: 1\n    }, {\n        id: 2,\n        title: 'Создан',\n        field: 'created_at',\n        width: 150,\n        visible: true,\n        order: 2\n    }, {\n        id: 3,\n        title: 'Срок заказа',\n        field: 'estimated_done_at',\n        width: 150,\n        visible: true,\n        order: 3\n    }, {\n        id: 4,\n        title: 'Статус',\n        field: 'status.name',\n        width: 150,\n        visible: true,\n        order: 4\n    }, {\n        id: 5,\n        title: 'Устройство',\n        field: 'equipment',\n        width: 150,\n        visible: true,\n        order: 5\n    }, {\n        id: 6,\n        title: 'Тип устройства',\n        field: 'kindof_good',\n        width: 150,\n        visible: true,\n        order: 6\n    }, {\n        id: 7,\n        title: 'Бренд',\n        field: 'brand',\n        width: 130,\n        visible: true,\n        order: 7\n    },{\n        id: 8,\n        title: 'Модуль/Серия',\n        field: 'subtype',\n        width: 130,\n        visible: true,\n        order: 8\n    }, {\n        id: 9,\n        title: 'Неисправность',\n        field: 'malfunction',\n        width: 130,\n        visible: true,\n        order: 9\n    }, {\n        id: 10,\n        title: 'Исполнитель',\n        field: 'engineer_id',\n        width: 150,\n        visible: true,\n        order: 10\n    }, {\n        id: 11,\n        title: 'Менеджер ',\n        field: 'manager_id',\n        width: 150,\n        visible: true,\n        order: 11\n    }, {\n        id: 12,\n        title: 'Клиент',\n        field: 'client.name',\n        width: 150,\n        visible: true,\n        order: 12\n    }, {\n        id: 13,\n        title: 'Цена',\n        field: 'price',\n        width: 130,\n        visible: true,\n        order: 13\n    }, {\n        id: 14,\n        title: 'К оплате',\n        field: 'price',\n        width: 130,\n        visible: true,\n        order: 14\n    }, {\n        id: 15,\n        title: 'Заметки исполнителя',\n        field: 'engineer_notes',\n        width: 130,\n        visible: true,\n        order: 15\n    }, {\n        id: 16,\n        title: 'Заметки менеджера',\n        field: 'manager_notes',\n        width: 150,\n        visible: true,\n        order: 16\n    }, {\n        id: 17,\n        title: 'Ячейка',\n        field: 'engineer_notes',\n        width: 150,\n        visible: true,\n        order: 17\n    }, {\n        id: 18,\n        title: 'Рекламная компания',\n        field: 'cell',\n        width: 150,\n        visible: true,\n        order: 18\n    }\n]\n\nexport default dataTableHeader","import {order_event_types} from '../../data/data'\nimport dataTableHeader from '../../data/dataTableHeader'\n\nconst initialState = {\n\n    ordersShow: [],\n    count: 0,\n\n    events: [],\n\n    edit: 0,\n    tabs: 1,\n\n    created_at: 0,\n    done_at: 0,\n    closed_at: 0,\n    assigned_at: 0,\n    duration: 0,\n    estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n    scheduled_for: 0,\n    warranty_date: 0,\n    status_deadline: 0,\n\n    ad_campaign_id: 1,\n    branch_id: 0,\n    status: {},\n    client: {},\n    order_type_id: 1,\n    closed_by_id: 0,\n    created_by_id: 0,\n    manager_id: 0,\n    engineer_id: 0,\n    kindof_good: {},\n    brand: {},\n    subtype: {},\n    model: {},\n\n    operations: [],\n    parts: [],\n    attachments: [],\n    payments: [],\n\n    id_label: '',\n    prefix: '',\n    serial: '',\n    malfunction: '',\n    packagelist: '',\n    appearance: '',\n    engineer_notes: '',\n    manager_notes: '',\n    resume: '',\n    cell: '',\n\n    estimated_cost: 0,\n    missed_payments: 0,\n    discount_sum: 0,\n    payed: 0,\n    price: 0,\n    remaining: 0,\n    remaining_status: 0,\n    remaining_warranty: 0,\n\n    overdue: false,\n    status_overdue: false,\n    urgent: false,\n    warranty_measures: false,\n\n    event_filter: JSON.parse(localStorage.getItem('event_filter')) || order_event_types.map(event => event.id),\n    event_comment: '',\n\n    tableFields: JSON.parse(localStorage.getItem('tableFields')) || dataTableHeader,\n\n    position_cursor: 0,\n    position_over: null\n}\n\nexport const orderReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_ORDER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_ORDER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_ORDER_FORM': {\n\n            let equipments_list = state.equipments\n            equipments_list[action.idx][action.field] = action.value\n\n            return {...Object.assign(state, {equipments: equipments_list})}\n\n        }\n\n        case 'CHANGE_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx][action.field] = action.value\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n        case 'REORDER_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx].order = action.order + 0.5\n            tableFields = tableFields.sort( (a, b) => a.order - b.order)\n            tableFields = tableFields.map((field, idx) => {\n                field.order = idx\n                return field\n            })\n\n\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n\n        case 'ADD_ANOTHER_EQUIPMENT': {\n\n\n            return {\n                ...state,\n                equipments: state.equipments.concat([{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }])\n            }\n        }\n\n\n        case 'DELETE_DEVICE': {\n\n            let equipments_list = state.equipments\n            equipments_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                equipments: equipments_list\n            }\n        }\n\n\n        case 'CHANGE_ORDER_FORM_S': {\n\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'RESET_ORDER': {\n\n            return {\n                ...state,\n                events: [],\n                edit: 0,\n                tabs: 1,\n\n                created_at: 0,\n                done_at: 0,\n                closed_at: 0,\n                assigned_at: 0,\n                duration: 0,\n                estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n                // estimated_done_at: 0,\n                scheduled_for: 0,\n                warranty_date: 0,\n                status_deadline: 0,\n\n                ad_campaign_id: 1,\n                branch_id: 0,\n                status_id: 0,\n                client: {},\n                order_type_id: 1,\n                closed_by_id: 0,\n                created_by_id: 0,\n                manager_id: 0,\n                engineer_id: 0,\n                kindof_good: {},\n                brand: {},\n                subtype: {},\n                model: {},\n\n                operations: [],\n                parts: [],\n                attachments: [],\n                payments: [],\n\n                id_label: '',\n                prefix: '',\n                serial: '',\n                malfunction: '',\n                packagelist: '',\n                appearance: '',\n                engineer_notes: '',\n                manager_notes: '',\n                resume: '',\n                cell: '',\n\n                estimated_cost: 0,\n                missed_payments: 0,\n                discount_sum: 0,\n                payed: 0,\n                price: 0,\n                remaining: 0,\n                remaining_status: 0,\n                remaining_warranty: 0,\n\n                overdue: false,\n                status_overdue: false,\n                urgent: false,\n                warranty_measures: false,\n\n\n                equipments: [{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }],\n            }\n        }\n\n\n        case 'EDIT_ORDER': {\n\n            return {\n                ...state,\n                edit: action.order.id,\n                created_at: action.order.created_at,\n                done_at: action.order.done_at,\n                closed_at: action.order.closed_at,\n                assigned_at: action.order.assigned_at,\n                duration: action.order.duration,\n                estimated_done_at: action.order.estimated_done_at,\n                scheduled_for: action.order.scheduled_for,\n                warranty_date: action.order.warranty_date,\n                status_deadline: action.order.status_deadline,\n\n                ad_campaign_id: action.order.ad_campaign.id,\n                branch_id: action.order.branch.id,\n                status: action.order.status,\n                client: action.order.client,\n                order_type_id: action.order.order_type.id,\n                closed_by_id: action.order.closed_by_id,\n                created_by_id: action.order.created_by_id,\n                manager_id: action.order.manager_id,\n                engineer_id: action.order.engineer_id,\n                kindof_good: action.order.kindof_good,\n                brand: action.order.brand,\n                subtype: action.order.subtype,\n                model: action.order.model,\n\n                operations: action.order.operations,\n                parts: action.order.parts,\n                attachments: action.order.attachments,\n                payments: action.order.payments,\n\n                id_label: action.order.id_label,\n                prefix: action.order.prefix,\n                serial: action.order.serial,\n                malfunction: action.order.malfunction,\n                packagelist: action.order.packagelist,\n                appearance: action.order.appearance,\n                engineer_notes: action.order.engineer_notes || '',\n                manager_notes: action.order.manager_notes || '',\n                resume: action.order.resume || '',\n                cell: action.order.cell || '',\n\n                estimated_cost: action.order.estimated_cost,\n                missed_payments: action.order.missed_payments,\n                discount_sum: action.order.discount_sum,\n                payed: action.order.payed,\n                price: action.order.price,\n                remaining: action.order.remaining,\n                remaining_status: action.order.remaining_status,\n                remaining_warranty: action.order.remaining_warranty,\n\n                overdue: action.order.overdue,\n                status_overdue: action.order.status_overdue,\n                urgent: action.order.urgent,\n                warranty_measures: action.order.warranty_measures\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n    clients: [],\n\n    juridical: false,\n    supplier: false,\n    conflicted: false,\n    should_send_email: false,\n    deleted: false,\n\n    name: '',\n    name_doc: '',\n    email: '',\n    address: '',\n    phone: [{\n        title: 'Мобильный',\n        number: '',\n        notify: false\n    }],\n    ad_campaign_id: 1,\n    discount_code: '',\n    discount_goods: 0,\n    discount_goods_margin_id: 1,\n    discount_materials: 0,\n    discount_materials_margin_id: 1,\n    discount_services: 0,\n    discount_service_margin_id: 0,\n    notes: '',\n    tags: [],\n\n    ogrn: '',\n    inn: '',\n    kpp: '',\n    juridical_address: '',\n    director: '',\n    bank_name: '',\n    settlement_account: '',\n    corr_account: '',\n    bic: '',\n\n    discount_good_type: false,\n    discount_materials_type: false,\n    discount_service_type: false,\n\n    tabs: 0,\n    phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n    statusPhoneList: [false],\n    statusAddTitle: [false],\n\n    page: 0,\n    filter_name: '',\n    filter_phone: ''\n\n}\n\nexport const clientReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_CLIENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_CLIENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SET_CLIENT_CHECKBOX': {\n\n            if (action.value === 'change') {\n                return {\n                    ...state,\n                    [action.field]: !state[action.field]\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: action.value\n                }\n            }\n        }\n\n\n        case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n            let phones = state.phone\n            phones[action.idx].number = action.value\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n        case 'ADD_PHONE_COUNTER': {\n\n            return {\n                ...state,\n                phone: state.phone.concat([{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }]),\n                statusPhoneList: state.statusPhoneList.concat([false])\n            }\n        }\n\n        case 'DELETE_COUNT_NUMBER': {\n\n            let phones = state.phone\n            phones.splice(action.idx, 1)\n            const statusPhones = state.statusPhoneList\n            statusPhones.splice(action.idx, 1)\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n\n        case 'SET_PHONE_NOTIFY': {\n\n            let phones = state.phone\n            phones[action.idx].notify = !phones[action.idx].notify\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n\n        case 'SET_PHONE_TITLE': {\n\n            let phones = state.phone\n            phones[action.idx].title = action.title\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n        case 'CHANGE_STATUS_PHONE_LIST': {\n\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = false\n\n            return {\n                ...state,\n                statusPhoneList: statusPhones,\n                statusAddTitle: statusTitle\n            }\n        }\n\n\n        case 'CHANGE_STATUS_ADD_TITLE': {\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = !statusTitle[action.idx]\n\n            return {\n                ...state,\n                statusAddTitle: statusTitle\n            }\n        }\n\n        case 'SET_AD_CANMPAIGN_CLIENT': {\n\n            return {\n                ...state,\n                ad_campaign_id: action.id\n            }\n        }\n\n        case 'ADD_CLIENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_CLIENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n        case 'RESET_DATA_CLIENT': {\n            return {\n                ...state,\n                juridical: false,\n                supplier: false,\n                conflicted: false,\n                should_send_email: false,\n                deleted: false,\n\n                name: '',\n                name_doc: '',\n                email: '',\n                address: '',\n                phone: [{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }],\n                ad_campaign_id: 1,\n                discount_code: '',\n                discount_goods: 0,\n                discount_goods_margin_id: 1,\n                discount_materials: 0,\n                discount_materials_margin_id: 1,\n                discount_services: 0,\n                discount_service_margin_id: 0,\n                notes: '',\n                tags: [],\n\n                ogrn: '',\n                inn: '',\n                kpp: '',\n                juridical_address: '',\n                director: '',\n                bank_name: '',\n                settlement_account: '',\n                corr_account: '',\n                bic: '',\n\n                discount_good_type: false,\n                discount_materials_type: false,\n                discount_service_type: false,\n\n                edit: 0,\n                tabs: 0,\n                statusPhoneList: [false],\n                statusAddTitle: [false]\n\n            }\n        }\n\n        case 'CHANGE_CLIENT_TABS': {\n\n            return {\n                ...state,\n                tabs: action.tab\n            }\n        }\n\n\n        case 'EDIT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id\n            }\n        }\n\n\n        case 'EDIT_CURRENT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id,\n                tabs: 1\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n\nexport const icon_filter = 'M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z'\n\nexport const icon_cross = 'M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z'\n\nexport const icon_cancel = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z M21 8l-5 5-5-5-3 3 5 5-5 5 3 3 5-5 5 5 3-3-5-5 5-5z'\n\nexport const icon_letter = 'M29 4h-26c-1.65 0-3 1.35-3 3v20c0 1.65 1.35 3 3 3h26c1.65 0 3-1.35 3-3v-20c0-1.65-1.35-3-3-3zM12.461 17.199l-8.461 6.59v-15.676l8.461 9.086zM5.512 8h20.976l-10.488 7.875-10.488-7.875zM12.79 17.553l3.21 3.447 3.21-3.447 6.58 8.447h-19.579l6.58-8.447zM19.539 17.199l8.461-9.086v15.676l-8.461-6.59z'\n\nexport const icon_user = 'M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'\n\nexport const icon_arrow_right = 'M19.414 27.414l10-10c0.781-0.781 0.781-2.047 0-2.828l-10-10c-0.781-0.781-2.047-0.781-2.828 0s-0.781 2.047 0 2.828l6.586 6.586h-19.172c-1.105 0-2 0.895-2 2s0.895 2 2 2h19.172l-6.586 6.586c-0.39 0.39-0.586 0.902-0.586 1.414s0.195 1.024 0.586 1.414c0.781 0.781 2.047 0.781 2.828 0z'\n\nexport const icon_bubble = 'M16 6c-1.717 0-3.375 0.271-4.928 0.804-1.46 0.502-2.76 1.211-3.863 2.108-2.069 1.681-3.209 3.843-3.209 6.088 0 1.259 0.35 2.481 1.039 3.63 0.711 1.185 1.781 2.268 3.093 3.133 0.949 0.625 1.587 1.623 1.755 2.747 0.056 0.375 0.091 0.753 0.105 1.129 0.233-0.194 0.461-0.401 0.684-0.624 0.755-0.755 1.774-1.172 2.828-1.172 0.168 0 0.336 0.011 0.505 0.032 0.655 0.083 1.325 0.126 1.99 0.126 1.717 0 3.375-0.271 4.928-0.804 1.46-0.502 2.76-1.211 3.863-2.108 2.069-1.681 3.209-3.843 3.209-6.088s-1.14-4.407-3.209-6.088c-1.104-0.897-2.404-1.606-3.863-2.108-1.553-0.534-3.211-0.804-4.928-0.804zM16 2v0c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z'\n\nexport const icon_loop = 'M4 10h20v6l8-8-8-8v6h-24v12h4zM28 22h-20v-6l-8 8 8 8v-6h24v-12h-4z'\n\nexport const icon_arrow_down = 'M27.414 19.414l-10 10c-0.781 0.781-2.047 0.781-2.828 0l-10-10c-0.781-0.781-0.781-2.047 0-2.828s2.047-0.781 2.828 0l6.586 6.586v-19.172c0-1.105 0.895-2 2-2s2 0.895 2 2v19.172l6.586-6.586c0.39-0.39 0.902-0.586 1.414-0.586s1.024 0.195 1.414 0.586c0.781 0.781 0.781 2.047 0 2.828z'\n\nexport const icon_coin_dollar = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM15 29c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM16 16v-4h4v-2h-4v-2h-2v2h-4v8h4v4h-4v2h4v2h2v-2h4l-0-8h-4zM14 16h-2v-4h2v4zM18 22h-2v-4h2v4z'\n","import { icon_location } from \"../../data/icons\"\n\nconst initialState = {\n   name: '',\n   address: '',\n   phone: '',\n   color: 'grey',\n   icon: icon_location,\n   orders_type_id: 1,\n   orders_type_strategy: 'last',\n   orders_prefix: 'OTS',\n   documents_prefix: 'A',\n   employees: [],\n   deleted: false,\n   schedule: [\n      {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 1\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 2\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 3\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 4\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 5\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 6\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 7\n      },\n   ],\n\n   edit: 0,\n   showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BRANCH_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_SCHEDULE': {\n\n         let list_schedule = state.schedule\n         list_schedule[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            schedule: list_schedule\n         }\n      }\n      \n      case 'SET_BRANCH_EMPLOYEE': {\n         if (action.id.every(id => state.employees.includes(id))) {\n            return {\n               ...state, \n               employees: state.employees.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n            }\n         }\n      }\n\n      case 'RESET_BRANCH': {\n\n         return {\n            ...state, \n            name: '',\n            address: '',\n            phone: '',\n            color: 'grey',\n            icon: icon_location,\n            orders_type_id: 1,\n            orders_type_strategy: 'last',\n            orders_prefix: 'OTS',\n            documents_prefix: 'A',\n            employees: [],\n            deleted: false,\n            schedule: [\n               {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 1\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 2\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 3\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 4\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 5\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 6\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 7\n               },\n            ],\n\n            edit: 0\n         }\n      }\n\n      \n      case 'EDIT_BRANCH': {\n\n         return {\n            ...state, \n            name: action.branch.name,\n            address: action.branch.address,\n            phone: action.branch.phone,\n            color: action.branch.color,\n            icon: action.branch.icon,\n            orders_type_id: action.branch.orders_type_id,\n            orders_type_strategy: action.branch.orders_type_strategy,\n            orders_prefix: action.branch.orders_prefix,\n            documents_prefix: action.branch.documents_prefix,\n            employees: action.branch.employees,\n            deleted: action.branch.deleted,\n            schedule: action.branch.schedule,\n\n            edit: action.branch.id\n         }\n      }\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_BOOK_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","const now = new Date()\n\nconst initialState = {\n\n    payments: [],\n\n    edit: 0,\n    sum: 0,\n    title: '',\n\n    cashflow_category: '',\n    description: '',\n\n    deposit: 0,\n    income: 0,\n    outcome: 0,\n    direction: 0,\n\n    can_print_fiscal: false,\n    deleted: false,\n    is_fiscal: false,\n\n    created_at: 0,\n    custom_created_at: null,\n\n    tags: [],\n\n    relation_id: null,\n    cashbox_id: 0,\n    client_id: 0,\n    employee_id: 0,\n    order_id: 0,\n    target_cashbox_id: 0,\n\n    cashbox: {},\n    client: {},\n    employee: {},\n    order: {},\n\n    filter_created_at: [\n        parseInt(now.setHours(0, 0, 0, 0) / 1000),\n        parseInt(now.setHours(23, 59, 59, 999) / 1000)\n    ],\n    filter_tags: [],\n\n    current_type: 0,\n    context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_PAYMENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'CHOOSE_PAYMENT_SELECTED': {\n            if (action.id.every(id => state[action.field].includes(id))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n                }\n            }\n        }\n\n        case 'ADD_PAYMENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_PAYMENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n\n        case 'RESET_PAYMENTS': {\n\n            return {\n                ...state,\n                edit: 0,\n                sum: 0,\n                title: '',\n\n                cashflow_category: '',\n                description: '',\n\n                deposit: 0,\n                income: 0,\n                outcome: 0,\n                direction: 0,\n\n                can_print_fiscal: true,\n                deleted: false,\n                is_fiscal: false,\n\n                created_at: 0,\n                custom_created_at: 0,\n\n                tags: [],\n\n                cashbox_id: 0,\n                client_id: 0,\n                employee_id: 0,\n                order_id: 0,\n                target_cashbox_id: 0,\n\n                context: {}\n            }\n        }\n\n        case 'SET_PAYMENT': {\n\n            return {\n                ...state,\n                edit: action.payment.id,\n\n                cashflow_category: action.payment.cashflow_category,\n                description: action.payment.description,\n\n                deposit: action.payment.deposit,\n                income: action.payment.income,\n                outcome: action.payment.outcome,\n                direction: action.payment.direction,\n\n                can_print_fiscal: action.payment.can_print_fiscal,\n                deleted: action.payment.deleted,\n                is_fiscal: action.payment.is_fiscal,\n\n                created_at: action.payment.created_at,\n                custom_created_at: action.payment.custom_created_at,\n\n                tags: action.payment.tags,\n\n                cashbox: action.payment.cashbox,\n                client: action.payment.client,\n                employee: action.payment.employee,\n                order: action.payment.order,\n                target_cashbox_id: action.payment.target_cashbox_id,\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n       \n      //  case 'CHOOSE_EMPLOYEE_SELECTED': {\n      //     if (action.value.every(val => state[action.field].includes(val))) {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n      //        }\n      //     } else {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n      //        }\n      //     }\n      //  }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            // engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const now = new Date()\n\nconst initialState = {\n\n   edit: 0,                   // id при редактировании\n\n   description: '',              // Описание\n   income: 0,                    // Входящяя сумма\n   outcome: 0,                   // Иcходящая сумму\n   direction: 0,                 // Направление платежа\n   deleted: false,               // Платеж удален\n   reimburse: false,             // Совершен возврат\n   created_at: null,             // Дата создания\n   custom_created_at: null,      // Дата установленая пользователем\n   relation_type: 0,             // Тип начисления\n   relation_id: 0,               // id связанного события\n   employee_id: 0,               // Сотрудник\n   order_id: null,               // Заказ\n\n   setted_employee: 0,           // Выбранный сотрудник\n\n   filter_created_at: [\n      parseInt(now.setHours(0, 0, 0, 0) / 1000),\n      parseInt(now.setHours(23, 59, 59, 999) / 1000)\n   ],\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_PAYROLL_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'CHANGE_PAYROLL_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,\n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null            \n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n        thunk\n    ),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store","import store from \"./store\"\n\nfunction getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${state.data.token}`,\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n\nfunction bad_request(message = '') {\n    sessionStorage.clear()\n    console.warn(message)\n    return {type: 'LOGUOT'}\n}\n\nexport function loginAction(token) {\n    return {\n        type: 'LOGIN',\n        token,\n    }\n}\n\nexport function loguotAction() {\n    return {\n        type: 'LOGUOT'\n    }\n}\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\n\nexport function changeClientListFilter() {\n    return {\n        type: 'CHANGE_CLIENT_LIST_FILTER'\n    }\n}\n\nexport function changeClientMainFilter(word) {\n    return {\n        type: 'CHANGE_CLIENT_MAINFILTER',\n        word\n    }\n}\n\n\n\nexport function changeCreateAtMainFilter(range) {\n    return {\n        type: 'CHANGE_CREATE_AT_MAINFILTER',\n        range\n    }\n}\n\n\nexport function changeStatusMenuRow(id) {\n    return {\n        type: 'CHANGE_STATUS_MENU_ROW',\n        id\n    }\n}\n\nexport function changeStatusSettingRow(id) {\n    return {\n        type: 'CHANGE_STATUS_SETTING_ROW',\n        id\n    }\n}\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\nexport function changeEmployeeTabs(tab) {\n    return {\n        type: 'CHANGE_EMPLOYEE_TAB',\n        tab\n    }\n}\n\nexport function changeEmployeEditorForm(value, field) {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_FORM',\n        value,\n        field\n    }\n}\n\nexport function changeEmployeeSelected(value, field) {\n    return {\n        type: 'CHOOSE_EMPLOYEE_SELECTED',\n        value,\n        field\n    }\n}\n\n\nexport function changeEmployeeEditorRoleOptions() {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS'\n    }\n}\n\n\nexport function setRoleEmployeeEdetor(role) {\n    return {\n        type: 'SET_ROLE_EMPLOYEE_EDITOR',\n        role\n    }\n}\n\nexport function changeShowDeleted() {\n    return {\n        type: 'CHANGE_SHOW_DELETED'\n    }\n}\n\n\nexport function editEmoloyee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmoloyee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function changeVisibleState( data ) {\n    return {\n        type: 'CHANGE_VISIBLE_STATE',\n        data\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeBranchForm(field, value) {\n    return {\n        type: 'CHANGE_BRANCH_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return dispatch => {\n        dispatch({\n            type: 'EDIT_BRANCH',\n            branch\n        })\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusBranchEditor',\n            value: true\n        })\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\n\nexport function changeCashboxForm(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_FORM',\n        field,\n        value\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function activeCashbox(id) {\n    return {\n        type: 'ACTIVE_CASHBOX',\n        id\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\n\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        email: login,\n        password\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/login', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    sessionStorage.setItem('1xsndt', data.access_token);\n                    sessionStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'user',\n                        data: data.user,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'login_status',\n                        data: true,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'token',\n                        data: data.access_token,\n                    })\n                } else {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'error_message',\n                        data: data.message,\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос авторизации не выполнен'))\n    }\n}\n\n\n// Client ================================================================================================================\n\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function seveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов изделий не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на удаление роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'generally_info',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.branch,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'order_type',\n                        data: data.order_type,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.counts,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ad_campaign',\n                        data: data.ad_campaign,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'status_group',\n                        data: data.status_group,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.cashboxes,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.service_prices,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос счетчиков не выполнен'))\n    }\n}\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос флиалов не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос статей плтатежей не выполнен'))\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_FORM',\n                        field: 'current_cashbox',\n                        value: data.data.filter(cashbox =>\n                            !cashbox.deleted &&\n                            cashbox.employees[state.data.user.id].available &&\n                            (cashbox.branch_id === (state.data.current_branch ? state.data.current_branch.id : false) || cashbox.isGlobal)\n                        )[0]\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function seveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuRow } from '../../Redux/actions'\n\n\nfunction MenuRow(props) {\n  return (\n    <Link \n      className=\"menuRow\" \n      to={props.row.url}\n      style={props.menuRows.find(row => row.id === props.row.id).active ? {\n        backgroundColor: '#53585c',\n        borderLeftColor: props.current_branch.color \n      } : null}\n      onClick={() => props.changeStatusMenuRow(props.row.id)}\n    >\n      {props.row.image === 'task' ? (\n        <div className=\"taskNumber\">\n          <span className=\"taskNumber1\">8</span>\n        </div>\n      ) : (\n        <svg className=\"sidebarIcon\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n        </svg>\n      )}\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n  menuRows: state.data.menuRows,\n  current_branch: state.data.current_branch\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\n\n\n\nfunction LogoUser() {\n    \n    return (\n        <div className = 'avatar'> \n        \n            <img \n                src = {`${process.env.PUBLIC_URL}/data/avatars/ava.jpeg`}\n                className = 'imgAvatar' \n                alt = 'User avatar' \n            />\n        </div>\n    )\n    \n}\n\nexport default LogoUser;\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addData } from '../../Redux/actions'\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n   const [menuVisibel, setMenuVisibel] = useState(false)\n\n   return (\n      <div>\n      <div \n         className='menuBranch'\n         onClick={() => setMenuVisibel(!menuVisibel)}\n      >\n         <Icon \n            className='smalIcon'\n            icon={props.current_branch.icon} \n            color={props.current_branch.color}\n         />\n         <div className='sidebarBranch'>\n           {props.current_branch.name}\n         </div>\n      </div>\n      {menuVisibel ? <div className='listOptionsBranch'>\n         {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n            <div \n               key={branch.id}\n               className='listBranch'\n               onClick={() => {\n                  props.addData(branch, 'current_branch')\n                  setMenuVisibel(false)\n               }}\n            >\n               <Icon \n                  className='smalIcon'\n                  icon={branch.icon} \n                  color={branch.color}\n               />\n               <div className='ml5'>{branch.name}</div>\n            </div>\n         ))}\n      </div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_branch: state.data.current_branch,\n   branches: state.data.branches,\n   user_id: state.data.user.id\n   })\n\nconst mapDispatchToProps = {\n   addData\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.data.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nexport function bad_request(message='') {\n    sessionStorage.clear()\n    console.warn(message)\n    return { type: 'LOGUOT' }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeFilterForm( value, field ) {\n    return {\n        type: 'CHANGE_FILTER_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeFilterState( data ) {\n    return {\n        type: 'CHANGE_FILTER_STATE',\n        data\n    }\n}\n\n// export function editFilter(filter) {\n//     return {\n//         type: 'EDIT_FILTER',\n//         filter\n//     }\n// }\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function resetTempFilter() {\n    return {\n        type: 'RESET_TEMP_FILTER'\n    }\n}\n\n\nexport function selectedFilter( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_FILTER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function addBadges() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_access: !state.data.user.role.orders_visibility ? state.data.user.id : null,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function createCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.filter.title,\n        general: state.filter.general,\n        employee_id: state.data.user.id,\n        filters: {\n            page: 0,\n            engineer_id: state.filter.temp_engineers.length ? state.filter.temp_engineers : null,\n            overdue: null,\n            status_id: state.filter.temp_statuses.length ? state.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: state.filter.temp_order_types.length ? state.filter.temp_order_types : null,\n            manager_id: state.filter.temp_managers.length ? state.filter.temp_managers : null,\n            created_at: state.filter.temp_created_at.some(date => date) ? state.filter.temp_created_at : null,\n            kindof_good: state.filter.temp_kindof_good_id,\n            brand: state.filter.temp_brand,\n            subtype: state.filter.temp_subtype,\n            client_id: Object.values(state.filter.temp_client).length ? [state.filter.temp_client.id] : null\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n\n    }\n}\n\n\nexport function deleteFilter() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.filter.active_filter,\n        employee_id: state.data.user.id\n    })\n    request_config.method = 'DELETE'\n\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {\n                            customFilters: data.data,\n                            active_filter: 0\n                        }\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\nconst Header = props => {\n\n   const [search, setSearch] = useState('')\n\n    const handleChange = event => {\n        setSearch(event.target.value)\n        if (!search) props.changeFilterState({search: ''})\n    }\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if(!props.filter.active_badge) props.resetFilter()\n        if (event.key === 'Enter') props.changeFilterState({search})\n    }\n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => handleChange(event)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\n// function MainFilter({data: {color, title, count, img, filters}, activeBadge}) {\nconst MainFilter = props => {\n\n    const handleChoose = () => {\n        if (props.active_badge !== props.badge.id) {\n            props.changeFilterState({\n                ...props.badge.filter,\n                active_badge: props.badge.id,\n                active_filter: 0\n            })\n        } else {\n            props.resetFilter()\n        }\n    }\n\n    return (\n        <div\n            className='mainFilter'\n            style={{\n                backgroundColor: props.badge.color,\n                opacity: props.active_badge === props.badge.id || props.active_badge === 0 ? 1 : 0.3\n            }}\n            onClick={handleChoose}\n        >\n            <div className='pd5'>\n                <Icon icon={props.badge.icon} className='icon-s25' color='white'/>\n            </div>\n            <div className='filterName'>\n                <div className='filterName-value'>\n                    {props.badge.count} {props.badge.count === 1 ? 'заказ' : ((props.badge.count < 5) ? 'заказа' : 'заказов')}\n                </div>\n                <div className='filterName-title'> {props.badge.title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    active_badge: state.filter.active_badge\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainFilter);","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport MainFilter from './MainFilter'\n\nconst Filters = props => {\n\n    return (\n        <div className='mainFilters'>\n            {props.badges.map(badge => (\n                    badge.count ? <MainFilter badge={badge} key={badge.id}/> : null\n                ))\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.filter.badges\n})\n\nexport default connect(mapStateToProps)(Filters)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeOrderState(data) {\n    return {\n        type: 'CHANGE_ORDER_STATE',\n        data\n    }\n}\n\nexport function selectedOrder(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_ORDER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function changeOrderField(id, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FIELD',\n        id,\n        field,\n        value\n    }\n}\n\nexport function reorderOrderField(id, order) {\n    return {\n        type: 'REORDER_ORDER_FIELD',\n        id,\n        order\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good_id: state.filter.kindof_good,\n        brand_id: state.filter.brand,\n        subtype_id: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count}\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        created_by_id: state.data.user.id,\n        branch_id: state.data.current_branch.id,\n        status_id: 1,\n\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id || null,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        urgent: state.order.urgent,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost,\n\n        filter: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            search: state.filter.search,\n\n            update_badges: true\n        }\n    })\n\n\n    return async dispatch => {\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true, statusOrderEditor: false}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: 'EDIT_ORDER',\n                    order: data.order\n                })\n                if (state.view.checkOrderSticker) {\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusOrderSticker: true, needToResetOrder: true}\n                    })\n                }\n                dispatch({\n                    type: 'CHANGE_ORDER_STATE',\n                    data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                })\n                dispatch({\n                    type: 'CHANGE_FILTER_STATE',\n                    data: {badges: data.badges}\n                })\n\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        if (state.view.checkOrderSticker) {\n             await dispatch({\n                type: 'CHANGE_VISIBLE_STATE',\n                data: {statusOrderSticker: true}\n            })\n        } else {\n            await dispatch({\n                type: 'RESET_ORDER'\n            })\n        }\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false}\n        })\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        order_id: order_id,\n        status_id: status_id,\n        filter: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            search: state.filter.search,\n\n            update_order: state.order.edit,\n            update_badges: true\n        }\n    })\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                    })\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.badges}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client_id: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent,\n        filter: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            search: state.filter.search,\n\n            update_badges: true\n        }\n    })\n    request_config.method = 'PUT'\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: 'EDIT_ORDER',\n                    order: data.order\n                })\n                dispatch({\n                    type: 'CHANGE_ORDER_STATE',\n                    data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                })\n                dispatch({\n                    type: 'CHANGE_FILTER_STATE',\n                    data: {badges: data.badges}\n                })\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function getOrder(order_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({id: order_id})\n\n    return async dispatch => {\n        \n        await fetch(state.data.url_server + '/get_order', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function addEventComment() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        order_id: state.order.edit,\n        current_status_id: state.order.status.id,\n        branch_id: state.data.current_branch.id,\n        comment: state.order.event_comment\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_comment', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || [], event_comment: ''}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание коментариев не выполнен'))\n    }\n\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function changeBookState(data) {\n    return {\n        type: 'CHANGE_BOOK_STATE',\n        data\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n            title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.data.branches.map(branch => branch.id),\n            deleted: false,\n            filter: {\n                title,\n                deleted: state.book.showDeleted\n            }\n        })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.kindof_good.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.brand.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.subtype.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_type,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = props => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = props.employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(props.order.created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(props.order.created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\n\nconst Lable = props => {\n   return (\n      <td className=\"orderLabel tableRow\">\n          <Link\n              className='orderLink'\n              to={{\n                  pathname: `/orders/${props.order.id}`,\n                  state: { order_id: props.order.id }\n              }}\n          >\n              <span\n                  className={props.order.urgent && props.order.status.group < 4 ? 'fire-text': null}\n              >\n                  { props.order.id_label }\n              </span>\n          </Link>\n      </td>\n   )\n}\n\n\nconst mapDispatchToProps ={\n}\n  \n export default connect(null, mapDispatchToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = props => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 24) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!props.order.overdue && props.order.status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(props.order.remaining, props.order.status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(props.order.estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {changeOrderField, changeOrderState, reorderOrderField} from '../../Redux/actions/orderActions'\n\n\nfunction TableHeader(props) {\n\n    const [columnWidth, setColumnWidth] = useState(props.data.width)\n\n    const mouseMove = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        if (deltaDrag) setColumnWidth(columnWidth + deltaDrag)\n    }\n\n    const mouseUp = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        setColumnWidth(columnWidth + deltaDrag)\n        props.changeOrderField(props.data.id, 'width', columnWidth + deltaDrag)\n        window.removeEventListener('mousemove', mouseMove)\n        window.removeEventListener('mouseup', mouseUp)\n    }\n\n    const handleDragStart = event => {\n        props.changeOrderState({position_cursor: event.pageX})\n        window.addEventListener('mousemove', mouseMove)\n        window.addEventListener('mouseup', mouseUp)\n    }\n\n    const handleEndDrag = () => {\n        props.reorderOrderField(props.data.id, props.order.position_over)\n        props.changeOrderState({position_over: null})\n    }\n    const handleDragOver = (order_position) => {\n        if (props.order.position_over !== order_position) {\n            props.changeOrderState({position_over: order_position})\n        }\n    }\n\n\n    return (\n        <th\n            className='tableColumnHeader'\n            style={{minWidth: `${columnWidth}px`}}\n        >\n            <div className='row'>\n\n                <div\n                    className='ml5 w100 '\n                    onClick={() => props.changeFilterState({\n                        field_sort: props.data.field,\n                        sort: props.filter.sort === 'asc' ? 'desc' : 'asc'\n                    })}\n                    draggable\n                    onDragEnd={handleEndDrag}\n                >\n                    {props.data.title}\n                    <span>\n                            {props.filter.field_sort === props.data.field ? (props.filter.sort === 'asc' ? '↓' : '↑') : null}\n                        </span>\n                </div>\n                <div\n                    style={{height: '40px'}}\n                    className='curResize'\n                    onMouseDown={handleDragStart}\n                />\n                <div\n                    style={{display: props.order.position_over === props.data.order ? 'block' : 'none'}}\n                    className='dragOver'\n                />\n                <div\n                    className='overArea'\n                    onDragOver={() => handleDragOver(props.data.order)}\n                />\n            </div>\n\n        </th>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    changeOrderField,\n    changeOrderState,\n    reorderOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changePaymentState( data ) {\n    return {\n        type: 'CHANGE_PAYMENT_STATE',\n        data\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.data.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    let request_body = {\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: state.payment.income,\n        outcome: -state.payment.outcome,\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at ? state.payment.custom_created_at : now,\n        tags: state.payment.tags,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    }\n    if (context.type === 'payment') {\n        request_body.filter_cashboxes = {\n            deleted: null\n        }\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    if (context.type === 'order') request_body.filter_order = {\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good_id: state.filter.kindof_good,\n        brand_id: state.filter.brand,\n        subtype_id: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        update_order: state.order.edit,\n    }\n    if (context.type === 'closed_order') {\n        request_body.closed_order = {\n            order_id: context.order_id,\n            status_id: context.status_id,\n            filter: {\n                sort: state.filter.sort,\n                field_sort: state.filter.field_sort,\n                page: state.filter.page,\n\n                engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n                overdue: state.filter.overdue,\n                status_id: state.filter.status_id,\n                status_overdue: state.filter.status_overdue,\n                urgent: state.filter.urgent,\n                order_type_id: state.filter.order_type_id,\n                manager_id: state.filter.manager_id,\n                created_at: state.filter.created_at,\n                kindof_good_id: state.filter.kindof_good,\n                brand_id: state.filter.brand,\n                subtype_id: state.filter.subtype,\n                client_id: state.filter.client_id,\n\n                search: state.filter.search,\n\n                update_order: state.order.edit,\n                update_badges: true\n            }\n        }\n    }\n    const request_config = getRequestConfig(request_body)\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (context.type === 'payment') {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'cashboxes',\n                            data: data.cashboxes,\n                        })\n                    }\n                    if (context.type === 'order') {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    }\n                    if (context.type === 'closed_order') {\n                        if (state.order.edit) {\n                            dispatch({\n                                type: 'EDIT_ORDER',\n                                order: data.order\n                            })\n                            dispatch({\n                                type: 'CHANGE_ORDER_STATE',\n                                data: {events: data.events}\n                            })\n                        }\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, count: data.orders_count}\n                        })\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {badges: data.badges}\n                        })\n                    }\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false, statusPaymentsEditor: false}\n        })\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: state.payment.filter_created_at,\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYMENT_STATE',\n                        data: {payments: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_body = {\n        id: state.payment.edit,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        order_id: state.payment.order.id,\n        deleted: flag\n    }\n    if (state.order.edit) {\n        request_body.filter_order = {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            update_order: state.order.edit\n        }\n    } else {\n        request_body.filter_cashboxes = {\n            deleted: null\n        }\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    let request_config = getRequestConfig(request_body)\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    } else {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'cashboxes',\n                            data: data.cashboxes,\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPaymentsCard: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос удаление платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, changeVisibleState} from '../../Redux/actions'\nimport { changePaymentState} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentState({\n                direction: income ? 2 : 1,\n                [income ? 'income': 'outcome']: Math.abs(props.order.missed_payments),\n                client_id: props.order.client.id,\n                description: income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`,\n                cashflow_category: income ? 2 : 8,\n                employee_id: props.current_user_id,\n                order_id: props.order.edit || props.order.id,\n                context: {\n                    type: 'closed_order',\n                    order_id: props.order.edit || props.order.id,\n                    status_id: status.id\n                }\n            })\n            props.editCurrentClient(props.order.client)\n            props.changeVisibleState({'statusPaymentsEditor': true})\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                // props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentState,\n    changeVisibleState,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.order.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.order.id)}\n            >\n                {props.order.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.order.id]] ? <StatusList order={props.order}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = props => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {props.order.kindof_good.title}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Brand = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.brand.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Brand)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Malfunction = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.malfunction}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Engineer = props => {\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = props.employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n\n   return (\n     <td>\n     <div>\n        {getEmploeeName(props.order.engineer_id)}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\nconst optionsShowRangeDate = {\n   year: 'numeric',\n   month: 'numeric',\n   day: 'numeric'\n}\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 9)}-${phone.slice(9, 11)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function showRangeDate (range_date) {\n   const first = new Date(range_date[0] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   const second = new Date(range_date[1] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   return `${first} - ${second}`\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = props => {\n\n   return props.permissions.includes('see_client') ? (\n      <td>\n      <div className=\"tableClientName noWr\">{props.order.client.name}</div>\n      <div className=\"orderDate noWr\">{showPhone(props.order.client.phone[0].number)}</div>\n    </td>\n   ) : <td><div/></td>\n}\n\nconst mapStateToProps = state => ({\n    permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = props => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{props.order.price || null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = props => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {props.order.engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = props => {\n    return (\n        <td>\n            <div className=\"tableText row\">\n                <div>\n                    <img\n                        alt=''\n                        className=\"icon_equipment\"\n                        src={props.order.kindof_good.icon}\n                    />\n                </div>\n                <div>\n                    <div className='noWr'>\n                        {props.order.kindof_good.icon ? null : <span className=\"\">{props.order.kindof_good.title}</span>}\n                        <span className=\"ml5\">{props.order.brand.title}</span>\n                    </div>\n                    <div className='noWr'>\n                        <span>{props.order.subtype.title}</span>\n                        <span className=\"orderDate ml5\">{props.order.model.title}</span>\n                    </div>\n                </div>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Equipment)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeClientState( data ) {\n    return {\n        type: 'CHANGE_CLIENT_STATE',\n        data\n    }\n}\n\n\nexport function addClients() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.client.page,\n        name: state.client.filter_name,\n        phone: state.client.filter_phone\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CLIENT_STATE',\n                        data: {clients: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентов не выполнен'))\n    }\n}\n\nexport function addClientToTempFilter(id) {\n\n    const state = store.getState()\n\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (data.count) {\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {temp_client: data.data[0]}\n                        })\n                    }\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентa не выполнен'))\n\n    }\n}\n\n/*\nexport function editTemple(temple) {\n    return {\n        type: 'EDIT_TEMPLE',\n        temple\n    }\n}\n\nexport function resetTemple() {\n    return {\n        type: 'RESET_TEMPLE'\n    }\n}\n\n\nexport function selectedTemple( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_TEMPLE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addTemple() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_temple', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function createTemple() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на создание temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n\n\nexport function saveTemple() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на изменение temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.temple.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n*/","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.invisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// invisible={false}","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.invisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (current ? `${current.last_name} ${current.first_name}` : 'не назначен') :\n               (current ? (current.title || current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   invisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.invisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport {icon_trush} from '../../../data/icons'\nimport {valueOfPhoneInput} from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n    const handleChange = (idx, event) => {\n        const out = event.target.value.replace(/[^0-9]/g, '')\n        if (out.length < 12) props.changeClientEditorPhone(idx, out)\n    }\n\n    return (\n        <div>\n            {props.client.phone.map((phone, idx) => (\n                <div key={idx}>\n                    <PhoneTitle idx={idx} title={phone.title}/>\n\n                    <div className=\"inputPhoneBox\">\n                        <input\n                            className='textInput w250'\n                            onChange={event => handleChange(idx, event)}\n                            value={valueOfPhoneInput(phone.number)}\n                            onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n                            style={!props.view.inputClientPhoneChecked[idx] ? {borderColor: 'red'} : null}\n                        />\n                        {idx !== 0 ? (\n                            <div\n                                onClick={() => {\n                                    props.deleteCountNumber(idx)\n                                    props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                                }}\n                            >\n                                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                                    <path d={icon_trush}/>\n                                </svg>\n                            </div>\n                        ) : null}\n                    </div>\n                    {!props.view.inputClientPhoneChecked[idx] ? (\n                        <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n                    ) : null}\n                    <div className=\"checkbox mt5\">\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => props.setPhoneNotify(idx)}\n                            checked={phone.notify}\n                        />\n                        <label>Согласен получать SMS</label>\n                    </div>\n                </div>\n            ))}\n            <div\n                className=\"addPhone\"\n                onClick={() => {\n                    props.addPhoneCounter()\n                    props.addVisibleFlag('inputClientPhoneChecked')\n                }}\n            >\n                + Добавить телефон\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    client: state.client,\n    view: state.view,\n})\n\nconst mapDispatchToProps = {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx, props.tab_field ? props.tab_field : 'tabs')}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={props.changeClientForm}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { editCurrentClient, changeVisibleState} from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\nimport {showPhone} from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\nimport {changeClientState} from '../../Redux/actions/clientAction'\n\nconst SetClientByName = (props) => {\n\n    const [showList, setShowList] = useState(false)\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n            !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n        ) {\n            setShowList(false)\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className='w400 h52'>\n\n            <div className='lableImput mt15'>Имя клиента</div>\n\n            <div className='blockImput'>\n                <div\n                    id='clientInputBoxOfPayments'\n                    className='orderInputBox'\n                    onClick={() => setShowList(true)}\n                >\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changeClientState({filter_name: event.target.value})}\n                    />\n                    <div\n                        className='simbolButton'\n                        onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                    >\n                        +\n                    </div>\n                    <div className='simbolButton'>&#6662;</div>\n                </div>\n\n                {showList ?\n                    <div className='listFilter' id='listClientsOfOfPayments'>\n                        {props.clients.map(client => (\n                            <div\n                                className='rowGropList'\n                                key={client.id}\n                                onClick={() => {\n                                    setShowList(false)\n                                    props.editCurrentClient(client)\n                                    props.changePaymentState({client_id: client.id})\n                                }}\n                            >\n                                <div>{client.name}</div>\n                                <div className='orderDate'>\n                                    {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                </div>\n                            </div>\n                        ))}\n                    </div> : null}\n\n            </div>\n\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.filter.clientFilter.phone,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    editCurrentClient,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentState({\n                                    [props.payment.direction === 2 ? 'income' : 'outcome']: parseFloat(event.target.value.replace(/[^0-9.]/g, ''))\n                                 })}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.data.cashboxes\n   })\n\nconst mapDispatchToProps = {\n   changePaymentState,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React from 'react'\n\nconst CalendarTime = props => {\n    return props.invisible ? null : (\n        <div className='calandarTime'>\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            :\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default CalendarTime\n\n","\nimport React, {useState} from 'react'\n\nconst CalendarNavi = props => {\n\n\n    const [visibleInputYear, setVisibleInputYear] = useState(false)\n\n    const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n    const handleInputYear = (value) => {\n        let out = value.replace(/[^0-9]/g, '')\n        if (value > 9999) out = 9999\n        if (value < 0) out = 0\n        props.setCurrent_day(new Date(props.current_date.setFullYear(out)))\n    }\n\n    return (\n        <div>\n        <div className='calendarNavi'>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() - 1)))}\n            >\n                {'<'}\n            </div>\n\n            <div className='row'>\n                <div\n                    className='currMonth'\n                    onClick={() => props.setVisibleListMonth(!props.visibleListMonth)}\n                >\n                    <div>{months[props.current_date.getMonth()]}</div>\n                    <div className='gu'>&#6662;</div>\n                </div>\n\n                {visibleInputYear ?\n                    <input\n                        className='optionFilterInput w30'\n                        autoFocus\n                        onChange={event => handleInputYear(event.target.value)}\n                        value={props.current_date.getFullYear()}\n                        onBlur={() => setVisibleInputYear(false)}\n                    /> :\n                    <div\n                        className='pd5'\n                        onDoubleClick={() => setVisibleInputYear(true)}\n                    >\n                        {props.current_date.getFullYear()}\n                    </div>}\n                <div className='nextY'>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() + 1)))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() - 1)))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() + 1)))}\n            >\n                {'>'}\n            </div>\n        </div>\n        {props.visibleListMonth ?\n            <div className='monthList' id='monthList'>\n                    {months.map((month, idx) => (\n                        <div\n                            key={idx}\n                            className='month'\n                            onClick={() => {\n                                props.setCurrent_day(new Date(props.current_date.setMonth(idx)))\n                                props.setVisibleListMonth(!props.visibleListMonth)\n                            }}\n                        >\n                            {month}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\n\n\nexport default CalendarNavi","import React from 'react'\n\n\nconst CalendarOption = props => {\n\n    const chooseAllDate = () => {\n        props.func([0, 0])\n        props.setListVisible(false)\n    }\n\n    const chooseToday = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Устанавливаем время на конец дня\n        second.setHours(23, 59, 59, 999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день текущей недели\n        first.setTime(first.getTime() - (first.getDay() - 1 || 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день недели\n        // second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем первый день текущего месяца\n        first.setDate(1)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        // second.setMonth(first.getMonth() + 1)\n        // second.setDate(1)\n        // second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisYear = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало года\n        first.setMonth(0)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n\n    }\n\n    const chooseLastWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день прошлой недели\n        first.setTime(first.getTime() - ((first.getDay() - 1 || 7) + 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день прошлой недели\n        second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseLastMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем дату на начало прошлого месяца\n        first.setMonth(first.getMonth() - 1)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        second.setMonth(first.getMonth() + 1)\n        second.setDate(1)\n        second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseDate = () => {\n        props.setListVisible(false)\n        props.setVisibleCalendar(true)\n    }\n\n\n    return props.invisible ? null : (\n        <div\n            id='listCalendarOption'\n            className='listOptionsChoose'\n            style={{width: props.width}}\n        >\n            {props.allDate ? <div className='options' onClick={chooseAllDate}>Все время</div> : null}\n            <div className='options' onClick={chooseToday}>Сегодня</div>\n            <div className='options' onClick={chooseThisWeek}>Текущая неделя</div>\n            <div className='options' onClick={chooseThisMonth}>Текущий месяц</div>\n            <div className='options' onClick={chooseThisYear}>Текущий год</div>\n            <div className='options' onClick={chooseLastWeek}>Прошлая неделя</div>\n            <div className='options' onClick={chooseLastMonth}>Прошлый месяц</div>\n            <div className='options' onClick={chooseDate}>Выбрать даты</div>\n        </div>\n    )\n}\n\n\nexport default CalendarOption","import React, {useState, useEffect} from 'react'\n\n\nimport {showDate, showRangeDate} from '../utils'\n\nimport Icon from '../Icon'\nimport {icon_calendar} from '../../../data/icons'\nimport CalendarTime from './CalendarTime'\nimport CalendarNavi from './CalendarNavi'\nimport CalendarOption from './CalendarOption'\n\n\n/**\n *\n * title='title'\n *\n * className='className'\n *\n * width='100%'\n *\n * showTop={false}\n *\n * range={false}\n *\n * allDate={false}\n *\n * func={date => console.log(date)}\n *\n * current_date={props.current_date}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseDate = (props) => {\n\n    // Текущий день, от которого расчитвывается текущие показания календаря\n    const [current_date, setCurrent_day] = useState(new Date)\n    // Флаг - показать скрыть меню выбора месяца\n    const [visibleListMonth, setVisibleListMonth] = useState(false)\n    // Флаг - показать/скрыть календарь\n    const [visibleCalendar, setVisibleCalendar] = useState(false)\n    // Первый выбраный день из диапазона\n    const [firstDay, setFirstDay] = useState(0)\n    // Второй выбраный день (выбирается наводом курсора)\n    const [secondDay, setSecondDay] = useState(0)\n    // Меню выбора диапазона дат\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        // Скрываем меню выбора месяца при клику вне меню\n        if (!event.path.map(el => el.id).includes('monthList')) {\n            if (visibleListMonth) {\n                setVisibleListMonth(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('calendar')) {\n            if (visibleCalendar) {\n                setVisibleCalendar(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('listCalendarOption')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        // Добавим слушателя кликов и обработчик при создании компанента\n        window.addEventListener('click', clickHandel)\n        // и удалим слушателя при удалении компанента\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n\n    // Создаим объект даты из текущей выбранной дыты\n    let first = new Date(current_date)\n    // Утановим теущей дате 1 число\n    first.setDate(1)\n    // Отнимим от текущей даты количество дней равное дню недели (получим дату отсчета для отрисовки в поле календаря)\n    first.setTime(first.getTime() - (first.getDay() || 7) * 24 * 60 * 60 * 1000)\n\n    // создадим массив дней для отрисовки в поле календаря\n    let current_days = []\n    // Заполним массив днями приращивая по одному\n    for (let i = 0; i < 42; i++) {\n        current_days[i] = new Date(first.getTime() + 24 * 60 * 60 * 1000)\n        first.setTime(first.getTime() + 24 * 60 * 60 * 1000)\n    }\n\n    /**\n     *\n     * @param date1 - Объект Date\n     * @param date2 - Объект Date\n     * @returns {boolean} - true - если год, месяц и день совпадают, false - если нет\n     */\n    const compareDates = (date1, date2) => {\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n\n    /**\n     * Подготовка диапазона дат перед тем как вернуть данный диапазон\n     *\n     * @param date_range {array} - Массив из двух объектов Date\n     * @returns {array} - Массив из timestamp\n     */\n    const prepareRange = (date_range) => {\n        // Функция сортировки для метода sort\n        const sort_func = (a, b) => {\n            if (a > b) return 1\n            return -1\n        }\n        // Отсортируем в даты в порядке возрастания\n        let new_range = date_range.sort(sort_func)\n        // Установим время для первой даты\n        new_range[0].setHours(0, 0, 0, 0)\n        // Установим время для второй даты\n        new_range[1].setHours(23, 59, 59, 999)\n        // возвращаем новый дипазон\n        return new_range\n    }\n\n    /**\n     * Обработчик события onClick дня каледара\n     * @param day {Object} - Объект Date\n     */\n    const handleChoose = (day) => {\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если еще не выбран первый день\n            if (!firstDay) {\n                // Обнуляем текущее значение в state приложения (чтобы не отображался выбраный диапазон на календаре)\n                props.func([0, 0])\n                // Устанавливаем первый день в state копмпонета\n                setFirstDay(day)\n            // Если первый день уже выбран\n            } else {\n                // Возвращаем предварительно подготовленные данные из компонента\n                props.func(prepareRange([firstDay, day]))\n                // Обнуляем первый день в state компонента\n                setFirstDay(0)\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // возвращаем выбранную дату\n            props.func(day)\n            // устанавливаем текущую дату в state компонента\n            setCurrent_day(new Date(day))\n        }\n\n    }\n\n    /**\n     * Очень запутанная функция для определения класса стилей для каждого отрисовываемого дня в календаре\n     *\n     * @param day {Object} - Объект Date\n     * @returns {string} - набор стилей для каждого отрисованного дня в календаре\n     */\n    const dayClassName = (day) => {\n        // Общий стиль для всег дней\n        const class1 = 'calendarDay'\n        // Стиль для дней за пределами отображаемого месяца\n        const class2 =  day.getMonth() === current_date.getMonth() ? '' : 'calgr'\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если сущестует уже выбранный диапазон\n            if (props.current_date && props.current_date[0] && props.current_date[1]) {\n                // Стиль для крайних дней уже выбранного диапазона дат\n                const class3 = compareDates(new Date(props.current_date[0] * 1000), day) ||\n                               compareDates(new Date(props.current_date[1] * 1000), day) ? 'settedDay' : ''\n                // Стиль для дня внутри уже выбранного диапазона дат\n                const class4 = props.current_date[0] < day/1000 && day/1000 < props.current_date[1] ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            // Если диапазон дат еще не выбран\n            } else {\n                // Функция для определения попадает ли день в выбираемый диапазон дат\n                const showSelected = (day) => {\n                    if (firstDay && secondDay) {\n                        return  firstDay/1000 < day/1000 && day/1000 <= secondDay/1000 ||\n                            firstDay/1000 > day/1000 && day/1000 >= secondDay/1000\n                    } else { return false }\n                }\n                // Стиль для первого выбрнного дня\n                const class3 = compareDates(firstDay || new Date(0), day) ? 'settedDay' : ''\n                // Стиль для ней попадающих в выбираемый диапазон\n                const class4 = showSelected(day) ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // Стиль для выбранной даты\n            const class3 = compareDates(new Date(props.current_date), day) ? 'settedDay' : ''\n            return [class1, class2, class3].join(' ')\n        }\n    }\n\n\n    const title = props.range ?\n        (props.current_date && props.current_date.some(date => date) ? showRangeDate(props.current_date) : 'Любая')\n        : showDate(props.current_date / 1000)\n\n    const handleChangeDate = () => {\n        if (props.range) {\n            setListVisible(true)\n        } else {\n            setVisibleCalendar(true)\n        }\n    }\n\n    return props.invisible ? <div/> :(\n        <div\n            className={props.className}\n            style={{width: props.width}}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='dateContaner'\n                onClick={handleChangeDate}\n            >\n                <Icon\n                    className='icon-s2 mlr5'\n                    icon={icon_calendar}\n                    color='gray'\n                />\n                <div>{title}</div>\n            </div>\n\n            <CalendarOption\n                width={props.width}\n                invisible={!listVisible}\n                allDate={props.allDate}\n                setListVisible={setListVisible}\n                setVisibleCalendar={setVisibleCalendar}\n                func={date => props.func(date)}\n            />\n\n\n            {visibleCalendar && !props.disabled ?\n                <div className={props.showTop ? 'calendar_top' : 'calendar_down'} id='calendar'>\n\n                    <CalendarNavi\n                        func={data => props.func(data)}\n                        current_date={current_date}\n                        setCurrent_day={setCurrent_day}\n                        setVisibleListMonth={setVisibleListMonth}\n                        visibleListMonth={visibleListMonth}\n                    />\n\n                    <div className='row'>\n                        {weekDays.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className='calendarWeekDay'\n                            >\n                                {day}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className='calendarDays'>\n                        {current_days.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className={dayClassName(day)}\n                                onClick={() => handleChoose(day)}\n                                onMouseOver={() => setSecondDay(day)}\n                                onMouseOut={() => setSecondDay(0)}\n                            >\n                                {day.getDate()}\n                            </div>\n                        ))}\n                    </div>\n\n                    <CalendarTime\n                        func={data => props.func(data)}\n                        current_date={props.current_date}\n                        invisible={props.range}\n                    />\n                </div> : null}\n\n        </div>\n    )\n}\n\nexport default ChooseDate","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addItemPayments, refreshDataOrder, changeStatusMenuVisible, changeVisibleState} from '../../Redux/actions'\nimport { addPaymentTag, deletePaymentTag, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\nimport {addClients} from '../../Redux/actions/clientAction'\n\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\nimport ChooseDate from '../general/calandar/ChooseDate'\n\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            'inputPaymentSumChecked': true,\n            'inputPaymentCashboxChecked': true,\n            'inputPaymentDescChecked': true,\n            'inputPaymentCashflowChecked': true,\n            'inputPaymentEmployeeChecked': true,\n            'statusPaymentsEditor': false,\n        })\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('344')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.changeVisibleState({'in}putPaymentSumChecked': false})\n            if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction))\n                props.changeVisibleState({'inputPaymentCashboxChecked': false})\n            if (!props.payment.description)\n                props.changeVisibleState({'inputPaymentDescChecked': false})\n            if (!props.payment.cashflow_category)\n                props.changeVisibleState({'inputPaymentCashflowChecked': false})\n            if (!props.payment.employee_id)\n                props.changeVisibleState({'inputPaymentEmployeeChecked': false})\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id) &&\n        !cashbox.deleted &&\n        (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentState({custom_created_at: null})\n                            }}\n                            func2={() => {\n                                setChooseData(true)\n                                props.changePaymentState({custom_created_at: parseInt(new Date() / 1000)})\n                            }}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        <ChooseDate\n                            className='h31'\n                            width='250px'\n                            func={date => props.changePaymentState({custom_created_at: parseInt(date / 1000)})}\n                            current_date={props.payment.custom_created_at * 1000}\n                            invisible={!chooseData}\n                        />\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                            close={() => props.changeVisibleState({client_id: 0})}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 0\n                                })\n                            }}\n                            func2={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 1\n                                })\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox => props.changePaymentState({[props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'] : cashbox})}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentState({description: event.target.value})}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={category => props.changePaymentState({cashflow_category: category})}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        invisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={employee => props.changePaymentState({employee_id: employee})}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    filter: state.filter,\n    client: state.client,\n    cashboxes: state.data.cashboxes,\n    current_branch_id: state.data.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.data.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    changeVisibleState,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = props.current_branch ? <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/> : null\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.data.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, changeOrderFormS, changeVisibleState} from '../../../../Redux/actions'\nimport {showPhone} from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\nimport {changeClientState} from '../../../../Redux/actions/clientAction'\n\nconst SetClient = (props) => {\n\n    const [listClientsVisible, setListClientsVisible] = useState(false)\n    const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n        ) {\n            if (listClientsVisible) {\n                setListClientsVisible(false)\n            }\n        }\n    }\n\n    const clickHandel2 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n            !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n        ) {\n            if (listClientsPhoneVisible) {\n                setListClientsPhoneVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        window.addEventListener('click', clickHandel2)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n            window.removeEventListener('click', clickHandel2)\n        }\n    })\n\n\n    return (\n        <div className='cleintForm'>\n\n            <div className='formRow'>\n                <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n                <div className='blockImput'>\n                    <div\n                        id='orderInputBoxOfOrder'\n                        className='orderInputBox'\n                        onClick={() => setListClientsVisible(true)}\n                        style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => props.changeClientState({filter_name: event.target.value})}\n                            value={props.name}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n                    {props.view.checkedOrderClient ?\n                        <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n                    {listClientsVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrder'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n            </div>\n\n            <div className='formRow'>\n\n                <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n                <div className='blockImput'>\n\n                    <div\n                        id='orderInputBoxOfOrderPhone'\n                        className='orderInputBox'\n                        onClick={() => setListClientsPhoneVisible(true)}\n                    >\n                        <LableInput\n                            className='w100'\n                            inputClassName='optionFilterInput'\n                            onChange={value => props.changeClientState({filter_phone: value})}\n                            value={props.phone}\n                            isPhone={true}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n\n\n                    {listClientsPhoneVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsPhoneVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n\n            </div>\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.client.filter_phone,\n    name: state.client.filter_name,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.changeVisibleState({[props.checkedFlag]: !!event.target.value}) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n    changeVisibleState\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentBrand, addEquipmentBrand, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderBrand = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand])\n\n\n    const edit = props.order.edit\n    const disabled = !Object.values(props.book.equipment_type).length\n    const seted = !!Object.values(props.order.brand).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_brand: {}})\n    }\n\n    const setBrand = brand => {\n        props.changeOrderState({brand})\n        props.changeBookState({equipment_brand: brand, filter_brand: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderBrand: true})\n    }\n\n    return (\n        <div>\n            <button\n                id=\"optionsOrderTextOfBrand\"\n                style={!props.view.checkedOrderBrand ? {borderColor: 'red'} : null}\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder=\"Выбирете бренд\"\n                    value={seted ? props.order.brand.title : props.book.filter_brand}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderBrand ? (\n                <div className=\"errorMassageInput\">\n                    {'Необоходимо выбрать из списка'}\n                </div>\n            ) : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfBrand\">\n                    {props.book.equipment_brands.map(brand => (\n                        visibleBotton ? null :\n                            <div\n                                key={brand.id}\n                                className=\"rowGropList\"\n                                onClick={() => setBrand(brand)}\n                            >\n                                {brand.title}\n                            </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                                onKeyPress={event => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentBrand(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_brand}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить бренд\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentBrand,\n    changeVisibleState,\n    addEquipmentBrand,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentType, addEquipmentType, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\nimport {icon_cancel, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderGroupe = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const settled = !!Object.values(props.order.kindof_good).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            kindof_good: {},\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_type: {}})\n        props.changeVisibleState({checkedOrderKindofGood: true})\n    }\n\n\n    const setOrderType = equipment => {\n        props.changeOrderState({kindof_good: equipment}) \n        props.changeBookState({filter_type: '', equipment_type: equipment})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    return (\n        <div>\n            <button\n                className='optionsFilterText'\n                id='optionsOrderTextOfGroup'\n                onClick={() => setVisibleList(true)}\n                disabled={settled}\n                style={!props.view.checkedOrderKindofGood? {borderColor: 'red'} : null}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={settled ? props.order.kindof_good.title : props.book.filter_type}\n                    disabled={settled}\n                />\n                {settled && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderKindofGood ?\n                <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n                {props.book.equipment_types.map(equipment => (\n                    visibleBotton ? null :\n                    <div\n                        key={equipment.id}\n                        className='rowGropList'\n                        onClick={() => setOrderType(equipment)}\n                    >\n                        {equipment.title}\n                    </div>\n                ))}\n                <div className='btmsts'>\n                    {visibleBotton ?\n                        <input\n                            className='optionFilterInput'\n                            autoFocus\n                            onChange={event => props.changeBookState({filter_type: event.target.value})}\n                            onKeyPress={(event) => {\n                                if (event.key === 'Enter') {\n                                    props.createEquipmentType(event.target.value)\n                                    setVisisbleBotton(false)\n                                }\n                            }}\n                            onBlur={() => setVisisbleBotton(false)}\n                            value={props.book.filter_type}\n                            placeholder='Введите и нажмиете Enter'\n                        /> :\n                        <div\n                            className='btnstsTitle'\n                            onClick={() => setVisisbleBotton(true)}\n                        >\n                            Добавить тип\n                        </div>}\n                </div>\n\n            </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentType,\n    addEquipmentType,\n    changeBookState,\n    changeOrderState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {createEquipmentModel, addEquipmentModel, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderModel = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model])\n\n\n    const disabled = !Object.values(props.book.equipment_subtype).length\n    const seted = !!Object.values(props.order.model).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const setModel = model => {\n        props.changeOrderState({model})\n        props.changeBookState({equipment_model: model, filter_model: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    const reset = () => {\n        props.changeOrderState({model: {}})\n        props.changeBookState({equipment_model: {}})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfModel\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_model: event.target.value})}\n                    placeholder=\"Выбирете модель\"\n                    value={seted ? props.order.model.title : props.book.filter_model}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfModel\">\n                    {props.book.equipment_models.map((model) => (\n                        visibleBotton ? null :\n                        <div\n                            key={model.id}\n                            className=\"rowGropList\"\n                            onClick={() => setModel(model)}\n                        >\n                            {model.title}\n                        </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_model: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentModel(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_model}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модель\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentModel,\n    changeOrderState,\n    addEquipmentModel,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, addEquipmentSubtype, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Subtype from './Subtype'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(props.order.subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_subtype: {}})\n\n    }\n\n    const setSubtype = subtype => {\n        props.changeOrderState({subtype})\n        props.changeBookState({equipment_subtype: subtype, filter_subtype: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderSubtype: true})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? props.order.subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => (\n                        visibleBotton ? null :\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(subtype)}\n                            />\n                        )\n                    )}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_subtype}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    changeVisibleState,\n    addEquipmentSubtype,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS} from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n    return (\n        <div>\n\n            <div className='formRow mt15'>\n                <div className='optionsTitle'></div>\n                <div className='orderFormTitle'>Изделиe и неисправность</div>\n            </div>\n\n            <div className='orderDevice'>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Тип устройства<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderGroup idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Бренд<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderBrand idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Модуль / Серия<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderSubtype idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>Модель</div>\n                    <div className='blockImput'>\n                        <SetOrderModel idx={0}/>\n                    </div>\n                </div>\n\n                <LabelInputOrder\n                    idx={23}\n                    className='formRow'\n                    title='Неисправность'\n                    name='malfunction'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'malfunction')}\n                    value={props.order.malfunction}\n                    checkedFlag='inputMalfunctionChecked'\n                    checked={props.view.inputMalfunctionChecked}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Комплектация'\n                    name='packagelist'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'packagelist')}\n                    value={props.order.packagelist}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Внешинй вид'\n                    name='appearance'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n                    value={props.order.appearance}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <div className='formRow'>\n                    <div className='optionsTitle'>Срочно</div>\n                    <div className='blockImput'>\n                        <div className='checkbox pd-tb-5 al-itm-fs'>\n                            <input\n                                type='checkbox'\n                                onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                                checked={props.order.urgent}\n                                disabled={!props.permissions.includes('edit_info_orders')}\n                            />\n                            <label></label>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderForm,\n    addAnotherEquipment,\n    deleteDevice,\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderFormS} from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/calandar/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n    return (\n        <div>\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Рекламная компания</div>\n                <div className=\"blockImput\">\n                    <ChooseOfList\n                        id={14}\n                        list={props.ad_campaign}\n                        setElement={props.changeOrderFormS}\n                        field='ad_campaign_id'\n                        current_id={props.order.ad_campaign_id}\n                        width={'250px'}\n                        disabled={!props.permissions.includes('edit_info_orders')}\n                    />\n                </div>\n            </div>\n\n            <ChooseSingleEquipment/>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\"></div>\n                <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n            </div>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Заметки приемщика</div>\n                <div className=\"blockImput mh\">\n          <textarea\n              className=\"textInput\"\n              name=\"manager_notes\"\n              onChange={(event) =>\n                  props.changeOrderFormS(event.target.value, 'manager_notes')\n              }\n              value={props.order.manager_notes}\n              disabled={!props.permissions.includes('edit_info_orders')}\n          />\n                </div>\n            </div>\n\n            <LabelInputOrder\n                className=\"formRow\"\n                title=\"Ориетнировачная стоимость\"\n                name=\"estimated_cost\"\n                onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n                value={props.order.estimated_cost}\n                disabled={!props.permissions.includes('edit_info_orders')}\n            />\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Дата готовности</div>\n                <div className=\"blockImput\">\n                    <ChooseDate\n                        func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n                        current_date={props.order.estimated_done_at * 1000}\n                        disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n                        showTop={true}\n                        // range={true}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ad_campaign: state.data.ad_campaign,\n    order: state.order,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id,\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n        }\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос создание операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id,\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n        }\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос создание операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        order_id: state.order.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               invisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * invisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n *\n * icon={icon} // Иконка\n *\n * iconClassName='iconClassName' // Класс иконки\n *\n * iconColor='black' // Цвет Иконки\n */\nconst Button = (props) => {\n   return props.invisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.invisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.invisible || props.disabled}\n      >\n          <div className='row'>\n              {props.icon ? <Icon icon={props.icon} className={props.iconClassName} color={props.iconColor}/> : null}\n              {props.title ? <div className='ml5'>{props.title}</div> : null}\n          </div>\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    invisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconColor: PropTypes.string\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id,\n\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id\n        }\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await  fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        order_id: state.order.edit,\n        deleted: flag,\n\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        invisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.data.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.data.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPayments = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {editCurrentClient, changeVisibleState} from '../../../../Redux/actions'\nimport { changePaymentState} from '../../../../Redux/actions/paymentAction'\n\nimport Button from '../../../general/Button'\nimport TableOrderPayments from './TableOrderPayments'\n\nconst OrderPayments = (props) => {\n\n   const handleIncome = () => {\n      props.changePaymentState({\n         direction: 2,\n         client_id: props.order.client.id,\n         description: `Оплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 2,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   const handleOutcome = () => {\n      props.changePaymentState({\n         direction: 1,\n         client_id: props.order.client.id,\n         description: `Выплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 8,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handleIncome }\n               invisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handleOutcome }\n               invisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPayments/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeVisibleState,\n   changePaymentState,\n   editCurrentClient,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.invisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../../general/Icon'\nimport {icon_down, icon_print} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport Checkbox from '../../../general/Checkbox'\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('orderPrint') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div style={{width: '67px', height: '25px'}} id='orderPrint'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton m0 pd05 ml10'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listprint'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        invisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React from 'react'\n\nconst EventStatus = props => {\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n    return (\n        <div className='eventElement evFerst'>\n            <div className='row jc-sb'>\n                <div\n                    className='statusListRow mt0'\n                    style={{backgroundColor: props.event.current_status.color}}\n                >\n                    {props.event.changed[0].new.title}\n                </div>\n                <div className='cgr'>{time}</div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default EventStatus","import React from 'react'\n\n\nimport Icon from '../../../../general/Icon'\nimport {\n    icon_arrow_down,\n    icon_arrow_right,\n    icon_briefcase,\n    icon_bubble,\n    icon_bug,\n    icon_calendar, icon_coin_dollar\n} from '../../../../../data/icons'\nimport {icon_letter, icon_loop, icon_pencil, icon_trush, icon_user} from '../../../../../data/icons'\n\n\nconst EventSimple = props => {\n\n    const chooseIcon = (event_type) => {\n        let list_type = ['ASSIGN_ENGINEER', 'CHANGE_ENGINEER', 'ASSIGN_MANAGER', 'CHANGE_MANAGER', 'ADD_CLIENT', 'CHANGE_CLIENT']\n        if (list_type.includes(event_type)) return icon_user\n        if (event_type === 'CHANGE_ESTIMATED_DONE_AT') return icon_calendar\n        if (event_type === 'ADD_OPERATION') return icon_briefcase\n        if (event_type === 'ADD_ORDER_PART') return icon_bug\n        if (['DELETE_OPERATION', 'DELETE_ORDER_PART', 'DELETE_PAYMENT'].includes(event_type)) return icon_trush\n        if (['ADD_COMMENT', 'SEND_SMS'].includes(event_type)) return  icon_bubble\n        if (event_type === 'SEND_EMAIL') return icon_letter\n        if (event_type === 'MOVE_TO') return icon_loop\n        if (event_type === 'ADD_PAYMENT') return icon_coin_dollar\n        return icon_pencil\n    }\n\n    const checkLength = (event) => {\n        let one, two\n        if (event.current && event.current.title){\n            one = event.current.title.toString().length > 12\n        } else {\n            one = false\n        }\n        if (event.new && event.new.title){\n            two = event.new.title.toString().length > 12\n        } else {\n            two = false\n        }\n        return one && two\n    }\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n\n    return (\n\n        <div className='eventElement'>\n            {props.event.changed.map((event, idx) => (\n                <div>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <div\n                                style={{\n                                    backgroundColor: props.event.current_status.color,\n                                    display: idx ? 'none': null,\n                                    marginLeft: idx ? '30px': null\n                                }}\n                                className='boxHistoryIcon'\n                            >\n                                <Icon className='icon-s2' icon={chooseIcon(props.event.event_type)} color='white'/>\n                            </div>\n                            <div\n                                className='ml10 txtb'\n                                style={{marginLeft: idx ? '28px': null}}\n                            >\n                                {event.title}\n                            </div>\n                        </div>\n                        <div className='cgr'>{time}</div>\n                    </div>\n                    <div\n                        className={`${checkLength(event) ? null : 'row'} ml30`}\n                    >\n                        {event.current && event.current.title ?\n                            <div className=''>{event.current.title}</div> : null}\n                        {event.current && event.current.title ?\n                            <Icon\n                                className='icon-sm8 mlr5'\n                                icon={checkLength(event) ? icon_arrow_down : icon_arrow_right}\n                            /> : null}\n                        <div style={{whiteSpace: \"pre-wrap\"}}>{event.new.title}</div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\n\nexport default EventSimple","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport EventStatus from './EventsStatus'\nimport EventSimple from './EventSimple'\nimport {order_event_types} from '../../../../../data/data'\n\nconst OrderEvents = props => {\n\n    const [date, setDate] = useState(0)\n\n    const compareDates = (date1, date2) => {\n        date1 = new Date(date1 * 1000)\n        date2 = new Date(date2 * 1000)\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n    const optionsShowDate = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        // hour: 'numeric',\n        // minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const showDate = (date) => {\n        return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.', '')\n    }\n    const values = order_event_types.filter(event => props.event_filter.includes(event.id)).map(event => event.value)\n\n    return (\n        <div className='contentEditor mt15'>\n            <div className='ml30 h100'>\n                {props.events.filter(event => values.includes(event.event_type)).map((event, idx) => {\n\n                    if (event.event_type === 'CREATE_ORDER' || event.event_type === 'CHANGE_STATUS') {\n                        return (\n                            <div key={event.id}>\n                                {event.event_type === 'CREATE_ORDER' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <div\n                                    className='orderEvent'\n                                    style={{borderColor: event.current_status.color}}\n                                >\n                                    {event.event_type === 'CHANGE_STATUS' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                        <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                        : null\n                                    }\n                                    <EventStatus event={event}/>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div\n                                key={event.id}\n                                className='orderEvent'\n                                style={{borderColor: event.current_status.color}}\n                            >\n                                {!idx || !compareDates(event.created_at, props.events[idx - 1].created_at) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <EventSimple event={event}/>\n                            </div>\n                        )\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    events: state.order.events,\n    event_filter: state.order.event_filter\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEvents)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         style={{width: '67px', height: '26px'}}\n         className={`tableFields ml10 ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <Icon icon={props.icon || icon_table} className='icon-table'/>\n            </div>\n            <div className='cl12'>\n                  <Icon icon={icon_down} className='icon-table'/>\n               {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n            </div>\n         </div>\n\n         {listVisible ?\n            <div \n               className={props.classNameMenu}\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useLayoutEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderState, addEventComment} from '../../../../../Redux/actions/orderActions'\n\nconst AddComment = props => {\n\n    const handlePressKey = event => {\n        if (event.key === 'Enter' && event.shiftKey) {\n            event.preventDefault()\n            props.changeOrderState({event_comment: event.target.value + '\\n'})\n            return\n        }\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            props.addEventComment()\n            return\n        }\n    }\n\n\n    const MIN_TEXTAREA_HEIGHT = 16\n    const textareaRef = React.useRef(null);\n\n    useLayoutEffect(() => {\n        // Reset height - important to shrink on delete\n        textareaRef.current.style.height = '16px'\n        // Set height\n        textareaRef.current.style.height = `${Math.max(textareaRef.current.scrollHeight - 10, MIN_TEXTAREA_HEIGHT)}px`\n    }, [props.order.event_comment])\n\n    return (\n        <div className='mt15'>\n            <div className='orderCommentBox'>\n                <textarea\n                    ref={textareaRef}\n                    style={{\n                       minHeight: MIN_TEXTAREA_HEIGHT,\n                       resize: \"none\"\n                    }}\n                    className='commentInput'\n                    onChange={event => props.changeOrderState({event_comment: event.target.value})}\n                    value={props.order.event_comment}\n                    onKeyPress={handlePressKey}\n                    placeholder=\"Введите текст комментария\"\n                />\n            </div>\n            <p className='m0 ml15 mt5'><b>Enter</b>, чтобы отправить</p>\n            <p className='m0 ml15'><b>Shift + Enter</b>, чтобы добавить еще одну строчку</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderState,\n    addEventComment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment)","import React, {useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport {selectedOrder} from '../../../../Redux/actions/orderActions'\nimport {order_event_types} from '../../../../data/data'\nimport {icon_filter} from '../../../../data/icons'\n\nimport OrderPrint from './OrderPrint'\nimport OrderEvents from './OrderEvetns/OrderEvents'\nimport TableFields from '../../../general/TableFields'\nimport Button from '../../../general/Button'\nimport AddComment from './OrderEvetns/AddComment'\n\nconst OrderHistory = props => {\n\n\n    return (\n        <div className=\"orderHistory\">\n            <div className='row al-itm-fs'>\n                <OrderPrint/>\n                <TableFields\n                    id='orderEvents'\n                    className='ml5'\n                    height='200px'\n                    classNameMenu='aventFilterMenu'\n                    list={order_event_types}\n                    checked_list={props.order.event_filter}\n                    func={props.selectedOrder}\n                    field='event_filter'\n                    icon={icon_filter}\n                />\n            </div>\n            {props.order.events.length ? <OrderEvents/> : null}\n            <AddComment/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    selectedOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\n\nimport {addDiscountMargin, changeOrderFormS, addDictService, changeVisibleState} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders, getOrder} from '../../../Redux/actions/orderActions'\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\nimport {addClients} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\nimport OrderHistory from './orderHisroy/OrderHistory'\n\n\n\nconst OrderEditor = (props) => {\n\n    const history = useHistory()\n    // console.log(history.location)\n    const edit = history.location.state && history.location.state.order_id\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addDictService()\n        props.resetBookEquipment()\n    }, [])\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusOrderEditor: false,\n            checkedOrderClient: false,\n            checkedOrderKindofGood: true,\n            checkedOrderBrand: true,\n            checkedOrderSubtype: true\n        })\n        props.resetOrder()\n        if (edit) history.goBack()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('addOrder') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    useEffect(() => {\n        if (edit) props.getOrder(history.location.state.order_id)\n    }, [])\n\n\n    const handleCreate = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length &&\n            props.order.malfunction\n        ) {\n            props.createOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n    const handleSave = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length\n\n        ) {\n            props.saveOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n\n    return edit && !props.order.edit ? null : (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n                <div className=\"cteateNewOrderContent\">\n\n                    <div className=\"createOrderForm\">\n\n                        <TitleOrderEditor/>\n                        {props.order.edit ?\n                            <div>\n                                <Tabs\n                                    list={['Информация о заказе', 'Работы и материалы', 'Платежи']}\n                                    func={props.changeOrderFormS}\n                                    tab={props.order.tabs}\n                                />\n                                {props.order.tabs === 0 ? <OrderInfo/> : null}\n                                {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                                {props.order.tabs === 2 ? <OrderPayments/> : null}\n                            </div> : <OrderInfo/>}\n                    </div>\n\n                    <OrderHistory/>\n                </div>\n\n                <div className=\"boxOrderButtons\">\n                    <BottomButtons\n                        edit={props.order.edit}\n                        create={handleCreate}\n                        save={handleSave}\n                        // delete={() => props.deleteClient(props.client.edit)}\n                        close={handleClose}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order,\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addClients,\n    addDiscountMargin,\n    createOrder,\n    changeOrderFormS,\n    resetOrder,\n    addDictService,\n    saveOrder,\n    addOrders,\n    resetBookEquipment,\n    getOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\nconst optionsShowDate = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n}\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.toLocaleString('ru', optionsShowDate).replace('г.,', '')}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Subtype = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.subtype.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Subtype)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Manager = props => {\n\n    function getEmploeeName(id) {\n        if (id) {\n            let employee = props.employees.find((employee) => employee.id === id)\n            return `${employee.last_name} ${employee.first_name}`\n        }\n    }\n\n    return (\n        <td>\n            <div className='noWr'>\n                {getEmploeeName(props.order.manager_id)}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees\n})\n\nexport default connect(mapStateToProps)(Manager)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst MissedPayments = props => {\n    return (\n        <td className=\"tablePrice\">\n            <span>{props.order.missed_payments || null}</span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(MissedPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ManagerNotes = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.manager_notes}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(ManagerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Cell = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.cell}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Cell)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst AdCampaign = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.ad_campaign.name}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(AdCampaign)","import React, {useEffect, useMemo, useRef} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {addOrders, editOrder, resetOrder} from '../../Redux/actions/orderActions'\nimport {changeVisibleState, initStatusMenuVisibleAction} from '../../Redux/actions'\nimport {changeBookState} from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './newOrder/orderHisroy/StikerToPrint'\nimport {useHistory} from 'react-router-dom'\nimport Subtype from './cell/Subtype'\nimport Manager from './cell/Manager'\nimport MissedPayments from './cell/MissedPayments'\nimport ManagerNotes from './cell/ManagerNotes'\nimport Cell from './cell/Cell'\nimport AdCampaign from './cell/AdCampaign'\n\n\nconst TableOrders = props => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        let statusVis = {}\n        props.order.ordersShow.forEach((order) => {\n            statusVis[order.id] = false\n        })\n        props.initStatusMenuVisible(statusVis)\n    }, [props.order.ordersShow])\n\n    const handleEdit = (order) => {\n        props.changeBookState({\n            equipment_type: order.kindof_good,\n            equipment_brand: order.brand,\n            equipment_subtype: order.subtype,\n            equipment_model: order.model\n        })\n        history.push(`/orders/${order.id}`, {order_id: order.id })\n    }\n\n    const afterPrint = () => {\n        props.changeVisibleState({statusOrderSticker: false})\n        if(props.view.needToResetOrder) {\n            props.resetOrder()\n            props.changeVisibleState({needToResetOrder: false})\n        }\n    }\n\n    const tFields = useMemo(() => props.order.tableFields.filter(header => header.visible), [props.order, props.order.tableFields])\n\n    const table_order = useRef(null)\n    // console.log(table_order.current)\n\n    const chooseCell = (field, order) => {\n        switch (field.id) {\n\n            case 1: return <Lable key={field.id} order={order}/>\n            case 2: return <Create key={field.id} order={order}/>\n            case 3: return <EstimatedDone key={field.id} order={order}/>\n            case 4: return <Status key={field.id} order={order}/>\n            case 5: return <Equipment key={field.id} order={order}/>\n            case 6: return <KindOfGood key={field.id} order={order}/>\n            case 7: return <Brand key={field.id} order={order}/>\n            case 8: return <Subtype key={field.id} order={order}/>\n            case 9: return <Malfunction key={field.id} order={order}/>\n            case 10: return <Engineer key={field.id} order={order}/>\n            case 11: return <Manager key={field.id} order={order}/>\n            case 12: return <Client key={field.id} order={order}/>\n            case 13: return <Price key={field.id} order={order}/>\n            case 14: return <MissedPayments key={field.id} order={order}/>\n            case 15: return <EngineerNotes key={field.id} order={order}/>\n            case 16: return <ManagerNotes key={field.id} order={order}/>\n            case 17: return <Cell key={field.id} order={order}/>\n            case 18: return <AdCampaign key={field.id} order={order}/>\n            default: return null\n        }\n    }\n\n    if (props.employees) {\n        return (\n            <div className=\"tableOrdersBox\">\n                <table id=\"tableOrders\" ref={table_order}>\n                    <thead className=\"tableThead\">\n                    <tr>\n                        {tFields.map(header => (\n                            <TableHeader\n                                key={header.id}\n                                data={header}\n                                tableHeight={table_order.current ? table_order.current.offsetHeight : 40}\n                            />\n                        ))}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.order.ordersShow.map(order => (\n                        <tr\n                            key={order.id}\n                            className=\"orderTableRows\"\n                            onDoubleClick={() => handleEdit(order)}\n                        >\n                            {tFields.map(header => chooseCell(header, order))}\n                            {/*{props.order.tableFields.find(header => header.id === 1).visible ? <Lable order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 2).visible ? <Create order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 3).visible ? <EstimatedDone order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 4).visible ? <Status order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 5).visible ? <Equipment order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 6).visible ? <KindOfGood order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 7).visible ? <Brand order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 8).visible ? <Subtype order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 9).visible ? <Malfunction order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 10).visible ? <Engineer order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 11).visible ? <Manager order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 12).visible ? <Client order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 13).visible ? <Price order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 14).visible ? <MissedPayments order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 15).visible ? <EngineerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 16).visible ? <ManagerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 17).visible ? <Cell order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 18).visible ? <AdCampaign order={order}/> : null}*/}\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                {props.view.statusOrderEditor ? <OrderEditor/> : null}\n                {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n                {props.view.statusOrderSticker ?\n                    <StikerToPrint onAfterPrint={afterPrint}/> : null}\n\n            </div>\n        )\n    } else {\n        return <Loader/>\n    }\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    employees: state.data.employees,\n    user: state.data.user,\n    view: state.view,\n    mainFilter: state.filter.mainFilter\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    initStatusMenuVisible: initStatusMenuVisibleAction,\n    changeVisibleState,\n    editOrder,\n    changeBookState,\n    resetOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {addClientToTempFilter} from '../../Redux/actions/clientAction'\n\nconst CustomFilter = props => {\n\n    async function  handleChoose()  {\n        if (props.filter.active_filter !== props.data.id) {\n            if (props.data.filters.client_id) props.addClientToTempFilter(props.data.filters.client_id[0])\n            props.changeFilterState({\n                ...props.data.filters,\n                active_filter: props.data.id,\n                active_badge: 0,\n                search: '',\n                temp_statuses: props.data.filters.status_id || [],\n                temp_order_types: props.data.filters.order_type_id || [],\n                temp_managers: props.data.filters.manager_id || [],\n                temp_engineers: props.data.filters.engineer_id || [],\n                temp_created_at: props.data.filters.created_at || [0, 0],\n                temp_kindof_good_id: props.data.filters.kindof_good,\n                temp_brand: props.data.filters.brand,\n                temp_subtype: props.data.filters.subtype,\n                temp_client: {}\n            })\n        } else {\n            props.changeFilterState({\n                active_filter: 0,\n                page: 0,\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n            })\n        }\n    }\n\n    return (\n        <div\n            className='customFilter'\n            onClick={handleChoose}\n            style={{\n                backgroundColor: props.data.id === props.filter.active_filter ? '#eeeeef' : 'white',\n                opacity: props.data.id === props.filter.active_filter || props.filter.active_filter === 0 ? 1 : 0.5\n            }}\n        >\n            {props.data.title}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    addClientToTempFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../Redux/actions'\nimport LableInput from '../general/LableInput'\nimport Checkbox from '../general/Checkbox'\nimport BottomButtons from '../general/BottomButtons'\nimport {changeFilterState, createCustomFilter} from '../../Redux/actions/filterAction'\n\nconst FilterEditor = props => {\n\n    const handleClose = () => {\n        props.changeVisibleState({statusCreateNewFilter: false, inputFilterTitleChecked: true})\n    }\n\n    const clickHandel = event => {\n        if (!event.path.map((el) => el.id).includes('createNewFilterWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.filter.title) {\n            props.createCustomFilter()\n        } else {\n            props.changeVisibleState({inputFilterTitleChecked: false})\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewFilterWindow\">\n\n                <div className=\"createNewTitle w515\">{props.filter.active_filter ? props.filter.title : 'Новый фильтр'}</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                         className='mt15'\n                         title='Наименование'\n                         onChange={event => props.changeFilterState({title: event.target.value})}\n                         value={props.filter.title}\n                         checkedFlag='inputFilterTitleChecked'\n                         checked={props.inputFilterTitleChecked}\n                         redStar={true}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Общий'\n                        onChange={event => props.changeFilterState({general: event.target.checked})}\n                        checked={props.filter.general}\n                    />\n                </div>\n\n                <BottomButtons\n                    edit={props.filter.active_filter}\n                    create={handleCreate}\n                    // save={handleSave}\n                    // delete={() => props.deleteNotEvent(true)}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    inputFilterTitleChecked: state.view.inputFilterTitleChecked,\n\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    createCustomFilter,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const choosed_values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (choosed_values.length === current_statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!choosed_values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        invisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport {icon_down, icon_left} from '../../../../data/icons'\n\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\nimport Button from '../../../general/Button'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const allStatuses = props.statuses.map(status => status.id)\n\n\n    return props.invisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div className='liststatus'>\n                    <div\n                        className='blocList'\n                        style={{width: props.width ? props.width : '250px'}}\n                    >\n                        {props.status_group.map(group => (\n                            <ChooseStatusesGruoup\n                                key={group.id}\n                                label={group.name}\n                                group={group.type_group}\n                                func={value => props.func(value)}\n                                current_list={props.current_list}\n                            />\n                        ))}\n                    </div>\n                    <div className='btmsts'>\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Выбрать все'\n                            onClick={() => props.func(allStatuses)}\n                            disabled={props.current_list.length === allStatuses.length}\n                        />\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Отменить все'\n                            onClick={() => props.func_clear()}\n                        />\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5),\n    statuses: state.data.status.filter(status => status.group < 8)\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState, useRef} from 'react'\n\nimport Checkbox from './Checkbox'\nimport Icon from './Icon'\nimport {icon_down, icon_left} from '../../data/icons'\n\nconst ChooseOfListMany = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const mainCheckbox = useRef()\n\n    useEffect(() => {\n        if(mainCheckbox.current) {\n            const values = props.list.filter(el => props.checked_list.includes(el.id))\n            if (values.length === props.list.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = true\n            } else if (!values.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = false\n            } else {\n                mainCheckbox.current.indeterminate = true\n            }\n        }\n    }, [props.checked_list, listVisible])\n\n\n    const showWord = (len) => {\n        switch (len) {\n\n            case 0: {\n                return 'Ничего не выбрано'\n            }\n\n            case props.list.length: {\n                return 'Все'\n            }\n\n            default:\n                return `Выбрано ${len}`\n        }\n    }\n\n\n    return (\n        <div\n            style={{width: props.width ? props.width : '250px'}}\n            id={`chooseOfList${props.id}`}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div>{showWord(props.checked_list.length)}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='#282e33'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n\n                    <div className='checkbox'>\n                        <input\n                            ref={mainCheckbox}\n                            type='checkbox'\n                            onChange={() => props.func(props.list.map(el => el.id))}\n                            disabled={props.disabled}\n                        />\n                        <label>{props.mainLable}</label>\n                    </div>\n\n                    {props.list.map(element => {\n                        return (\n                            <div\n                                key={element.id}\n                                className='options'\n                            >\n                                <Checkbox\n                                    className='ml10'\n                                    label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                                    onChange={() => props.func([element.id])}\n                                    checked={props.checked_list.includes(element.id)}\n                                    disabled={props.disabled}\n                                />\n\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, {useEffect, useState} from 'react'\nimport {icon_cancel, icon_down, icon_left} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * id='id' // id компонента\n *\n * className='className' // className оболочки компанента\n *\n * width='250px' // ширина компонента\n *\n * title='title' // Подпись сверху\n *\n * list={props.list} // Список элементов\n *\n * current_element={props.current_element} // выбраный элемент\n *\n * setElement={() => console.log('setElement')} // функция выбора элемента\n *\n * filter={props.filter} // фильр поиска элемента\n *\n * changeFilter={() => console.log('changeFilter')} // функция изменения фильтра\n *\n * placeholder='Введите текст'\n *\n * disabled={} // заблокировать\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseWithSearch = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n\n    const clickHandel = event => {\n        if (!event.path.map(el => el.id).includes(`ChooseWithSearch${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    return (\n        <div\n            id={`ChooseWithSearch${props.id}`}\n            style={{width: props.width ? props.width : '250px'}}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <button\n                className={props.disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setListVisible(true)}\n                disabled={props.disabled || Object.values(props.current_element).length}\n            >\n                <input\n                    className={props.disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeFilter(event.target.value)}\n                    placeholder={props.placeholder}\n                    value={Object.values(props.current_element).length ? props.current_element : props.filter}\n                    disabled={props.disabled || Object.values(props.current_element).length}\n                />\n                {Object.values(props.current_element).length ?\n                    <div\n                        className='al-itm-ct'\n                        onClick={() => props.setElement({})}\n                    >\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n                    {props.list.map((element, idx) => {\n                        return (\n                            <div\n                                key={idx}\n                                className='options'\n                                onClick={() => {\n                                    props.setElement(element)\n                                    setListVisible(false)\n                                }}\n                            >\n                                {element.title || element.name}\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseWithSearch\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentType, changeBookState} from '../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nconst SetGroup = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const seted = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_kindof_good_id: null,\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_type: {},\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setType = (equipment) => {\n        props.changeFilterState({temp_kindof_good_id: equipment.id})\n        props.changeBookState({equipment_type: equipment})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Тип устройства</div>\n            <button\n                id='optionsFilterTextOfGroup'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={seted}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={seted ? props.book.equipment_type.title : props.book.filter_type}\n                    disabled={seted}\n                />\n                {seted ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfGroup'>\n                    {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className='rowGropList'\n                                onClick={() => setType(equipment)}\n                            >\n                                {equipment.title}\n                            </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentType,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetGroup)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentBrand, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetBrand = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.filter_brand, props.book.equipment_type])\n\n    const settled = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfBrand') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setBrand = (brand) => {\n        props.changeFilterState({temp_brand: brand.id})\n        props.changeBookState({equipment_brand: brand})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Бренд</div>\n            <button\n                id='optionsFilterTextOfBrand'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder='Выбирете бренд'\n                    value={settled ? props.book.equipment_brand.title : props.book.filter_brand}\n                    disabled={settled  || !settledType}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfBrand'>\n                    {props.book.equipment_brands.map(brand => (\n                        <div\n                            key={brand.id}\n                            className='rowGropList'\n                            onClick={() => setBrand(brand)}\n                        >\n                            {brand.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentBrand,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetBrand)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentSubtype, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetSubtype = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.filter_subtype, props.book.equipment_brand])\n\n    const settled = !!Object.values(props.book.equipment_subtype).length\n    const settledBrand = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfSubtype') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({temp_subtype: null})\n        props.changeBookState({\n            filter_subtype: '',\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setSubtype = (subtype) => {\n        props.changeFilterState({temp_subtype: subtype.id})\n        props.changeBookState({equipment_subtype: subtype})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Модуль/Серия</div>\n            <button\n                id='optionsFilterTextOfSubtype'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType || !settledBrand}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder='Выбирете Модуль/Серию'\n                    value={settled ? props.book.equipment_subtype.title : props.book.filter_subtype}\n                    disabled={settled  || !settledType || !settledBrand}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfSubtype'>\n                    {props.book.equipment_subtypes.map(subtype => (\n                        <div\n                            key={subtype.id}\n                            className='rowGropList'\n                            onClick={() => setSubtype(subtype)}\n                        >\n                            {subtype.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentSubtype,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetSubtype)","import React, {useEffect, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../../Redux/actions'\nimport {changeFilterState, deleteFilter, resetTempFilter, selectedFilter} from '../../../Redux/actions/filterAction'\nimport {addClients, changeClientState} from '../../../Redux/actions/clientAction'\nimport {icon_cross, icon_trush} from '../../../data/icons'\n\n\nimport FilterEditor from '../FilterEditor'\nimport Button from '../../general/Button'\nimport ChooseStatuses from '../../Settings/SettingPages/Notification/ChooseStatuses'\nimport ChooseOfListMany from '../../general/ChooseOfListMany'\nimport ChooseWithSearch from '../../general/ChooseWithSearch'\nimport ChooseDate from '../../general/calandar/ChooseDate'\nimport SetGroup from './SetGroup'\nimport SetBrand from './SetBrand'\nimport SetSubtype from './SetSubtype'\n\nconst SetFilter = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name])\n\n    const handleSet = () => {\n        const data = {\n            page: 0,\n            engineer_id: props.filter.temp_engineers.length ? props.filter.temp_engineers : null,\n            overdue: null,\n            status_id: props.filter.temp_statuses.length ? props.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: props.filter.temp_order_types.length ? props.filter.temp_order_types : null,\n            manager_id: props.filter.temp_managers.length ? props.filter.temp_managers : null,\n            created_at: props.filter.temp_created_at || [0, 0],\n            kindof_good: props.filter.temp_kindof_good_id,\n            brand: props.filter.temp_brand,\n            subtype: props.filter.temp_subtype,\n            client_id: Object.values(props.filter.temp_client).length ? [props.filter.temp_client.id] : null,\n            active_badge: 0,\n            active_filter: 0\n        }\n        props.changeFilterState(data)\n    }\n\n\n    return (\n        <div className=\"setCustomFilter\">\n            <div className=\"row jc-c\">\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseStatuses\n                        className='h52'\n                        width='100%'\n                        func={value => props.selectedFilter(value, 'temp_statuses')}\n                        func_clear={() => props.changeFilterState({temp_statuses: []})}\n                        current_list={props.filter.temp_statuses}\n                    />\n                    <SetGroup/>\n                    <ChooseWithSearch\n                        id='filterClient'\n                        className='mt15 h52'\n                        width='100%'\n                        title='Клиент'\n                        list={props.client.clients}\n                        current_element={Object.values(props.temp_client).length ? props.temp_client.name : ''}\n                        setElement={client => props.changeFilterState({temp_client: client})}\n                        filter={props.client.filter_name}\n                        changeFilter={filter => props.changeClientState({filter_name: filter})}\n                        placeholder='Введите имя'\n                        disabled={false}\n                    />\n                </div>\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseOfListMany\n                        id='idTypeOrders'\n                        className='h52'\n                        width='100%'\n                        title='Тип заказа'\n                        mainLable='Все'\n                        list={props.order_type}\n                        checked_list={props.filter.temp_order_types}\n                        func={value => props.selectedFilter(value, 'temp_order_types')}\n                    />\n                    <SetBrand/>\n                    <ChooseOfListMany\n                        id='idManagerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Менеджер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_managers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_managers}\n                        func={value => props.selectedFilter(value, 'temp_managers')}\n                    />\n                </div>\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseDate\n                        className='h52'\n                        title='Дата'\n                        width='100%'\n                        range={true}\n                        allDate={true}\n                        func={date => props.changeFilterState({temp_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.filter.temp_created_at}\n                    />\n                    <SetSubtype/>\n                    <ChooseOfListMany\n                        id='idEngineerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Инженер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_engineers}\n                        func={value => props.selectedFilter(value, 'temp_engineers')}\n                        disabled={!props.user.role.orders_visibility}\n                    />\n                </div>\n            </div>\n            <div className=\"buttons fs14 mt15\">\n                <Button\n                    className='blueButton'\n                    title='Применить'\n                    onClick={handleSet}\n                />\n                {props.filter.active_filter ?\n                    <Button\n                        className='whiteButton bcr'\n                        icon={icon_trush}\n                        iconClassName='icon-s1 pd1'\n                        iconColor='white'\n                        onClick={() => props.deleteFilter()}\n                    />\n                    :\n                    <Button\n                        className='whiteButton'\n                        title='Создать фильтр'\n                        onClick={() => props.changeVisibleState({statusCreateNewFilter: true})}\n                    />\n                }\n                <Button\n                    className='whiteButton'\n                    title='Сбросить параметы'\n                    onClick={() => props.resetTempFilter()}\n                    icon={icon_cross}\n                    iconClassName='icon-sm8'\n                    iconColor='#282e33'\n                />\n            </div>\n            {props.statusCreateNewFilter ? <FilterEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    statusCreateNewFilter: state.view.statusCreateNewFilter,\n    filter: state.filter,\n    order_type: state.data.order_type,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    client: state.client,\n    user: state.data.user,\n    temp_client: state.filter.temp_client\n})\n\nconst mapDispatchToProps = {\n    addClients,\n    resetTempFilter,\n    deleteFilter,\n    selectedFilter,\n    changeFilterState,\n    changeVisibleState,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport Checkbox from '../general/Checkbox'\nimport {changeOrderField} from '../../Redux/actions/orderActions'\n\n\nconst TableOrderFields = props => {\n\n    const [listVisible, setListVisible] = useState(true)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('tableOrderFields')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        setListVisible(false)\n    }, [])\n\n\n    return (\n        <div\n            id='tableOrderFields'\n            className={'tableFields otf_pos '}\n        >\n            <div\n                className='chooseFieldButton pd2'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='cl11'>\n                    <Icon icon={props.icon || icon_table} className='icon-table'/>\n                </div>\n                <div className='cl12'>\n                    <Icon icon={icon_down} className='icon-table'/>\n                    {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n                </div>\n            </div>\n\n            {listVisible ?\n                <div className='listOptionField'>\n                    <div style={{overflow: 'auto'}}>\n                        {props.order.tableFields.map(field => {\n                            return (\n                                <div\n                                    key={field.id}\n                                    className='options'\n                                >\n                                    <Checkbox\n                                        className='ml10'\n                                        label={field.title}\n                                        onChange={event => props.changeOrderField(field.id, 'visible', event.target.checked)}\n                                        checked={field.visible}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrderFields)\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport { setVisibleFlag, changeOrderFormS} from '../../Redux/actions'\nimport {icon_down, icon_filter, icon_table} from '../../data/icons'\nimport Button from '../general/Button'\nimport Icon from '../general/Icon'\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport TableOrderFields from './TableOrderFields'\n\nconst CustomPanel = (props) => {\n\n    const newOrder = () => {\n        props.changeOrderFormS(props.user.id, 'manager_id')\n        props.setVisibleFlag('statusOrderEditor', true)\n    }\n\n    const handleEditFilter = () => {\n        props.setVisibleFlag('statusSetCustomFilter', 'change')\n        props.changeFilterState({active_badge: 0,  active_filter: 0})\n    }\n\n    return (\n        <div className='mainCustomPanel '>\n            <div className='customPanel'>\n                <div className='row al-itm-fe'>\n                    <Button\n                        id='addOrder'\n                        className='greenButton'\n                        title='+ Заказ'\n                        onClick={newOrder}\n                        invisible={!props.permissions.includes('create_orders')}\n                    />\n                    <div className='customFilters'>\n                        <Button\n                            className='customFilter'\n                            title='Фильтр'\n                            onClick={handleEditFilter}\n                            invisible={false}\n                            icon={icon_filter}\n                            iconClassName='icon-s2'\n                            iconColor='282e33'\n                        />\n                        {props.customFilters.map(filter => {\n                            return (\n                                <CustomFilter data={filter} key={filter.id}/>\n                            )\n                        })}\n                    </div>\n                </div>\n                <TableOrderFields/>\n            </div>\n\n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customFilters: state.filter.customFilters,\n    statusSetCustomFilter: state.view.statusSetCustomFilter,\n    permissions: state.data.user.role.permissions,\n    statusOrderEditor: state.view.statusOrderEditor,\n    user: state.data.user,\n    edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useEffect} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport {addStatusGroupAction, addAdCampaign, addEquipment} from '../../Redux/actions'\nimport {addBadges, changeFilterForm, changeFilterState, addCustomFilters} from '../../Redux/actions/filterAction'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\n\nimport CustomPanel from './CustomPanel'\n\n\nfunction Orders(props) {\n\n    useEffect(() => {\n        props.addOrders()\n    }, [\n        props.filter.sort,\n        props.filter.field_sort,\n        props.filter.page,\n        props.filter.engineer_id,\n        props.filter.overdue,\n        props.filter.status_id,\n        props.filter.status_overdue,\n        props.filter.urgent,\n        props.filter.order_type_id,\n        props.filter.manager_id,\n        props.filter.created_at,\n        props.filter.kindof_good,\n        props.filter.brand,\n        props.filter.subtype,\n        props.filter.client_id,\n        props.filter.search\n    ])\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n\n\n    const pageChangeHandler = page => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changeFilterState({page: curent_page})\n        // props.changeFilterForm(curent_page, 'page')\n    }\n\n\n    useEffect(() => {\n        props.addBadges()\n    }, [])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    count: state.order.count,\n    ordersShow: state.order.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment,\n    addBadges,\n    changeFilterState,\n    changeFilterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {icone_sphere, icone_setting} from '../../../data/icons'\nimport {activeCashbox, editCashbox, changeCashboxForm, changeVisibleState} from '../../../Redux/actions'\nimport {changePaymentState} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\nconst Cashbox = (props) => {\n\n    const activ = (id) => {\n        return id === props.activ_cashbox_id\n    }\n\n    const edit = props.user.role.permissions.includes('edit_cash')\n\n    const income = props.user.role.permissions.includes('make_income') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('incoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n    const outcome = props.user.role.permissions.includes('make_expenditure') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n    const move = props.user.role.permissions.includes('move_money') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming_move') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n    const showBalance = props.user.role.permissions.includes('see_remains') &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('show_cashbox_remains') :\n            props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n    const handleEdit = () => {\n        props.editCashbox(props.cashbox)\n        props.changeVisibleState({'statusCashboxEditor': true})\n    }\n\n    const hanldleIncome = () => {\n        props.changePaymentState({\n            'direction': 2,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleOutcome = () => {\n        props.changePaymentState({\n            'direction': 1,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleMove = () => {\n        props.changePaymentState({\n            'direction': 0,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    return (\n        <div\n            className={`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted ? 'bcg' : 'cgr'}`}\n            onClick={() => props.changeCashboxForm(props.cashbox, 'current_cashbox')}\n        >\n            <div className='icons'>\n                <div><Icon className='smalIcon' icon={icone_sphere}\n                           color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n                <div\n                    onClick={edit ? handleEdit : null}\n                >\n                    <Icon className='smalIcon curP' icon={icone_setting}\n                          color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n                </div>\n            </div>\n            <div>{props.cashbox.title.toUpperCase()}</div>\n            {showBalance ?\n                <div className='cacsboxBalance'>\n                    {`${props.cashbox.balance ? parseFloat(props.cashbox.balance).toFixed(2) : 0} руб.`}\n                </div>\n                : null}\n            <div className='row jc-c'>\n                <Button\n                    title='+ Приход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n                    onClick={hanldleIncome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!income}\n                />\n                <Button\n                    id='344'\n                    title='- Расход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n                    onClick={hanldleOutcome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!outcome}\n                />\n            </div>\n            <Button\n                title='Перемещение'\n                className='whiteButton'\n                onClick={hanldleMove}\n                disabled={props.cashbox.deleted}\n                invisible={!move}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user,\n    activ_cashbox_id: state.cashbox.current_cashbox.id,\n})\n\nconst mapDispatchToProps = {\n    activeCashbox,\n    editCashbox,\n    changeCashboxForm,\n    changePaymentState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeEmployeeSelected, changeCashboxPermissions } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeEmployeeSelected,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEmoloyee, changeCashboxForm, changeCashboxPermissions } from '../../../Redux/actions'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxForm(employee.id, 'permissions_employee')\n      props.editEmoloyee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxForm(employee_id, 'permissions_employee')\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmoloyee,\n   changeCashboxForm,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../general/LableInput'\n\nimport { changeCashboxForm, chooseCashboxSelected } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={(event) => props.changeCashboxForm(event.target.value, 'title')}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxForm(true, 'isGlobal')}\n            func2 = {() => props.changeCashboxForm(false, 'isGlobal')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxForm(event.target.checked, 'isVirtual')} \n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxForm(0, 'type')}\n            func2={() => props.changeCashboxForm(1, 'type')}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxForm,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm, setVisibleFlag, createCashbox, seveEditCashbox, deleteCashbox } from '../../../Redux/actions'\nimport { permission_cahsbox } from \"../../../data/permissions\";\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n      props.setVisibleFlag('statusCashboxEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   useEffect(() => {\n     if (!props.cashbox.edit) {\n      let list_per = {}\n      props.employees.filter(employee => !employee.deleted).forEach(employee => {\n         list_per[employee.id] = {}\n         list_per[employee.id].available = true\n         list_per[employee.id].like_cashbox = true\n         list_per[employee.id].permissions = permission_cahsbox\n      })\n      props.changeCashboxForm(list_per, 'employees')\n    }\n   }, [])\n\n  const hangleCreate = () => {\n    if (props.cashbox.title) {\n      props.createCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (props.cashbox.title) {\n      props.seveEditCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n        </div>\n\n        <Tabs\n          list={['Общие', 'Доcтуп']}\n          func={props.changeCashboxForm}\n          tab={props.cashbox.tabs_editor}\n          tab_field=\"tabs_editor\"\n        />\n\n        {props.cashbox.tabs_editor === 0 ? <DataCashbox /> : null}\n        {props.cashbox.tabs_editor === 1 ? <CashboxAccess /> : null}\n\n        <BottomButtons\n          edit={props.cashbox.edit}\n          create={ hangleCreate }\n          save={ hangleSave }\n          delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null }\n          recover={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null }\n          close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n          deleted={props.cashbox.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  cashbox: state.cashbox,\n  employees: state.data.employees,\n  view: state.view,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm,\n  setVisibleFlag,\n  createCashbox,\n  seveEditCashbox,\n  deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, setPayment} from '../../Redux/actions'\nimport {icon_file_text, icon_warning} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport {showDate} from '../general/utils'\n\nconst TablePayments = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payments.filter(payment => !payment.deleted).forEach(payment => {\n            income_sum += payment.income\n            outcome_sum += payment.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payments])\n\n    const showBalance = () => {\n        let cashboxAvailable = false\n        if (Object.values(props.current_cashbox).length) {\n            cashboxAvailable = (props.current_cashbox.employees[props.user.id].like_cashbox ?\n                props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n        }\n        return cashboxAvailable && props.user.role.permissions.includes('see_remains')\n    }\n\n    const payments = props.payments.filter(payment => props.showDeleted || !payment.deleted)\n        .filter(payment => props.permissions.includes('see_payment_profit') || payment.cashflow_category !== 'Прибыль')\n\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr className=''>\n                <th className='w150'>Создан</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                {showBalance() ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n            </thead>\n            <tbody>\n            {payments.map(payment => (\n                <tr\n                    key={payment.id}\n                    className={payment.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => {\n                        props.setPayment(payment)\n                        props.setVisibleFlag('statusPaymentsCard', true)\n                    }}\n                >\n                    <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                            <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                            {payment.created_at !== payment.custom_created_at ?\n                                <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}`}>\n                                    <Icon\n                                        className='icon-s2 ml5'\n                                        icon={icon_warning}\n                                        color='red'\n                                    />\n                                </div> : null}\n                        </div>\n                    </td>\n                    <td>\n                        <div>{payment.description}{payment.client.name ?` (Клиент: ${payment.client.name})` : null }</div>\n                        {payment.direction ?\n                            <div className='row'>\n                                <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                                <div className='tac ml5 cgr'>{payment.cashflow_category}</div>\n                            </div> : null}\n                    </td>\n                    <td className={payment.income ? 'greenFont tac' : 'tac'}>{payment.income}</td>\n                    <td className={payment.outcome ? 'redFont tac' : 'tac'}>{payment.outcome}</td>\n                    {showBalance() ?\n                        <td className='tac'>\n                            {payment.deposit ? parseFloat(payment.deposit).toFixed(2) : 0}\n                        </td>\n                        : null}\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payments.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    payments: state.payment.payments,\n    employees: state.data.employees,\n    user: state.data.user,\n    current_cashbox: state.cashbox.current_cashbox,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    setPayment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addPayments, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {icon_stats_docs} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\nimport ChooseDate from '../general/calandar/ChooseDate'\nimport Button from '../general/Button'\n\n\nconst ManeyMovement = (props) => {\n\n    useEffect(() => {\n        if (props.current_cashbox) {\n            props.addPayments()\n        }\n    }, [props.current_cashbox])\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    return (\n        <div className='ml30 w100'>\n\n            <div className='row'>\n                <Icon icon={icon_stats_docs}/>\n                <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n            </div>\n            <div className='row'>\n                <ChooseDate\n                    className='h27'\n                    width='250px'\n                    range={true}\n                    func={date => props.changePaymentState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                    current_date={props.filter_created_at}\n                    ivisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Button\n                    title='Применить'\n                    className='blueButton'\n                    onClick={() => props.addPayments()}\n                    invisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Checkbox\n                    label='Показать удаленные'\n                    onChange={event => setShowDeleted(event.target.checked)}\n                    value={showDeleted}\n                    invisible={!props.permissions.includes('see_delete_payments')}\n                />\n            </div>\n\n            <TablePayments showDeleted={showDeleted}/>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    current_cashbox: state.cashbox.current_cashbox,\n    filter_created_at: state.payment.filter_created_at,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag, addCashboxes, changeCashboxForm } from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addCashboxes()\n   },[])\n\n   const cashboxes = props.cashboxes.filter(cashbox => \n      (!cashbox.deleted || showDeleted) && \n      cashbox.employees[props.user.id].available &&\n      (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n      )\n   \n   \n   // useEffect(() => {\n   //    props.changeCashboxForm(cashboxes[0], 'current_cashbox')\n   // },[])\n\n   return (\n      <div className = 'contentTab'>\n\n         <div className = 'row al-itm-bl'>\n            <div className='cashboxes'>\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  checked={showDeleted}\n               />\n               {cashboxes.map(cashbox => {\n               return (\n                  <Cashbox\n                     key={cashbox.id}\n                     cashbox={cashbox}\n                     active={cashbox.active}\n                  />\n               )})}\n               \n               {props.user.role.permissions.includes('edit_cash') ?\n               <div \n                  className='whiteButton'\n                  onClick={() => props.setVisibleFlag('statusCashboxEditor', true)}\n               >\n                     + Добавить кассу\n               </div> : null}\n\n            </div>\n            {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null }\n           \n         </div>\n         {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n         {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n         {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view,\n   cashboxes: state.data.cashboxes,\n   user: state.data.user,\n   current_branch: state.data.current_branch,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   addCashboxes,\n   changeCashboxForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport { currentMonth } from '../../components/general/utils'\n\n\nexport function changePayrollForm( value, field ) {\n   return {\n     type: 'CHANGE_PAYROLL_FORM',\n     field,\n     value\n   }\n }\n\nexport function changePayrollState( data ) {\n    return {\n        type: 'CHANGE_PAYROLL_STATE',\n        data\n    }\n}\n\nexport function editPayroll(payroll) {\n   return {\n     type: 'EDIT_PAYROLL',\n     payroll\n   }\n }\n \n export function resetPayroll() {\n   return {\n     type: 'RESET_PAYROLL'\n   }\n }\n \n \n export function selectedPayroll( value, field ) {\n   return {\n     type: 'SELECTED_PAYROLL',\n     field,\n     value\n   }\n }\n\nexport function addPayrolls() {\n\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n \n   return dispatch => {\n \n     fetch(state.data.url_server + '/get_payrolls', request_config)\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrolls',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос начислений не выполнен'))\n   }\n }\n\n export function addMonthBalance() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n   custom_created_at: currentMonth(),\n   employee_id: state.payroll.setted_employee\n })\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_payroll_sum', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_PAYROLL_FORM',\n          field: 'month_balance',\n          value: data.sum,\n        })\n      } else {\n        console.warn(data.message)\n      }\n    })\n    .catch(() => bad_request('Запрос баланса не выполнен'))\n  }\n}\n\nexport function createPayroll() {\n\n  const state = store.getState()\n\n  const request_config1 = getRequestConfig({\n    description: state.payroll.description,      \n    income: state.payroll.income,\n    outcome: -state.payroll.outcome,\n    direction: state.payroll.direction,\n    deleted: state.payroll.deleted,\n    reimburse: state.payroll.reimburse,\n    created_at: state.payroll.created_at,\n    custom_created_at: state.payroll.custom_created_at,\n    relation_type: state.payroll.relation_type,\n    relation_id: state.payroll.relation_id,\n    employee_id: state.payroll.employee_id,\n    order_id: state.payroll.order_id\n  })\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    await fetch(state.data.url_server + '/get_payrolls', request_config2)\n      .then(response =>  response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'payrolls',\n            data: data.data,\n          })\n          dispatch({\n            type: 'RESET_PAYROLL',\n          })\n          dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusPayrollEditor',\n            value: false\n          })\n        } else {\n          console.warn(data.message)\n        }\n      })\n      .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}\n\nexport function deletePayroll(flag) {\n\n  const state = store.getState()\n\n  let request_config1 = getRequestConfig({\n    id: state.payroll.edit,      \n    deleted: flag\n  })\n  request_config1.method = 'PUT'\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    fetch(state.data.url_server + '/get_payrolls', request_config2)\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payrolls',\n          data: data.data,\n        })\n        dispatch({\n          type: 'RESET_PAYROLL',\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPayrollEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.message)\n      }\n    })\n    .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {editPayroll} from '../../../Redux/actions/payrollActions'\n\nimport {showDate} from '../../general/utils'\nimport Icon from '../../general/Icon'\nimport {icon_warning} from '../../../data/icons'\n\nconst TablePayrolls = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n    const editPayroll = (payroll) => {\n        props.editPayroll(payroll)\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const payrolls = props.payrolls.filter(payroll => props.showDeleted || !payroll.deleted)\n\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n            income_sum += payroll.income\n            outcome_sum += payroll.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payrolls])\n\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w135'>Дата</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                <th className='w91'>Баланс, руб.</th>\n            </tr>\n            </thead>\n            <tbody>\n            {payrolls.map(payroll => (\n                <tr\n                    key={payroll.id}\n                    className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => editPayroll(payroll)}\n                >\n                    <td className='pd-lr-5'>\n                        <div>\n                            <div className='row'>\n                                <div>{type_payrolls[payroll.relation_type]}</div>\n                                {payroll.created_at !== payroll.custom_created_at ?\n                                    <div title={`Добавлено задним числом\\n${showDate(payroll.created_at)}`}>\n                                        <Icon\n                                            className='icon-s2 ml5'\n                                            icon={icon_warning}\n                                            color='red'\n                                        />\n                                    </div> : null}\n                            </div>\n                            <div className='cgr'>{showDate(payroll.custom_created_at)}</div>\n                        </div>\n                    </td>\n                    <td className='pd-lr-5'>{payroll.description}</td>\n                    <td className={payroll.income ? 'greenFont tac' : 'tac'}>{payroll.income}</td>\n                    <td className={payroll.outcome ? 'redFont tac' : 'tac'}>{payroll.outcome}</td>\n                    <td className='tac'>{payroll.deposit ? payroll.deposit.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payrolls.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n        </table>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    payrolls: state.data.payrolls\n})\n\nconst mapDispatchToProps = {\n    editPayroll,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changePayrollForm, changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\nconst PayrollForm = (props) => {\n\n    const [chooseData, setChooseData] = useState(false)\n\n    return (\n        <div className=''>\n            <div className='row al-itm-fe'>\n                <ChooseBotton\n                    className='mt15 mr-rg-20'\n                    title='Дата и время'\n                    name={['Текущее', 'Заданное']}\n                    func1={() => {\n                        setChooseData(false)\n                        props.changePayrollState({custom_created_at: null})\n                    }}\n                    func2={() => {\n                        setChooseData(true)\n                        props.changePayrollState({custom_created_at: parseInt(new Date() / 1000)})\n                    }}\n                    checked={true}\n                    // disabled={!props.permissions.includes('backdating')}\n                />\n                <ChooseDate\n                    className='h31'\n                    width='250px'\n                    func={date => props.changePayrollState({custom_created_at: parseInt(date / 1000)})}\n                    current_date={props.payroll.custom_created_at * 1000}\n                    invisible={!chooseData}\n                />\n            </div>\n            <LableInput\n                className='mt15'\n                width='70px'\n                title='Сумма'\n                onChange={event => props.changePayrollForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payroll.direction === 2 ? 'income' : 'outcome')}\n                value={props.payroll.outcome ? props.payroll.outcome : props.payroll.income}\n                unit='руб.'\n                checkedFlag='inputPayrollSumChecked'\n                checked={props.view.inputPayrollSumChecked}\n                disabled={props.payroll.deleted}\n                redStar={true}\n            />\n            <ChooseOfList\n                id='employeePayroll'\n                title='Сотрудник'\n                className='mt15'\n                list={props.employees}\n                field='employee_id'\n                setElement={props.changePayrollForm}\n                current_id={props.payroll.employee_id}\n                width={'250px'}\n                employee={true}\n                checkedFlag='inputPayrollEmployeeChecked'\n                checked={props.view.inputPayrollEmployeeChecked}\n                disabled={props.payroll.deleted}\n                // invisible={false}\n            />\n            <LableArea\n                className='mt15'\n                title='Коментарий'\n                onChange={event => props.changePayrollForm(event.target.value, 'description')}\n                value={props.payroll.description}\n                checkedFlag='inputPayrollDescChecked'\n                checked={props.view.inputPayrollDescChecked}\n                redStar={true}\n                disabled={props.payroll.deleted}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n    changePayrollForm,\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.data.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { resetPayroll, changePayrollForm, createPayroll, deletePayroll } from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\n\nconst PaypolleEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusPayrollEditor', false)\n      props.setVisibleFlag('inputPayrollDescChecked', true )\n      props.setVisibleFlag('inputPayrollEmployeeChecked', true )\n      props.resetPayroll()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      props.changePayrollForm(props.payroll.setted_employee, 'employee_id')\n   }, [])\n\n \n\n   const hangleCreate = () => {\n      if (\n         (props.payroll.income || props.payroll.outcome) &&\n         props.payroll.employee_id  && \n         props.payroll.description\n         ) {\n         props.createPayroll()\n      } else {\n         if (!(props.payroll.income || props.payroll.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n         if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n         if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n      }\n   }\n\n  const hangleSave = () => {\n   if (\n      (props.payrolle.income || props.payrolle.outcome) &&\n      props.payroll.employee_id  && \n      props.payroll.description\n      ) {\n      // props.createPayment()\n   } else {\n      if (!(props.payrolle.income || props.payrolle.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n      if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n      if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n   }\n  }\n\n  \n\n  const title = ['', 'Взыскание', 'Премия']\n\n  const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n  return (\n      <div className=\"rightBlock\">\n         <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n         <div className=\"createNewTitle\">\n            {props.payroll.edit ? type_payrolls[props.payroll.relation_type] :(title[props.payroll.direction])}\n         </div>\n\n         <div className='contentEditor'>\n           \n           {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n         </div>\n       \n        <BottomButtons\n            edit={props.payroll.edit}\n            create={ hangleCreate }\n            // save={ hangleSave }\n            delete={ props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null }\n            recover={ props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null }\n            close={ handleClose }\n            deleted={props.payroll.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view, \n  payroll: state.payroll,\n  permissions: state.data.user.role.permissions,\n  employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   setVisibleFlag,\n   resetPayroll,\n   createPayroll,\n   deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addEmployees, setVisibleFlag} from '../../../Redux/actions';\nimport {addPayrolls, addMonthBalance, changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport {showName} from '../../general/utils'\n\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\n\n\nconst EmployeeSalary = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addMonthBalance()\n        props.addEmployees()\n    }, [props.payroll.setted_employee])\n\n    const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n    const handleIncome = () => {\n        props.changePayrollState({direction: 2, relation_type: 9})\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handleOutcome = () => {\n        props.changePayrollState({direction: 1, relation_type: 10})\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const month_balance = props.payroll.month_balance\n\n    return (\n        <div className=''>\n            <div className='createNewTitle fsz20 mt0'>\n                {showName(current_employee)}\n            </div>\n            <div className='txtb'>\n                <span>Начисленно в текущем месяце: </span>\n                <span\n                    className={month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{month_balance ? month_balance.toFixed(2) : 0}</span> руб.\n            </div>\n            <div className='txtb'>\n                <span>Баланс:</span>\n                <span\n                    className={month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>\n                    {current_employee.balance ? current_employee.balance.toFixed(2) : 0}</span> руб.\n            </div>\n\n            <div className='row mt15 jc-sb'>\n                <div className='row'>\n                    <ChooseDate\n                        className='h27'\n                        width='250px'\n                        range={true}\n                        func={date => props.changePayrollState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.payroll.filter_created_at}\n                    />\n                    <Button\n                        className='blueButton'\n                        title='Применить'\n                        onClick={() => props.addPayrolls()}\n                    />\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        value={showDeleted}\n                        invisible={!props.permissions.includes('see_seleted_payrolls')}\n                    />\n                </div>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Премия'\n                        onClick={handleIncome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                    <Button\n                        className='greenButton bcr m10'\n                        title='- Взыскание'\n                        onClick={handleOutcome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                </div>\n            </div>\n            {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n            <TablePayrolls showDeleted={showDeleted}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    statusPayrollEditor: state.view.statusPayrollEditor\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    addPayrolls,\n    addMonthBalance,\n    addEmployees,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {showName} from '../../general/utils'\nimport {changePayrollForm} from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n\n    const [total, setTotal] = useState(0)\n\n    useEffect(() => {\n        let sum = 0\n        props.employees.filter(employee => employee.id != 1).forEach(employee => {\n            sum += employee.balance\n        })\n        setTotal(sum)\n    }, [props.employees])\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>Сотрудник</th>\n                <th>Баланс</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.employees.map(employee => (\n                <tr\n                    key={employee.id}\n                    onClick={() => props.changePayrollForm(employee.id, 'setted_employee')}\n                    style={employee.id === props.payroll.setted_employee ? {backgroundColor: '#cae1f5'} : null}\n                >\n                    <td>{showName(employee)}</td>\n                    <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td>Итог:</td>\n                <td>{total}</td>\n            </tr>\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n    payroll: state.payroll\n})\n\nconst mapDispatchToProps = {\n    changePayrollForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollForm } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollForm(props.user_id, 'setted_employee')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeCashboxForm} from '../../Redux/actions'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\nimport Loader from '../Loader/Loader'\n\nconst Payments = (props) => {\n\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Финансы</span>\n            </div>\n\n            <Tabs\n                list={['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты']}\n                func={props.changeCashboxForm}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <Cashboxes/> : null}\n            {props.tabs === 1 ? null : null}\n            {props.tabs === 2 ? null : null}\n            {props.tabs === 3 ? <Salaries/> : null}\n\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.cashbox.tabs,\n    statusOrderLoader: state.view.statusOrderLoader\n\n})\n\nconst mapDispatchToProps = {\n    changeCashboxForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th key={header.id}>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td key={header.title + part.id}>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td key={header.title + part.id}>{part[header.field].title}</td>\n                            return <td key={header.title + part.id}>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row al-itm-ct'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            invisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            invisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row al-itm-ct'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                invisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                invisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            classNameMenu='listOption'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={props.changeWarehouseForm}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { useTable } from 'react-table'\nimport {addClients} from '../../Redux/actions/clientAction'\nimport {showPhone} from '../general/utils'\n\nconst TableClients = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    const data = React.useMemo(\n        () => props.client.clients.map(client => ({\n            name: client.name,\n            phone: client.phone.length ? showPhone(client.phone[0].number) : '',\n            name_doc: client.name_doc,\n            email: client.email,\n            address: client.address,\n            notes: client.notes\n        })),\n        [props.client.clients]\n    )\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Имя',\n                accessor: 'name',\n            },\n            {\n                Header: 'Телефон',\n                accessor: 'phone',\n            },\n            {\n                Header: 'Обращение',\n                accessor: 'name_doc',\n            },\n            {\n                Header: 'Email',\n                accessor: 'email',\n            },\n            {\n                Header: 'Адресс',\n                accessor: 'address',\n            },\n            {\n                Header: 'Комментарий',\n                accessor: 'notes',\n            },\n        ],\n        []\n    )\n\n    const tableInstance = useTable({ columns, data })\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = tableInstance\n\n    return (\n        // apply the table props\n        <table {...getTableProps()}>\n            <thead>\n            {// Loop over the header rows\n                headerGroups.map(headerGroup => (\n                    // Apply the header row props\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {// Loop over the headers in each row\n                            headerGroup.headers.map(column => (\n                                // Apply the header cell props\n                                <th {...column.getHeaderProps()}>\n                                    {// Render the header\n                                        column.render('Header')}\n                                </th>\n                            ))}\n                    </tr>\n                ))}\n            </thead>\n            {/* Apply the table body props */}\n            <tbody {...getTableBodyProps()}>\n            {// Loop over the table rows\n                rows.map(row => {\n                    // Prepare the row for display\n                    prepareRow(row)\n                    return (\n                        // Apply the row props\n                        <tr {...row.getRowProps()}>\n                            {// Loop over the rows cells\n                                row.cells.map(cell => {\n                                    // Apply the cell props\n                                    return (\n                                        <td {...cell.getCellProps()}>\n                                            {// Render the cell contents\n                                                cell.render('Cell')}\n                                        </td>\n                                    )\n                                })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    addClients\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableClients)","import React from 'react'\nimport {connect} from 'react-redux'\nimport TableClients from './TableClients'\n\nconst Clients = (props) => {\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Клиенты</span>\n            </div>\n            <TableClients/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusSettingRow } from '../../Redux/actions'\n\n\nfunction SettingRow(props) {\n  return (\n    <Link \n    className=\"settingRow\" \n    to={props.row.url}\n    style={{\n       backgroundColor: props.settingMenu.find(row => row.id === props.row.id).active ? '#939699' : '#53585c',\n       color: props.settingMenu.find(row => row.id === props.row.id).active ? '#fff' : null\n      }}\n    onClick={() => props.changeStatusSettingRow(props.row.id)}\n    >\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n   settingMenu: state.data.settingMenu\n})\n\nconst mapDispatchToProps = {\n   changeStatusSettingRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  invisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport { changeEmployeEditorForm, changeEmployeeEditorRoleOptions, setRoleEmployeeEdetor } from '../../../../Redux/actions'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'first_name')}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'last_name') }\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'email')}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'login') }\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? (\n        <div className=\"errorMassageInput\">Такой Login уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'password')}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeEditorForm(value, 'phone')}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'inn')}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'doc_name')}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event =>\n          props.changeEmployeEditorForm(event.target.value, 'notes')\n        }\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'post')}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        field=\"role_id\"\n        setElement={props.changeEmployeEditorForm}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeEditorForm,\n  changeEmployeeEditorRoleOptions,\n  setRoleEmployeeEdetor,\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee\n} from '../../../../Redux/actions'\nimport { addPayrules } from '../../../../Redux/actions/payrulleAction'\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst EmploeeyEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusEmployeeEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n    props.addPayrules()\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login &&\n      props.employee.password &&\n      props.employee.role_id !== 0\n    ) {\n      props.createEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n      if (!props.employee.password) {\n        props.setVisibleFlag('inputEmployeePasswordChecked', false)\n      }\n      if (props.employee.role_id === 0) {\n        props.setVisibleFlag('inputEmployeeRoleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login\n    ) {\n      props.seveEditEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit\n            ? `${props.employee.last_name} ${props.employee.first_name}`\n            : 'Новый сотрудник'}\n        </div>\n\n        <div className=\"tabs\">\n          <div\n            className={props.tabs === 1 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(1)}\n          >\n            Общие\n          </div>\n          <div\n            className={props.tabs === 2 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(2)}\n          >\n            Доступ\n          </div>\n        </div>\n\n        {props.tabs === 1 ? <EditEmployeeGenerally /> : null}\n        {props.tabs === 2 ? <EditEmployeePermission /> : null}\n\n        <BottomButtons\n          edit={props.edit}\n          create={hangleCreate}\n          save={hangleSave}\n          delete={() => props.deleteEmployee(true)}\n          recover={ props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n          close={() => props.setVisibleFlag('statusEmployeeEditor', false)}\n          deleted={props.employee.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tabs: state.employee.tabs,\n  edit: state.employee.edit,\n  employee: state.employee,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee,\n  addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editEmoloyee, setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmoloyee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n   editEmoloyee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles, changeShowDeleted, resetEmoloyee} from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmoloyee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={() => props.changeShowDeleted()}\n                        checked={props.showDeleted}\n                        invisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeShowDeleted,\n    resetEmoloyee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeShedule } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n  const weekdays = [\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n    'Воскрсение',\n  ]\n\n  return (\n    <div className=\"schedule mr-rg-20\">\n      <div className=\"lableImput mt15\">График работы локации</div>\n      {props.branch.schedule.map((day, idx) => {\n        return (\n          <div className=\"row mt15\" key={idx}>\n            <Checkbox\n              className=\"w150\"\n              onChange={(event) =>\n                props.changeShedule(idx, 'work_day', event.target.checked)\n              }\n              checked={day.work_day}\n              label={weekdays[idx]}\n              disabled={props.branch.deleted}\n            />\n\n            {props.branch.schedule[idx].work_day ? (\n              <div className=\"row\">\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'start_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.start_time}\n                />\n                <div className=\"w30 tac\">&#8212;</div>\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'end_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.end_time}\n                />\n              </div>\n            ) : null}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n  changeShedule,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeBranchForm } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\nimport {\n  icon_location,\n  icon_map_location,\n  icon_wrench,\n  icon_hammer,\n  icon_radio,\n  icon_git,\n  icon_svg,\n} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchForm('color', color)\n                        props.changeBranchForm('icon', icon)\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setBranchEmployee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\n\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.filter(employee => !employee.deleted).map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n} from '../../../../Redux/actions'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n      props.setVisibleFlag('statusBranchEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateBranch = () => {\n    if (\n      props.branch.name &&\n      props.branch.orders_prefix &&\n      props.branch.documents_prefix\n    ) {\n      props.createBranch()\n    } else {\n      if (!props.branch.name) {\n        props.setVisibleFlag('inputBranchNameChecked', false)\n      }\n      if (!props.branch.orders_prefix) {\n        props.setVisibleFlag('inputBranchPrefixChecked', false)\n      }\n      if (!props.branch.documents_prefix) {\n        props.setVisibleFlag('inputBranchPrefixDocChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.branch.edit ? props.branch.name : ' Новая локация'}\n        </div>\n\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Название\"\n          onChange={(event) => props.changeBranchForm('name', event.target.value)}\n          value={props.branch.name}\n          checkedFlag=\"inputBranchNameChecked\"\n          checked={props.view.inputBranchNameChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Адрес\"\n          onChange={(event) => props.changeBranchForm('address', event.target.value)}\n          value={props.branch.address}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className='textInput w250'\n          title='Телефон'\n          onChange={value => props.changeBranchForm('phone', value)}\n          value={props.branch.phone}\n          disabled={props.branch.deleted}\n          isPhone={true}\n        />\n        <Schedule />\n        <ChooseIcon />\n        <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n        <ChooseOfList\n          id={18}\n          list={props.order_type}\n          field=\"orders_type_id\"\n          setElement={props.changeBranchForm}\n          current_id={props.branch.orders_type_id}\n          width={'250px'}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера заказа\"\n          onChange={(event) => props.changeBranchForm('orders_prefix', event.target.value)}\n          value={props.branch.orders_prefix}\n          checkedFlag=\"inputBranchPrefixChecked\"\n          checked={props.view.inputBranchPrefixChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.orders_prefix}-${\n            props.counters.find((count) => count.id === 1).count\n          }`}\n        </p>\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера документов\"\n          onChange={(event) => props.changeBranchForm('documents_prefix', event.target.value)}\n          value={props.branch.documents_prefix}\n          checkedFlag=\"inputBranchPrefixDocChecked\"\n          checked={props.view.inputBranchPrefixDocChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.documents_prefix}-${\n            props.counters.find((count) => count.id === 2).count\n          }`}\n        </p>\n        <ChooseEmployees />\n\n        <BottomButtons\n          edit={props.branch.edit}\n          create={handleCreateBranch}\n          save={() => props.saveBranch()}\n          recover={\n            props.permissions.includes('setting_recover_branch')\n              ? () => props.deleteBranch(false)\n              : null\n          }\n          delete={() => props.deleteBranch(true)}\n          close={() => props.setVisibleFlag('statusBranchEditor', false)}\n          deleted={props.branch.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  view: state.view,\n  order_type: state.data.order_type,\n  counters: state.data.counters,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editBranch } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\n\nconst TableBranches = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th></th>\n               <th>Название локации</th>\n               <th>Адрес</th>\n               <th>Телефон</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.branches.filter(branch => props.showDeleted || !branch.deleted).map(branch =>{\n            return (\n               <tr \n                  key={branch.id}\n                  className={branch.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => props.editBranch(branch)} \n               >\n                  <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                  <td>{branch.name}</td>\n                  <td>{branch.address}</td>\n                  <td>{showPhone(branch.phone)}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   branches: state.data.branches,\n   showDeleted: state.branch.showDeleted\n   })\n\nconst mapDispatchToProps = {\n   editBranch\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addCounters, changeBranchForm } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n  useEffect(() => {\n    props.addCounters()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n          <span className='headerTitle'>Локации</span>\n        </div>\n\n        <div className='settingPageBody'>\n        <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n        <div className='row'>\n          <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusBranchEditor', true)}\n          > \n            + Добавить локацию\n          </div>\n          {props.permissions.includes('setting_see_branch') ? <Checkbox\n            className='ml10'\n            label='Показать удаленные'\n            onChange={event => props.changeBranchForm('showDeleted', event.target.checked)}\n            checked={props.showDeleted}\n          /> : null}\n        </div>\n\n        <TableBranches/>\n\n        {props.statusBranchEditor ? <BranchEditor/> : null}\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusBranchEditor: state.view.statusBranchEditor,\n  showDeleted: state.branch.showDeleted,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addCounters,\n  changeBranchForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                invisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                invisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.data.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { editEmoloyee, setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmoloyee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmoloyee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={props.changeWarehouseForm}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        invisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        invisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            invisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        invisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    invisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шиблонов не выполнен'))\n\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    invisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={props.changeNotEventForm}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          invisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  classNameMenu='listOption'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.invisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            invisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                invisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.data.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n  useEffect(() => {\n    props.addEquipment()\n    props.addDictMalfunction()\n    props.addDictPackagelist()\n    props.addItemPayments()\n  }, [])\n\n  const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Справочники</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ tabs_list }\n        func={props.changeBookForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <BookEquipment/> : null}\n         {props.tabs === 1 ? <MalfunctionBooks/> : null}\n         {props.tabs === 2 ? <PackagelistBook/> : null}\n         {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n  addEquipment,\n  addDictMalfunction,\n  addDictPackagelist,\n  addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n      {/* <div className='settingContent'> */}\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n          {/* </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","import React, {useEffect} from 'react';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux';\n\n\nimport {addMainData, addEmployees, addStatus, addData} from '../Redux/actions';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\nimport OrderEditor from './orders/newOrder/OrderEditor'\n\n\nfunction Main(props) {\n\n    // Загружаем строки меню в State\n    useEffect(() => {\n        props.addMainData()\n        props.addEmployees()\n        props.addStatus()\n    }, [])\n    useEffect(() => {\n        props.addData(props.branches.filter(branch => branch.employees.includes(props.user_id))[0], 'current_branch')\n    }, [props.branches])\n\n\n    return (\n        <div>\n            <Sidebar/>\n            <div className='contentMain'>\n                <Switch>\n                    <Route path='/tasks' component={TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path='/orders' component={Orders}/>\n                    <Route path='/shops' component={Shops}/>\n                    <Route path='/payments' component={Payments}/>\n                    <Route path='/wherehouse' component={Wherehouse}/>\n                    <Route path='/clients' component={Clients}/>\n                    <Route path='/analytics' component={Analytics}/>\n                    <Route path='/reports' component={Reports}/>\n                    <Route path='/telephony' component={Telephony}/>\n                    <Route path='/settings' component={Settings}/>\n\n\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n            <Switch>\n                <Route\n                    exact path=\"/orders/:id\"\n                    // loadData={() => props.getOrder(id)}\n                    component={OrderEditor}\n                />\n            </Switch>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.data.branches\n})\n\nconst mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loginAction, loguotAction, addUserAction, log_in } from '../Redux/actions'\n\nfunction Login(props) {\n\n\n  const handleClick = ({target: {form}}) => {\n     props.log_in(form.login.value, form.password.value)\n  }\n\n\n\n  return (\n    <div className=\"mainLoginContaner\">\n      <div className=\"loginContanier\">\n        <h2>Войдите в аккаунт</h2>\n        {props.error_message ? (\n          <span className=\"errorMessageLogin\">{props.error_message}</span>\n        ) : null}\n        <form id=\"loginForm\">\n          <div>\n            <label className=\"loginFormLable\">Логин или Email</label>\n            <input \n              id=\"login\"\n              className=\"loginFormInput\" \n              type=\"text\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <label className=\"loginFormLable\">Пароль</label>\n            <input \n              id=\"password\" \n              className=\"loginFormInput\" \n              type=\"password\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n              Авторизоваться\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  serverUrl: state.data.url_server,\n  error_message: state.data.error_message\n})\n\nconst mapDispatchToProps = {\n    // explicitly forwarding arguments\n    login: loginAction,\n    loguot: loguotAction,\n    addUser: addUserAction,\n    log_in\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)\n","import React  from \"react\";\nimport Main from './components/Main'\nimport { connect } from \"react-redux\";\n\n\nimport Login from './components/Login'\n\n\nfunction App(props) {\n\n\n  return props.token ? <Main/> : <Login/>\n\n  \n}\n\nconst mapStateToProps = state => ({\n  token: state.data.token\n})\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}