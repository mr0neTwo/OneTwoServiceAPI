{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","Redux/actions/actionUtils.js","Redux/actions/filterAction.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/Brand.js","components/orders/cell/KindOfGood.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","Redux/actions/clientAction.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/general/calandar/CalendarTime.js","components/general/calandar/CalendarNavi.js","components/general/calandar/CalendarOption.js","components/general/calandar/ChooseDate.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseEquipment.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPayments.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/OrderPrint.js","components/orders/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/Sticker.js","components/orders/StikerToPrint.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/FilterEditor.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","components/general/ChooseOfListMany.js","components/general/ChooseWithSearch.js","components/orders/setCustomFilter/SetGroup.js","components/orders/setCustomFilter/SetBrand.js","components/orders/setCustomFilter/SetSubtype.js","components/orders/setCustomFilter/SetFilter.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/general/TableFields.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","ordersShow","count","menuRows","id","title","image","url","group_name","active","permission_keys","map","per","settingMenu","permission_key","payments","employees","user","JSON","parse","sessionStorage","getItem","status","status_group","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","branches","cashboxes","payrules","payrolls","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","current_branch","token","login_status","error_message","url_server","process","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","inputFilterTitleChecked","errorSameMail","errorSameLogin","clientFilter","page","name","phone","search_word","badges","customFilters","general","sort","field_sort","engineer_id","overdue","status_id","status_overdue","urgent","order_type_id","manager_id","created_at","kindof_good","brand","subtype","client_id","search","temp_statuses","temp_order_types","temp_managers","temp_engineers","temp_created_at","temp_kindof_good_id","temp_brand","temp_subtype","temp_client","active_badge","active_filter","title_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","tabs","showDeleted","role_title","first_name","last_name","email","notes","login","password","role_id","permissions","inn","doc_name","post","deleted","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","model","operations","parts","attachments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","warranty_measures","equipments","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","filter_name","filter_phone","logo","icon_trush","icon_location","icon_warning","icon_clock","icon_table","icon_pencil","icon_right","icon_left","icon_down","icon_cancel","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","img","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_id","cashbox_id","employee_id","order_id","target_cashbox_id","cashbox","employee","order","filter_created_at","setHours","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","field","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","reimburse","relation_type","setted_employee","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","events","event","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","rows","row","a","b","view","Object","assign","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","new_data","every","val","includes","saveToApp","setItem","stringify","tempFilter","client_name","word","replace","range","role","bool","console","log","tab","equipments_list","phones","statusPhones","statusTitle","tag","tags_list","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","Accept","bad_request","massage","clear","warn","changeStatusMenuVisible","changePermissions","editEmoloyee","setClietnCheckbox","setVisibleFlag","changeVisibleState","setVisibleListFlag","resetEquipment","setOrderEquipment","changeOrderForm","addAnotherEquipment","deleteDevice","changeOrderFormS","changeBranchForm","changeCashboxForm","changeCashboxPermissions","addData","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","editClient","dispatch","fetch","then","response","json","success","catch","addEmployees","filters","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addDictService","mapDispatchToProps","changeStatusMenuRow","connect","props","className","to","style","find","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","LogoUser","src","alt","Icon","viewBox","user_id","useState","menuVisibel","setMenuVisibel","generally_menu","some","key","report_menu","setting_menu","length","changeFilterState","resetFilter","setSearch","placeholder","onChange","target","handleChange","onKeyPressCapture","preventDefault","handleSearch","badge","opacity","addOrders","changeStatus","request_config1","request_config2","request_config3","changeBookForm","changeBookState","resetBookEquipment","chooseBookSelected","addEquipmentType","message","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","getEmploeeName","toLocaleString","year","month","day","hour","minute","datestamp","statusGroop","deltaMinut","Math","round","abs","deltaHour","deltaDay","getDateEstimated","minWidth","width","changePaymentForm","changePaymentState","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","window","addEventListener","removeEventListener","optionsShowDate","optionsShowRangeDate","showPhone","slice","check0_100","isNaN","showName","showDate","date","currentMonth","today","start_date","setDate","valueOfPhoneInput","changeClientForm","changeClientState","addClients","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","invisible","disabled","func1","func2","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","tab_field","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","forEach","showList","setShowList","disc","parseFloat","CalendarTime","current_date","getHours","getMinutes","setMinutes","CalendarNavi","visibleInputYear","setVisibleInputYear","months","setCurrent_day","setMonth","getMonth","setVisibleListMonth","visibleListMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","CalendarOption","allDate","first","second","setTime","getTime","getDay","getDate","setVisibleCalendar","ChooseDate","visibleCalendar","firstDay","setFirstDay","secondDay","setSecondDay","current_days","compareDates","date1","date2","handleChoose","date_range","new_range","prepareRange","dayClassName","class1","class2","join","showSelected","range_date","showRangeDate","showTop","onMouseOver","onMouseOut","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","item","request_config_2","request_config4","mainFilter","request_config5","request_config6","current_branch_id","order_edit","handleClose","chooseData","setChooseData","category","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","types","useMemo","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","cteateEquipmentSubtype","setSubtype","SetOrderGroup","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","iconClassName","iconColor","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","height","current_engineer_id","isExist","text","deletePayment","Checkbox","label","createOrder","resetOrder","saveOrder","Sticker","forwardRef","ref","stickerToPrintRef","useRef","printOSticker","useReactToPrint","content","onAfterPrint","display","initStatusMenuVisible","list_id","editOrder","statusVis","table_headers","handleEdit","addClientToTempFilter","createCustomFilter","mainCheckbox","current_statuses","choosed_values","current_list","indeterminate","labelClassName","type_group","allStatuses","func_clear","ChooseOfListMany","checked_list","len","showWord","mainLable","ChooseWithSearch","current_element","changeFilter","setType","settled","settledType","settledBrand","resetTempFilter","deleteFilter","selectedFilter","addStatusGroup","addCustomFilters","addAdCampaign","addBadges","employee_access","changeFilterForm","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","selected","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","activeCashbox","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","changeEmployeeSelected","perm","setPerm","available","chooseCashboxSelected","createCashbox","seveEditCashbox","list_per","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","income_sum","outcome_sum","cashboxAvailable","setShowDeleted","ivisible","addCashboxes","changePayrollForm","changePayrollState","addPayrolls","editPayroll","type_payrolls","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","setTotal","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","choose","cat","catVisible","setCatVisible","mainCategory","createWarehouseCategory","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","TableFields","minHeight","addWarehouseCategories","addParts","choosePartSelected","changeStatusSettingRow","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","changeEmployeEditorForm","changeEmployeeEditorRoleOptions","setRoleEmployeeEdetor","changeEmployeeTabs","createEmployee","seveEditEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","changeShowDeleted","resetEmoloyee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","editBranch","addCounters","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableFields","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","addStatus","addMainData","counts","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","loguot","addUser","log_in","access_token","serverUrl","form","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"0SAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,wMAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAAO,uBACPC,YAAa,8JACd,CACCD,MAA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","file":"static/js/main.fd7a0288.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import { data_setting_menu } from '../../data/dataSettingRows'\nimport { data_menu_rows } from '../../data/dataSidebarRows'\n\nconst initialState = {\n    ordersShow: [],\n    count: 0,\n    menuRows: data_menu_rows,\n    settingMenu: data_setting_menu,\n    payments: [],\n\n    employees: [],\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    branches: [],\n    cashboxes: [],\n    payrules: [],\n    payrolls: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    current_branch: {},\n\n    token: sessionStorage.getItem('1xsndt') || '',\n    login_status: false,\n    error_message: '',\n    url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:80' // Мобильный\n    // url_server: 'http://10.6.1.26:80/' // VPN\n\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n  \n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n  switch (action.type) {\n\n    case 'LOGIN': {\n      return {\n         ...state, \n         token: action.token\n        }}\n\n    case 'LOGUOT': {\n      return {\n         ...state, \n         token: '',\n         login_status: false \n        }}\n\n    case 'ADD_MENU_ROWS': {\n      return {\n         ...state, \n         menuRows: action.rows,\n        }}\n\n    case 'ADD_STATUS': {\n      return {\n         ...state, \n         status: action.status,\n        }}\n\n    case 'ADD_STATUS_GROUP': {\n      return {\n          ...state, \n          status_group: action.status_group,\n        }}\n    \n    case 'ADD_ORDERS_SHOW': {\n      return {\n         ...state, \n         ordersShow: action.ordersShow,\n         count: action.count\n        }}\n\n    \n    case 'ADD_EMPLOYEES': {\n      return {\n         ...state, \n         employees: action.employees,\n        }}\n\n    case 'ADD_USER': {\n      return {\n         ...state, \n         user: action.user,\n         login_status: true \n        }}\n\n    case 'ADD_BADGES': {\n      return {\n          ...state, \n          badges: action.badges\n      }}\n\n\n    case 'ADD_EQUIPMENT': {\n      return {\n        ...state,\n        equipment: action.equipment\n      }}\n\n    case 'CHANGE_STATUS_MENU_ROW': {\n      return {\n      ...state,\n      menuRows: state.menuRows.map(row => {\n        return {\n          ...row,\n          active: row.id === action.id\n        }})}} \n\n    \n    case 'ADD_SETTING_MENU': {\n    return {\n        ...state, \n        settingMenu: action.rows.sort((a, b) => a.id - b.id),\n      }}\n      \n    case 'CHANGE_STATUS_SETTING_ROW': {\n      return {\n        ...state,\n        settingMenu: state.settingMenu.map(row => {\n          return {\n            ...row,\n            active: row.id === action.id\n          }})}} \n\n\n\n    case 'ADD_ROLES': {\n      return {\n          ...state, \n          roles: action.roles,\n        }}\n\n    case 'ADD_AD_CAMPAIGN': {\n      return {\n          ...state, \n          ad_campaign: action.ad_campaign,\n        }\n      }\n\n        \n    case 'ADD_DATA': {\n      return {\n          ...state, \n          [action.field]: action.data,\n        }\n      }\n\n        case 'ACTIVE_CASHBOX': {\n          return {\n              ...state, \n              cashboxes: state.cashboxes.map(cashbox => {\n                cashbox.active = cashbox.id === action.id\n                return cashbox\n              }),\n            }\n          }\n\n    default:\n      return state\n  }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    active: false,\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: [true],\n   checkedOrderKindofGood: [true],\n   checkedOrderBrand: [true],\n   checkedOrderSubtype: [true],\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n   inputFilterTitleChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_VISIBLE_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n      \n      // case 'SET_ORDER_EQUIPMENT': {\n         \n      //    let checked_list = state[action.field]\n      //    checked_list[action.idx] = true\n\n      //    return {\n      //       ...state, \n      //       [action.field]: checked_list\n      //    }\n      // }\n\n      \n\n\n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clientFilter: {\n        page: 0,\n        name: '',\n        phone: '7'\n    },\n\n    search_word: '',\n\n\n    // ========================\n    badges: [],\n    customFilters: [],\n\n    title: '',\n    general: false,\n\n    sort: 'desc',\n    field_sort: 'id',\n    page: 0,\n\n    engineer_id: null,\n    overdue: null,\n    status_id: null,\n    status_overdue: null,\n    urgent: null,\n    order_type_id: null,\n    manager_id: null,\n    created_at: null,\n    kindof_good: null,\n    brand: null,\n    subtype: null,\n    client_id: null,\n\n    search: '',\n\n    temp_statuses: [],\n    temp_order_types: [],\n    temp_managers: [],\n    temp_engineers: [],\n    temp_created_at: [0, 0],\n    temp_kindof_good_id: null,\n    temp_brand: null,\n    temp_subtype: null,\n    temp_client: {},\n\n    active_badge: 0,\n    active_filter: 0\n}\n\nexport const filterReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_FILTER_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_FILTER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_FILTER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'RESET_FILTER':\n            return {\n                ...state,\n                page: 0,\n\n                engineer_id: [],\n                overdue: null,\n                status_id: [],\n                status_overdue: null,\n                urgent: null,\n\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n\n                active_badge: 0,\n                active_filter: 0\n            }\n\n        case 'RESET_TEMP_FILTER':\n            return {\n                ...state,\n                temp_statuses: [],\n                temp_order_types: [],\n                temp_managers: [],\n                temp_engineers: [],\n                temp_created_at: [0, 0],\n                temp_kindof_good_id: null,\n                temp_brand: null,\n                temp_subtype: null,\n                temp_client: {},\n            }\n\n        case 'RESET_DATA_FILTER':\n            return {\n                ...state,\n                title: '',\n                general: false,\n            }\n\n        // ========================\n        // case 'ADD_STATUS': {\n        //     return {\n        //         ...state,\n        //         status: action.status.map(status => status.id),\n        //     }\n        // }\n        //\n        // case 'ADD_DATA': {\n        //     if (action.field === 'order_type') {\n        //         return {\n        //             ...state,\n        //             order_type_id: action.data.map(type => type.id)\n        //         }\n        //     } else {\n        //         return state\n        //     }\n        // }\n        //\n        // case 'ADD_EMPLOYEES': {\n        //     return {\n        //         ...state,\n        //         employees: action.employees.map(employee => employee.id),\n        //     }\n        // }\n\n\n\n\n\n        case 'CHANGE_CLIENT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    client_name: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_NAME_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    name: action.word,\n                    phone: ''\n                }\n            }\n        }\n\n\n        case 'CHANGE_PHONE_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    phone: action.word.replace(/[^0-9]/g, ''),\n                    name: ''\n                }\n            }\n        }\n\n        case 'CHANGE_CREATE_AT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    created_at: action.range\n                }\n            }\n        }\n\n\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n  tabs: 1,\n  edit: 0,\n  showDeleted: false,\n  role_title: '',\n\n  first_name: '',\n  last_name: '',\n  email: '',\n  notes: '',\n  phone: '',\n  login: '',\n  password: '',\n  role_id: 0,\n  permissions: [],\n  inn: '',\n  doc_name: '',\n  post: '',\n  deleted: false\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_EMPLOYEE_TAB': {\n         return {\n            ...state, \n            tabs: action.tab,\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n      \n      case 'CHOOSE_EMPLOYEE_SELECTED': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n\n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            role_id: action.role\n         }\n      }\n      \n      case 'CHANGE_SHOW_DELETED': {\n         return {\n            ...state, \n            showDeleted: !state.showDeleted\n         }\n      }\n\n      \n      case 'EDIT_EMPLOYEE': {\n         return {\n            ...state, \n            edit: action.employee.id,\n            first_name: action.employee.first_name || '',\n            last_name: action.employee.last_name || '',\n            email: action.employee.email || '',\n            notes: action.employee.notes || '',\n            phone: action.employee.phone || '',\n            login: action.employee.login || '',\n            role_id: action.employee.role.id,\n            role_title: action.employee.role.title || '',\n            permissions: action.employee.permissions || [],\n            inn: action.employee.inn || '',\n            doc_name: action.employee.doc_name || '',\n            post: action.employee.post || '',\n            deleted: action.employee.deleted\n         }\n      }\n\n      case 'RESET_EMPLOYEE': {\n         return {\n            ...state, \n            edit: 0,\n            first_name: '',\n            last_name: '',\n            email: '',\n            notes: '',\n            phone: '',\n            login: '',\n            password: '',\n            role_title: '',\n            role_id: 0,\n            permissions: [],\n            inn: '',\n            doc_name: '',\n            post: '',\n            deleted: false\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,\n   tabs: 1,\n\n   created_at: 0,\n   done_at: 0,\n   closed_at: 0,\n   assigned_at: 0,\n   duration: 0,\n   estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n   scheduled_for: 0,\n   warranty_date: 0, \n   status_deadline: 0,\n\n   ad_campaign_id: 1,\n   branch_id: 0,\n   status: {},\n   client: {},\n   order_type_id: 1,\n   closed_by_id: 0,\n   created_by_id: 0,\n   manager_id: 0,\n   engineer_id: 0,\n   kindof_good: {},\n   brand: {},\n   subtype: {},\n   model: {},\n\n   operations: [],\n   parts: [], \n   attachments: [], \n   payments: [],\n\n   id_label: '',\n   prefix: '',\n   serial: '',\n   malfunction: '',\n   packagelist: '',\n   appearance: '',\n   engineer_notes: '',\n   manager_notes: '',\n   resume: '',\n   cell: '', \n\n   estimated_cost: 0,\n   missed_payments: 0,\n   discount_sum: 0,\n   payed: 0,\n   price: 0,\n   remaining: 0, \n   remaining_status: 0, \n   remaining_warranty: 0, \n\n   overdue: false,\n   status_overdue: false,\n   urgent: false,\n   warranty_measures: false,\n\n   equipments: [{\n      kindof_good: {},\n      brand: {},\n      subtype: {},\n      model: {},\n      malfunction: '',\n      packagelist: '',\n      appearance: '',\n      urgent: false\n   }],\n  \n}\n\nexport const orderReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'RESET_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {}\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n      \n      case 'SET_ORDER_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {\n            id: action.data.id,\n            icon: action.data.icon,\n            title: action.data.title,\n            url: action.data.url\n         }\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n\n        \n         return {\n            ...state, \n            equipments: state.equipments.concat([{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }])\n         }\n      }\n\n      \n      case 'DELETE_DEVICE': {\n\n         let equipments_list = state.equipments\n         equipments_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM_S': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'RESET_ORDER': {\n\n         return {\n            ...state, \n            edit: 0,\n            tabs: 1,\n\n            created_at: 0,\n            done_at: 0,\n            closed_at: 0,\n            assigned_at: 0,\n            duration: 0,\n            estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n            // estimated_done_at: 0,\n            scheduled_for: 0,\n            warranty_date: 0, \n            status_deadline: 0,\n\n            ad_campaign_id: 1,\n            branch_id: 0,\n            status_id: 0,\n            client: {},\n            order_type_id: 1,\n            closed_by_id: 0,\n            created_by_id: 0,\n            manager_id: 0,\n            engineer_id: 0,\n            kindof_good:{},\n            brand: {},\n            subtype: {},\n            model: {},\n\n            operations: [],\n            parts: [],\n            attachments: [],\n            payments: [],\n\n            id_label: '',\n            prefix: '',\n            serial: '',\n            malfunction: '',\n            packagelist: '',\n            appearance: '',\n            engineer_notes: '',\n            manager_notes: '',\n            resume: '',\n            cell: '',\n\n            estimated_cost: 0,\n            missed_payments: 0,\n            discount_sum: 0,\n            payed: 0,\n            price: 0,\n            remaining: 0, \n            remaining_status: 0, \n            remaining_warranty: 0, \n\n            overdue: false,\n            status_overdue: false,\n            urgent: false,\n            warranty_measures: false,\n\n\n            equipments: [{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }],\n         }\n      }\n\n      \n      case 'EDIT_ORDER': {\n\n         return {\n            ...state, \n            edit: action.order.id,\n            created_at: action.order.created_at,\n            done_at: action.order.done_at,\n            closed_at: action.order.closed_at,\n            assigned_at: action.order.assigned_at,\n            duration: action.order.duration,\n            estimated_done_at: action.order.estimated_done_at,\n            scheduled_for: action.order.scheduled_for,\n            warranty_date: action.order.warranty_date, \n            status_deadline: action.order.status_deadline,\n\n            ad_campaign_id: action.order.ad_campaign.id,\n            branch_id: action.order.branch.id,\n            status: action.order.status,\n            client: action.order.client,\n            order_type_id: action.order.order_type.id,\n            closed_by_id: action.order.closed_by_id,\n            created_by_id: action.order.created_by_id,\n            manager_id: action.order.manager_id,\n            engineer_id: action.order.engineer_id,\n            kindof_good: action.order.kindof_good,\n            brand: action.order.brand,\n            subtype: action.order.subtype,\n            model: action.order.model,\n\n            operations: action.order.operations,\n            parts: action.order.parts,\n            attachments: action.order.attachments,\n            payments: action.order.payments,\n\n            id_label: action.order.id_label,\n            prefix: action.order.prefix,\n            serial: action.order.serial,\n            malfunction: action.order.malfunction,\n            packagelist: action.order.packagelist,\n            appearance: action.order.appearance,\n            engineer_notes: action.order.engineer_notes,\n            manager_notes: action.order.manager_notes,\n            resume: action.order.resume,\n            cell: action.order.cell,\n\n            estimated_cost: action.order.estimated_cost,\n            missed_payments: action.order.missed_payments,\n            discount_sum: action.order.discount_sum,\n            payed: action.order.payed,\n            price: action.order.price,\n            remaining: action.order.remaining,\n            remaining_status: action.order.remaining_status,\n            remaining_warranty: action.order.remaining_warranty,\n\n            overdue: action.order.overdue,\n            status_overdue: action.order.status_overdue,\n            urgent: action.order.urgent,\n            warranty_measures: action.order.warranty_measures\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clients: [],\n\n    juridical: false,\n    supplier: false,\n    conflicted: false,\n    should_send_email: false,\n    deleted: false,\n\n    name: '',\n    name_doc: '',\n    email: '',\n    address: '',\n    phone: [{\n        title: 'Мобильный',\n        number: '',\n        notify: false\n    }],\n    ad_campaign_id: 1,\n    discount_code: '',\n    discount_goods: 0,\n    discount_goods_margin_id: 1,\n    discount_materials: 0,\n    discount_materials_margin_id: 1,\n    discount_services: 0,\n    discount_service_margin_id: 0,\n    notes: '',\n    tags: [],\n\n    ogrn: '',\n    inn: '',\n    kpp: '',\n    juridical_address: '',\n    director: '',\n    bank_name: '',\n    settlement_account: '',\n    corr_account: '',\n    bic: '',\n\n    discount_good_type: false,\n    discount_materials_type: false,\n    discount_service_type: false,\n\n    tabs: 0,\n    phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n    statusPhoneList: [false],\n    statusAddTitle: [false],\n\n    page: 0,\n    filter_name: '',\n    filter_phone: ''\n\n}\n\nexport const clientReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_CLIENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_CLIENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SET_CLIENT_CHECKBOX': {\n\n            if (action.value === 'change') {\n                return {\n                    ...state,\n                    [action.field]: !state[action.field]\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: action.value\n                }\n            }\n        }\n\n\n        case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n            let phones = state.phone\n            phones[action.idx].number = action.value\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n        case 'ADD_PHONE_COUNTER': {\n\n            return {\n                ...state,\n                phone: state.phone.concat([{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }]),\n                statusPhoneList: state.statusPhoneList.concat([false])\n            }\n        }\n\n        case 'DELETE_COUNT_NUMBER': {\n\n            let phones = state.phone\n            phones.splice(action.idx, 1)\n            const statusPhones = state.statusPhoneList\n            statusPhones.splice(action.idx, 1)\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n\n        case 'SET_PHONE_NOTIFY': {\n\n            let phones = state.phone\n            phones[action.idx].notify = !phones[action.idx].notify\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n\n        case 'SET_PHONE_TITLE': {\n\n            let phones = state.phone\n            phones[action.idx].title = action.title\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n        case 'CHANGE_STATUS_PHONE_LIST': {\n\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = false\n\n            return {\n                ...state,\n                statusPhoneList: statusPhones,\n                statusAddTitle: statusTitle\n            }\n        }\n\n\n        case 'CHANGE_STATUS_ADD_TITLE': {\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = !statusTitle[action.idx]\n\n            return {\n                ...state,\n                statusAddTitle: statusTitle\n            }\n        }\n\n        case 'SET_AD_CANMPAIGN_CLIENT': {\n\n            return {\n                ...state,\n                ad_campaign_id: action.id\n            }\n        }\n\n        case 'ADD_CLIENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_CLIENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n        case 'RESET_DATA_CLIENT': {\n            return {\n                ...state,\n                juridical: false,\n                supplier: false,\n                conflicted: false,\n                should_send_email: false,\n                deleted: false,\n\n                name: '',\n                name_doc: '',\n                email: '',\n                address: '',\n                phone: [{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }],\n                ad_campaign_id: 1,\n                discount_code: '',\n                discount_goods: 0,\n                discount_goods_margin_id: 1,\n                discount_materials: 0,\n                discount_materials_margin_id: 1,\n                discount_services: 0,\n                discount_service_margin_id: 0,\n                notes: '',\n                tags: [],\n\n                ogrn: '',\n                inn: '',\n                kpp: '',\n                juridical_address: '',\n                director: '',\n                bank_name: '',\n                settlement_account: '',\n                corr_account: '',\n                bic: '',\n\n                discount_good_type: false,\n                discount_materials_type: false,\n                discount_service_type: false,\n\n                edit: 0,\n                tabs: 0,\n                statusPhoneList: [false],\n                statusAddTitle: [false]\n\n            }\n        }\n\n        case 'CHANGE_CLIENT_TABS': {\n\n            return {\n                ...state,\n                tabs: action.tab\n            }\n        }\n\n\n        case 'EDIT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id\n            }\n        }\n\n\n        case 'EDIT_CURRENT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id,\n                tabs: 1\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n\nexport const icon_filter = 'M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z'\n\nexport const icon_cross = 'M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z'\n\nexport const icon_cancel = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z M21 8l-5 5-5-5-3 3 5 5-5 5 3 3 5-5 5 5 3-3-5-5 5-5z'\n","import { icon_location } from \"../../data/icons\"\n\nconst initialState = {\n   name: '',\n   address: '',\n   phone: '',\n   color: 'grey',\n   icon: icon_location,\n   orders_type_id: 1,\n   orders_type_strategy: 'last',\n   orders_prefix: 'OTS',\n   documents_prefix: 'A',\n   employees: [],\n   deleted: false,\n   schedule: [\n      {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 1\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 2\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 3\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 4\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 5\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 6\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 7\n      },\n   ],\n\n   edit: 0,\n   showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BRANCH_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_SCHEDULE': {\n\n         let list_schedule = state.schedule\n         list_schedule[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            schedule: list_schedule\n         }\n      }\n      \n      case 'SET_BRANCH_EMPLOYEE': {\n         if (action.id.every(id => state.employees.includes(id))) {\n            return {\n               ...state, \n               employees: state.employees.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n            }\n         }\n      }\n\n      case 'RESET_BRANCH': {\n\n         return {\n            ...state, \n            name: '',\n            address: '',\n            phone: '',\n            color: 'grey',\n            icon: icon_location,\n            orders_type_id: 1,\n            orders_type_strategy: 'last',\n            orders_prefix: 'OTS',\n            documents_prefix: 'A',\n            employees: [],\n            deleted: false,\n            schedule: [\n               {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 1\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 2\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 3\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 4\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 5\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 6\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 7\n               },\n            ],\n\n            edit: 0\n         }\n      }\n\n      \n      case 'EDIT_BRANCH': {\n\n         return {\n            ...state, \n            name: action.branch.name,\n            address: action.branch.address,\n            phone: action.branch.phone,\n            color: action.branch.color,\n            icon: action.branch.icon,\n            orders_type_id: action.branch.orders_type_id,\n            orders_type_strategy: action.branch.orders_type_strategy,\n            orders_prefix: action.branch.orders_prefix,\n            documents_prefix: action.branch.documents_prefix,\n            employees: action.branch.employees,\n            deleted: action.branch.deleted,\n            schedule: action.branch.schedule,\n\n            edit: action.branch.id\n         }\n      }\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_BOOK_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","const now = new Date()\n\nconst initialState = {\n    edit: 0,\n    sum: 0,\n    title: '',\n\n    cashflow_category: '',\n    description: '',\n\n    deposit: 0,\n    income: 0,\n    outcome: 0,\n    direction: 0,\n\n    can_print_fiscal: false,\n    deleted: false,\n    is_fiscal: false,\n\n    created_at: 0,\n    custom_created_at: null,\n\n    tags: [],\n\n    relation_id: null,\n    cashbox_id: 0,\n    client_id: 0,\n    employee_id: 0,\n    order_id: 0,\n    target_cashbox_id: 0,\n\n    cashbox: {},\n    client: {},\n    employee: {},\n    order: {},\n\n    filter_created_at: [\n        parseInt(now.setHours(0, 0, 0, 0) / 1000),\n        parseInt(now.setHours(23, 59, 59, 999) / 1000)\n    ],\n    filter_tags: [],\n\n    current_type: 0,\n    context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_PAYMENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value,\n            }\n        }\n\n        case 'CHANGE_PAYMENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'CHOOSE_PAYMENT_SELECTED': {\n            if (action.id.every(id => state[action.field].includes(id))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n                }\n            }\n        }\n\n        case 'ADD_PAYMENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_PAYMENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n\n        case 'RESET_PAYMENTS': {\n\n            return {\n                ...state,\n                edit: 0,\n                sum: 0,\n                title: '',\n\n                cashflow_category: '',\n                description: '',\n\n                deposit: 0,\n                income: 0,\n                outcome: 0,\n                direction: 0,\n\n                can_print_fiscal: true,\n                deleted: false,\n                is_fiscal: false,\n\n                created_at: 0,\n                custom_created_at: 0,\n\n                tags: [],\n\n                cashbox_id: 0,\n                client_id: 0,\n                employee_id: 0,\n                order_id: 0,\n                target_cashbox_id: 0,\n\n                context: {}\n            }\n        }\n\n        case 'SET_PAYMENT': {\n\n            return {\n                ...state,\n                edit: action.payment.id,\n\n                cashflow_category: action.payment.cashflow_category,\n                description: action.payment.description,\n\n                deposit: action.payment.deposit,\n                income: action.payment.income,\n                outcome: action.payment.outcome,\n                direction: action.payment.direction,\n\n                can_print_fiscal: action.payment.can_print_fiscal,\n                deleted: action.payment.deleted,\n                is_fiscal: action.payment.is_fiscal,\n\n                created_at: action.payment.created_at,\n                custom_created_at: action.payment.custom_created_at,\n\n                tags: action.payment.tags,\n\n                cashbox: action.payment.cashbox,\n                client: action.payment.client,\n                employee: action.payment.employee,\n                order: action.payment.order,\n                target_cashbox_id: action.payment.target_cashbox_id,\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n       \n      //  case 'CHOOSE_EMPLOYEE_SELECTED': {\n      //     if (action.value.every(val => state[action.field].includes(val))) {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n      //        }\n      //     } else {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n      //        }\n      //     }\n      //  }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const now = new Date()\n\nconst initialState = {\n\n   edit: 0,                   // id при редактировании\n\n   description: '',              // Описание\n   income: 0,                    // Входящяя сумма\n   outcome: 0,                   // Иcходящая сумму\n   direction: 0,                 // Направление платежа\n   deleted: false,               // Платеж удален\n   reimburse: false,             // Совершен возврат\n   created_at: null,             // Дата создания\n   custom_created_at: null,      // Дата установленая пользователем\n   relation_type: 0,             // Тип начисления\n   relation_id: 0,               // id связанного события\n   employee_id: 0,               // Сотрудник\n   order_id: null,               // Заказ\n\n   setted_employee: 0,           // Выбранный сотрудник\n\n   filter_created_at: [\n      parseInt(now.setHours(0, 0, 0, 0) / 1000),\n      parseInt(now.setHours(23, 59, 59, 999) / 1000)\n   ],\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_PAYROLL_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'CHANGE_PAYROLL_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,\n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null            \n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n        thunk\n    ),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store","import store from \"./store\"\n\nfunction getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${state.data.token}`,\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n\nfunction bad_request(massage = '') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return {type: 'LOGUOT'}\n}\n\nexport function loginAction(token) {\n    return {\n        type: 'LOGIN',\n        token,\n    }\n}\n\nexport function loguotAction() {\n    return {\n        type: 'LOGUOT'\n    }\n}\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\n\nexport function changeClientListFilter() {\n    return {\n        type: 'CHANGE_CLIENT_LIST_FILTER'\n    }\n}\n\nexport function changeClientMainFilter(word) {\n    return {\n        type: 'CHANGE_CLIENT_MAINFILTER',\n        word\n    }\n}\n\n\n\nexport function changeCreateAtMainFilter(range) {\n    return {\n        type: 'CHANGE_CREATE_AT_MAINFILTER',\n        range\n    }\n}\n\n\nexport function changeStatusMenuRow(id) {\n    return {\n        type: 'CHANGE_STATUS_MENU_ROW',\n        id\n    }\n}\n\nexport function changeStatusSettingRow(id) {\n    return {\n        type: 'CHANGE_STATUS_SETTING_ROW',\n        id\n    }\n}\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\nexport function changeEmployeeTabs(tab) {\n    return {\n        type: 'CHANGE_EMPLOYEE_TAB',\n        tab\n    }\n}\n\nexport function changeEmployeEditorForm(value, field) {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_FORM',\n        value,\n        field\n    }\n}\n\nexport function changeEmployeeSelected(value, field) {\n    return {\n        type: 'CHOOSE_EMPLOYEE_SELECTED',\n        value,\n        field\n    }\n}\n\n\nexport function changeEmployeeEditorRoleOptions() {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS'\n    }\n}\n\n\nexport function setRoleEmployeeEdetor(role) {\n    return {\n        type: 'SET_ROLE_EMPLOYEE_EDITOR',\n        role\n    }\n}\n\nexport function changeShowDeleted() {\n    return {\n        type: 'CHANGE_SHOW_DELETED'\n    }\n}\n\n\nexport function editEmoloyee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmoloyee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function changeVisibleState( data ) {\n    return {\n        type: 'CHANGE_VISIBLE_STATE',\n        data\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\nexport function resetEquipment(idx, field) {\n    return {\n        type: 'RESET_EQUIPMENT',\n        idx,\n        field\n    }\n}\n\nexport function setOrderEquipment(idx, field, data) {\n    return {\n        type: 'SET_ORDER_EQUIPMENT',\n        idx,\n        field,\n        data\n    }\n}\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeBranchForm(field, value) {\n    return {\n        type: 'CHANGE_BRANCH_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return dispatch => {\n        dispatch({\n            type: 'EDIT_BRANCH',\n            branch\n        })\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusBranchEditor',\n            value: true\n        })\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\n\nexport function changeCashboxForm(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_FORM',\n        field,\n        value\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function activeCashbox(id) {\n    return {\n        type: 'ACTIVE_CASHBOX',\n        id\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\n\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        email: login,\n        password\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/login', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    sessionStorage.setItem('1xsndt', data.access_token);\n                    sessionStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'user',\n                        data: data.user,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'login_status',\n                        data: true,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'token',\n                        data: data.access_token,\n                    })\n                } else {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'error_message',\n                        data: data.message,\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос авторизации не выполнен'))\n    }\n}\n\n\n// Client ================================================================================================================\n\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function seveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов изделий не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на удаление роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'generally_info',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.branch,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'order_type',\n                        data: data.order_type,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.counts,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ad_campaign',\n                        data: data.ad_campaign,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'status_group',\n                        data: data.status_group,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.cashboxes,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.service_prices,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос счетчиков не выполнен'))\n    }\n}\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос флиалов не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статей плтатежей не выполнен'))\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_FORM',\n                        field: 'current_cashbox',\n                        value: data.data.filter(cashbox =>\n                            !cashbox.deleted &&\n                            cashbox.employees[state.data.user.id].available &&\n                            (cashbox.branch_id === (state.data.current_branch ? state.data.current_branch.id : false) || cashbox.isGlobal)\n                        )[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function seveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuRow } from '../../Redux/actions'\n\n\nfunction MenuRow(props) {\n  return (\n    <Link \n      className=\"menuRow\" \n      to={props.row.url}\n      style={props.menuRows.find(row => row.id === props.row.id).active ? {\n        backgroundColor: '#53585c',\n        borderLeftColor: props.current_branch.color \n      } : null}\n      onClick={() => props.changeStatusMenuRow(props.row.id)}\n    >\n      {props.row.image === 'task' ? (\n        <div className=\"taskNumber\">\n          <span className=\"taskNumber1\">8</span>\n        </div>\n      ) : (\n        <svg className=\"sidebarIcon\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n        </svg>\n      )}\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n  menuRows: state.data.menuRows,\n  current_branch: state.data.current_branch\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\n\n\n\nfunction LogoUser() {\n    \n    return (\n        <div className = 'avatar'> \n        \n            <img \n                src = {`${process.env.PUBLIC_URL}/data/avatars/ava.jpeg`}\n                className = 'imgAvatar' \n                alt = 'User avatar' \n            />\n        </div>\n    )\n    \n}\n\nexport default LogoUser;\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addData } from '../../Redux/actions'\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n   const [menuVisibel, setMenuVisibel] = useState(false)\n\n   return (\n      <div>\n      <div \n         className='menuBranch'\n         onClick={() => setMenuVisibel(!menuVisibel)}\n      >\n         <Icon \n            className='smalIcon'\n            icon={props.current_branch.icon} \n            color={props.current_branch.color}\n         />\n         <div className='sidebarBranch'>\n           {props.current_branch.name}\n         </div>\n      </div>\n      {menuVisibel ? <div className='listOptionsBranch'>\n         {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n            <div \n               key={branch.id}\n               className='listBranch'\n               onClick={() => {\n                  props.addData(branch, 'current_branch')\n                  setMenuVisibel(false)\n               }}\n            >\n               <Icon \n                  className='smalIcon'\n                  icon={branch.icon} \n                  color={branch.color}\n               />\n               <div className='ml5'>{branch.name}</div>\n            </div>\n         ))}\n      </div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_branch: state.data.current_branch,\n   branches: state.data.branches,\n   user_id: state.data.user.id\n   })\n\nconst mapDispatchToProps = {\n   addData\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.data.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nexport function bad_request(massage='') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return { type: 'LOGUOT' }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeFilterForm( value, field ) {\n    return {\n        type: 'CHANGE_FILTER_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeFilterState( data ) {\n    return {\n        type: 'CHANGE_FILTER_STATE',\n        data\n    }\n}\n\n// export function editFilter(filter) {\n//     return {\n//         type: 'EDIT_FILTER',\n//         filter\n//     }\n// }\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function resetTempFilter() {\n    return {\n        type: 'RESET_TEMP_FILTER'\n    }\n}\n\n\nexport function selectedFilter( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_FILTER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function addBadges() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_access: !state.data.user.role.orders_visibility ? state.data.user.id : null,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function createCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.filter.title,\n        general: state.filter.general,\n        employee_id: state.data.user.id,\n        filters: {\n            page: 0,\n            engineer_id: state.filter.temp_engineers.length ? state.filter.temp_engineers : null,\n            overdue: null,\n            status_id: state.filter.temp_statuses.length ? state.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: state.filter.temp_order_types.length ? state.filter.temp_order_types : null,\n            manager_id: state.filter.temp_managers.length ? state.filter.temp_managers : null,\n            created_at: state.filter.temp_created_at.some(date => date) ? state.filter.temp_created_at : null,\n            kindof_good: state.filter.temp_kindof_good_id,\n            brand: state.filter.temp_brand,\n            subtype: state.filter.temp_subtype,\n            client_id: Object.values(state.filter.temp_client).length ? [state.filter.temp_client.id] : null\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n\n    }\n}\n\n\nexport function deleteFilter() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.filter.active_filter,\n        employee_id: state.data.user.id\n    })\n    request_config.method = 'DELETE'\n\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {\n                            customFilters: data.data,\n                            active_filter: 0\n                        }\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\nconst Header = props => {\n\n   const [search, setSearch] = useState('')\n\n    const handleChange = event => {\n        setSearch(event.target.value)\n        if (!search) props.changeFilterState({search: ''})\n    }\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if(!props.filter.active_badge) props.resetFilter()\n        if (event.key === 'Enter') props.changeFilterState({search})\n    }\n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => handleChange(event)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\n// function MainFilter({data: {color, title, count, img, filters}, activeBadge}) {\nconst MainFilter = props => {\n\n    const handleChoose = () => {\n        if (props.active_badge !== props.badge.id) {\n            props.changeFilterState({\n                ...props.badge.filter,\n                active_badge: props.badge.id,\n                active_filter: 0\n            })\n        } else {\n            props.resetFilter()\n        }\n    }\n\n    return (\n        <div\n            className='mainFilter'\n            style={{\n                backgroundColor: props.badge.color,\n                opacity: props.active_badge === props.badge.id || props.active_badge === 0 ? 1 : 0.3\n            }}\n            onClick={handleChoose}\n        >\n            <div className='pd5'>\n                <Icon icon={props.badge.icon} className='icon-s25' color='white'/>\n            </div>\n            <div className='filterName'>\n                <div className='filterName-value'>\n                    {props.badge.count} {props.badge.count === 1 ? 'заказ' : ((props.badge.count < 5) ? 'заказа' : 'заказов')}\n                </div>\n                <div className='filterName-title'> {props.badge.title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    active_badge: state.filter.active_badge\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainFilter);","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport MainFilter from './MainFilter'\n\nconst Filters = props => {\n\n    return (\n        <div className='mainFilters'>\n            {props.badges.map(badge => (\n                    badge.count ? <MainFilter badge={badge} key={badge.id}/> : null\n                ))\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.filter.badges\n})\n\nexport default connect(mapStateToProps)(Filters)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        created_by_id: state.data.user.id,\n        branch_id: state.data.current_branch.id,\n        status_id: 1,\n\n        equipments: state.order.equipments,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost\n    })\n\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderEditor',\n            value: false\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config1)\n            .then(response => response.json())\n            .then(data => {\n                if(state.view.checkOrderSticker) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderSticker',\n                        value: true\n                    })\n                }\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig(request_config2))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ordersShow',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count',\n                        data: data.count\n                    })\n                    dispatch({\n                        type: 'RESET_ORDER'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        id: order_id,\n        status_id: status_id\n    })\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    const request_config3 = getRequestConfig({id: state.order.edit})\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config1)\n            .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        if (state.order.edit) {\n            await fetch(state.data.url_server + '/get_orders', request_config3)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0],\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client_id: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good: state.order.kindof_good.id,\n        brand: state.order.brand.id,\n        subtype: state.order.subtype.id,\n        model: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good: state.filter.kindof_good,\n        brand: state.filter.brand,\n        subtype: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config1)\n            .catch(() => bad_request('Запрос на изменение заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {'statusOrderLoader': false}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function changeBookState(data) {\n    return {\n        type: 'CHANGE_BOOK_STATE',\n        data\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n            title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.data.branches.map(branch => branch.id),\n            deleted: false,\n            filter: {\n                title,\n                deleted: state.book.showDeleted\n            }\n        })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(idx, title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.equipments[idx].kindof_good.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.equipments[idx].brand.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.equipments[idx].subtype.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_type,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = ({data: { created_by_id, created_at}, employees}) => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Lable = ({data: {id_label, urgent}}) => {\n   return (\n      <td className=\"orderLabel tableRow\">\n         <span className={urgent ? 'fire-text': null}>{ id_label }</span>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = ({data : {estimated_done_at, overdue, status, remaining }}) => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 24) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!overdue && status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(remaining, status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\n\n\nfunction TableHeader(props) {\n\n    //  let startDrag = 0\n    //  let endDrag = 0\n    //  let deltaDrag = 0\n\n\n    //  function handleDragStart(event) {\n    //     startDrag = event.pageX\n\n\n    //  }\n\n    //  function handleDragEnd(event) {\n    //     endDrag = event.pageX\n    //     deltaDrag = endDrag - startDrag\n    //     console.log('отрезок :', deltaDrag)\n    //     const currentSize = parseInt(tableOrdersHeaders.find(header => header.field === data.field).width)\n    //     resizeOrderHeader(data.field,  currentSize + deltaDrag)\n\n    //  }\n\n\n    return (\n        <>\n            <th\n                className='tableColumnHeader'\n                style={{minWidth: `${props.data.width}px`}}\n                onClick={() => props.changeFilterState({\n                    field_sort: props.data.field,\n                    sort: props.filter.sort === 'asc' ? 'desc' : 'asc'\n                })}\n            >\n                {props.data.title}\n                <span>\n        {props.filter.field_sort === props.data.field ? (props.filter.sort === 'asc' ? '↓' : '↑') : null}\n      </span>\n            </th>\n            {/* <th\n    className = 'cursorResizeTable'\n    onDragStart = {handleDragStart}\n    onDragEnd = {handleDragEnd}\n    /> */}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changePaymentForm(value, field) {\n    return {\n        type: 'CHANGE_PAYMENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changePaymentState( data ) {\n    return {\n        type: 'CHANGE_PAYMENT_STATE',\n        data\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.data.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    const request_config = getRequestConfig({\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: state.payment.income,\n        outcome: -state.payment.outcome,\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at ? state.payment.custom_created_at : now,\n        tags: state.payment.tags,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    })\n\n    const request_config_2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n        if (context.type === 'payment') {\n            await fetch(state.data.url_server + '/get_payments', request_config_2)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'payments',\n                            data: data.data,\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос платежей не выполнен'))\n\n            await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'cashboxes',\n                            data: data.data,\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос касс не выполнен'))\n        }\n\n        if (context.type === 'order') {\n            fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0]\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order') {\n            const request_config3 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config4 = getRequestConfig(state.filter.mainFilter)\n\n            await fetch(state.data.url_server + '/change_order_status', request_config3)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config4)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_ORDERS_SHOW',\n                            ordersShow: data.data,\n                            count: data.count\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order_editor') {\n            const request_config5 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config6 = getRequestConfig({\n                id: context.order_id\n            })\n\n            await fetch(state.data.url_server + '/change_order_status', request_config5)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config6)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0],\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n        }\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: state.payment.filter_created_at,\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.payment.edit,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление платежа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_payments', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPaymentsCard',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PAYMENTS'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, changeVisibleState} from '../../Redux/actions'\nimport { changePaymentState} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentState({\n                direction: income ? 2 : 1,\n                [income ? 'income': 'outcome']: Math.abs(props.order.missed_payments),\n                client_id: props.order.client.id,\n                description: income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`,\n                cashflow_category: income ? 2 : 8,\n                employee_id: props.current_user_id,\n                order_id: props.order.edit || props.order.id,\n                context: {\n                    type: props.order.edit ? 'closed_order_editor' : 'closed_order',\n                    order_id: props.order.edit || props.order.id,\n                    status_id: status.id\n                }\n            })\n            props.editCurrentClient(props.order.client)\n            props.changeVisibleState({'statusPaymentsEditor': true})\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentState,\n    changeVisibleState,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.data.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.data.id)}\n            >\n                {props.data.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.data.id]] ? <StatusList order={props.data}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Brand = ({data: {brand}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {brand.title}\n     </span>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Brand)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = ({data: {kindof_good}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {kindof_good}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Malfunction = ({data: {malfunction}}) => {\n   return (\n    <td>\n      <div className=\"tableText tableOne\">\n         {malfunction}\n      </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Engineer = ({data: {engineer_id}, employees}) => {\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n\n   return (\n     <td>\n     <div>\n        {getEmploeeName(engineer_id)}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\nconst optionsShowRangeDate = {\n   year: 'numeric',\n   month: 'numeric',\n   day: 'numeric'\n}\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 9)}-${phone.slice(9, 11)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function showRangeDate (range_date) {\n   const first = new Date(range_date[0] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   const second = new Date(range_date[1] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   return `${first} - ${second}`\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = ({data: {client}}) => {\n   return (\n      <td>\n      <div className=\"tableClientName\">{client.name}</div>\n      <div className=\"orderDate\">{showPhone(client.phone[0].number)}</div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = ({data: {price}}) => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{price ? price : null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = ({data: {engineer_notes}}) => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = ({ data }) => {\n   return (\n     <td>\n         <div className=\"tableText row\">\n            <div>\n               <img\n                  className=\"icon_equipment\"\n                  src={data.kindof_good.icon}\n               />\n            </div>\n            <div>\n               <div className='noWr'>\n                  {data.kindof_good.icon ? null : <span className=\"\">{data.kindof_good.title}</span>}\n                  <span className=\"ml5\">{data.brand.title}</span>\n               </div>\n               <div className='noWr'>\n                  <span>{data.subtype.title}</span>\n                  <span className=\"orderDate ml5\">{data.model.title}</span>\n               </div>\n            </div>\n         </div>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Equipment)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeClientState( data ) {\n    return {\n        type: 'CHANGE_CLIENT_STATE',\n        data\n    }\n}\n\n\nexport function addClients() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.client.page,\n        name: state.client.filter_name,\n        phone: state.client.filter_phone\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CLIENT_STATE',\n                        data: {clients: data.data}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентов не выполнен'))\n    }\n}\n\nexport function addClientToTempFilter(id) {\n\n    const state = store.getState()\n\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (data.count) {\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {temp_client: data.data[0]}\n                        })\n                    }\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентa не выполнен'))\n\n    }\n}\n\n/*\nexport function editTemple(temple) {\n    return {\n        type: 'EDIT_TEMPLE',\n        temple\n    }\n}\n\nexport function resetTemple() {\n    return {\n        type: 'RESET_TEMPLE'\n    }\n}\n\n\nexport function selectedTemple( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_TEMPLE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addTemple() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_temple', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function createTemple() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на создание temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n\n\nexport function saveTemple() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на изменение temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.temple.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n*/","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.invisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// invisible={false}","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.invisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (current ? `${current.last_name} ${current.first_name}` : 'не назначен') :\n               (current ? (current.title || current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   invisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.invisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport {icon_trush} from '../../../data/icons'\nimport {valueOfPhoneInput} from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n    const handleChange = (idx, event) => {\n        const out = event.target.value.replace(/[^0-9]/g, '')\n        if (out.length < 12) props.changeClientEditorPhone(idx, out)\n    }\n\n    return (\n        <div>\n            {props.client.phone.map((phone, idx) => (\n                <div key={idx}>\n                    <PhoneTitle idx={idx} title={phone.title}/>\n\n                    <div className=\"inputPhoneBox\">\n                        <input\n                            className='textInput w250'\n                            onChange={event => handleChange(idx, event)}\n                            value={valueOfPhoneInput(phone.number)}\n                            onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n                            style={!props.view.inputClientPhoneChecked[idx] ? {borderColor: 'red'} : null}\n                        />\n                        {idx !== 0 ? (\n                            <div\n                                onClick={() => {\n                                    props.deleteCountNumber(idx)\n                                    props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                                }}\n                            >\n                                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                                    <path d={icon_trush}/>\n                                </svg>\n                            </div>\n                        ) : null}\n                    </div>\n                    {!props.view.inputClientPhoneChecked[idx] ? (\n                        <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n                    ) : null}\n                    <div className=\"checkbox mt5\">\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => props.setPhoneNotify(idx)}\n                            checked={phone.notify}\n                        />\n                        <label>Согласен получать SMS</label>\n                    </div>\n                </div>\n            ))}\n            <div\n                className=\"addPhone\"\n                onClick={() => {\n                    props.addPhoneCounter()\n                    props.addVisibleFlag('inputClientPhoneChecked')\n                }}\n            >\n                + Добавить телефон\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    client: state.client,\n    view: state.view,\n})\n\nconst mapDispatchToProps = {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx, props.tab_field ? props.tab_field : 'tabs')}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={props.changeClientForm}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { editCurrentClient, changeVisibleState} from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport {showPhone} from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\nimport {changeClientState} from '../../Redux/actions/clientAction'\n\nconst SetClientByName = (props) => {\n\n    const [showList, setShowList] = useState(false)\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n            !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n        ) {\n            setShowList(false)\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className='w400 h52'>\n\n            <div className='lableImput mt15'>Имя клиента</div>\n\n            <div className='blockImput'>\n                <div\n                    id='clientInputBoxOfPayments'\n                    className='orderInputBox'\n                    onClick={() => setShowList(true)}\n                >\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changeClientState({filter_name: event.target.value})}\n                    />\n                    <div\n                        className='simbolButton'\n                        onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                    >\n                        +\n                    </div>\n                    <div className='simbolButton'>&#6662;</div>\n                </div>\n\n                {showList ?\n                    <div className='listFilter' id='listClientsOfOfPayments'>\n                        {props.clients.map(client => (\n                            <div\n                                className='rowGropList'\n                                key={client.id}\n                                onClick={() => {\n                                    setShowList(false)\n                                    props.editCurrentClient(client)\n                                    props.changePaymentForm(client.id, 'client_id')\n                                }}\n                            >\n                                <div>{client.name}</div>\n                                <div className='orderDate'>\n                                    {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                </div>\n                            </div>\n                        ))}\n                    </div> : null}\n\n            </div>\n\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.filter.clientFilter.phone,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    changePaymentForm,\n    editCurrentClient,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payment.direction === 2 ? 'income' : 'outcome')}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order_editor' || props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.data.cashboxes\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React from 'react'\n\nconst CalendarTime = props => {\n    return props.invisible ? null : (\n        <div className='calandarTime'>\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            :\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default CalendarTime\n\n","\nimport React, {useState} from 'react'\n\nconst CalendarNavi = props => {\n\n\n    const [visibleInputYear, setVisibleInputYear] = useState(false)\n\n    const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n    const handleInputYear = (value) => {\n        let out = value.replace(/[^0-9]/g, '')\n        if (value > 9999) out = 9999\n        if (value < 0) out = 0\n        props.setCurrent_day(new Date(props.current_date.setFullYear(out)))\n    }\n\n    return (\n        <div>\n        <div className='calendarNavi'>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() - 1)))}\n            >\n                {'<'}\n            </div>\n\n            <div className='row'>\n                <div\n                    className='currMonth'\n                    onClick={() => props.setVisibleListMonth(!props.visibleListMonth)}\n                >\n                    <div>{months[props.current_date.getMonth()]}</div>\n                    <div className='gu'>&#6662;</div>\n                </div>\n\n                {visibleInputYear ?\n                    <input\n                        className='optionFilterInput w30'\n                        autoFocus\n                        onChange={event => handleInputYear(event.target.value)}\n                        value={props.current_date.getFullYear()}\n                        onBlur={() => setVisibleInputYear(false)}\n                    /> :\n                    <div\n                        className='pd5'\n                        onDoubleClick={() => setVisibleInputYear(true)}\n                    >\n                        {props.current_date.getFullYear()}\n                    </div>}\n                <div className='nextY'>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() + 1)))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() - 1)))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() + 1)))}\n            >\n                {'>'}\n            </div>\n        </div>\n        {props.visibleListMonth ?\n            <div className='monthList' id='monthList'>\n                    {months.map((month, idx) => (\n                        <div\n                            key={idx}\n                            className='month'\n                            onClick={() => {\n                                props.setCurrent_day(new Date(props.current_date.setMonth(idx)))\n                                props.setVisibleListMonth(!props.visibleListMonth)\n                            }}\n                        >\n                            {month}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\n\n\nexport default CalendarNavi","import React from 'react'\n\n\nconst CalendarOption = props => {\n\n    const chooseAllDate = () => {\n        props.func([0, 0])\n        props.setListVisible(false)\n    }\n\n    const chooseToday = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Устанавливаем время на конец дня\n        second.setHours(23, 59, 59, 999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день текущей недели\n        first.setTime(first.getTime() - (first.getDay() - 1 || 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день недели\n        // second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем первый день текущего месяца\n        first.setDate(1)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        // second.setMonth(first.getMonth() + 1)\n        // second.setDate(1)\n        // second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisYear = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало года\n        first.setMonth(0)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n\n    }\n\n    const chooseLastWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день прошлой недели\n        first.setTime(first.getTime() - ((first.getDay() - 1 || 7) + 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день прошлой недели\n        second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseLastMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем дату на начало прошлого месяца\n        first.setMonth(first.getMonth() - 1)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        second.setMonth(first.getMonth() + 1)\n        second.setDate(1)\n        second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseDate = () => {\n        props.setListVisible(false)\n        props.setVisibleCalendar(true)\n    }\n\n\n    return props.invisible ? null : (\n        <div\n            id='listCalendarOption'\n            className='listOptionsChoose'\n            style={{width: props.width}}\n        >\n            {props.allDate ? <div className='options' onClick={chooseAllDate}>Все время</div> : null}\n            <div className='options' onClick={chooseToday}>Сегодня</div>\n            <div className='options' onClick={chooseThisWeek}>Текущая неделя</div>\n            <div className='options' onClick={chooseThisMonth}>Текущий месяц</div>\n            <div className='options' onClick={chooseThisYear}>Текущий год</div>\n            <div className='options' onClick={chooseLastWeek}>Прошлая неделя</div>\n            <div className='options' onClick={chooseLastMonth}>Прошлый месяц</div>\n            <div className='options' onClick={chooseDate}>Выбрать даты</div>\n        </div>\n    )\n}\n\n\nexport default CalendarOption","import React, {useState, useEffect} from 'react'\n\n\nimport {showDate, showRangeDate} from '../utils'\n\nimport Icon from '../Icon'\nimport {icon_calendar} from '../../../data/icons'\nimport CalendarTime from './CalendarTime'\nimport CalendarNavi from './CalendarNavi'\nimport CalendarOption from './CalendarOption'\n\n\n/**\n *\n * title='title'\n *\n * className='className'\n *\n * width='100%'\n *\n * showTop={false}\n *\n * range={false}\n *\n * allDate={false}\n *\n * func={date => console.log(date)}\n *\n * current_date={props.current_date}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseDate = (props) => {\n\n    // Текущий день, от которого расчитвывается текущие показания календаря\n    const [current_date, setCurrent_day] = useState(new Date)\n    // Флаг - показать скрыть меню выбора месяца\n    const [visibleListMonth, setVisibleListMonth] = useState(false)\n    // Флаг - показать/скрыть календарь\n    const [visibleCalendar, setVisibleCalendar] = useState(false)\n    // Первый выбраный день из диапазона\n    const [firstDay, setFirstDay] = useState(0)\n    // Второй выбраный день (выбирается наводом курсора)\n    const [secondDay, setSecondDay] = useState(0)\n    // Меню выбора диапазона дат\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        // Скрываем меню выбора месяца при клику вне меню\n        if (!event.path.map(el => el.id).includes('monthList')) {\n            if (visibleListMonth) {\n                setVisibleListMonth(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('calendar')) {\n            if (visibleCalendar) {\n                setVisibleCalendar(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('listCalendarOption')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        // Добавим слушателя кликов и обработчик при создании компанента\n        window.addEventListener('click', clickHandel)\n        // и удалим слушателя при удалении компанента\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n\n    // Создаим объект даты из текущей выбранной дыты\n    let first = new Date(current_date)\n    // Утановим теущей дате 1 число\n    first.setDate(1)\n    // Отнимим от текущей даты количество дней равное дню недели (получим дату отсчета для отрисовки в поле календаря)\n    first.setTime(first.getTime() - (first.getDay() || 7) * 24 * 60 * 60 * 1000)\n\n    // создадим массив дней для отрисовки в поле календаря\n    let current_days = []\n    // Заполним массив днями приращивая по одному\n    for (let i = 0; i < 42; i++) {\n        current_days[i] = new Date(first.getTime() + 24 * 60 * 60 * 1000)\n        first.setTime(first.getTime() + 24 * 60 * 60 * 1000)\n    }\n\n    /**\n     *\n     * @param date1 - Объект Date\n     * @param date2 - Объект Date\n     * @returns {boolean} - true - если год, месяц и день совпадают, false - если нет\n     */\n    const compareDates = (date1, date2) => {\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n\n    /**\n     * Подготовка диапазона дат перед тем как вернуть данный диапазон\n     *\n     * @param date_range {array} - Массив из двух объектов Date\n     * @returns {array} - Массив из timestamp\n     */\n    const prepareRange = (date_range) => {\n        // Функция сортировки для метода sort\n        const sort_func = (a, b) => {\n            if (a > b) return 1\n            return -1\n        }\n        // Отсортируем в даты в порядке возрастания\n        let new_range = date_range.sort(sort_func)\n        // Установим время для первой даты\n        new_range[0].setHours(0, 0, 0, 0)\n        // Установим время для второй даты\n        new_range[1].setHours(23, 59, 59, 999)\n        // возвращаем новый дипазон\n        console.log(new_range)\n        return new_range\n    }\n\n    /**\n     * Обработчик события onClick дня каледара\n     * @param day {Object} - Объект Date\n     */\n    const handleChoose = (day) => {\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если еще не выбран первый день\n            if (!firstDay) {\n                // Обнуляем текущее значение в state приложения (чтобы не отображался выбраный диапазон на календаре)\n                props.func([0, 0])\n                // Устанавливаем первый день в state копмпонета\n                setFirstDay(day)\n            // Если первый день уже выбран\n            } else {\n                // Возвращаем предварительно подготовленные данные из компонента\n                props.func(prepareRange([firstDay, day]))\n                // Обнуляем первый день в state компонента\n                setFirstDay(0)\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // возвращаем выбранную дату\n            props.func(day)\n            // устанавливаем текущую дату в state компонента\n            setCurrent_day(new Date(day))\n        }\n\n    }\n\n    /**\n     * Очень запутанная функция для определения класса стилей для каждого отрисовываемого дня в календаре\n     *\n     * @param day {Object} - Объект Date\n     * @returns {string} - набор стилей для каждого отрисованного дня в календаре\n     */\n    const dayClassName = (day) => {\n        // Общий стиль для всег дней\n        const class1 = 'calendarDay'\n        // Стиль для дней за пределами отображаемого месяца\n        const class2 =  day.getMonth() === current_date.getMonth() ? '' : 'calgr'\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если сущестует уже выбранный диапазон\n            if (props.current_date && props.current_date[0] && props.current_date[1]) {\n                // Стиль для крайних дней уже выбранного диапазона дат\n                const class3 = compareDates(new Date(props.current_date[0] * 1000), day) ||\n                               compareDates(new Date(props.current_date[1] * 1000), day) ? 'settedDay' : ''\n                // Стиль для дня внутри уже выбранного диапазона дат\n                const class4 = props.current_date[0] < day/1000 && day/1000 < props.current_date[1] ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            // Если диапазон дат еще не выбран\n            } else {\n                // Функция для определения попадает ли день в выбираемый диапазон дат\n                const showSelected = (day) => {\n                    if (firstDay && secondDay) {\n                        return  firstDay/1000 < day/1000 && day/1000 <= secondDay/1000 ||\n                            firstDay/1000 > day/1000 && day/1000 >= secondDay/1000\n                    } else { return false }\n                }\n                // Стиль для первого выбрнного дня\n                const class3 = compareDates(firstDay || new Date(0), day) ? 'settedDay' : ''\n                // Стиль для ней попадающих в выбираемый диапазон\n                const class4 = showSelected(day) ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // Стиль для выбранной даты\n            const class3 = compareDates(new Date(props.current_date), day) ? 'settedDay' : ''\n            return [class1, class2, class3].join(' ')\n        }\n    }\n\n\n    const title = props.range ?\n        (props.current_date && props.current_date.some(date => date) ? showRangeDate(props.current_date) : 'Любая')\n        : showDate(props.current_date / 1000)\n\n    const handleChangeDate = () => {\n        if (props.range) {\n            setListVisible(true)\n        } else {\n            setVisibleCalendar(true)\n        }\n    }\n\n    return props.invisible ? <div/> :(\n        <div\n            className={props.className}\n            style={{width: props.width}}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='dateContaner'\n                onClick={handleChangeDate}\n            >\n                <Icon\n                    className='icon-s2 mlr5'\n                    icon={icon_calendar}\n                    color='gray'\n                />\n                <div>{title}</div>\n            </div>\n\n            <CalendarOption\n                width={props.width}\n                invisible={!listVisible}\n                allDate={props.allDate}\n                setListVisible={setListVisible}\n                setVisibleCalendar={setVisibleCalendar}\n                func={date => props.func(date)}\n            />\n\n\n            {visibleCalendar && !props.disabled ?\n                <div className={props.showTop ? 'calendar_top' : 'calendar_down'} id='calendar'>\n\n                    <CalendarNavi\n                        func={data => props.func(data)}\n                        current_date={current_date}\n                        setCurrent_day={setCurrent_day}\n                        setVisibleListMonth={setVisibleListMonth}\n                        visibleListMonth={visibleListMonth}\n                    />\n\n                    <div className='row'>\n                        {weekDays.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className='calendarWeekDay'\n                            >\n                                {day}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className='calendarDays'>\n                        {current_days.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className={dayClassName(day)}\n                                onClick={() => handleChoose(day)}\n                                onMouseOver={() => setSecondDay(day)}\n                                onMouseOut={() => setSecondDay(0)}\n                            >\n                                {day.getDate()}\n                            </div>\n                        ))}\n                    </div>\n\n                    <CalendarTime\n                        func={data => props.func(data)}\n                        current_date={props.current_date}\n                        invisible={props.range}\n                    />\n                </div> : null}\n\n        </div>\n    )\n}\n\nexport default ChooseDate","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addItemPayments, refreshDataOrder, changeStatusMenuVisible, changeVisibleState} from '../../Redux/actions'\nimport { addPaymentTag, deletePaymentTag, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\nimport {addClients} from '../../Redux/actions/clientAction'\n\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\nimport ChooseDate from '../general/calandar/ChooseDate'\n\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            'inputPaymentSumChecked': true,\n            'inputPaymentCashboxChecked': true,\n            'inputPaymentDescChecked': true,\n            'inputPaymentCashflowChecked': true,\n            'inputPaymentEmployeeChecked': true,\n            'statusPaymentsEditor': false,\n        })\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('344')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.changeVisibleState({'in}putPaymentSumChecked': false})\n            if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction))\n                props.changeVisibleState({'inputPaymentCashboxChecked': false})\n            if (!props.payment.description)\n                props.changeVisibleState({'inputPaymentDescChecked': false})\n            if (!props.payment.cashflow_category)\n                props.changeVisibleState({'inputPaymentCashflowChecked': false})\n            if (!props.payment.employee_id)\n                props.changeVisibleState({'inputPaymentEmployeeChecked': false})\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id) &&\n        !cashbox.deleted &&\n        (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentState({custom_created_at: null})\n                            }}\n                            func2={() => {\n                                setChooseData(true)\n                                props.changePaymentState({custom_created_at: parseInt(new Date() / 1000)})\n                            }}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        <ChooseDate\n                            className='h31'\n                            width='250px'\n                            func={date => props.changePaymentState({custom_created_at: parseInt(date / 1000)})}\n                            current_date={props.payment.custom_created_at * 1000}\n                            invisible={!chooseData}\n                        />\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                            close={() => props.changeVisibleState({client_id: 0})}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 0\n                                })\n                            }}\n                            func2={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 1\n                                })\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox => props.changePaymentState({[props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'] : cashbox})}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentState({description: event.target.value})}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={category => props.changePaymentState({cashflow_category: category})}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        invisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={employee => props.changePaymentState({employee_id: employee})}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    filter: state.filter,\n    client: state.client,\n    cashboxes: state.data.cashboxes,\n    current_branch_id: state.data.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.data.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    changeVisibleState,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/>\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.data.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, changeOrderFormS, changeVisibleState} from '../../../../Redux/actions'\nimport {showPhone} from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\nimport {changeClientState} from '../../../../Redux/actions/clientAction'\n\nconst SetClient = (props) => {\n\n    const [listClientsVisible, setListClientsVisible] = useState(false)\n    const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n        ) {\n            if (listClientsVisible) {\n                setListClientsVisible(false)\n            }\n        }\n    }\n\n    const clickHandel2 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n            !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n        ) {\n            if (listClientsPhoneVisible) {\n                setListClientsPhoneVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        window.addEventListener('click', clickHandel2)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n            window.removeEventListener('click', clickHandel2)\n        }\n    })\n\n\n    return (\n        <div className='cleintForm'>\n\n            <div className='formRow'>\n                <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n                <div className='blockImput'>\n                    <div\n                        id='orderInputBoxOfOrder'\n                        className='orderInputBox'\n                        onClick={() => setListClientsVisible(true)}\n                        style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => props.changeClientState({filter_name: event.target.value})}\n                            value={props.name}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n                    {props.view.checkedOrderClient ?\n                        <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n                    {listClientsVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrder'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n            </div>\n\n            <div className='formRow'>\n\n                <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n                <div className='blockImput'>\n\n                    <div\n                        id='orderInputBoxOfOrderPhone'\n                        className='orderInputBox'\n                        onClick={() => setListClientsPhoneVisible(true)}\n                    >\n                        <LableInput\n                            className='w100'\n                            inputClassName='optionFilterInput'\n                            onChange={value => props.changeClientState({filter_phone: value})}\n                            value={props.phone}\n                            isPhone={true}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n\n\n                    {listClientsPhoneVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsPhoneVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n\n            </div>\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.client.filter_phone,\n    name: state.client.filter_name,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleListFlag } from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleListFlag(props.checkedFlag, props.idx, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleListFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport {createEquipmentBrand, addEquipmentBrand, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderBrand = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand])\n\n\n    const edit = props.order.edit\n    const disabled = !Object.values(props.book.equipment_type).length\n    const brand = props.order.edit ? props.order.brand : props.order.equipments[props.idx].brand\n    const seted = !!Object.values(brand).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        if (edit) {\n            props.changeOrderFormS({}, 'brand')\n            props.changeOrderFormS({}, 'subtype')\n            props.changeOrderFormS({}, 'model')\n        } else {\n            props.resetEquipment(props.idx, 'brand')\n            props.resetEquipment(props.idx, 'subtype')\n            props.resetEquipment(props.idx, 'model')\n        }\n        props.changeBookState({equipment_brand: {}})\n    }\n\n    const setBrand = (idx, brand) => {\n        edit ? props.changeOrderFormS(brand, 'brand') : props.setOrderEquipment(idx, 'brand', brand)\n        props.changeBookState({equipment_brand: brand, filter_brand: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.setVisibleListFlag('checkedOrderBrand', props.idx, true)\n    }\n\n    return (\n        <div>\n            <button\n                id=\"optionsOrderTextOfBrand\"\n                style={!props.view.checkedOrderBrand[props.idx] ? {borderColor: 'red'} : null}\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder=\"Выбирете бренд\"\n                    value={seted ? brand.title : props.book.filter_brand}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderBrand[props.idx] ? (\n                <div className=\"errorMassageInput\">\n                    {'Необоходимо выбрать из списка'}\n                </div>\n            ) : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfBrand\">\n                    {props.book.equipment_brands.map(brand => (\n                        visibleBotton ? null :\n                            <div\n                                key={brand.id}\n                                className=\"rowGropList\"\n                                onClick={() => setBrand(props.idx, brand)}\n                            >\n                                {brand.title}\n                            </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                                onKeyPress={event => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentBrand(props.idx, event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_brand}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить бренд\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentBrand,\n    setOrderEquipment,\n    resetEquipment,\n    setVisibleListFlag,\n    changeOrderFormS,\n    addEquipmentBrand,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport {createEquipmentType, addEquipmentType, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderGroupe = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const edit = props.order.edit\n    // const types = edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good\n    const types = useMemo(() => edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good, [props.order.kindof_good, props.order.equipments[props.idx].kindof_good])\n    const seted = !!Object.values(types).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        if (edit) {\n            props.changeOrderFormS({}, 'kindof_good')\n            props.changeOrderFormS({}, 'brand')\n            props.changeOrderFormS({}, 'subtype')\n            props.changeOrderFormS({}, 'model')\n        } else {\n            props.resetEquipment(props.idx, 'kindof_good')\n            props.resetEquipment(props.idx, 'brand')\n            props.resetEquipment(props.idx, 'subtype')\n            props.resetEquipment(props.idx, 'model')\n        }\n        props.changeBookState({equipment_type: {}})\n    }\n\n\n    const setOrderType = (idx, equipment) => {\n        edit ? props.changeOrderFormS(equipment, 'kindof_good') : props.setOrderEquipment(idx, 'kindof_good', equipment)\n        props.changeBookState({filter_type: '', equipment_type: equipment})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    return (\n        <>\n\n            <button\n                className='optionsFilterText'\n                id='optionsOrderTextOfGroup'\n                onClick={() => setVisibleList(true)}\n                disabled={seted}\n                style={!props.view.checkedOrderKindofGood[props.idx] ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={seted ? types.title : props.book.filter_type}\n                    disabled={seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderKindofGood[props.idx] ?\n                <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n                {props.book.equipment_types.map(equipment => (\n                    visibleBotton ? null :\n                    <div\n                        key={equipment.id}\n                        className='rowGropList'\n                        onClick={() => setOrderType(props.idx, equipment)}\n                    >\n                        {equipment.title}\n                    </div>\n                ))}\n                <div className='btmsts'>\n                    {visibleBotton ?\n                        <input\n                            className='optionFilterInput'\n                            autoFocus\n                            onChange={event => props.changeBookState({filter_type: event.target.value})}\n                            onKeyPress={(event) => {\n                                if (event.key === 'Enter') {\n                                    props.createEquipmentType(event.target.value)\n                                    setVisisbleBotton(false)\n                                }\n                            }}\n                            onBlur={() => setVisisbleBotton(false)}\n                            value={props.book.filter_type}\n                            placeholder='Введите и нажмиете Enter'\n                        /> :\n                        <div\n                            className='btnstsTitle'\n                            onClick={() => setVisisbleBotton(true)}\n                        >\n                            Добавить тип\n                        </div>}\n                </div>\n\n            </div> : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentType,\n    setOrderEquipment,\n    resetEquipment,\n    setVisibleListFlag,\n    changeOrderFormS,\n    addEquipmentType,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, changeOrderFormS} from '../../../../Redux/actions'\nimport {createEquipmentModel, addEquipmentModel, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderModel = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model])\n\n    const edit = props.order.edit\n\n    const model = edit ? props.order.model : props.order.equipments[props.idx].model\n    const disabled = !Object.values(props.book.equipment_subtype).length\n    const seted = !!Object.values(model).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const setModel = (idx, model) => {\n        edit ? props.changeOrderFormS(model, 'model') : props.setOrderEquipment(idx, 'model', model)\n        props.changeBookState({equipment_model: model, filter_model: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    const reset = () => {\n        edit ? props.changeOrderFormS({}, 'model') : props.resetEquipment(props.idx, 'model')\n        props.changeBookState({equipment_model: {}})\n    }\n\n    return (\n        <>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfModel\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_model: event.target.value})}\n                    placeholder=\"Выбирете модель\"\n                    value={seted ? model.title : props.book.filter_model}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfModel\">\n                    {props.book.equipment_models.map((model) => (\n                        visibleBotton ? null :\n                        <div\n                            key={model.id}\n                            className=\"rowGropList\"\n                            onClick={() => setModel(props.idx, model)}\n                        >\n                            {model.title}\n                        </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_model: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentModel(props.idx, event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_model}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модель\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentModel,\n    setOrderEquipment,\n    resetEquipment,\n    changeOrderFormS,\n    addEquipmentModel,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, addEquipmentSubtype, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Subtype from './Subtype'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const edit = props.order.edit\n    const subtype = edit ? props.order.subtype : props.order.equipments[props.idx].subtype\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        if (edit) {\n            props.changeOrderFormS({}, 'subtype')\n            props.changeOrderFormS({}, 'model')\n        } else {\n            props.resetEquipment(props.idx, 'subtype')\n            props.resetEquipment(props.idx, 'model')\n        }\n        props.changeBookState({equipment_subtype: {}})\n\n    }\n\n    const setSubtype = (idx, subtype) => {\n        edit ? props.changeOrderFormS(subtype, 'subtype') : props.setOrderEquipment(idx, 'subtype', subtype)\n        props.changeBookState({equipment_subtype: subtype, filter_subtype: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.setVisibleListFlag('checkedOrderSubtype', props.idx, true)\n    }\n\n    return (\n        <>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype[props.idx] ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype[props.idx] ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => (\n                        visibleBotton ? null :\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(props.idx, subtype)}\n                            />\n                        )\n                    )}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(props.idx, event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_subtype}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    setOrderEquipment,\n    resetEquipment,\n    setVisibleListFlag,\n    changeOrderFormS,\n    addEquipmentSubtype,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n} from '../../../../Redux/actions'\nimport { icon_trush } from '../../../../data/icons'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\nimport { sortedIndex } from 'lodash'\n\nconst ChooseEquipment = (props) => {\n  return (\n    <div>\n      <div className=\"formRow mt15\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle\">Изделиe и неисправность</div>\n      </div>\n      {props.order.equipments.map((equipment, idx) => {\n        return (\n          <div className=\"orderDevice\" key={idx}>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Тип устройства<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderGroup idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Бренд<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderBrand idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Модуль / Серия<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderSubtype idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Модель</div>\n              <div className=\"blockImput\">\n                <SetOrderModel idx={idx} />\n              </div>\n            </div>\n            <LabelInputOrder\n              idx={idx}\n              className=\"formRow\"\n              title=\"Неисправность\"\n              name=\"malfunction\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'malfunction', event.target.value)\n              }\n              value={props.order.equipments[idx].malfunction}\n              checkedFlag=\"inputMalfunctionChecked\"\n              checked={props.view.inputMalfunctionChecked[idx]}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Комплектация\"\n              name=\"packagelist\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'packagelist', event.target.value)\n              }\n              value={props.order.equipments[idx].packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Внешинй вид\"\n              name=\"appearance\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'appearance', event.target.value)\n              }\n              value={props.order.equipments[idx].appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Срочно</div>\n              <div className=\"blockImput\">\n                <div className=\"checkbox pd-tb-5 al-itm-fs\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={(event) =>\n                      props.changeOrderForm(idx, 'urgent', event.target.checked)\n                    }\n                    checked={props.order.equipments[idx].urgent}\n                  />\n                  <label></label>\n                  <div\n                    className=\"whiteButton simbolBotton pz-r320\"\n                    onClick={() => props.deleteDevice(idx)}\n                  >\n                    <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                      <path d={icon_trush} />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n\n      <div className=\"formRow jc-c\">\n        <div\n          className=\"fs14 addPhone\"\n          onClick={() => props.addAnotherEquipment()}\n        >\n          + Устройство\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseEquipment)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS } from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n  return (\n    <div>\n\n      <div className='formRow mt15'>\n        <div className='optionsTitle'></div>\n        <div className='orderFormTitle'>Изделиe и неисправность</div>\n      </div>\n\n          <div className='orderDevice'>\n            \n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Тип устройства<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderGroup idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Бренд<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderBrand idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Модуль / Серия<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderSubtype idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>Модель</div>\n              <div className='blockImput'>\n                <SetOrderModel idx={0} />\n              </div>\n            </div>\n\n            <LabelInputOrder\n              idx={23}\n              className='formRow'\n              title='Неисправность'\n              name='malfunction'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'malfunction') }\n              value={props.order.malfunction}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Комплектация'\n              name='packagelist'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'packagelist')}\n              value={props.order.packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Внешинй вид'\n              name='appearance'\n              onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n              value={props.order.appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className='formRow'>\n              <div className='optionsTitle'>Срочно</div>\n              <div className='blockImput'>\n                <div className='checkbox pd-tb-5 al-itm-fs'>\n                  <input\n                    type='checkbox'\n                    onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                    checked={props.order.urgent}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                  />\n                  <label></label>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEquipment from './ChooseEquipment'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/calandar/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n  return (\n    <div>\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Рекламная компания</div>\n        <div className=\"blockImput\">\n          <ChooseOfList\n            id={14}\n            list={props.ad_campaign}\n            setElement={props.changeOrderFormS}\n            field='ad_campaign_id'\n            current_id={props.order.ad_campaign_id}\n            width={'250px'}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      {props.order.edit ? <ChooseSingleEquipment/> : <ChooseEquipment/>}\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n      </div>\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Заметки приемщика</div>\n        <div className=\"blockImput mh\">\n          <textarea\n            className=\"textInput\"\n            name=\"manager_notes\"\n            onChange={(event) =>\n              props.changeOrderFormS(event.target.value, 'manager_notes')\n            }\n            value={props.order.manager_notes}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      <LabelInputOrder\n        className=\"formRow\"\n        title=\"Ориетнировачная стоимость\"\n        name=\"estimated_cost\"\n        onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n        value={props.order.estimated_cost}\n        disabled={!props.permissions.includes('edit_info_orders')}\n      />\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Дата готовности</div>\n        <div className=\"blockImput\">\n          <ChooseDate\n              func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n              current_date={props.order.estimated_done_at * 1000}\n              disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n              showTop={true}\n              // range={true}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  ad_campaign: state.data.ad_campaign,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    // const price = state.order.client.discount_service_type ? (\n    //     state.data.service_prices.find(price =>\n    //         price.service_id === service.id &&\n    //         price.discount_margin_id === state.order.client.discount_service_margin_id\n    //     ).cost || 0\n    // ) : (service.price)\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               invisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * invisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n *\n * icon={icon} // Иконка\n *\n * iconClassName='iconClassName' // Класс иконки\n *\n * iconColor='black' // Цвет Иконки\n */\nconst Button = (props) => {\n   return props.invisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.invisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.invisible || props.disabled}\n      >\n          <div className='row'>\n              {props.icon ? <Icon icon={props.icon} className={props.iconClassName} color={props.iconColor}/> : null}\n              {props.title ? <div className='ml5'>{props.title}</div> : null}\n          </div>\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    invisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconColor: PropTypes.string\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на создание запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на изменение запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        invisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.data.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.data.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPayments = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {editCurrentClient, changeVisibleState} from '../../../../Redux/actions'\nimport { changePaymentState} from '../../../../Redux/actions/paymentAction'\n\nimport Button from '../../../general/Button'\nimport TableOrderPayments from './TableOrderPayments'\n\nconst OrderPayments = (props) => {\n\n   const handleIncome = () => {\n      props.changePaymentState({\n         direction: 2,\n         client_id: props.order.client.id,\n         description: `Оплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 2,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   const handleOutcome = () => {\n      props.changePaymentState({\n         direction: 1,\n         client_id: props.order.client.id,\n         description: `Выплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 8,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handleIncome }\n               invisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handleOutcome }\n               invisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPayments/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeVisibleState,\n   changePaymentState,\n   editCurrentClient,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.invisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// invisible={false}","import React, { useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {icon_down, icon_print} from '../../data/icons'\nimport Button from '../general/Button'\nimport Checkbox from '../general/Checkbox'\nimport {setVisibleFlag} from '../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div className='blockImput mwmc'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listFilter'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        invisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React, {useRef} from 'react'\nimport { connect } from 'react-redux'\nimport OrderPrint from './OrderPrint'\n\n\nconst OrderHistory = (props) => {\n\n\n    return (\n        <div className=\"orderHistory\">\n        <div className='row'>\n            <OrderPrint/>\n\n        </div>\n\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n\n                    <h1 className = 'tempTitle'>История</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  addDiscountMargin,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addDictService\n} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders} from '../../../Redux/actions/orderActions'\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\nimport {addClients} from '../../../Redux/actions/clientAction'\n\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\n// import * as PropTypes from 'prop-types'\nimport OrderHistory from '../OrderHistory'\n\n// function ComponentToPrint(props) {\n//   return null\n// }\n//\n// ComponentToPrint.propTypes = {ref: PropTypes.any}\n\nconst OrderEditor = (props) => {\n\n  useEffect(() => {\n    props.addClients()\n  }, [props.client.filter_name, props.client.filter_phone])\n\n  useEffect(() => {\n    props.addDiscountMargin()\n    props.addDictService()\n    props.resetBookEquipment()\n  }, [])\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusOrderEditor', false)\n    props.resetOrder()\n    props.setVisibleFlag('checkedOrderClient', false)\n    props.setVisibleListFlag('checkedOrderKindofGood', 0, true)\n    props.setVisibleListFlag('checkedOrderBrand', 0, true)\n    props.setVisibleListFlag('checkedOrderSubtype', 0, true)\n  }\n\n  const clickHandel = (event) => {\n    if (\n        !event.path.map((el) => el.id).includes('createNewOrder') &&\n        !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n    ) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  // useEffect(() => {\n  //   let sum = 0\n  //   props.order.payments.filter(payment => !payment.deleted).forEach(payment => {\n  //     sum += payment.income\n  //     sum += payment.outcome\n  //   })\n  //   props.changeOrderFormS(sum, 'payed')\n  // }, [props.order.payments])\n  //\n  // useEffect(() => {\n  //   let price = 0\n  //   let discount = 0\n  //   props.order.operations.filter(operation => !operation.deleted).forEach(operation => {\n  //     price += operation.total\n  //     discount += operation.discount_value\n  //   })\n  //   props.order.parts.filter(part => !part.deleted).forEach(part => {\n  //     price += part.total\n  //     discount += part.discount_value\n  //   })\n  //   props.changeOrderFormS(price, 'price')\n  //   props.changeOrderFormS(discount, 'discount_sum')\n  // }, [props.order.operations, props.order.parts])\n\n  \n\n  const handleCreate = () => {\n    if (\n      Object.values(props.order.client).length &&\n      props.order.equipments.every(\n        (equipment) =>\n          Object.values(equipment.kindof_good).length &&\n          Object.values(equipment.brand).length &&\n          Object.values(equipment.subtype).length &&\n          equipment.malfunction\n      )\n    ) {\n      props.createOrder()\n    } else {\n      if (!Object.values(props.order.client).length) {\n        props.setVisibleFlag('checkedOrderClient', true)\n      }\n      props.order.equipments.forEach((equipment, idx) => {\n        if (!Object.values(equipment.kindof_good).length) {\n          props.setVisibleListFlag('checkedOrderKindofGood', idx, false)\n        }\n        if (!Object.values(equipment.brand).length) {\n          props.setVisibleListFlag('checkedOrderBrand', idx, false)\n        }\n        if (!Object.values(equipment.subtype).length) {\n          props.setVisibleListFlag('checkedOrderSubtype', idx, false)\n        }\n        if (!equipment.malfunction) {\n          props.setVisibleListFlag('inputMalfunctionChecked', idx, false)\n        }\n      })\n    }\n  }\n\n  const handleSave = () => {\n    if (\n      Object.values(props.order.client).length &&\n      Object.values(props.order.kindof_good).length &&\n      Object.values(props.order.brand).length &&\n      Object.values(props.order.subtype).length\n      \n    ) {\n      props.saveOrder()\n    } else {\n      if (!Object.values(props.order.client).length) props.setVisibleFlag('checkedOrderClient', true)\n      if (!Object.values(props.order.kindof_good).length) props.setVisibleListFlag('checkedOrderKindofGood', 0, false)\n      if (!Object.values(props.order.brand).length) props.setVisibleListFlag('checkedOrderBrand', 0, false)\n      if (!Object.values(props.order.subtype).length) props.setVisibleListFlag('checkedOrderSubtype', 0, false)\n    }\n  }\n\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n        <div className=\"cteateNewOrderContent\">\n          \n          <div className=\"createOrderForm\">\n\n            <TitleOrderEditor/>\n            {props.order.edit ?\n              <div>\n                <Tabs\n                  list={ ['Информация о заказе', 'Работы и материалы', 'Платежи'] }\n                  func={props.changeOrderFormS}\n                  tab={props.order.tabs}\n                />\n                  {props.order.tabs === 0 ? <OrderInfo/> : null}\n                  {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                  {props.order.tabs === 2 ? <OrderPayments/> : null}\n                </div> : <OrderInfo/> }\n          </div>\n\n         <OrderHistory/>\n        </div>\n\n        <div className=\"boxOrderButtons\">\n          <BottomButtons\n            edit={ props.order.edit }\n            create={ handleCreate }\n            save={ handleSave }\n            // delete={() => props.deleteClient(props.client.edit)}\n            close={ handleClose }\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  filter: state.filter,\n  order: state.order,\n  client: state.client\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  createOrder,\n  changeOrderFormS,\n  resetOrder,\n  addDictService,\n  saveOrder,\n  addOrders,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\n\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { addOrders,editOrder } from '../../Redux/actions/orderActions'\nimport { initStatusMenuVisibleAction, setVisibleFlag } from '../../Redux/actions'\nimport { changeBookForm } from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './StikerToPrint'\n\n// const optionsShowDate = {\n//   year: 'numeric',\n//   month: 'long',\n//   day: 'numeric',\n//   hour: 'numeric',\n//   minute: 'numeric',\n//   // second: 'numeric'\n// }\n\n\nfunction TableOrders(props) {\n\n  \n\n  useEffect(() => {\n    let statusVis = {}\n    props.ordersShow.forEach((order) => {\n    statusVis[order.id] = false\n    })\n    props.initStatusMenuVisible(statusVis)\n  }, [props.ordersShow])\n\n  const handleEdit = (order) => {\n    props.editOrder(order)\n    props.changeBookForm(order.kindof_good, 'equipment_type')\n    props.changeBookForm(order.brand, 'equipment_brand')\n    props.changeBookForm(order.subtype, 'equipment_subtype')\n    props.changeBookForm(order.model, 'equipment_model')\n    props.setVisibleFlag('statusOrderEditor', true)\n  }\n  \n   \n\n  if (props.user.table_headers && props.employees) {\n    return (\n      <div className=\"tableOrders\">\n        <table className=\"tableOrders\">\n          <thead className=\"tableThead\">\n            <tr>\n              {Object.values(props.user.table_headers).map((header) => (\n                <TableHeader data={header} key={header.id}/>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {props.ordersShow.map((order) => (\n              <tr \n                key={order.id} \n                className=\"orderTableRows\"\n                onDoubleClick={ () => handleEdit(order)}\n              >\n                <Lable data = {order}/>\n                <Create data = {order}/>\n                <EstimatedDone data = {order}/>\n                <Status data = {order}/>\n                <Equipment data = {order}/>\n                {/* <KindOfGood data = {order}/> */}\n                <Brand data = {order}/>\n                <Malfunction data = {order}/>\n                <Engineer data = {order}/>\n                {props.permissions.includes('see_client') ? <Client data = {order}/> : <div/>}\n                <Price data = {order}/>\n                <EngineerNotes data = {order}/>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {props.view.statusOrderEditor ? <OrderEditor/> : null}\n        {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n        {props.view.statusOrderSticker ? <StikerToPrint onAfterPrint={() => props.setVisibleFlag('statusOrderSticker', false)}/> : null}\n\n      </div>\n    )\n  } else {\n    return <Loader />\n  }\n}\n\nconst mapStateToProps = state => ({\n  ordersShow: state.data.ordersShow,\n  employees: state.data.employees, \n  user: state.data.user,\n  view: state.view,\n  mainFilter: state.filter.mainFilter,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addOrders,\n  initStatusMenuVisible: initStatusMenuVisibleAction,\n  setVisibleFlag,\n  editOrder,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {addClientToTempFilter} from '../../Redux/actions/clientAction'\n\nconst CustomFilter = props => {\n\n    async function  handleChoose()  {\n        if (props.filter.active_filter !== props.data.id) {\n            if (props.data.filters.client_id) props.addClientToTempFilter(props.data.filters.client_id[0])\n            props.changeFilterState({\n                ...props.data.filters,\n                active_filter: props.data.id,\n                active_badge: 0,\n                search: '',\n                temp_statuses: props.data.filters.status_id || [],\n                temp_order_types: props.data.filters.order_type_id || [],\n                temp_managers: props.data.filters.manager_id || [],\n                temp_engineers: props.data.filters.engineer_id || [],\n                temp_created_at: props.data.filters.created_at || [0, 0],\n                temp_kindof_good_id: props.data.filters.kindof_good,\n                temp_brand: props.data.filters.brand,\n                temp_subtype: props.data.filters.subtype,\n                temp_client: {}\n            })\n        } else {\n            props.changeFilterState({\n                active_filter: 0,\n                page: 0,\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n            })\n        }\n    }\n\n    return (\n        <div\n            className='customFilter'\n            onClick={handleChoose}\n            style={{\n                backgroundColor: props.data.id === props.filter.active_filter ? '#eeeeef' : 'white',\n                opacity: props.data.id === props.filter.active_filter || props.filter.active_filter === 0 ? 1 : 0.5\n            }}\n        >\n            {props.data.title}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    addClientToTempFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../Redux/actions'\nimport LableInput from '../general/LableInput'\nimport Checkbox from '../general/Checkbox'\nimport BottomButtons from '../general/BottomButtons'\nimport {changeFilterState, createCustomFilter} from '../../Redux/actions/filterAction'\n\nconst FilterEditor = props => {\n\n    const handleClose = () => {\n        props.changeVisibleState({statusCreateNewFilter: false, inputFilterTitleChecked: true})\n    }\n\n    const clickHandel = event => {\n        if (!event.path.map((el) => el.id).includes('createNewFilterWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.filter.title) {\n            props.createCustomFilter()\n        } else {\n            props.changeVisibleState({inputFilterTitleChecked: false})\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewFilterWindow\">\n\n                <div className=\"createNewTitle w515\">{props.filter.active_filter ? props.filter.title : 'Новый фильтр'}</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                         className='mt15'\n                         title='Наименование'\n                         onChange={event => props.changeFilterState({title: event.target.value})}\n                         value={props.filter.title}\n                         checkedFlag='inputFilterTitleChecked'\n                         checked={props.inputFilterTitleChecked}\n                         redStar={true}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Общий'\n                        onChange={event => props.changeFilterState({general: event.target.checked})}\n                        checked={props.filter.general}\n                    />\n                </div>\n\n                <BottomButtons\n                    edit={props.filter.active_filter}\n                    create={handleCreate}\n                    // save={handleSave}\n                    // delete={() => props.deleteNotEvent(true)}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    inputFilterTitleChecked: state.view.inputFilterTitleChecked,\n\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    createCustomFilter,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const choosed_values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (choosed_values.length === current_statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!choosed_values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        invisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport {icon_down, icon_left} from '../../../../data/icons'\n\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\nimport Button from '../../../general/Button'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const allStatuses = props.statuses.map(status => status.id)\n\n\n    return props.invisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div className='liststatus'>\n                    <div\n                        className='blocList'\n                        style={{width: props.width ? props.width : '250px'}}\n                    >\n                        {props.status_group.map(group => (\n                            <ChooseStatusesGruoup\n                                key={group.id}\n                                label={group.name}\n                                group={group.type_group}\n                                func={value => props.func(value)}\n                                current_list={props.current_list}\n                            />\n                        ))}\n                    </div>\n                    <div className='btmsts'>\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Выбрать все'\n                            onClick={() => props.func(allStatuses)}\n                            disabled={props.current_list.length === allStatuses.length}\n                        />\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Отменить все'\n                            onClick={() => props.func_clear()}\n                        />\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5),\n    statuses: state.data.status.filter(status => status.group < 8)\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState, useRef} from 'react'\n\nimport Checkbox from './Checkbox'\nimport Icon from './Icon'\nimport {icon_down, icon_left} from '../../data/icons'\n\nconst ChooseOfListMany = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const mainCheckbox = useRef()\n\n    useEffect(() => {\n        if(mainCheckbox.current) {\n            const values = props.list.filter(el => props.checked_list.includes(el.id))\n            if (values.length === props.list.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = true\n            } else if (!values.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = false\n            } else {\n                mainCheckbox.current.indeterminate = true\n            }\n        }\n    }, [props.checked_list, listVisible])\n\n\n    const showWord = (len) => {\n        switch (len) {\n\n            case 0: {\n                return 'Ничего не выбрано'\n            }\n\n            case props.list.length: {\n                return 'Все'\n            }\n\n            default:\n                return `Выбрано ${len}`\n        }\n    }\n\n\n    return (\n        <div\n            style={{width: props.width ? props.width : '250px'}}\n            id={`chooseOfList${props.id}`}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div>{showWord(props.checked_list.length)}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='#282e33'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n\n                    <div className='checkbox'>\n                        <input\n                            ref={mainCheckbox}\n                            type='checkbox'\n                            onChange={() => props.func(props.list.map(el => el.id))}\n                            disabled={props.disabled}\n                        />\n                        <label>{props.mainLable}</label>\n                    </div>\n\n                    {props.list.map(element => {\n                        return (\n                            <div\n                                key={element.id}\n                                className='options'\n                            >\n                                <Checkbox\n                                    className='ml10'\n                                    label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                                    onChange={() => props.func([element.id])}\n                                    checked={props.checked_list.includes(element.id)}\n                                    disabled={props.disabled}\n                                />\n\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, {useEffect, useState} from 'react'\nimport {icon_cancel, icon_down, icon_left} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * id='id' // id компонента\n *\n * className='className' // className оболочки компанента\n *\n * width='250px' // ширина компонента\n *\n * title='title' // Подпись сверху\n *\n * list={props.list} // Список элементов\n *\n * current_element={props.current_element} // выбраный элемент\n *\n * setElement={() => console.log('setElement')} // функция выбора элемента\n *\n * filter={props.filter} // фильр поиска элемента\n *\n * changeFilter={() => console.log('changeFilter')} // функция изменения фильтра\n *\n * placeholder='Введите текст'\n *\n * disabled={} // заблокировать\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseWithSearch = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n\n    const clickHandel = event => {\n        if (!event.path.map(el => el.id).includes(`ChooseWithSearch${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    return (\n        <div\n            id={`ChooseWithSearch${props.id}`}\n            style={{width: props.width ? props.width : '250px'}}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <button\n                className={props.disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setListVisible(true)}\n                disabled={props.disabled || Object.values(props.current_element).length}\n            >\n                <input\n                    className={props.disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeFilter(event.target.value)}\n                    placeholder={props.placeholder}\n                    value={Object.values(props.current_element).length ? props.current_element : props.filter}\n                    disabled={props.disabled || Object.values(props.current_element).length}\n                />\n                {Object.values(props.current_element).length ?\n                    <div\n                        className='al-itm-ct'\n                        onClick={() => props.setElement({})}\n                    >\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n                    {props.list.map((element, idx) => {\n                        return (\n                            <div\n                                key={idx}\n                                className='options'\n                                onClick={() => {\n                                    props.setElement(element)\n                                    setListVisible(false)\n                                }}\n                            >\n                                {element.title || element.name}\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseWithSearch\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentType, changeBookState} from '../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nconst SetGroup = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const seted = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_kindof_good_id: null,\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_type: {},\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setType = (equipment) => {\n        props.changeFilterState({temp_kindof_good_id: equipment.id})\n        props.changeBookState({equipment_type: equipment})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Тип устройства</div>\n            <button\n                id='optionsFilterTextOfGroup'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={seted}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={seted ? props.book.equipment_type.title : props.book.filter_type}\n                    disabled={seted}\n                />\n                {seted ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfGroup'>\n                    {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className='rowGropList'\n                                onClick={() => setType(equipment)}\n                            >\n                                {equipment.title}\n                            </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentType,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetGroup)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentBrand, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetBrand = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.filter_brand, props.book.equipment_type])\n\n    const settled = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfBrand') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setBrand = (brand) => {\n        props.changeFilterState({temp_brand: brand.id})\n        props.changeBookState({equipment_brand: brand})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Бренд</div>\n            <button\n                id='optionsFilterTextOfBrand'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder='Выбирете бренд'\n                    value={settled ? props.book.equipment_brand.title : props.book.filter_brand}\n                    disabled={settled  || !settledType}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfBrand'>\n                    {props.book.equipment_brands.map(brand => (\n                        <div\n                            key={brand.id}\n                            className='rowGropList'\n                            onClick={() => setBrand(brand)}\n                        >\n                            {brand.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentBrand,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetBrand)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentSubtype, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetSubtype = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.filter_subtype, props.book.equipment_brand])\n\n    const settled = !!Object.values(props.book.equipment_subtype).length\n    const settledBrand = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfSubtype') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({temp_subtype: null})\n        props.changeBookState({\n            filter_subtype: '',\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setSubtype = (subtype) => {\n        props.changeFilterState({temp_subtype: subtype.id})\n        props.changeBookState({equipment_subtype: subtype})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Модуль/Серия</div>\n            <button\n                id='optionsFilterTextOfSubtype'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType || !settledBrand}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder='Выбирете Модуль/Серию'\n                    value={settled ? props.book.equipment_subtype.title : props.book.filter_subtype}\n                    disabled={settled  || !settledType || !settledBrand}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfSubtype'>\n                    {props.book.equipment_subtypes.map(subtype => (\n                        <div\n                            key={subtype.id}\n                            className='rowGropList'\n                            onClick={() => setSubtype(subtype)}\n                        >\n                            {subtype.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentSubtype,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetSubtype)","import React, {useEffect, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../../Redux/actions'\nimport {changeFilterState, deleteFilter, resetTempFilter, selectedFilter} from '../../../Redux/actions/filterAction'\nimport {addClients, changeClientState} from '../../../Redux/actions/clientAction'\nimport {icon_cross, icon_trush} from '../../../data/icons'\n\n\nimport FilterEditor from '../FilterEditor'\nimport Button from '../../general/Button'\nimport ChooseStatuses from '../../Settings/SettingPages/Notification/ChooseStatuses'\nimport ChooseOfListMany from '../../general/ChooseOfListMany'\nimport ChooseWithSearch from '../../general/ChooseWithSearch'\nimport ChooseDate from '../../general/calandar/ChooseDate'\nimport SetGroup from './SetGroup'\nimport SetBrand from './SetBrand'\nimport SetSubtype from './SetSubtype'\n\nconst SetFilter = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name])\n\n    const handleSet = () => {\n        const data = {\n            page: 0,\n            engineer_id: props.filter.temp_engineers.length ? props.filter.temp_engineers : null,\n            overdue: null,\n            status_id: props.filter.temp_statuses.length ? props.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: props.filter.temp_order_types.length ? props.filter.temp_order_types : null,\n            manager_id: props.filter.temp_managers.length ? props.filter.temp_managers : null,\n            created_at: props.filter.temp_created_at || [0, 0],\n            kindof_good: props.filter.temp_kindof_good_id,\n            brand: props.filter.temp_brand,\n            subtype: props.filter.temp_subtype,\n            client_id: Object.values(props.filter.temp_client).length ? [props.filter.temp_client.id] : null,\n            active_badge: 0,\n            active_filter: 0\n        }\n        props.changeFilterState(data)\n    }\n\n\n    return (\n        <div className=\"setCustomFilter\">\n            <div className=\"row jc-c\">\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseStatuses\n                        className='h52'\n                        width='100%'\n                        func={value => props.selectedFilter(value, 'temp_statuses')}\n                        func_clear={() => props.changeFilterState({temp_statuses: []})}\n                        current_list={props.filter.temp_statuses}\n                    />\n                    <SetGroup/>\n                    <ChooseWithSearch\n                        id='filterClient'\n                        className='mt15 h52'\n                        width='100%'\n                        title='Клиент'\n                        list={props.client.clients}\n                        current_element={Object.values(props.temp_client).length ? props.temp_client.name : ''}\n                        setElement={client => props.changeFilterState({temp_client: client})}\n                        filter={props.client.filter_name}\n                        changeFilter={filter => props.changeClientState({filter_name: filter})}\n                        placeholder='Введите имя'\n                        disabled={false}\n                    />\n                </div>\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseOfListMany\n                        id='idTypeOrders'\n                        className='h52'\n                        width='100%'\n                        title='Тип заказа'\n                        mainLable='Все'\n                        list={props.order_type}\n                        checked_list={props.filter.temp_order_types}\n                        func={value => props.selectedFilter(value, 'temp_order_types')}\n                    />\n                    <SetBrand/>\n                    <ChooseOfListMany\n                        id='idManagerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Менеджер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_managers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_managers}\n                        func={value => props.selectedFilter(value, 'temp_managers')}\n                    />\n                </div>\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseDate\n                        className='h52'\n                        title='Дата'\n                        width='100%'\n                        range={true}\n                        allDate={true}\n                        func={date => props.changeFilterState({temp_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.filter.temp_created_at}\n                    />\n                    <SetSubtype/>\n                    <ChooseOfListMany\n                        id='idEngineerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Инженер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_engineers}\n                        func={value => props.selectedFilter(value, 'temp_engineers')}\n                        disabled={!props.user.role.orders_visibility}\n                    />\n                </div>\n            </div>\n            <div className=\"buttons fs14 mt15\">\n                <Button\n                    className='blueButton'\n                    title='Применить'\n                    onClick={handleSet}\n                />\n                {props.filter.active_filter ?\n                    <Button\n                        className='whiteButton bcr'\n                        icon={icon_trush}\n                        iconClassName='icon-s1 pd1'\n                        iconColor='white'\n                        onClick={() => props.deleteFilter()}\n                    />\n                    :\n                    <Button\n                        className='whiteButton'\n                        title='Создать фильтр'\n                        onClick={() => props.changeVisibleState({statusCreateNewFilter: true})}\n                    />\n                }\n                <Button\n                    className='whiteButton'\n                    title='Сбросить параметы'\n                    onClick={() => props.resetTempFilter()}\n                    icon={icon_cross}\n                    iconClassName='icon-sm8'\n                    iconColor='#282e33'\n                />\n            </div>\n            {props.statusCreateNewFilter ? <FilterEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    statusCreateNewFilter: state.view.statusCreateNewFilter,\n    filter: state.filter,\n    order_type: state.data.order_type,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    client: state.client,\n    user: state.data.user,\n    temp_client: state.filter.temp_client\n})\n\nconst mapDispatchToProps = {\n    addClients,\n    resetTempFilter,\n    deleteFilter,\n    selectedFilter,\n    changeFilterState,\n    changeVisibleState,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport { setVisibleFlag, changeOrderFormS} from '../../Redux/actions'\nimport {icon_down, icon_filter, icon_table} from '../../data/icons'\nimport Button from '../general/Button'\nimport Icon from '../general/Icon'\nimport {changeFilterState} from '../../Redux/actions/filterAction'\n\nconst CustomPanel = (props) => {\n\n    const newOrder = () => {\n        props.changeOrderFormS(props.user.id, 'manager_id')\n        props.setVisibleFlag('statusOrderEditor', true)\n    }\n\n    const handleEditFilter = () => {\n        props.setVisibleFlag('statusSetCustomFilter', 'change')\n        props.changeFilterState({active_badge: 0,  active_filter: 0})\n    }\n\n    return (\n        <div className='mainCustomPanel '>\n            <div className='customPanel'>\n                <div className='row al-itm-fe'>\n                    <Button\n                        className='greenButton'\n                        title='+ Заказ'\n                        onClick={newOrder}\n                        invisible={!props.permissions.includes('create_orders')}\n                    />\n                    <div className='customFilters'>\n                        <Button\n                            className='customFilter'\n                            title='Фильтр'\n                            onClick={handleEditFilter}\n                            invisible={false}\n                            icon={icon_filter}\n                            iconClassName='icon-s2'\n                            iconColor='282e33'\n                        />\n                        {props.customFilters.map(filter => {\n                            return (\n                                <CustomFilter data={filter} key={filter.id}/>\n                            )\n                        })}\n                    </div>\n                </div>\n                <div\n                    className='chooseFieldButton'\n                    onClick={() => console.log('ckick on \"set table\"')}\n                >\n                    <div className='cl11'>\n                        <Icon icon={icon_table} className='icon-table'/>\n                    </div>\n                    <div className='cl12'>\n                        <Icon icon={icon_down} className='icon-table'/>\n                    </div>\n                </div>\n            </div>\n\n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customFilters: state.filter.customFilters,\n    statusSetCustomFilter: state.view.statusSetCustomFilter,\n    permissions: state.data.user.role.permissions,\n    statusOrderEditor: state.view.statusOrderEditor,\n    user: state.data.user,\n    edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useEffect} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport {addStatusGroupAction, addAdCampaign, addEquipment} from '../../Redux/actions'\nimport {addBadges, changeFilterForm, changeFilterState, addCustomFilters} from '../../Redux/actions/filterAction'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\n\nimport CustomPanel from './CustomPanel'\n\n\nfunction Orders(props) {\n\n    useEffect(() => {\n        props.addOrders()\n    }, [\n        props.filter.sort,\n        props.filter.field_sort,\n        props.filter.page,\n        props.filter.engineer_id,\n        props.filter.overdue,\n        props.filter.status_id,\n        props.filter.status_overdue,\n        props.filter.urgent,\n        props.filter.order_type_id,\n        props.filter.manager_id,\n        props.filter.created_at,\n        props.filter.kindof_good,\n        props.filter.brand,\n        props.filter.subtype,\n        props.filter.client_id,\n        props.filter.search\n    ])\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n\n\n    const pageChangeHandler = page => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changeFilterState({page: curent_page})\n        // props.changeFilterForm(curent_page, 'page')\n    }\n\n\n    useEffect(() => {\n        props.addBadges()\n    }, [])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    count: state.data.count,\n    ordersShow: state.data.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment,\n    addBadges,\n    changeFilterState,\n    changeFilterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {icone_sphere, icone_setting} from '../../../data/icons'\nimport {activeCashbox, editCashbox, changeCashboxForm, changeVisibleState} from '../../../Redux/actions'\nimport {changePaymentState} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\nconst Cashbox = (props) => {\n\n    const activ = (id) => {\n        return id === props.activ_cashbox_id\n    }\n\n    const edit = props.user.role.permissions.includes('edit_cash')\n\n    const income = props.user.role.permissions.includes('make_income') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('incoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n    const outcome = props.user.role.permissions.includes('make_expenditure') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n    const move = props.user.role.permissions.includes('move_money') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming_move') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n    const showBalance = props.user.role.permissions.includes('see_remains') &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('show_cashbox_remains') :\n            props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n    const handleEdit = () => {\n        props.editCashbox(props.cashbox)\n        props.changeVisibleState({'statusCashboxEditor': true})\n    }\n\n    const hanldleIncome = () => {\n        props.changePaymentState({\n            'direction': 2,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleOutcome = () => {\n        props.changePaymentState({\n            'direction': 1,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleMove = () => {\n        props.changePaymentState({\n            'direction': 0,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    return (\n        <div\n            className={`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted ? 'bcg' : 'cgr'}`}\n            onClick={() => props.changeCashboxForm(props.cashbox, 'current_cashbox')}\n        >\n            <div className='icons'>\n                <div><Icon className='smalIcon' icon={icone_sphere}\n                           color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n                <div\n                    onClick={edit ? handleEdit : null}\n                >\n                    <Icon className='smalIcon curP' icon={icone_setting}\n                          color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n                </div>\n            </div>\n            <div>{props.cashbox.title.toUpperCase()}</div>\n            {showBalance ?\n                <div className='cacsboxBalance'>{`${parseFloat(props.cashbox.balance).toFixed(2)} руб.`}</div> : null}\n            <div className='row jc-c'>\n                <Button\n                    title='+ Приход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n                    onClick={hanldleIncome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!income}\n                />\n                <Button\n                    id='344'\n                    title='- Расход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n                    onClick={hanldleOutcome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!outcome}\n                />\n            </div>\n            <Button\n                title='Перемещение'\n                className='whiteButton'\n                onClick={hanldleMove}\n                disabled={props.cashbox.deleted}\n                invisible={!move}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user,\n    activ_cashbox_id: state.cashbox.current_cashbox.id,\n})\n\nconst mapDispatchToProps = {\n    activeCashbox,\n    editCashbox,\n    changeCashboxForm,\n    changePaymentState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeEmployeeSelected, changeCashboxPermissions } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeEmployeeSelected,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEmoloyee, changeCashboxForm, changeCashboxPermissions } from '../../../Redux/actions'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxForm(employee.id, 'permissions_employee')\n      props.editEmoloyee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxForm(employee_id, 'permissions_employee')\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmoloyee,\n   changeCashboxForm,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../general/LableInput'\n\nimport { changeCashboxForm, chooseCashboxSelected } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={(event) => props.changeCashboxForm(event.target.value, 'title')}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxForm(true, 'isGlobal')}\n            func2 = {() => props.changeCashboxForm(false, 'isGlobal')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxForm(event.target.checked, 'isVirtual')} \n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxForm(0, 'type')}\n            func2={() => props.changeCashboxForm(1, 'type')}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxForm,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm, setVisibleFlag, createCashbox, seveEditCashbox, deleteCashbox } from '../../../Redux/actions'\nimport { permission_cahsbox } from \"../../../data/permissions\";\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n      props.setVisibleFlag('statusCashboxEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   useEffect(() => {\n     if (!props.cashbox.edit) {\n      let list_per = {}\n      props.employees.filter(employee => !employee.deleted).forEach(employee => {\n         list_per[employee.id] = {}\n         list_per[employee.id].available = true\n         list_per[employee.id].like_cashbox = true\n         list_per[employee.id].permissions = permission_cahsbox\n      })\n      props.changeCashboxForm(list_per, 'employees')\n    }\n   }, [])\n\n  const hangleCreate = () => {\n    if (props.cashbox.title) {\n      props.createCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (props.cashbox.title) {\n      props.seveEditCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n        </div>\n\n        <Tabs\n          list={['Общие', 'Доcтуп']}\n          func={props.changeCashboxForm}\n          tab={props.cashbox.tabs_editor}\n          tab_field=\"tabs_editor\"\n        />\n\n        {props.cashbox.tabs_editor === 0 ? <DataCashbox /> : null}\n        {props.cashbox.tabs_editor === 1 ? <CashboxAccess /> : null}\n\n        <BottomButtons\n          edit={props.cashbox.edit}\n          create={ hangleCreate }\n          save={ hangleSave }\n          delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null }\n          recover={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null }\n          close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n          deleted={props.cashbox.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  cashbox: state.cashbox,\n  employees: state.data.employees,\n  view: state.view,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm,\n  setVisibleFlag,\n  createCashbox,\n  seveEditCashbox,\n  deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, setPayment} from '../../Redux/actions'\nimport {icon_file_text, icon_warning} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport {showDate} from '../general/utils'\n\nconst TablePayments = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payments.filter(payment => !payment.deleted).forEach(payment => {\n            income_sum += payment.income\n            outcome_sum += payment.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payments])\n\n    const showBalance = () => {\n        let cashboxAvailable = false\n        if (Object.values(props.current_cashbox).length) {\n            cashboxAvailable = (props.current_cashbox.employees[props.user.id].like_cashbox ?\n                props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n        }\n        return cashboxAvailable && props.user.role.permissions.includes('see_remains')\n    }\n\n    const payments = props.payments.filter(payment => props.showDeleted || !payment.deleted)\n\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr className=''>\n                <th className='w150'>Создан</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                {showBalance() ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n            </thead>\n            <tbody>\n            {payments.map(payment => (\n                <tr\n                    key={payment.id}\n                    className={payment.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => {\n                        props.setPayment(payment)\n                        props.setVisibleFlag('statusPaymentsCard', true)\n                    }}\n                >\n                    <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                            <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                            {payment.created_at !== payment.custom_created_at ?\n                                <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}`}>\n                                    <Icon\n                                        className='icon-s2 ml5'\n                                        icon={icon_warning}\n                                        color='red'\n                                    />\n                                </div> : null}\n                        </div>\n                    </td>\n                    <td>\n                        <div>{payment.description}{payment.client.name ?` (Клиент: ${payment.client.name})` : null }</div>\n                        {payment.direction ?\n                            <div className='row'>\n                                <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                                <div className='tac ml5 cgr'>{payment.cashflow_category}</div>\n                            </div> : null}\n                    </td>\n                    <td className={payment.income ? 'greenFont tac' : 'tac'}>{payment.income}</td>\n                    <td className={payment.outcome ? 'redFont tac' : 'tac'}>{payment.outcome}</td>\n                    {showBalance() ? <td className='tac'>{parseFloat(payment.deposit).toFixed(2)}</td> : null}\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payments.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    payments: state.data.payments,\n    employees: state.data.employees,\n    user: state.data.user,\n    current_cashbox: state.cashbox.current_cashbox\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    setPayment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addPayments, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {icon_stats_docs} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\nimport ChooseDate from '../general/calandar/ChooseDate'\nimport Button from '../general/Button'\n\n\nconst ManeyMovement = (props) => {\n\n    useEffect(() => {\n        if (props.current_cashbox) {\n            props.addPayments()\n        }\n    }, [props.current_cashbox])\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    return (\n        <div className='ml30 w100'>\n\n            <div className='row'>\n                <Icon icon={icon_stats_docs}/>\n                <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n            </div>\n            <div className='row'>\n                <ChooseDate\n                    className='h27'\n                    width='250px'\n                    range={true}\n                    func={date => props.changePaymentState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                    current_date={props.filter_created_at}\n                    ivisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Button\n                    title='Применить'\n                    className='blueButton'\n                    onClick={() => props.addPayments()}\n                    invisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Checkbox\n                    label='Показать удаленные'\n                    onChange={event => setShowDeleted(event.target.checked)}\n                    value={showDeleted}\n                    invisible={!props.permissions.includes('see_delete_payments')}\n                />\n            </div>\n\n            <TablePayments showDeleted={showDeleted}/>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    current_cashbox: state.cashbox.current_cashbox,\n    filter_created_at: state.payment.filter_created_at,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag, addCashboxes, changeCashboxForm } from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addCashboxes()\n   },[])\n\n   const cashboxes = props.cashboxes.filter(cashbox => \n      (!cashbox.deleted || showDeleted) && \n      cashbox.employees[props.user.id].available &&\n      (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n      )\n   \n   \n   // useEffect(() => {\n   //    props.changeCashboxForm(cashboxes[0], 'current_cashbox')\n   // },[])\n\n   return (\n      <div className = 'contentTab'>\n\n         <div className = 'row al-itm-bl'>\n            <div className='cashboxes'>\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  checked={showDeleted}\n               />\n               {cashboxes.map(cashbox => {\n               return (\n                  <Cashbox\n                     key={cashbox.id}\n                     cashbox={cashbox}\n                     active={cashbox.active}\n                  />\n               )})}\n               \n               {props.user.role.permissions.includes('edit_cash') ?\n               <div \n                  className='whiteButton'\n                  onClick={() => props.setVisibleFlag('statusCashboxEditor', true)}\n               >\n                     + Добавить кассу\n               </div> : null}\n\n            </div>\n            {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null }\n           \n         </div>\n         {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n         {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n         {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view,\n   cashboxes: state.data.cashboxes,\n   user: state.data.user,\n   current_branch: state.data.current_branch,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   addCashboxes,\n   changeCashboxForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport { currentMonth } from '../../components/general/utils'\n\n\nexport function changePayrollForm( value, field ) {\n   return {\n     type: 'CHANGE_PAYROLL_FORM',\n     field,\n     value\n   }\n }\n\nexport function changePayrollState( data ) {\n    return {\n        type: 'CHANGE_PAYROLL_STATE',\n        data\n    }\n}\n\nexport function editPayroll(payroll) {\n   return {\n     type: 'EDIT_PAYROLL',\n     payroll\n   }\n }\n \n export function resetPayroll() {\n   return {\n     type: 'RESET_PAYROLL'\n   }\n }\n \n \n export function selectedPayroll( value, field ) {\n   return {\n     type: 'SELECTED_PAYROLL',\n     field,\n     value\n   }\n }\n\nexport function addPayrolls() {\n\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n \n   return dispatch => {\n \n     fetch(state.data.url_server + '/get_payrolls', request_config)\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrolls',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос начислений не выполнен'))\n   }\n }\n\n export function addMonthBalance() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n   custom_created_at: currentMonth(),\n   employee_id: state.payroll.setted_employee\n })\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_payroll_sum', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_PAYROLL_FORM',\n          field: 'month_balance',\n          value: data.sum,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос баланса не выполнен'))\n  }\n}\n\nexport function createPayroll() {\n\n  const state = store.getState()\n\n  const request_config1 = getRequestConfig({\n    description: state.payroll.description,      \n    income: state.payroll.income,\n    outcome: -state.payroll.outcome,\n    direction: state.payroll.direction,\n    deleted: state.payroll.deleted,\n    reimburse: state.payroll.reimburse,\n    created_at: state.payroll.created_at,\n    custom_created_at: state.payroll.custom_created_at,\n    relation_type: state.payroll.relation_type,\n    relation_id: state.payroll.relation_id,\n    employee_id: state.payroll.employee_id,\n    order_id: state.payroll.order_id\n  })\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    await fetch(state.data.url_server + '/get_payrolls', request_config2)\n      .then(response =>  response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'payrolls',\n            data: data.data,\n          })\n          dispatch({\n            type: 'RESET_PAYROLL',\n          })\n          dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusPayrollEditor',\n            value: false\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}\n\nexport function deletePayroll(flag) {\n\n  const state = store.getState()\n\n  let request_config1 = getRequestConfig({\n    id: state.payroll.edit,      \n    deleted: flag\n  })\n  request_config1.method = 'PUT'\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    fetch(state.data.url_server + '/get_payrolls', request_config2)\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payrolls',\n          data: data.data,\n        })\n        dispatch({\n          type: 'RESET_PAYROLL',\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPayrollEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {editPayroll} from '../../../Redux/actions/payrollActions'\n\nimport {showDate} from '../../general/utils'\nimport Icon from '../../general/Icon'\nimport {icon_warning} from '../../../data/icons'\n\nconst TablePayrolls = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n    const editPayroll = (payroll) => {\n        props.editPayroll(payroll)\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const payrolls = props.payrolls.filter(payroll => props.showDeleted || !payroll.deleted)\n\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n            income_sum += payroll.income\n            outcome_sum += payroll.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payrolls])\n\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w135'>Дата</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                <th className='w91'>Баланс, руб.</th>\n            </tr>\n            </thead>\n            <tbody>\n            {payrolls.map(payroll => (\n                <tr\n                    key={payroll.id}\n                    className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => editPayroll(payroll)}\n                >\n                    <td className='pd-lr-5'>\n                        <div>\n                            <div className='row'>\n                                <div>{type_payrolls[payroll.relation_type]}</div>\n                                {payroll.created_at !== payroll.custom_created_at ?\n                                    <div title={`Добавлено задним числом\\n${showDate(payroll.created_at)}`}>\n                                        <Icon\n                                            className='icon-s2 ml5'\n                                            icon={icon_warning}\n                                            color='red'\n                                        />\n                                    </div> : null}\n                            </div>\n                            <div className='cgr'>{showDate(payroll.custom_created_at)}</div>\n                        </div>\n                    </td>\n                    <td className='pd-lr-5'>{payroll.description}</td>\n                    <td className={payroll.income ? 'greenFont tac' : 'tac'}>{payroll.income}</td>\n                    <td className={payroll.outcome ? 'redFont tac' : 'tac'}>{payroll.outcome}</td>\n                    <td className='tac'>{payroll.deposit.toFixed(2)}</td>\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payrolls.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n        </table>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    payrolls: state.data.payrolls\n})\n\nconst mapDispatchToProps = {\n    editPayroll,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changePayrollForm, changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\nconst PayrollForm = (props) => {\n\n    const [chooseData, setChooseData] = useState(false)\n\n    return (\n        <div className=''>\n            <div className='row al-itm-fe'>\n                <ChooseBotton\n                    className='mt15 mr-rg-20'\n                    title='Дата и время'\n                    name={['Текущее', 'Заданное']}\n                    func1={() => {\n                        setChooseData(false)\n                        props.changePayrollState({custom_created_at: null})\n                    }}\n                    func2={() => {\n                        setChooseData(true)\n                        props.changePayrollState({custom_created_at: parseInt(new Date() / 1000)})\n                    }}\n                    checked={true}\n                    // disabled={!props.permissions.includes('backdating')}\n                />\n                <ChooseDate\n                    className='h31'\n                    width='250px'\n                    func={date => props.changePayrollState({custom_created_at: parseInt(date / 1000)})}\n                    current_date={props.payroll.custom_created_at * 1000}\n                    invisible={!chooseData}\n                />\n            </div>\n            <LableInput\n                className='mt15'\n                width='70px'\n                title='Сумма'\n                onChange={event => props.changePayrollForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payroll.direction === 2 ? 'income' : 'outcome')}\n                value={props.payroll.outcome ? props.payroll.outcome : props.payroll.income}\n                unit='руб.'\n                checkedFlag='inputPayrollSumChecked'\n                checked={props.view.inputPayrollSumChecked}\n                disabled={props.payroll.deleted}\n                redStar={true}\n            />\n            <ChooseOfList\n                id='employeePayroll'\n                title='Сотрудник'\n                className='mt15'\n                list={props.employees}\n                field='employee_id'\n                setElement={props.changePayrollForm}\n                current_id={props.payroll.employee_id}\n                width={'250px'}\n                employee={true}\n                checkedFlag='inputPayrollEmployeeChecked'\n                checked={props.view.inputPayrollEmployeeChecked}\n                disabled={props.payroll.deleted}\n                // invisible={false}\n            />\n            <LableArea\n                className='mt15'\n                title='Коментарий'\n                onChange={event => props.changePayrollForm(event.target.value, 'description')}\n                value={props.payroll.description}\n                checkedFlag='inputPayrollDescChecked'\n                checked={props.view.inputPayrollDescChecked}\n                redStar={true}\n                disabled={props.payroll.deleted}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n    changePayrollForm,\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.data.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { resetPayroll, changePayrollForm, createPayroll, deletePayroll } from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\n\nconst PaypolleEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusPayrollEditor', false)\n      props.setVisibleFlag('inputPayrollDescChecked', true )\n      props.setVisibleFlag('inputPayrollEmployeeChecked', true )\n      props.resetPayroll()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      props.changePayrollForm(props.payroll.setted_employee, 'employee_id')\n   }, [])\n\n \n\n   const hangleCreate = () => {\n      if (\n         (props.payroll.income || props.payroll.outcome) &&\n         props.payroll.employee_id  && \n         props.payroll.description\n         ) {\n         props.createPayroll()\n      } else {\n         if (!(props.payroll.income || props.payroll.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n         if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n         if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n      }\n   }\n\n  const hangleSave = () => {\n   if (\n      (props.payrolle.income || props.payrolle.outcome) &&\n      props.payroll.employee_id  && \n      props.payroll.description\n      ) {\n      // props.createPayment()\n   } else {\n      if (!(props.payrolle.income || props.payrolle.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n      if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n      if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n   }\n  }\n\n  \n\n  const title = ['', 'Взыскание', 'Премия']\n\n  const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n  return (\n      <div className=\"rightBlock\">\n         <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n         <div className=\"createNewTitle\">\n            {props.payroll.edit ? type_payrolls[props.payroll.relation_type] :(title[props.payroll.direction])}\n         </div>\n\n         <div className='contentEditor'>\n           \n           {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n         </div>\n       \n        <BottomButtons\n            edit={props.payroll.edit}\n            create={ hangleCreate }\n            // save={ hangleSave }\n            delete={ props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null }\n            recover={ props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null }\n            close={ handleClose }\n            deleted={props.payroll.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view, \n  payroll: state.payroll,\n  permissions: state.data.user.role.permissions,\n  employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   setVisibleFlag,\n   resetPayroll,\n   createPayroll,\n   deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addEmployees, setVisibleFlag} from '../../../Redux/actions';\nimport {addPayrolls, addMonthBalance, changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport {showName} from '../../general/utils'\n\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\n\n\nconst EmployeeSalary = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addMonthBalance()\n        props.addEmployees()\n    }, [props.payroll.setted_employee])\n\n    const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n    const handleIncome = () => {\n        props.changePayrollState({direction: 2, relation_type: 9})\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handleOutcome = () => {\n        props.changePayrollState({direction: 1, relation_type: 10})\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n\n    return (\n        <div className=''>\n            <div className='createNewTitle fsz20 mt0'>\n                {showName(current_employee)}\n            </div>\n            <div className='txtb'>\n                <span>Начисленно в текущем месяце: </span>\n                <span\n                    className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{props.payroll.month_balance.toFixed(2)}</span> руб.\n            </div>\n            <div className='txtb'>\n                <span>Баланс:</span>\n                <span\n                    className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{current_employee.balance.toFixed(2)}</span> руб.\n            </div>\n\n            <div className='row mt15 jc-sb'>\n                <div className='row'>\n                    <ChooseDate\n                        className='h27'\n                        width='250px'\n                        range={true}\n                        func={date => props.changePayrollState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.payroll.filter_created_at}\n                    />\n                    <Button\n                        className='blueButton'\n                        title='Применить'\n                        onClick={() => props.addPayrolls()}\n                    />\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        value={showDeleted}\n                        invisible={!props.permissions.includes('see_seleted_payrolls')}\n                    />\n                </div>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Премия'\n                        onClick={handleIncome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                    <Button\n                        className='greenButton bcr m10'\n                        title='- Взыскание'\n                        onClick={handleOutcome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                </div>\n            </div>\n            {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n            <TablePayrolls showDeleted={showDeleted}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    statusPayrollEditor: state.view.statusPayrollEditor\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    addPayrolls,\n    addMonthBalance,\n    addEmployees,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {showName} from '../../general/utils'\nimport {changePayrollForm} from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n\n    const [total, setTotal] = useState(0)\n\n    useEffect(() => {\n        let sum = 0\n        props.employees.filter(employee => employee.id != 1).forEach(employee => {\n            sum += employee.balance\n        })\n        setTotal(sum)\n    }, [props.employees])\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>Сотрудник</th>\n                <th>Баланс</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.employees.map(employee => (\n                <tr\n                    key={employee.id}\n                    onClick={() => props.changePayrollForm(employee.id, 'setted_employee')}\n                    style={employee.id === props.payroll.setted_employee ? {backgroundColor: '#cae1f5'} : null}\n                >\n                    <td>{showName(employee)}</td>\n                    <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td>Итог:</td>\n                <td>{total}</td>\n            </tr>\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n    payroll: state.payroll\n})\n\nconst mapDispatchToProps = {\n    changePayrollForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollForm } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollForm(props.user_id, 'setted_employee')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeCashboxForm} from '../../Redux/actions'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\nimport Loader from '../Loader/Loader'\n\nconst Payments = (props) => {\n\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Финансы</span>\n            </div>\n            <div className='settingPageBody'>\n            </div>\n\n            <Tabs\n                list={['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты']}\n                func={props.changeCashboxForm}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <Cashboxes/> : null}\n            {props.tabs === 1 ? null : null}\n            {props.tabs === 2 ? null : null}\n            {props.tabs === 3 ? <Salaries/> : null}\n\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.cashbox.tabs,\n    statusOrderLoader: state.view.statusOrderLoader\n\n})\n\nconst mapDispatchToProps = {\n    changeCashboxForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th key={header.id}>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td key={header.title + part.id}>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td key={header.title + part.id}>{part[header.field].title}</td>\n                            return <td key={header.title + part.id}>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport { icon_table } from '../../data/icons'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         className={`tableFields ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1 h24'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                  <path d={icon_table}></path>\n               </svg>\n            </div>\n            <div className='cl12'>\n               <span className=\"fieldSeparate\">&#6662;</span>\n            </div>   \n         </div>\n\n         {listVisible ?\n            <div \n               className='listOptions'\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            invisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            invisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                invisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                invisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={props.changeWarehouseForm}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clients = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут клиенты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusSettingRow } from '../../Redux/actions'\n\n\nfunction SettingRow(props) {\n  return (\n    <Link \n    className=\"settingRow\" \n    to={props.row.url}\n    style={{\n       backgroundColor: props.settingMenu.find(row => row.id === props.row.id).active ? '#939699' : '#53585c',\n       color: props.settingMenu.find(row => row.id === props.row.id).active ? '#fff' : null\n      }}\n    onClick={() => props.changeStatusSettingRow(props.row.id)}\n    >\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n   settingMenu: state.data.settingMenu\n})\n\nconst mapDispatchToProps = {\n   changeStatusSettingRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  invisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport { changeEmployeEditorForm, changeEmployeeEditorRoleOptions, setRoleEmployeeEdetor } from '../../../../Redux/actions'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'first_name')}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'last_name') }\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'email')}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'login') }\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? (\n        <div className=\"errorMassageInput\">Такой Login уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'password')}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeEditorForm(value, 'phone')}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'inn')}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'doc_name')}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event =>\n          props.changeEmployeEditorForm(event.target.value, 'notes')\n        }\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'post')}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        field=\"role_id\"\n        setElement={props.changeEmployeEditorForm}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeEditorForm,\n  changeEmployeeEditorRoleOptions,\n  setRoleEmployeeEdetor,\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee\n} from '../../../../Redux/actions'\nimport { addPayrules } from '../../../../Redux/actions/payrulleAction'\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst EmploeeyEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusEmployeeEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n    props.addPayrules()\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login &&\n      props.employee.password &&\n      props.employee.role_id !== 0\n    ) {\n      props.createEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n      if (!props.employee.password) {\n        props.setVisibleFlag('inputEmployeePasswordChecked', false)\n      }\n      if (props.employee.role_id === 0) {\n        props.setVisibleFlag('inputEmployeeRoleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login\n    ) {\n      props.seveEditEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit\n            ? `${props.employee.last_name} ${props.employee.first_name}`\n            : 'Новый сотрудник'}\n        </div>\n\n        <div className=\"tabs\">\n          <div\n            className={props.tabs === 1 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(1)}\n          >\n            Общие\n          </div>\n          <div\n            className={props.tabs === 2 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(2)}\n          >\n            Доступ\n          </div>\n        </div>\n\n        {props.tabs === 1 ? <EditEmployeeGenerally /> : null}\n        {props.tabs === 2 ? <EditEmployeePermission /> : null}\n\n        <BottomButtons\n          edit={props.edit}\n          create={hangleCreate}\n          save={hangleSave}\n          delete={() => props.deleteEmployee(true)}\n          recover={ props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n          close={() => props.setVisibleFlag('statusEmployeeEditor', false)}\n          deleted={props.employee.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tabs: state.employee.tabs,\n  edit: state.employee.edit,\n  employee: state.employee,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee,\n  addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editEmoloyee, setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmoloyee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n   editEmoloyee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles, changeShowDeleted, resetEmoloyee} from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmoloyee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={() => props.changeShowDeleted()}\n                        checked={props.showDeleted}\n                        invisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeShowDeleted,\n    resetEmoloyee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeShedule } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n  const weekdays = [\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n    'Воскрсение',\n  ]\n\n  return (\n    <div className=\"schedule mr-rg-20\">\n      <div className=\"lableImput mt15\">График работы локации</div>\n      {props.branch.schedule.map((day, idx) => {\n        return (\n          <div className=\"row mt15\" key={idx}>\n            <Checkbox\n              className=\"w150\"\n              onChange={(event) =>\n                props.changeShedule(idx, 'work_day', event.target.checked)\n              }\n              checked={day.work_day}\n              label={weekdays[idx]}\n              disabled={props.branch.deleted}\n            />\n\n            {props.branch.schedule[idx].work_day ? (\n              <div className=\"row\">\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'start_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.start_time}\n                />\n                <div className=\"w30 tac\">&#8212;</div>\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'end_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.end_time}\n                />\n              </div>\n            ) : null}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n  changeShedule,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeBranchForm } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\nimport {\n  icon_location,\n  icon_map_location,\n  icon_wrench,\n  icon_hammer,\n  icon_radio,\n  icon_git,\n  icon_svg,\n} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchForm('color', color)\n                        props.changeBranchForm('icon', icon)\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setBranchEmployee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\n\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.filter(employee => !employee.deleted).map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n} from '../../../../Redux/actions'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n      props.setVisibleFlag('statusBranchEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateBranch = () => {\n    if (\n      props.branch.name &&\n      props.branch.orders_prefix &&\n      props.branch.documents_prefix\n    ) {\n      props.createBranch()\n    } else {\n      if (!props.branch.name) {\n        props.setVisibleFlag('inputBranchNameChecked', false)\n      }\n      if (!props.branch.orders_prefix) {\n        props.setVisibleFlag('inputBranchPrefixChecked', false)\n      }\n      if (!props.branch.documents_prefix) {\n        props.setVisibleFlag('inputBranchPrefixDocChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.branch.edit ? props.branch.name : ' Новая локация'}\n        </div>\n\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Название\"\n          onChange={(event) => props.changeBranchForm('name', event.target.value)}\n          value={props.branch.name}\n          checkedFlag=\"inputBranchNameChecked\"\n          checked={props.view.inputBranchNameChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Адрес\"\n          onChange={(event) => props.changeBranchForm('address', event.target.value)}\n          value={props.branch.address}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className='textInput w250'\n          title='Телефон'\n          onChange={value => props.changeBranchForm('phone', value)}\n          value={props.branch.phone}\n          disabled={props.branch.deleted}\n          isPhone={true}\n        />\n        <Schedule />\n        <ChooseIcon />\n        <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n        <ChooseOfList\n          id={18}\n          list={props.order_type}\n          field=\"orders_type_id\"\n          setElement={props.changeBranchForm}\n          current_id={props.branch.orders_type_id}\n          width={'250px'}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера заказа\"\n          onChange={(event) => props.changeBranchForm('orders_prefix', event.target.value)}\n          value={props.branch.orders_prefix}\n          checkedFlag=\"inputBranchPrefixChecked\"\n          checked={props.view.inputBranchPrefixChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.orders_prefix}-${\n            props.counters.find((count) => count.id === 1).count\n          }`}\n        </p>\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера документов\"\n          onChange={(event) => props.changeBranchForm('documents_prefix', event.target.value)}\n          value={props.branch.documents_prefix}\n          checkedFlag=\"inputBranchPrefixDocChecked\"\n          checked={props.view.inputBranchPrefixDocChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.documents_prefix}-${\n            props.counters.find((count) => count.id === 2).count\n          }`}\n        </p>\n        <ChooseEmployees />\n\n        <BottomButtons\n          edit={props.branch.edit}\n          create={handleCreateBranch}\n          save={() => props.saveBranch()}\n          recover={\n            props.permissions.includes('setting_recover_branch')\n              ? () => props.deleteBranch(false)\n              : null\n          }\n          delete={() => props.deleteBranch(true)}\n          close={() => props.setVisibleFlag('statusBranchEditor', false)}\n          deleted={props.branch.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  view: state.view,\n  order_type: state.data.order_type,\n  counters: state.data.counters,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editBranch } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\n\nconst TableBranches = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th></th>\n               <th>Название локации</th>\n               <th>Адрес</th>\n               <th>Телефон</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.branches.filter(branch => props.showDeleted || !branch.deleted).map(branch =>{\n            return (\n               <tr \n                  key={branch.id}\n                  className={branch.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => props.editBranch(branch)} \n               >\n                  <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                  <td>{branch.name}</td>\n                  <td>{branch.address}</td>\n                  <td>{showPhone(branch.phone)}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   branches: state.data.branches,\n   showDeleted: state.branch.showDeleted\n   })\n\nconst mapDispatchToProps = {\n   editBranch\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addCounters, changeBranchForm } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n  useEffect(() => {\n    props.addCounters()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n          <span className='headerTitle'>Локации</span>\n        </div>\n\n        <div className='settingPageBody'>\n        <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n        <div className='row'>\n          <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusBranchEditor', true)}\n          > \n            + Добавить локацию\n          </div>\n          {props.permissions.includes('setting_see_branch') ? <Checkbox\n            className='ml10'\n            label='Показать удаленные'\n            onChange={event => props.changeBranchForm('showDeleted', event.target.checked)}\n            checked={props.showDeleted}\n          /> : null}\n        </div>\n\n        <TableBranches/>\n\n        {props.statusBranchEditor ? <BranchEditor/> : null}\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusBranchEditor: state.view.statusBranchEditor,\n  showDeleted: state.branch.showDeleted,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addCounters,\n  changeBranchForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                invisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                invisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.data.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { editEmoloyee, setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmoloyee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmoloyee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={props.changeWarehouseForm}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        invisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        invisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            invisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        invisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    invisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шиблонов не выполнен'))\n\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    invisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={props.changeNotEventForm}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          invisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.invisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            invisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                invisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.data.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n  useEffect(() => {\n    props.addEquipment()\n    props.addDictMalfunction()\n    props.addDictPackagelist()\n    props.addItemPayments()\n  }, [])\n\n  const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Справочники</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ tabs_list }\n        func={props.changeBookForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <BookEquipment/> : null}\n         {props.tabs === 1 ? <MalfunctionBooks/> : null}\n         {props.tabs === 2 ? <PackagelistBook/> : null}\n         {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n  addEquipment,\n  addDictMalfunction,\n  addDictPackagelist,\n  addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n      {/* <div className='settingContent'> */}\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n          {/* </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\n\nimport { addMainData, addEmployees, addStatus, addData } from '../Redux/actions';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\n\n\n\n\nfunction Main(props) {\n\n    // Загружаем строки меню в State\n    useEffect(() => {\n        props.addMainData()\n        props.addEmployees()\n        props.addStatus()\n    }, [])\n    useEffect(() => {\n        props.addData(props.branches.filter(branch => branch.employees.includes(props.user_id))[0], 'current_branch')\n    }, [props.branches])\n\n\n    \n    return (\n        <div>\n            <Sidebar/>\n            <div className = 'contentMain'>\n                <Switch>\n                    <Route path = '/tasks' component = {TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path = '/orders' component = {Orders}/>\n                    <Route path = '/shops' component = {Shops}/>\n                    <Route path = '/payments' component = {Payments}/>\n                    <Route path = '/wherehouse' component = {Wherehouse}/>\n                    <Route path = '/clients' component = {Clients}/>\n                    <Route path = '/analytics' component = {Analytics}/>\n                    <Route path = '/reports' component = {Reports}/>\n                    <Route path = '/telephony' component = {Telephony}/>\n                    <Route path = '/settings' component = {Settings}/>\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.data.branches\n})\n\n  const mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loginAction, loguotAction, addUserAction, log_in } from '../Redux/actions'\n\nfunction Login(props) {\n\n\n  const handleClick = ({target: {form}}) => {\n     props.log_in(form.login.value, form.password.value)\n  }\n\n\n\n  return (\n    <div className=\"mainLoginContaner\">\n      <div className=\"loginContanier\">\n        <h2>Войдите в аккаунт</h2>\n        {props.error_message ? (\n          <span className=\"errorMessageLogin\">{props.error_message}</span>\n        ) : null}\n        <form id=\"loginForm\">\n          <div>\n            <label className=\"loginFormLable\">Логин или Email</label>\n            <input \n              id=\"login\"\n              className=\"loginFormInput\" \n              type=\"text\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <label className=\"loginFormLable\">Пароль</label>\n            <input \n              id=\"password\" \n              className=\"loginFormInput\" \n              type=\"password\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n              Авторизоваться\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  serverUrl: state.data.url_server,\n  error_message: state.data.error_message\n})\n\nconst mapDispatchToProps = {\n    // explicitly forwarding arguments\n    login: loginAction,\n    loguot: loguotAction,\n    addUser: addUserAction,\n    log_in\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)\n","import React  from \"react\";\nimport Main from './components/Main'\nimport { connect } from \"react-redux\";\n\n\nimport Login from './components/Login'\n\n\nfunction App(props) {\n\n\n  return props.token ? <Main/> : <Login/>\n\n  \n}\n\nconst mapStateToProps = state => ({\n  token: state.data.token\n})\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}