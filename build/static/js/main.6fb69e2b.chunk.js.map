{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","data/data.js","data/dataTableHeader.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","Redux/actions/actionUtils.js","Redux/actions/filterAction.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/KindOfGood.js","components/orders/cell/Brand.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","Redux/actions/clientAction.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/general/calandar/CalendarTime.js","components/general/calandar/CalendarNavi.js","components/general/calandar/CalendarOption.js","components/general/calandar/ChooseDate.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPayments.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/newOrder/orderHisroy/OrderPrint.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventsStatus.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventSimple.js","components/orders/newOrder/orderHisroy/OrderEvetns/OrderEvents.js","components/general/TableFields.js","components/orders/newOrder/orderHisroy/OrderEvetns/AddComment.js","components/orders/newOrder/orderHisroy/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/newOrder/orderHisroy/Sticker.js","components/orders/newOrder/orderHisroy/StikerToPrint.js","components/orders/cell/Subtype.js","components/orders/cell/Manager.js","components/orders/cell/MissedPayments.js","components/orders/cell/ManagerNotes.js","components/orders/cell/Cell.js","components/orders/cell/AdCampaign.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/FilterEditor.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","components/general/ChooseOfListMany.js","components/general/ChooseWithSearch.js","components/orders/setCustomFilter/SetGroup.js","components/orders/setCustomFilter/SetBrand.js","components/orders/setCustomFilter/SetSubtype.js","components/orders/setCustomFilter/SetFilter.js","components/orders/TableOrderFields.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","Redux/actions/cashboxAction.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/TableClients.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","menuRows","id","title","image","url","group_name","active","permission_keys","map","per","settingMenu","permission_key","employees","user","JSON","parse","sessionStorage","getItem","status","status_group","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","branches","payrules","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","current_branch","token","login_status","error_message","url_server","process","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","needToResetOrder","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","inputFilterTitleChecked","errorSameMail","errorSameLogin","clientFilter","page","name","phone","search_word","badges","customFilters","general","sort","field_sort","engineer_id","overdue","status_id","status_overdue","urgent","order_type_id","manager_id","created_at","kindof_good","brand","subtype","client_id","search","temp_statuses","temp_order_types","temp_managers","temp_engineers","temp_created_at","temp_kindof_good_id","temp_brand","temp_subtype","temp_client","active_badge","active_filter","title_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","tabs","showDeleted","role_title","first_name","last_name","email","notes","login","password","role_id","permissions","inn","doc_name","post","deleted","order_event_types","dataTableHeader","field","width","visible","order","ordersShow","count","events","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","model","operations","parts","attachments","payments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","warranty_measures","event_filter","event","event_comment","tableFields","position_cursor","position_over","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","filter_name","filter_phone","logo","icon_trush","icon_location","icon_warning","icon_clock","icon_table","icon_briefcase","icon_bug","icon_pencil","icon_calendar","icon_right","icon_left","icon_down","icon_filter","icon_cancel","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","img","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","cashboxes","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_type","relation_id","cashbox_id","employee_id","order_id","target_cashbox_id","cashbox","employee","filter_created_at","setHours","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","payrolls","reimburse","setted_employee","payment_cashbox_type","payment_cashbox_id","payment_cashflow_category","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","rows","row","a","b","view","Object","assign","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","local_save","keys","forEach","includes","setItem","stringify","new_data","every","val","saveToApp","tempFilter","client_name","word","replace","range","role","bool","console","log","tab","equipments_list","equipments","findIndex","phones","statusPhones","statusTitle","tag","tags_list","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","Accept","bad_request","message","clear","warn","changeStatusMenuVisible","changePermissions","editEmoloyee","setClietnCheckbox","setVisibleFlag","changeVisibleState","setVisibleListFlag","changeOrderFormS","changeBranchForm","addData","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","editClient","dispatch","fetch","then","response","json","success","catch","addEmployees","filters","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addDictService","mapDispatchToProps","changeStatusMenuRow","connect","props","className","to","style","find","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","LogoUser","src","alt","Icon","viewBox","user_id","useState","menuVisibel","setMenuVisibel","generally_menu","some","key","report_menu","setting_menu","length","changeFilterState","resetFilter","setSearch","placeholder","onChange","target","handleChange","onKeyPressCapture","preventDefault","handleSearch","badge","opacity","changeOrderState","resetOrder","changeOrderField","addOrders","kindof_good_id","brand_id","subtype_id","changeStatus","update_order","update_badges","changeBookForm","changeBookState","resetBookEquipment","chooseBookSelected","addEquipmentType","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","getEmploeeName","toLocaleString","year","month","day","hour","minute","pathname","datestamp","statusGroop","deltaMinut","Math","round","abs","deltaHour","deltaDay","getDateEstimated","reorderOrderField","columnWidth","setColumnWidth","mouseMove","deltaDrag","pageX","mouseUp","window","removeEventListener","minWidth","draggable","onDragEnd","height","onMouseDown","addEventListener","display","onDragOver","order_position","changePaymentState","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","optionsShowDate","optionsShowRangeDate","showPhone","slice","check0_100","isNaN","showName","showDate","date","currentMonth","today","start_date","setDate","valueOfPhoneInput","changeClientForm","changeClientState","addClients","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","invisible","disabled","func1","func2","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","showList","setShowList","disc","parseFloat","CalendarTime","current_date","getHours","getMinutes","setMinutes","CalendarNavi","visibleInputYear","setVisibleInputYear","months","setCurrent_day","setMonth","getMonth","setVisibleListMonth","visibleListMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","CalendarOption","allDate","first","second","setTime","getTime","getDay","getDate","setVisibleCalendar","ChooseDate","visibleCalendar","firstDay","setFirstDay","secondDay","setSecondDay","current_days","compareDates","date1","date2","dayClassName","class1","class2","join","showSelected","range_date","showRangeDate","showTop","date_range","new_range","prepareRange","handleChoose","onMouseOver","onMouseOut","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","request_body","item","filter_cashboxes","filter_payments","filter_order","closed_order","orders_count","current_branch_id","order_edit","handleClose","chooseData","setChooseData","category","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","settled","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","cteateEquipmentSubtype","setSubtype","changeOrderForm","addAnotherEquipment","deleteDevice","SetOrderGroup","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","iconClassName","iconColor","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","useMemo","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","current_engineer_id","isExist","text","deletePayment","Checkbox","label","EventStatus","time","current_status","changed","new","EventSimple","checkLength","toString","marginLeft","event_type","whiteSpace","TableFields","mainCheckbox","useRef","checked_list","indeterminate","classNameMenu","minHeight","ref","addEventComment","current_status_id","textareaRef","React","useLayoutEffect","max","scrollHeight","resize","shiftKey","selectedOrder","createOrder","model_id","saveOrder","getOrder","history","useHistory","location","goBack","Sticker","forwardRef","stickerToPrintRef","printOSticker","useReactToPrint","content","onAfterPrint","initStatusMenuVisible","list_id","editOrder","mainFilter","statusVis","tFields","table_order","tableHeight","offsetHeight","push","handleEdit","chooseCell","addClientToTempFilter","createCustomFilter","current_statuses","choosed_values","current_list","labelClassName","type_group","allStatuses","func_clear","ChooseOfListMany","len","showWord","mainLable","ChooseWithSearch","current_element","changeFilter","setType","settledType","settledBrand","resetTempFilter","deleteFilter","selectedFilter","overflow","addStatusGroup","addCustomFilters","addAdCampaign","addBadges","employee_access","changeFilterForm","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","selected","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","changeCashboxState","changeCashboxPermissions","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","changeEmployeeSelected","perm","setPerm","available","chooseCashboxSelected","createCashbox","saveEditCashbox","list_per","tab_field","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","income_sum","outcome_sum","cashboxAvailable","setShowDeleted","ivisible","addCashboxes","changePayrollState","getFilter","addPayrolls","editPayroll","type_payrolls","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","setTotal","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","choose","cat","catVisible","setCatVisible","mainCategory","createWarehouseCategory","request_config1","request_config2","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","addWarehouseCategories","addParts","choosePartSelected","columns","Header","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","getCellProps","changeStatusSettingRow","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","changeEmployeEditorForm","changeEmployeeEditorRoleOptions","setRoleEmployeeEdetor","changeEmployeeTabs","createEmployee","seveEditEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","changeShowDeleted","resetEmoloyee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","editBranch","addCounters","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","addStatus","addMainData","counts","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","exact","OrderEditor","loguot","addUser","log_in","access_token","serverUrl","form","app","StrictMode","ReactDOM","document","getElementById"],"mappings":"0SAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,uMACd,CACCD,MAAO,qBACPC,YAAa,4LAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAA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","file":"static/js/main.6fb69e2b.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   },{\n      value: 'see_payment_profit',\n      description: 'Видит транзакии ивлечения прибыли'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import { data_setting_menu } from '../../data/dataSettingRows'\nimport { data_menu_rows } from '../../data/dataSidebarRows'\n\nconst initialState = {\n\n    menuRows: data_menu_rows,\n    settingMenu: data_setting_menu,\n\n    employees: [],\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    branches: [],\n    payrules: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    current_branch: {},\n\n    token: sessionStorage.getItem('1xsndt') || '',\n    login_status: false,\n    error_message: '',\n    url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:80' // Мобильный\n    // url_server: 'http://10.6.1.26:80/' // VPN\n\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n  \n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n  switch (action.type) {\n\n    case 'LOGIN': {\n      return {\n         ...state, \n         token: action.token\n        }}\n\n    case 'LOGUOT': {\n      return {\n         ...state, \n         token: '',\n         login_status: false \n        }}\n\n    case 'ADD_MENU_ROWS': {\n      return {\n         ...state, \n         menuRows: action.rows,\n        }}\n\n    case 'ADD_STATUS': {\n      return {\n         ...state, \n         status: action.status,\n        }}\n\n    case 'ADD_STATUS_GROUP': {\n      return {\n          ...state, \n          status_group: action.status_group,\n        }}\n    \n    case 'ADD_EMPLOYEES': {\n      return {\n         ...state, \n         employees: action.employees,\n        }}\n\n    case 'ADD_USER': {\n      return {\n         ...state, \n         user: action.user,\n         login_status: true \n        }}\n\n    case 'ADD_BADGES': {\n      return {\n          ...state, \n          badges: action.badges\n      }}\n\n\n    case 'ADD_EQUIPMENT': {\n      return {\n        ...state,\n        equipment: action.equipment\n      }}\n\n    case 'CHANGE_STATUS_MENU_ROW': {\n      return {\n      ...state,\n      menuRows: state.menuRows.map(row => {\n        return {\n          ...row,\n          active: row.id === action.id\n        }})}} \n\n    \n    case 'ADD_SETTING_MENU': {\n    return {\n        ...state, \n        settingMenu: action.rows.sort((a, b) => a.id - b.id),\n      }}\n      \n    case 'CHANGE_STATUS_SETTING_ROW': {\n      return {\n        ...state,\n        settingMenu: state.settingMenu.map(row => {\n          return {\n            ...row,\n            active: row.id === action.id\n          }})}} \n\n\n\n    case 'ADD_ROLES': {\n      return {\n          ...state, \n          roles: action.roles,\n        }}\n\n    case 'ADD_AD_CAMPAIGN': {\n      return {\n          ...state, \n          ad_campaign: action.ad_campaign,\n        }\n      }\n\n        \n    case 'ADD_DATA': {\n      return {\n          ...state, \n          [action.field]: action.data,\n        }\n      }\n\n\n\n    default:\n      return state\n  }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    active: false,\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n   needToResetOrder: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: true,\n   checkedOrderKindofGood: true,\n   checkedOrderBrand: true,\n   checkedOrderSubtype: true,\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n   inputFilterTitleChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_VISIBLE_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n\n      \n\n\n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clientFilter: {\n        page: 0,\n        name: '',\n        phone: '7'\n    },\n\n    search_word: '',\n\n\n    // ========================\n    badges: [],\n    customFilters: [],\n\n    title: '',\n    general: false,\n\n    sort: JSON.parse(localStorage.getItem('sort')) || 'desc',\n    field_sort:  JSON.parse(localStorage.getItem('field_sort')) || 'id',\n    page: JSON.parse(localStorage.getItem('page')) || 0,\n\n    engineer_id: JSON.parse(localStorage.getItem('engineer_id')) || null,\n    overdue: JSON.parse(localStorage.getItem('overdue')) || null,\n    status_id: JSON.parse(localStorage.getItem('status_id')) || null,\n    status_overdue: JSON.parse(localStorage.getItem('status_overdue')) || null,\n    urgent: JSON.parse(localStorage.getItem('urgent')) || null,\n    order_type_id: JSON.parse(localStorage.getItem('order_type_id')) || null,\n    manager_id: JSON.parse(localStorage.getItem('manager_id')) || null,\n    created_at: JSON.parse(localStorage.getItem('created_at')) || null,\n    kindof_good: JSON.parse(localStorage.getItem('kindof_good')) || null,\n    brand: JSON.parse(localStorage.getItem('brand')) || null,\n    subtype: JSON.parse(localStorage.getItem('subtype')) || null,\n    client_id: JSON.parse(localStorage.getItem('client_id')) || null,\n\n    search: '',\n\n    temp_statuses: [],\n    temp_order_types: [],\n    temp_managers: [],\n    temp_engineers: [],\n    temp_created_at: [0, 0],\n    temp_kindof_good_id: null,\n    temp_brand: null,\n    temp_subtype: null,\n    temp_client: {},\n\n    active_badge: JSON.parse(localStorage.getItem('active_badge')) || 0,\n    active_filter: JSON.parse(localStorage.getItem('active_filter')) || 0\n}\n\nexport const filterReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_FILTER_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_FILTER_STATE': {\n            const local_save = ['sort', 'field_sort', 'page', 'engineer_id', 'overdue', 'status_id', 'status_overdue',\n                'urgent', 'order_type_id', 'manager_id', 'created_at', 'kindof_good', 'brand', 'subtype', 'client_id',\n                'active_badge', 'active_filter']\n            Object.keys(action.data).forEach(field => {\n                if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n            })\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_FILTER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'RESET_FILTER':\n            return {\n                ...state,\n                page: 0,\n\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n\n                active_badge: 0,\n                active_filter: 0\n            }\n\n        case 'RESET_TEMP_FILTER':\n            return {\n                ...state,\n                temp_statuses: [],\n                temp_order_types: [],\n                temp_managers: [],\n                temp_engineers: [],\n                temp_created_at: [0, 0],\n                temp_kindof_good_id: null,\n                temp_brand: null,\n                temp_subtype: null,\n                temp_client: {},\n            }\n\n        case 'RESET_DATA_FILTER':\n            return {\n                ...state,\n                title: '',\n                general: false,\n            }\n\n        // ========================\n        // case 'ADD_STATUS': {\n        //     return {\n        //         ...state,\n        //         status: action.status.map(status => status.id),\n        //     }\n        // }\n        //\n        // case 'ADD_DATA': {\n        //     if (action.field === 'order_type') {\n        //         return {\n        //             ...state,\n        //             order_type_id: action.data.map(type => type.id)\n        //         }\n        //     } else {\n        //         return state\n        //     }\n        // }\n        //\n        // case 'ADD_EMPLOYEES': {\n        //     return {\n        //         ...state,\n        //         employees: action.employees.map(employee => employee.id),\n        //     }\n        // }\n\n\n\n\n\n        case 'CHANGE_CLIENT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    client_name: action.word\n                }\n            }\n        }\n\n        case 'CHANGE_NAME_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    name: action.word,\n                    phone: ''\n                }\n            }\n        }\n\n\n        case 'CHANGE_PHONE_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    phone: action.word.replace(/[^0-9]/g, ''),\n                    name: ''\n                }\n            }\n        }\n\n        case 'CHANGE_CREATE_AT_MAINFILTER': {\n            return {\n                ...state,\n                tempFilter: {\n                    ...state.tempFilter,\n                    created_at: action.range\n                }\n            }\n        }\n\n\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n  tabs: 1,\n  edit: 0,\n  showDeleted: false,\n  role_title: '',\n\n  first_name: '',\n  last_name: '',\n  email: '',\n  notes: '',\n  phone: '',\n  login: '',\n  password: '',\n  role_id: 0,\n  permissions: [],\n  inn: '',\n  doc_name: '',\n  post: '',\n  deleted: false\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_EMPLOYEE_TAB': {\n         return {\n            ...state, \n            tabs: action.tab,\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n      \n      case 'CHOOSE_EMPLOYEE_SELECTED': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n\n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            role_id: action.role\n         }\n      }\n      \n      case 'CHANGE_SHOW_DELETED': {\n         return {\n            ...state, \n            showDeleted: !state.showDeleted\n         }\n      }\n\n      \n      case 'EDIT_EMPLOYEE': {\n         return {\n            ...state, \n            edit: action.employee.id,\n            first_name: action.employee.first_name || '',\n            last_name: action.employee.last_name || '',\n            email: action.employee.email || '',\n            notes: action.employee.notes || '',\n            phone: action.employee.phone || '',\n            login: action.employee.login || '',\n            role_id: action.employee.role.id,\n            role_title: action.employee.role.title || '',\n            permissions: action.employee.permissions || [],\n            inn: action.employee.inn || '',\n            doc_name: action.employee.doc_name || '',\n            post: action.employee.post || '',\n            deleted: action.employee.deleted\n         }\n      }\n\n      case 'RESET_EMPLOYEE': {\n         return {\n            ...state, \n            edit: 0,\n            first_name: '',\n            last_name: '',\n            email: '',\n            notes: '',\n            phone: '',\n            login: '',\n            password: '',\n            role_title: '',\n            role_id: 0,\n            permissions: [],\n            inn: '',\n            doc_name: '',\n            post: '',\n            deleted: false\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const order_event_types = [\n    {id: 1, title: 'Заказ создан', value: 'CREATE_ORDER'},\n    {id: 2, title: 'Инженер назанчен', value: 'ASSIGN_ENGINEER'},\n    {id: 3, title: 'Инженер изменен', value: 'CHANGE_ENGINEER'},\n    {id: 4, title: 'Менеджер назначен', value: 'ASSIGN_MANAGER'},\n    {id: 5, title: 'Менеджер изменен', value: 'CHANGE_MANAGER'},\n    {id: 6, title: 'Добавлен клиент', value: 'ADD_CLIENT'},\n    {id: 7, title: 'Клиент изменен', value: 'CHANGE_CLIENT'},\n    {id: 8, title: 'Изменение данных', value: 'CHANGE_DATA'},\n    {id: 9, title: 'Срок выполнения изменен', value: 'CHANGE_ESTIMATED_DONE_AT'},\n    {id: 10, title: 'Добавлена операция', value: 'ADD_OPERATION'},\n    {id: 11, title: 'Операция удалена', value: 'DELETE_OPERATION'},\n    {id: 12, title: 'Операция изменена', value: 'CHANGE_OPERATION'},\n    {id: 13, title: 'Добавлена запчасть', value: 'ADD_ORDER_PART'},\n    {id: 14, title: 'Запчасть удалена', value: 'DELETE_ORDER_PART'},\n    {id: 15, title: 'Запчасть изменена', value: 'CHANGE_ORDER_PART'},\n    {id: 16, title: 'Платеж добавлен', value: 'ADD_PAYMENT'},\n    {id: 17, title: 'Платеж удален', value: 'DELETE_PAYMENT'},\n    {id: 18, title: 'Статус изменен', value: 'CHANGE_STATUS'},\n    {id: 19, title: 'Коментарии', value: 'ADD_COMMENT'},\n    {id: 20, title: 'SMS оповещение', value: 'SEND_SMS'},\n    {id: 21, title: 'Email оповещение', value: 'SEND_EMAIL'},\n    {id: 22, title: 'Перемещение заказа', value: 'MOVE_TO'}\n]","const dataTableHeader = [\n    {\n        id: 1,\n        title: 'Заказ №',\n        field: 'id',\n        width: 90,\n        visible: true,\n        order: 1\n    }, {\n        id: 2,\n        title: 'Создан',\n        field: 'created_at',\n        width: 150,\n        visible: true,\n        order: 2\n    }, {\n        id: 3,\n        title: 'Срок заказа',\n        field: 'estimated_done_at',\n        width: 150,\n        visible: true,\n        order: 3\n    }, {\n        id: 4,\n        title: 'Статус',\n        field: 'status.name',\n        width: 150,\n        visible: true,\n        order: 4\n    }, {\n        id: 5,\n        title: 'Устройство',\n        field: 'equipment',\n        width: 150,\n        visible: true,\n        order: 5\n    }, {\n        id: 6,\n        title: 'Тип устройства',\n        field: 'kindof_good',\n        width: 150,\n        visible: true,\n        order: 6\n    }, {\n        id: 7,\n        title: 'Бренд',\n        field: 'brand',\n        width: 130,\n        visible: true,\n        order: 7\n    },{\n        id: 8,\n        title: 'Модуль/Серия',\n        field: 'subtype',\n        width: 130,\n        visible: true,\n        order: 8\n    }, {\n        id: 9,\n        title: 'Неисправность',\n        field: 'malfunction',\n        width: 130,\n        visible: true,\n        order: 9\n    }, {\n        id: 10,\n        title: 'Исполнитель',\n        field: 'engineer_id',\n        width: 150,\n        visible: true,\n        order: 10\n    }, {\n        id: 11,\n        title: 'Менеджер ',\n        field: 'manager_id',\n        width: 150,\n        visible: true,\n        order: 11\n    }, {\n        id: 12,\n        title: 'Клиент',\n        field: 'client.name',\n        width: 150,\n        visible: true,\n        order: 12\n    }, {\n        id: 13,\n        title: 'Цена',\n        field: 'price',\n        width: 130,\n        visible: true,\n        order: 13\n    }, {\n        id: 14,\n        title: 'К оплате',\n        field: 'missed_payments',\n        width: 130,\n        visible: true,\n        order: 14\n    }, {\n        id: 15,\n        title: 'Заметки исполнителя',\n        field: 'engineer_notes',\n        width: 130,\n        visible: true,\n        order: 15\n    }, {\n        id: 16,\n        title: 'Заметки менеджера',\n        field: 'manager_notes',\n        width: 150,\n        visible: true,\n        order: 16\n    }, {\n        id: 17,\n        title: 'Ячейка',\n        field: 'engineer_notes',\n        width: 150,\n        visible: true,\n        order: 17\n    }, {\n        id: 18,\n        title: 'Рекламная компания',\n        field: 'ad_campaign_id',\n        width: 150,\n        visible: true,\n        order: 18\n    }\n]\n\nexport default dataTableHeader","import {order_event_types} from '../../data/data'\nimport dataTableHeader from '../../data/dataTableHeader'\n\nconst initialState = {\n\n    ordersShow: [],\n    count: 0,\n\n    events: [],\n\n    edit: 0,\n    tabs: 1,\n\n    created_at: 0,\n    done_at: 0,\n    closed_at: 0,\n    assigned_at: 0,\n    duration: 0,\n    estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n    scheduled_for: 0,\n    warranty_date: 0,\n    status_deadline: 0,\n\n    ad_campaign_id: 1,\n    branch_id: 0,\n    status: {},\n    client: {},\n    order_type_id: 1,\n    closed_by_id: 0,\n    created_by_id: 0,\n    manager_id: 0,\n    engineer_id: 0,\n    kindof_good: {},\n    brand: {},\n    subtype: {},\n    model: {},\n\n    operations: [],\n    parts: [],\n    attachments: [],\n    payments: [],\n\n    id_label: '',\n    prefix: '',\n    serial: '',\n    malfunction: '',\n    packagelist: '',\n    appearance: '',\n    engineer_notes: '',\n    manager_notes: '',\n    resume: '',\n    cell: '',\n\n    estimated_cost: 0,\n    missed_payments: 0,\n    discount_sum: 0,\n    payed: 0,\n    price: 0,\n    remaining: 0,\n    remaining_status: 0,\n    remaining_warranty: 0,\n\n    overdue: false,\n    status_overdue: false,\n    urgent: false,\n    warranty_measures: false,\n\n    event_filter: JSON.parse(localStorage.getItem('event_filter')) || order_event_types.map(event => event.id),\n    event_comment: '',\n\n    tableFields: JSON.parse(localStorage.getItem('tableFields')) || dataTableHeader,\n\n    position_cursor: 0,\n    position_over: null\n}\n\nexport const orderReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_ORDER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_ORDER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_ORDER_FORM': {\n\n            let equipments_list = state.equipments\n            equipments_list[action.idx][action.field] = action.value\n\n            return {...Object.assign(state, {equipments: equipments_list})}\n\n        }\n\n        case 'CHANGE_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx][action.field] = action.value\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n        case 'REORDER_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx].order = action.order + 0.5\n            tableFields = tableFields.sort( (a, b) => a.order - b.order)\n            tableFields = tableFields.map((field, idx) => {\n                field.order = idx\n                return field\n            })\n\n\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n\n        case 'ADD_ANOTHER_EQUIPMENT': {\n\n\n            return {\n                ...state,\n                equipments: state.equipments.concat([{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }])\n            }\n        }\n\n\n        case 'DELETE_DEVICE': {\n\n            let equipments_list = state.equipments\n            equipments_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                equipments: equipments_list\n            }\n        }\n\n\n        case 'CHANGE_ORDER_FORM_S': {\n\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'RESET_ORDER': {\n\n            return {\n                ...state,\n                events: [],\n                edit: 0,\n                tabs: 1,\n\n                created_at: 0,\n                done_at: 0,\n                closed_at: 0,\n                assigned_at: 0,\n                duration: 0,\n                estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n                // estimated_done_at: 0,\n                scheduled_for: 0,\n                warranty_date: 0,\n                status_deadline: 0,\n\n                ad_campaign_id: 1,\n                branch_id: 0,\n                status_id: 0,\n                client: {},\n                order_type_id: 1,\n                closed_by_id: 0,\n                created_by_id: 0,\n                manager_id: 0,\n                engineer_id: 0,\n                kindof_good: {},\n                brand: {},\n                subtype: {},\n                model: {},\n\n                operations: [],\n                parts: [],\n                attachments: [],\n                payments: [],\n\n                id_label: '',\n                prefix: '',\n                serial: '',\n                malfunction: '',\n                packagelist: '',\n                appearance: '',\n                engineer_notes: '',\n                manager_notes: '',\n                resume: '',\n                cell: '',\n\n                estimated_cost: 0,\n                missed_payments: 0,\n                discount_sum: 0,\n                payed: 0,\n                price: 0,\n                remaining: 0,\n                remaining_status: 0,\n                remaining_warranty: 0,\n\n                overdue: false,\n                status_overdue: false,\n                urgent: false,\n                warranty_measures: false,\n\n\n                equipments: [{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }],\n            }\n        }\n\n\n        case 'EDIT_ORDER': {\n\n            return {\n                ...state,\n                edit: action.order.id,\n                created_at: action.order.created_at,\n                done_at: action.order.done_at,\n                closed_at: action.order.closed_at,\n                assigned_at: action.order.assigned_at,\n                duration: action.order.duration,\n                estimated_done_at: action.order.estimated_done_at,\n                scheduled_for: action.order.scheduled_for,\n                warranty_date: action.order.warranty_date,\n                status_deadline: action.order.status_deadline,\n\n                ad_campaign_id: action.order.ad_campaign.id,\n                branch_id: action.order.branch.id,\n                status: action.order.status,\n                client: action.order.client,\n                order_type_id: action.order.order_type.id,\n                closed_by_id: action.order.closed_by_id,\n                created_by_id: action.order.created_by_id,\n                manager_id: action.order.manager_id,\n                engineer_id: action.order.engineer_id,\n                kindof_good: action.order.kindof_good,\n                brand: action.order.brand,\n                subtype: action.order.subtype,\n                model: action.order.model,\n\n                operations: action.order.operations,\n                parts: action.order.parts,\n                attachments: action.order.attachments,\n                payments: action.order.payments,\n\n                id_label: action.order.id_label,\n                prefix: action.order.prefix,\n                serial: action.order.serial,\n                malfunction: action.order.malfunction,\n                packagelist: action.order.packagelist,\n                appearance: action.order.appearance,\n                engineer_notes: action.order.engineer_notes || '',\n                manager_notes: action.order.manager_notes || '',\n                resume: action.order.resume || '',\n                cell: action.order.cell || '',\n\n                estimated_cost: action.order.estimated_cost,\n                missed_payments: action.order.missed_payments,\n                discount_sum: action.order.discount_sum,\n                payed: action.order.payed,\n                price: action.order.price,\n                remaining: action.order.remaining,\n                remaining_status: action.order.remaining_status,\n                remaining_warranty: action.order.remaining_warranty,\n\n                overdue: action.order.overdue,\n                status_overdue: action.order.status_overdue,\n                urgent: action.order.urgent,\n                warranty_measures: action.order.warranty_measures\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n    clients: [],\n\n    juridical: false,\n    supplier: false,\n    conflicted: false,\n    should_send_email: false,\n    deleted: false,\n\n    name: '',\n    name_doc: '',\n    email: '',\n    address: '',\n    phone: [{\n        title: 'Мобильный',\n        number: '',\n        notify: false\n    }],\n    ad_campaign_id: 1,\n    discount_code: '',\n    discount_goods: 0,\n    discount_goods_margin_id: 1,\n    discount_materials: 0,\n    discount_materials_margin_id: 1,\n    discount_services: 0,\n    discount_service_margin_id: 0,\n    notes: '',\n    tags: [],\n\n    ogrn: '',\n    inn: '',\n    kpp: '',\n    juridical_address: '',\n    director: '',\n    bank_name: '',\n    settlement_account: '',\n    corr_account: '',\n    bic: '',\n\n    discount_good_type: false,\n    discount_materials_type: false,\n    discount_service_type: false,\n\n    tabs: 0,\n    phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n    statusPhoneList: [false],\n    statusAddTitle: [false],\n\n    page: 0,\n    filter_name: '',\n    filter_phone: ''\n\n}\n\nexport const clientReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_CLIENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_CLIENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SET_CLIENT_CHECKBOX': {\n\n            if (action.value === 'change') {\n                return {\n                    ...state,\n                    [action.field]: !state[action.field]\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: action.value\n                }\n            }\n        }\n\n\n        case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n            let phones = state.phone\n            phones[action.idx].number = action.value\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n        case 'ADD_PHONE_COUNTER': {\n\n            return {\n                ...state,\n                phone: state.phone.concat([{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }]),\n                statusPhoneList: state.statusPhoneList.concat([false])\n            }\n        }\n\n        case 'DELETE_COUNT_NUMBER': {\n\n            let phones = state.phone\n            phones.splice(action.idx, 1)\n            const statusPhones = state.statusPhoneList\n            statusPhones.splice(action.idx, 1)\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n\n        case 'SET_PHONE_NOTIFY': {\n\n            let phones = state.phone\n            phones[action.idx].notify = !phones[action.idx].notify\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n\n        case 'SET_PHONE_TITLE': {\n\n            let phones = state.phone\n            phones[action.idx].title = action.title\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n        case 'CHANGE_STATUS_PHONE_LIST': {\n\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = false\n\n            return {\n                ...state,\n                statusPhoneList: statusPhones,\n                statusAddTitle: statusTitle\n            }\n        }\n\n\n        case 'CHANGE_STATUS_ADD_TITLE': {\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = !statusTitle[action.idx]\n\n            return {\n                ...state,\n                statusAddTitle: statusTitle\n            }\n        }\n\n        case 'SET_AD_CANMPAIGN_CLIENT': {\n\n            return {\n                ...state,\n                ad_campaign_id: action.id\n            }\n        }\n\n        case 'ADD_CLIENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_CLIENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n        case 'RESET_DATA_CLIENT': {\n            return {\n                ...state,\n                juridical: false,\n                supplier: false,\n                conflicted: false,\n                should_send_email: false,\n                deleted: false,\n\n                name: '',\n                name_doc: '',\n                email: '',\n                address: '',\n                phone: [{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }],\n                ad_campaign_id: 1,\n                discount_code: '',\n                discount_goods: 0,\n                discount_goods_margin_id: 1,\n                discount_materials: 0,\n                discount_materials_margin_id: 1,\n                discount_services: 0,\n                discount_service_margin_id: 0,\n                notes: '',\n                tags: [],\n\n                ogrn: '',\n                inn: '',\n                kpp: '',\n                juridical_address: '',\n                director: '',\n                bank_name: '',\n                settlement_account: '',\n                corr_account: '',\n                bic: '',\n\n                discount_good_type: false,\n                discount_materials_type: false,\n                discount_service_type: false,\n\n                edit: 0,\n                tabs: 0,\n                statusPhoneList: [false],\n                statusAddTitle: [false]\n\n            }\n        }\n\n        case 'CHANGE_CLIENT_TABS': {\n\n            return {\n                ...state,\n                tabs: action.tab\n            }\n        }\n\n\n        case 'EDIT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id\n            }\n        }\n\n\n        case 'EDIT_CURRENT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id,\n                tabs: 1\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n\nexport const icon_filter = 'M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z'\n\nexport const icon_cross = 'M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z'\n\nexport const icon_cancel = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z M21 8l-5 5-5-5-3 3 5 5-5 5 3 3 5-5 5 5 3-3-5-5 5-5z'\n\nexport const icon_letter = 'M29 4h-26c-1.65 0-3 1.35-3 3v20c0 1.65 1.35 3 3 3h26c1.65 0 3-1.35 3-3v-20c0-1.65-1.35-3-3-3zM12.461 17.199l-8.461 6.59v-15.676l8.461 9.086zM5.512 8h20.976l-10.488 7.875-10.488-7.875zM12.79 17.553l3.21 3.447 3.21-3.447 6.58 8.447h-19.579l6.58-8.447zM19.539 17.199l8.461-9.086v15.676l-8.461-6.59z'\n\nexport const icon_user = 'M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'\n\nexport const icon_arrow_right = 'M19.414 27.414l10-10c0.781-0.781 0.781-2.047 0-2.828l-10-10c-0.781-0.781-2.047-0.781-2.828 0s-0.781 2.047 0 2.828l6.586 6.586h-19.172c-1.105 0-2 0.895-2 2s0.895 2 2 2h19.172l-6.586 6.586c-0.39 0.39-0.586 0.902-0.586 1.414s0.195 1.024 0.586 1.414c0.781 0.781 2.047 0.781 2.828 0z'\n\nexport const icon_bubble = 'M16 6c-1.717 0-3.375 0.271-4.928 0.804-1.46 0.502-2.76 1.211-3.863 2.108-2.069 1.681-3.209 3.843-3.209 6.088 0 1.259 0.35 2.481 1.039 3.63 0.711 1.185 1.781 2.268 3.093 3.133 0.949 0.625 1.587 1.623 1.755 2.747 0.056 0.375 0.091 0.753 0.105 1.129 0.233-0.194 0.461-0.401 0.684-0.624 0.755-0.755 1.774-1.172 2.828-1.172 0.168 0 0.336 0.011 0.505 0.032 0.655 0.083 1.325 0.126 1.99 0.126 1.717 0 3.375-0.271 4.928-0.804 1.46-0.502 2.76-1.211 3.863-2.108 2.069-1.681 3.209-3.843 3.209-6.088s-1.14-4.407-3.209-6.088c-1.104-0.897-2.404-1.606-3.863-2.108-1.553-0.534-3.211-0.804-4.928-0.804zM16 2v0c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z'\n\nexport const icon_loop = 'M4 10h20v6l8-8-8-8v6h-24v12h4zM28 22h-20v-6l-8 8 8 8v-6h24v-12h-4z'\n\nexport const icon_arrow_down = 'M27.414 19.414l-10 10c-0.781 0.781-2.047 0.781-2.828 0l-10-10c-0.781-0.781-0.781-2.047 0-2.828s2.047-0.781 2.828 0l6.586 6.586v-19.172c0-1.105 0.895-2 2-2s2 0.895 2 2v19.172l6.586-6.586c0.39-0.39 0.902-0.586 1.414-0.586s1.024 0.195 1.414 0.586c0.781 0.781 0.781 2.047 0 2.828z'\n\nexport const icon_coin_dollar = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM15 29c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM16 16v-4h4v-2h-4v-2h-2v2h-4v8h4v4h-4v2h4v2h2v-2h4l-0-8h-4zM14 16h-2v-4h2v4zM18 22h-2v-4h2v4z'\n","import { icon_location } from \"../../data/icons\"\n\nconst initialState = {\n   name: '',\n   address: '',\n   phone: '',\n   color: 'grey',\n   icon: icon_location,\n   orders_type_id: 1,\n   orders_type_strategy: 'last',\n   orders_prefix: 'OTS',\n   documents_prefix: 'A',\n   employees: [],\n   deleted: false,\n   schedule: [\n      {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 1\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 2\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 3\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 4\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 5\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 6\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 7\n      },\n   ],\n\n   edit: 0,\n   showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BRANCH_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_SCHEDULE': {\n\n         let list_schedule = state.schedule\n         list_schedule[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            schedule: list_schedule\n         }\n      }\n      \n      case 'SET_BRANCH_EMPLOYEE': {\n         if (action.id.every(id => state.employees.includes(id))) {\n            return {\n               ...state, \n               employees: state.employees.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n            }\n         }\n      }\n\n      case 'RESET_BRANCH': {\n\n         return {\n            ...state, \n            name: '',\n            address: '',\n            phone: '',\n            color: 'grey',\n            icon: icon_location,\n            orders_type_id: 1,\n            orders_type_strategy: 'last',\n            orders_prefix: 'OTS',\n            documents_prefix: 'A',\n            employees: [],\n            deleted: false,\n            schedule: [\n               {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 1\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 2\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 3\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 4\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 5\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 6\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 7\n               },\n            ],\n\n            edit: 0\n         }\n      }\n\n      \n      case 'EDIT_BRANCH': {\n\n         return {\n            ...state, \n            name: action.branch.name,\n            address: action.branch.address,\n            phone: action.branch.phone,\n            color: action.branch.color,\n            icon: action.branch.icon,\n            orders_type_id: action.branch.orders_type_id,\n            orders_type_strategy: action.branch.orders_type_strategy,\n            orders_prefix: action.branch.orders_prefix,\n            documents_prefix: action.branch.documents_prefix,\n            employees: action.branch.employees,\n            deleted: action.branch.deleted,\n            schedule: action.branch.schedule,\n\n            edit: action.branch.id\n         }\n      }\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_BOOK_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n\n   cashboxes: [],\n\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   showDeleted: false,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_CASHBOX_STATE': {\n         const local_save = []\n         Object.keys(action.data).forEach(field => {\n            if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n         })\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","const now = new Date()\n\nconst initialState = {\n\n    payments: [],\n\n    edit: 0,\n    sum: 0,\n    title: '',\n\n    cashflow_category: '',\n    description: '',\n\n    deposit: 0,\n    income: 0,\n    outcome: 0,\n    direction: 0,\n\n    can_print_fiscal: false,\n    deleted: false,\n    is_fiscal: false,\n\n    created_at: 0,\n    custom_created_at: null,\n\n    tags: [],\n\n    relation_type: 0,\n    relation_id: null,\n    cashbox_id: 0,\n    client_id: 0,\n    employee_id: 0,\n    order_id: 0,\n    target_cashbox_id: 0,\n\n    cashbox: {},\n    client: {},\n    employee: {},\n    order: {},\n\n    filter_created_at: [\n        parseInt(now.setHours(0, 0, 0, 0) / 1000),\n        parseInt(now.setHours(23, 59, 59, 999) / 1000)\n    ],\n    filter_tags: [],\n\n    current_type: 0,\n    context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_PAYMENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'CHOOSE_PAYMENT_SELECTED': {\n            if (action.id.every(id => state[action.field].includes(id))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n                }\n            }\n        }\n\n        case 'ADD_PAYMENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_PAYMENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n\n        case 'RESET_PAYMENTS': {\n\n            return {\n                ...state,\n                edit: 0,\n                sum: 0,\n                title: '',\n\n                cashflow_category: '',\n                description: '',\n\n                deposit: 0,\n                income: 0,\n                outcome: 0,\n                direction: 0,\n\n                can_print_fiscal: true,\n                deleted: false,\n                is_fiscal: false,\n\n                created_at: 0,\n                custom_created_at: 0,\n\n                tags: [],\n\n                relation_type: 0,\n                relation_id: null,\n                cashbox_id: 0,\n                client_id: 0,\n                employee_id: 0,\n                order_id: 0,\n                target_cashbox_id: 0,\n\n                context: {}\n            }\n        }\n\n        case 'SET_PAYMENT': {\n\n            return {\n                ...state,\n                edit: action.payment.id,\n\n                cashflow_category: action.payment.cashflow_category,\n                description: action.payment.description,\n\n                deposit: action.payment.deposit,\n                income: action.payment.income,\n                outcome: action.payment.outcome,\n                direction: action.payment.direction,\n\n                can_print_fiscal: action.payment.can_print_fiscal,\n                deleted: action.payment.deleted,\n                is_fiscal: action.payment.is_fiscal,\n\n                created_at: action.payment.created_at,\n                custom_created_at: action.payment.custom_created_at,\n\n                tags: action.payment.tags,\n\n                relation_type: action.payment.relation_type,\n                relation_id: action.payment.relation_id,\n                cashbox: action.payment.cashbox,\n                client: action.payment.client,\n                employee: action.payment.employee,\n                order: action.payment.order,\n                target_cashbox_id: action.payment.target_cashbox_id,\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n       \n      //  case 'CHOOSE_EMPLOYEE_SELECTED': {\n      //     if (action.value.every(val => state[action.field].includes(val))) {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n      //        }\n      //     } else {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n      //        }\n      //     }\n      //  }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            // engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const now = new Date()\n\nconst initialState = {\n\n   payrolls: [],\n\n   edit: 0,                   // id при редактировании\n\n   description: '',              // Описание\n   income: 0,                    // Входящяя сумма\n   outcome: 0,                   // Иcходящая сумму\n   direction: 0,                 // Направление платежа\n   deleted: false,               // Платеж удален\n   reimburse: false,             // Совершен возврат\n   created_at: null,             // Дата создания\n   custom_created_at: null,      // Дата установленая пользователем\n   relation_type: 0,             // Тип начисления\n   relation_id: 0,               // id связанного события\n   employee_id: 0,               // Сотрудник\n   order_id: null,               // Заказ\n\n   setted_employee: 0,           // Выбранный сотрудник\n   showDeleted: false,           // Показать удаленные\n\n   filter_created_at: [\n      parseInt(now.setHours(0, 0, 0, 0) / 1000),\n      parseInt(now.setHours(23, 59, 59, 999) / 1000)\n   ],\n   payment_cashbox_type: 0,      // Тип платежа (для создания платежа при выплате ЗП)\n   payment_cashbox_id: 0,        // id кассы (для создания платежа при выплате ЗП)\n   payment_cashflow_category: 0, // категория расходов (для создания платежа при выплате ЗП)\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_PAYROLL_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,\n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null,\n\n            payment_cashbox_type: 0,\n            payment_cashbox_id: 0,\n            payment_cashflow_category: 0\n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n        thunk\n    ),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store","import store from \"./store\"\n\nfunction getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${state.data.token}`,\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n\nfunction bad_request(message = '') {\n    sessionStorage.clear()\n    console.warn(message)\n    return {type: 'LOGUOT'}\n}\n\nexport function loginAction(token) {\n    return {\n        type: 'LOGIN',\n        token,\n    }\n}\n\nexport function loguotAction() {\n    return {\n        type: 'LOGUOT'\n    }\n}\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\n\nexport function changeClientListFilter() {\n    return {\n        type: 'CHANGE_CLIENT_LIST_FILTER'\n    }\n}\n\nexport function changeClientMainFilter(word) {\n    return {\n        type: 'CHANGE_CLIENT_MAINFILTER',\n        word\n    }\n}\n\n\n\nexport function changeCreateAtMainFilter(range) {\n    return {\n        type: 'CHANGE_CREATE_AT_MAINFILTER',\n        range\n    }\n}\n\n\nexport function changeStatusMenuRow(id) {\n    return {\n        type: 'CHANGE_STATUS_MENU_ROW',\n        id\n    }\n}\n\nexport function changeStatusSettingRow(id) {\n    return {\n        type: 'CHANGE_STATUS_SETTING_ROW',\n        id\n    }\n}\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\nexport function changeEmployeeTabs(tab) {\n    return {\n        type: 'CHANGE_EMPLOYEE_TAB',\n        tab\n    }\n}\n\nexport function changeEmployeEditorForm(value, field) {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_FORM',\n        value,\n        field\n    }\n}\n\nexport function changeEmployeeSelected(value, field) {\n    return {\n        type: 'CHOOSE_EMPLOYEE_SELECTED',\n        value,\n        field\n    }\n}\n\n\nexport function changeEmployeeEditorRoleOptions() {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS'\n    }\n}\n\n\nexport function setRoleEmployeeEdetor(role) {\n    return {\n        type: 'SET_ROLE_EMPLOYEE_EDITOR',\n        role\n    }\n}\n\nexport function changeShowDeleted() {\n    return {\n        type: 'CHANGE_SHOW_DELETED'\n    }\n}\n\n\nexport function editEmoloyee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmoloyee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function changeVisibleState( data ) {\n    return {\n        type: 'CHANGE_VISIBLE_STATE',\n        data\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeBranchForm(field, value) {\n    return {\n        type: 'CHANGE_BRANCH_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return dispatch => {\n        dispatch({\n            type: 'EDIT_BRANCH',\n            branch\n        })\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusBranchEditor',\n            value: true\n        })\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\n\n\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        email: login,\n        password\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/login', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    sessionStorage.setItem('1xsndt', data.access_token);\n                    sessionStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'user',\n                        data: data.user,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'login_status',\n                        data: true,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'token',\n                        data: data.access_token,\n                    })\n                } else {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'error_message',\n                        data: data.message,\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос авторизации не выполнен'))\n    }\n}\n\n\n// Client ================================================================================================================\n\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function seveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов изделий не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на удаление роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'generally_info',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.branch,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'order_type',\n                        data: data.order_type,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.counts,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ad_campaign',\n                        data: data.ad_campaign,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'status_group',\n                        data: data.status_group,\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes}\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.service_prices,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос счетчиков не выполнен'))\n    }\n}\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос флиалов не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос статей плтатежей не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuRow } from '../../Redux/actions'\n\n\nfunction MenuRow(props) {\n  return (\n    <Link \n      className=\"menuRow\" \n      to={props.row.url}\n      style={props.menuRows.find(row => row.id === props.row.id).active ? {\n        backgroundColor: '#53585c',\n        borderLeftColor: props.current_branch.color \n      } : null}\n      onClick={() => props.changeStatusMenuRow(props.row.id)}\n    >\n      {props.row.image === 'task' ? (\n        <div className=\"taskNumber\">\n          <span className=\"taskNumber1\">8</span>\n        </div>\n      ) : (\n        <svg className=\"sidebarIcon\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n        </svg>\n      )}\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n  menuRows: state.data.menuRows,\n  current_branch: state.data.current_branch\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\n\n\n\nfunction LogoUser() {\n    \n    return (\n        <div className = 'avatar'> \n        \n            <img \n                src = {`${process.env.PUBLIC_URL}/data/avatars/ava.jpeg`}\n                className = 'imgAvatar' \n                alt = 'User avatar' \n            />\n        </div>\n    )\n    \n}\n\nexport default LogoUser;\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addData } from '../../Redux/actions'\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n   const [menuVisibel, setMenuVisibel] = useState(false)\n\n   return (\n      <div>\n      <div \n         className='menuBranch'\n         onClick={() => setMenuVisibel(!menuVisibel)}\n      >\n         <Icon \n            className='smalIcon'\n            icon={props.current_branch.icon} \n            color={props.current_branch.color}\n         />\n         <div className='sidebarBranch'>\n           {props.current_branch.name}\n         </div>\n      </div>\n      {menuVisibel ? <div className='listOptionsBranch'>\n         {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n            <div \n               key={branch.id}\n               className='listBranch'\n               onClick={() => {\n                  props.addData(branch, 'current_branch')\n                  setMenuVisibel(false)\n               }}\n            >\n               <Icon \n                  className='smalIcon'\n                  icon={branch.icon} \n                  color={branch.color}\n               />\n               <div className='ml5'>{branch.name}</div>\n            </div>\n         ))}\n      </div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_branch: state.data.current_branch,\n   branches: state.data.branches,\n   user_id: state.data.user.id\n   })\n\nconst mapDispatchToProps = {\n   addData\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.data.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nexport function bad_request(message='') {\n    sessionStorage.clear()\n    console.warn(message)\n    return { type: 'LOGUOT' }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeFilterForm( value, field ) {\n    return {\n        type: 'CHANGE_FILTER_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeFilterState( data ) {\n    return {\n        type: 'CHANGE_FILTER_STATE',\n        data\n    }\n}\n\n// export function editFilter(filter) {\n//     return {\n//         type: 'EDIT_FILTER',\n//         filter\n//     }\n// }\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function resetTempFilter() {\n    return {\n        type: 'RESET_TEMP_FILTER'\n    }\n}\n\n\nexport function selectedFilter( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_FILTER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function addBadges() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_access: !state.data.user.role.orders_visibility ? state.data.user.id : null,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function createCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.filter.title,\n        general: state.filter.general,\n        employee_id: state.data.user.id,\n        filters: {\n            page: 0,\n            engineer_id: state.filter.temp_engineers.length ? state.filter.temp_engineers : null,\n            overdue: null,\n            status_id: state.filter.temp_statuses.length ? state.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: state.filter.temp_order_types.length ? state.filter.temp_order_types : null,\n            manager_id: state.filter.temp_managers.length ? state.filter.temp_managers : null,\n            created_at: state.filter.temp_created_at.some(date => date) ? state.filter.temp_created_at : null,\n            kindof_good: state.filter.temp_kindof_good_id,\n            brand: state.filter.temp_brand,\n            subtype: state.filter.temp_subtype,\n            client_id: Object.values(state.filter.temp_client).length ? [state.filter.temp_client.id] : null\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n\n    }\n}\n\n\nexport function deleteFilter() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.filter.active_filter,\n        employee_id: state.data.user.id\n    })\n    request_config.method = 'DELETE'\n\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {\n                            customFilters: data.data,\n                            active_filter: 0\n                        }\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\nconst Header = props => {\n\n   const [search, setSearch] = useState('')\n\n    const handleChange = event => {\n        setSearch(event.target.value)\n        if (!search) props.changeFilterState({search: ''})\n    }\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if(!props.filter.active_badge) props.resetFilter()\n        if (event.key === 'Enter') props.changeFilterState({search})\n    }\n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => handleChange(event)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\n// function MainFilter({data: {color, title, count, img, filters}, activeBadge}) {\nconst MainFilter = props => {\n\n    const handleChoose = () => {\n        if (props.active_badge !== props.badge.id) {\n            props.changeFilterState({\n                ...props.badge.filter,\n                active_badge: props.badge.id,\n                active_filter: 0\n            })\n        } else {\n            props.resetFilter()\n        }\n    }\n\n    return (\n        <div\n            className='mainFilter'\n            style={{\n                backgroundColor: props.badge.color,\n                opacity: props.active_badge === props.badge.id || props.active_badge === 0 ? 1 : 0.3\n            }}\n            onClick={handleChoose}\n        >\n            <div className='pd5'>\n                <Icon icon={props.badge.icon} className='icon-s25' color='white'/>\n            </div>\n            <div className='filterName'>\n                <div className='filterName-value'>\n                    {props.badge.count} {props.badge.count === 1 ? 'заказ' : ((props.badge.count < 5) ? 'заказа' : 'заказов')}\n                </div>\n                <div className='filterName-title'> {props.badge.title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    active_badge: state.filter.active_badge\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainFilter);","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport MainFilter from './MainFilter'\n\nconst Filters = props => {\n\n    return (\n        <div className='mainFilters'>\n            {props.badges.map(badge => (\n                    badge.count ? <MainFilter badge={badge} key={badge.id}/> : null\n                ))\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.filter.badges\n})\n\nexport default connect(mapStateToProps)(Filters)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeOrderState(data) {\n    return {\n        type: 'CHANGE_ORDER_STATE',\n        data\n    }\n}\n\nexport function selectedOrder(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_ORDER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function changeOrderField(id, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FIELD',\n        id,\n        field,\n        value\n    }\n}\n\nexport function reorderOrderField(id, order) {\n    return {\n        type: 'REORDER_ORDER_FIELD',\n        id,\n        order\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good_id: state.filter.kindof_good,\n        brand_id: state.filter.brand,\n        subtype_id: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        search: state.filter.search\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count}\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        created_by_id: state.data.user.id,\n        branch_id: state.data.current_branch.id,\n        status_id: 1,\n\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id || null,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        urgent: state.order.urgent,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost,\n\n        filter: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            search: state.filter.search,\n\n            update_badges: true\n        }\n    })\n\n\n    return async dispatch => {\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true, statusOrderEditor: false}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: 'EDIT_ORDER',\n                    order: data.order\n                })\n                if (state.view.checkOrderSticker) {\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusOrderSticker: true, needToResetOrder: true}\n                    })\n                }\n                dispatch({\n                    type: 'CHANGE_ORDER_STATE',\n                    data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                })\n                dispatch({\n                    type: 'CHANGE_FILTER_STATE',\n                    data: {badges: data.badges}\n                })\n\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        if (state.view.checkOrderSticker) {\n             await dispatch({\n                type: 'CHANGE_VISIBLE_STATE',\n                data: {statusOrderSticker: true}\n            })\n        } else {\n            await dispatch({\n                type: 'RESET_ORDER'\n            })\n        }\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false}\n        })\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        order_id: order_id,\n        status_id: status_id,\n        filter: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            search: state.filter.search,\n\n            update_order: state.order.edit,\n            update_badges: true\n        }\n    })\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                    })\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.badges}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client_id: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent,\n        filter: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            search: state.filter.search,\n\n            update_badges: true\n        }\n    })\n    request_config.method = 'PUT'\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                dispatch({\n                    type: 'EDIT_ORDER',\n                    order: data.order\n                })\n                dispatch({\n                    type: 'CHANGE_ORDER_STATE',\n                    data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                })\n                dispatch({\n                    type: 'CHANGE_FILTER_STATE',\n                    data: {badges: data.badges}\n                })\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function getOrder(order_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({id: order_id})\n\n    return async dispatch => {\n        \n        await fetch(state.data.url_server + '/get_order', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function addEventComment() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        order_id: state.order.edit,\n        current_status_id: state.order.status.id,\n        branch_id: state.data.current_branch.id,\n        comment: state.order.event_comment\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_comment', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || [], event_comment: ''}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание коментариев не выполнен'))\n    }\n\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function changeBookState(data) {\n    return {\n        type: 'CHANGE_BOOK_STATE',\n        data\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n            title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.data.branches.map(branch => branch.id),\n            deleted: false,\n            filter: {\n                title,\n                deleted: state.book.showDeleted\n            }\n        })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.kindof_good.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.brand.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.subtype.id,\n        branches: state.data.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_type,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = props => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        const employee = props.employees.find((employee) => employee.id === id)\n        return employee ? `${employee.last_name} ${employee.first_name}`: ''\n      }\n    }\n\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(props.order.created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(props.order.created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\n\nconst Lable = props => {\n   return (\n      <td className=\"orderLabel tableRow\">\n          <Link\n              className='orderLink'\n              to={{\n                  pathname: `/orders/${props.order.id}`,\n                  state: { order_id: props.order.id }\n              }}\n          >\n              <span\n                  className={props.order.urgent && props.order.status.group < 4 ? 'fire-text': null}\n              >\n                  { props.order.id_label }\n              </span>\n          </Link>\n      </td>\n   )\n}\n\n\nconst mapDispatchToProps ={\n}\n  \n export default connect(null, mapDispatchToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = props => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 24) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!props.order.overdue && props.order.status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(props.order.remaining, props.order.status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(props.order.estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {changeOrderField, changeOrderState, reorderOrderField} from '../../Redux/actions/orderActions'\n\n\nfunction TableHeader(props) {\n\n    const [columnWidth, setColumnWidth] = useState(props.data.width)\n\n    const mouseMove = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        if (deltaDrag) setColumnWidth(columnWidth + deltaDrag)\n    }\n\n    const mouseUp = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        setColumnWidth(columnWidth + deltaDrag)\n        props.changeOrderField(props.data.id, 'width', columnWidth + deltaDrag)\n        window.removeEventListener('mousemove', mouseMove)\n        window.removeEventListener('mouseup', mouseUp)\n    }\n\n    const handleDragStart = event => {\n        props.changeOrderState({position_cursor: event.pageX})\n        window.addEventListener('mousemove', mouseMove)\n        window.addEventListener('mouseup', mouseUp)\n    }\n\n    const handleEndDrag = () => {\n        props.reorderOrderField(props.data.id, props.order.position_over)\n        props.changeOrderState({position_over: null})\n    }\n    const handleDragOver = (order_position) => {\n        if (props.order.position_over !== order_position) {\n            props.changeOrderState({position_over: order_position})\n        }\n    }\n\n\n    return (\n        <th\n            className='tableColumnHeader'\n            style={{minWidth: `${columnWidth}px`}}\n        >\n            <div className='row'>\n\n                <div\n                    className='ml5 w100 '\n                    onClick={() => props.changeFilterState({\n                        field_sort: props.data.field,\n                        sort: props.filter.sort === 'asc' ? 'desc' : 'asc'\n                    })}\n                    draggable\n                    onDragEnd={handleEndDrag}\n                >\n                    {props.data.title}\n                    <span>\n                            {props.filter.field_sort === props.data.field ? (props.filter.sort === 'asc' ? '↓' : '↑') : null}\n                        </span>\n                </div>\n                <div\n                    style={{height: '40px'}}\n                    className='curResize'\n                    onMouseDown={handleDragStart}\n                />\n                <div\n                    style={{display: props.order.position_over === props.data.order ? 'block' : 'none'}}\n                    className='dragOver'\n                />\n                <div\n                    className='overArea'\n                    onDragOver={() => handleDragOver(props.data.order)}\n                />\n            </div>\n\n        </th>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    changeOrderField,\n    changeOrderState,\n    reorderOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changePaymentState( data ) {\n    return {\n        type: 'CHANGE_PAYMENT_STATE',\n        data\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    let request_body = {\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: state.payment.income,\n        outcome: -state.payment.outcome,\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at || now,\n        tags: state.payment.tags,\n        relation_type: state.payment.relation_type,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    }\n    if (context.type === 'payment') {\n        request_body.filter_cashboxes = {\n            deleted: null\n        }\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    if (context.type === 'order') request_body.filter_order = {\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good_id: state.filter.kindof_good,\n        brand_id: state.filter.brand,\n        subtype_id: state.filter.subtype,\n        client_id: state.filter.client_id,\n\n        update_order: state.order.edit,\n    }\n    if (context.type === 'closed_order') {\n        request_body.closed_order = {\n            order_id: context.order_id,\n            status_id: context.status_id,\n            filter: {\n                sort: state.filter.sort,\n                field_sort: state.filter.field_sort,\n                page: state.filter.page,\n\n                engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n                overdue: state.filter.overdue,\n                status_id: state.filter.status_id,\n                status_overdue: state.filter.status_overdue,\n                urgent: state.filter.urgent,\n                order_type_id: state.filter.order_type_id,\n                manager_id: state.filter.manager_id,\n                created_at: state.filter.created_at,\n                kindof_good_id: state.filter.kindof_good,\n                brand_id: state.filter.brand,\n                subtype_id: state.filter.subtype,\n                client_id: state.filter.client_id,\n\n                search: state.filter.search,\n\n                update_order: state.order.edit,\n                update_badges: true\n            }\n        }\n    }\n    const request_config = getRequestConfig(request_body)\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (context.type === 'payment') {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'CHANGE_CASHBOX_STATE',\n                            data: {cashboxes: data.cashboxes},\n                        })\n                    }\n                    if (context.type === 'order') {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    }\n                    if (context.type === 'closed_order') {\n                        if (state.order.edit) {\n                            dispatch({\n                                type: 'EDIT_ORDER',\n                                order: data.order\n                            })\n                            dispatch({\n                                type: 'CHANGE_ORDER_STATE',\n                                data: {events: data.events}\n                            })\n                        }\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, count: data.orders_count}\n                        })\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {badges: data.badges}\n                        })\n                    }\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false, statusPaymentsEditor: false}\n        })\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: state.payment.filter_created_at,\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYMENT_STATE',\n                        data: {payments: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_body = {\n        id: state.payment.edit,\n        relation_type: state.payment.relation_type,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        order_id: state.payment.order.id,\n        deleted: flag\n    }\n    if (state.order.edit) {\n        request_body.filter_order = {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n\n            update_order: state.order.edit\n        }\n    } else {\n        request_body.filter_cashboxes = {\n            deleted: null\n        }\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    let request_config = getRequestConfig(request_body)\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    } else {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                        dispatch({\n                            type: 'CHANGE_CASHBOX_STATE',\n                            data: {cashboxes: data.cashboxes}\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPaymentsCard: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос удаление платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, changeVisibleState} from '../../Redux/actions'\nimport { changePaymentState} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentState({\n                direction: income ? 2 : 1,\n                [income ? 'income': 'outcome']: Math.abs(props.order.missed_payments),\n                client_id: props.order.client.id,\n                description: income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`,\n                cashflow_category: income ? 2 : 8,\n                employee_id: props.current_user_id,\n                order_id: props.order.edit || props.order.id,\n                context: {\n                    type: 'closed_order',\n                    order_id: props.order.edit || props.order.id,\n                    status_id: status.id\n                }\n            })\n            props.editCurrentClient(props.order.client)\n            props.changeVisibleState({'statusPaymentsEditor': true})\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                // props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentState,\n    changeVisibleState,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.order.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.order.id)}\n            >\n                {props.order.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.order.id]] ? <StatusList order={props.order}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = props => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {props.order.kindof_good.title}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Brand = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.brand.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Brand)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Malfunction = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.malfunction}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Engineer = props => {\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}` : ''\n        }\n    }\n\n    return (\n        <td>\n            <div>\n                {getEmploeeName(props.order.engineer_id)}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees\n})\n\nexport default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\nconst optionsShowRangeDate = {\n   year: 'numeric',\n   month: 'numeric',\n   day: 'numeric'\n}\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 9)}-${phone.slice(9, 11)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function showRangeDate (range_date) {\n   const first = new Date(range_date[0] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   const second = new Date(range_date[1] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   return `${first} - ${second}`\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = props => {\n\n   return props.permissions.includes('see_client') ? (\n      <td>\n      <div className=\"tableClientName noWr\">{props.order.client.name}</div>\n      <div className=\"orderDate noWr\">{showPhone(props.order.client.phone[0].number)}</div>\n    </td>\n   ) : <td><div/></td>\n}\n\nconst mapStateToProps = state => ({\n    permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = props => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{props.order.price || null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = props => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {props.order.engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = props => {\n    return (\n        <td>\n            <div className=\"tableText row\">\n                <div>\n                    <img\n                        alt=''\n                        className=\"icon_equipment\"\n                        src={props.order.kindof_good.icon}\n                    />\n                </div>\n                <div>\n                    <div className='noWr'>\n                        {props.order.kindof_good.icon ? null : <span className=\"\">{props.order.kindof_good.title}</span>}\n                        <span className=\"ml5\">{props.order.brand.title}</span>\n                    </div>\n                    <div className='noWr'>\n                        <span>{props.order.subtype.title}</span>\n                        <span className=\"orderDate ml5\">{props.order.model.title}</span>\n                    </div>\n                </div>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Equipment)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeClientState( data ) {\n    return {\n        type: 'CHANGE_CLIENT_STATE',\n        data\n    }\n}\n\n\nexport function addClients() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.client.page,\n        name: state.client.filter_name,\n        phone: state.client.filter_phone\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CLIENT_STATE',\n                        data: {clients: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентов не выполнен'))\n    }\n}\n\nexport function addClientToTempFilter(id) {\n\n    const state = store.getState()\n\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (data.count) {\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {temp_client: data.data[0]}\n                        })\n                    }\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентa не выполнен'))\n\n    }\n}\n\n/*\nexport function editTemple(temple) {\n    return {\n        type: 'EDIT_TEMPLE',\n        temple\n    }\n}\n\nexport function resetTemple() {\n    return {\n        type: 'RESET_TEMPLE'\n    }\n}\n\n\nexport function selectedTemple( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_TEMPLE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addTemple() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_temple', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function createTemple() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на создание temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n\n\nexport function saveTemple() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на изменение temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.temple.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n*/","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.invisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// invisible={false}","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.invisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (current ? `${current.last_name} ${current.first_name}` : 'не назначен') :\n               (current ? (current.title || current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   invisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.invisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport {icon_trush} from '../../../data/icons'\nimport {valueOfPhoneInput} from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n    const handleChange = (idx, event) => {\n        const out = event.target.value.replace(/[^0-9]/g, '')\n        if (out.length < 12) props.changeClientEditorPhone(idx, out)\n    }\n\n    return (\n        <div>\n            {props.client.phone.map((phone, idx) => (\n                <div key={idx}>\n                    <PhoneTitle idx={idx} title={phone.title}/>\n\n                    <div className=\"inputPhoneBox\">\n                        <input\n                            className='textInput w250'\n                            onChange={event => handleChange(idx, event)}\n                            value={valueOfPhoneInput(phone.number)}\n                            onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n                            style={!props.view.inputClientPhoneChecked[idx] ? {borderColor: 'red'} : null}\n                        />\n                        {idx !== 0 ? (\n                            <div\n                                onClick={() => {\n                                    props.deleteCountNumber(idx)\n                                    props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                                }}\n                            >\n                                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                                    <path d={icon_trush}/>\n                                </svg>\n                            </div>\n                        ) : null}\n                    </div>\n                    {!props.view.inputClientPhoneChecked[idx] ? (\n                        <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n                    ) : null}\n                    <div className=\"checkbox mt5\">\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => props.setPhoneNotify(idx)}\n                            checked={phone.notify}\n                        />\n                        <label>Согласен получать SMS</label>\n                    </div>\n                </div>\n            ))}\n            <div\n                className=\"addPhone\"\n                onClick={() => {\n                    props.addPhoneCounter()\n                    props.addVisibleFlag('inputClientPhoneChecked')\n                }}\n            >\n                + Добавить телефон\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    client: state.client,\n    view: state.view,\n})\n\nconst mapDispatchToProps = {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx)}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientState} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={idx => props.changeClientState({tabs: idx})}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { editCurrentClient, changeVisibleState} from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\nimport {showPhone} from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\nimport {changeClientState} from '../../Redux/actions/clientAction'\n\nconst SetClientByName = (props) => {\n\n    const [showList, setShowList] = useState(false)\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n            !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n        ) {\n            setShowList(false)\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className='w400 h52'>\n\n            <div className='lableImput mt15'>Имя клиента</div>\n\n            <div className='blockImput'>\n                <div\n                    id='clientInputBoxOfPayments'\n                    className='orderInputBox'\n                    onClick={() => setShowList(true)}\n                >\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changeClientState({filter_name: event.target.value})}\n                    />\n                    <div\n                        className='simbolButton'\n                        onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                    >\n                        +\n                    </div>\n                    <div className='simbolButton'>&#6662;</div>\n                </div>\n\n                {showList ?\n                    <div className='listFilter' id='listClientsOfOfPayments'>\n                        {props.clients.map(client => (\n                            <div\n                                className='rowGropList'\n                                key={client.id}\n                                onClick={() => {\n                                    setShowList(false)\n                                    props.editCurrentClient(client)\n                                    props.changePaymentState({client_id: client.id})\n                                }}\n                            >\n                                <div>{client.name}</div>\n                                <div className='orderDate'>\n                                    {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                </div>\n                            </div>\n                        ))}\n                    </div> : null}\n\n            </div>\n\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.filter.clientFilter.phone,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    editCurrentClient,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentState({\n                                    [props.payment.direction === 2 ? 'income' : 'outcome']: parseFloat(event.target.value.replace(/[^0-9.]/g, ''))\n                                 })}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.cashbox.cashboxes\n})\n\nconst mapDispatchToProps = {\n   changePaymentState,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React from 'react'\n\nconst CalendarTime = props => {\n    return props.invisible ? null : (\n        <div className='calandarTime'>\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            :\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default CalendarTime\n\n","\nimport React, {useState} from 'react'\n\nconst CalendarNavi = props => {\n\n\n    const [visibleInputYear, setVisibleInputYear] = useState(false)\n\n    const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n    const handleInputYear = (value) => {\n        let out = value.replace(/[^0-9]/g, '')\n        if (value > 9999) out = 9999\n        if (value < 0) out = 0\n        props.setCurrent_day(new Date(props.current_date.setFullYear(out)))\n    }\n\n    return (\n        <div>\n        <div className='calendarNavi'>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() - 1)))}\n            >\n                {'<'}\n            </div>\n\n            <div className='row'>\n                <div\n                    className='currMonth'\n                    onClick={() => props.setVisibleListMonth(!props.visibleListMonth)}\n                >\n                    <div>{months[props.current_date.getMonth()]}</div>\n                    <div className='gu'>&#6662;</div>\n                </div>\n\n                {visibleInputYear ?\n                    <input\n                        className='optionFilterInput w30'\n                        autoFocus\n                        onChange={event => handleInputYear(event.target.value)}\n                        value={props.current_date.getFullYear()}\n                        onBlur={() => setVisibleInputYear(false)}\n                    /> :\n                    <div\n                        className='pd5'\n                        onDoubleClick={() => setVisibleInputYear(true)}\n                    >\n                        {props.current_date.getFullYear()}\n                    </div>}\n                <div className='nextY'>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() + 1)))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() - 1)))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() + 1)))}\n            >\n                {'>'}\n            </div>\n        </div>\n        {props.visibleListMonth ?\n            <div className='monthList' id='monthList'>\n                    {months.map((month, idx) => (\n                        <div\n                            key={idx}\n                            className='month'\n                            onClick={() => {\n                                props.setCurrent_day(new Date(props.current_date.setMonth(idx)))\n                                props.setVisibleListMonth(!props.visibleListMonth)\n                            }}\n                        >\n                            {month}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\n\n\nexport default CalendarNavi","import React from 'react'\n\n\nconst CalendarOption = props => {\n\n    const chooseAllDate = () => {\n        props.func([0, 0])\n        props.setListVisible(false)\n    }\n\n    const chooseToday = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Устанавливаем время на конец дня\n        second.setHours(23, 59, 59, 999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день текущей недели\n        first.setTime(first.getTime() - (first.getDay() - 1 || 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день недели\n        // second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем первый день текущего месяца\n        first.setDate(1)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        // second.setMonth(first.getMonth() + 1)\n        // second.setDate(1)\n        // second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisYear = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало года\n        first.setMonth(0)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n\n    }\n\n    const chooseLastWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день прошлой недели\n        first.setTime(first.getTime() - ((first.getDay() - 1 || 7) + 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день прошлой недели\n        second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseLastMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем дату на начало прошлого месяца\n        first.setMonth(first.getMonth() - 1)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        second.setMonth(first.getMonth() + 1)\n        second.setDate(1)\n        second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseDate = () => {\n        props.setListVisible(false)\n        props.setVisibleCalendar(true)\n    }\n\n\n    return props.invisible ? null : (\n        <div\n            id='listCalendarOption'\n            className='listOptionsChoose'\n            style={{width: props.width}}\n        >\n            {props.allDate ? <div className='options' onClick={chooseAllDate}>Все время</div> : null}\n            <div className='options' onClick={chooseToday}>Сегодня</div>\n            <div className='options' onClick={chooseThisWeek}>Текущая неделя</div>\n            <div className='options' onClick={chooseThisMonth}>Текущий месяц</div>\n            <div className='options' onClick={chooseThisYear}>Текущий год</div>\n            <div className='options' onClick={chooseLastWeek}>Прошлая неделя</div>\n            <div className='options' onClick={chooseLastMonth}>Прошлый месяц</div>\n            <div className='options' onClick={chooseDate}>Выбрать даты</div>\n        </div>\n    )\n}\n\n\nexport default CalendarOption","import React, {useState, useEffect} from 'react'\n\n\nimport {showDate, showRangeDate} from '../utils'\n\nimport Icon from '../Icon'\nimport {icon_calendar} from '../../../data/icons'\nimport CalendarTime from './CalendarTime'\nimport CalendarNavi from './CalendarNavi'\nimport CalendarOption from './CalendarOption'\n\n\n/**\n *\n * title='title'\n *\n * className='className'\n *\n * width='100%'\n *\n * showTop={false}\n *\n * range={false}\n *\n * allDate={false}\n *\n * func={date => console.log(date)}\n *\n * current_date={props.current_date}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseDate = (props) => {\n\n    // Текущий день, от которого расчитвывается текущие показания календаря\n    const [current_date, setCurrent_day] = useState(new Date)\n    // Флаг - показать скрыть меню выбора месяца\n    const [visibleListMonth, setVisibleListMonth] = useState(false)\n    // Флаг - показать/скрыть календарь\n    const [visibleCalendar, setVisibleCalendar] = useState(false)\n    // Первый выбраный день из диапазона\n    const [firstDay, setFirstDay] = useState(0)\n    // Второй выбраный день (выбирается наводом курсора)\n    const [secondDay, setSecondDay] = useState(0)\n    // Меню выбора диапазона дат\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        // Скрываем меню выбора месяца при клику вне меню\n        if (!event.path.map(el => el.id).includes('monthList')) {\n            if (visibleListMonth) {\n                setVisibleListMonth(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('calendar')) {\n            if (visibleCalendar) {\n                setVisibleCalendar(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('listCalendarOption')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        // Добавим слушателя кликов и обработчик при создании компанента\n        window.addEventListener('click', clickHandel)\n        // и удалим слушателя при удалении компанента\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n\n    // Создаим объект даты из текущей выбранной дыты\n    let first = new Date(current_date)\n    // Утановим теущей дате 1 число\n    first.setDate(1)\n    // Отнимим от текущей даты количество дней равное дню недели (получим дату отсчета для отрисовки в поле календаря)\n    first.setTime(first.getTime() - (first.getDay() || 7) * 24 * 60 * 60 * 1000)\n\n    // создадим массив дней для отрисовки в поле календаря\n    let current_days = []\n    // Заполним массив днями приращивая по одному\n    for (let i = 0; i < 42; i++) {\n        current_days[i] = new Date(first.getTime() + 24 * 60 * 60 * 1000)\n        first.setTime(first.getTime() + 24 * 60 * 60 * 1000)\n    }\n\n    /**\n     *\n     * @param date1 - Объект Date\n     * @param date2 - Объект Date\n     * @returns {boolean} - true - если год, месяц и день совпадают, false - если нет\n     */\n    const compareDates = (date1, date2) => {\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n\n    /**\n     * Подготовка диапазона дат перед тем как вернуть данный диапазон\n     *\n     * @param date_range {array} - Массив из двух объектов Date\n     * @returns {array} - Массив из timestamp\n     */\n    const prepareRange = (date_range) => {\n        // Функция сортировки для метода sort\n        const sort_func = (a, b) => {\n            if (a > b) return 1\n            return -1\n        }\n        // Отсортируем в даты в порядке возрастания\n        let new_range = date_range.sort(sort_func)\n        // Установим время для первой даты\n        new_range[0].setHours(0, 0, 0, 0)\n        // Установим время для второй даты\n        new_range[1].setHours(23, 59, 59, 999)\n        // возвращаем новый дипазон\n        return new_range\n    }\n\n    /**\n     * Обработчик события onClick дня каледара\n     * @param day {Object} - Объект Date\n     */\n    const handleChoose = (day) => {\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если еще не выбран первый день\n            if (!firstDay) {\n                // Обнуляем текущее значение в state приложения (чтобы не отображался выбраный диапазон на календаре)\n                props.func([0, 0])\n                // Устанавливаем первый день в state копмпонета\n                setFirstDay(day)\n            // Если первый день уже выбран\n            } else {\n                // Возвращаем предварительно подготовленные данные из компонента\n                props.func(prepareRange([firstDay, day]))\n                // Обнуляем первый день в state компонента\n                setFirstDay(0)\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // возвращаем выбранную дату\n            props.func(day)\n            // устанавливаем текущую дату в state компонента\n            setCurrent_day(new Date(day))\n        }\n\n    }\n\n    /**\n     * Очень запутанная функция для определения класса стилей для каждого отрисовываемого дня в календаре\n     *\n     * @param day {Object} - Объект Date\n     * @returns {string} - набор стилей для каждого отрисованного дня в календаре\n     */\n    const dayClassName = (day) => {\n        // Общий стиль для всег дней\n        const class1 = 'calendarDay'\n        // Стиль для дней за пределами отображаемого месяца\n        const class2 =  day.getMonth() === current_date.getMonth() ? '' : 'calgr'\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если сущестует уже выбранный диапазон\n            if (props.current_date && props.current_date[0] && props.current_date[1]) {\n                // Стиль для крайних дней уже выбранного диапазона дат\n                const class3 = compareDates(new Date(props.current_date[0] * 1000), day) ||\n                               compareDates(new Date(props.current_date[1] * 1000), day) ? 'settedDay' : ''\n                // Стиль для дня внутри уже выбранного диапазона дат\n                const class4 = props.current_date[0] < day/1000 && day/1000 < props.current_date[1] ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            // Если диапазон дат еще не выбран\n            } else {\n                // Функция для определения попадает ли день в выбираемый диапазон дат\n                const showSelected = (day) => {\n                    if (firstDay && secondDay) {\n                        return  firstDay/1000 < day/1000 && day/1000 <= secondDay/1000 ||\n                            firstDay/1000 > day/1000 && day/1000 >= secondDay/1000\n                    } else { return false }\n                }\n                // Стиль для первого выбрнного дня\n                const class3 = compareDates(firstDay || new Date(0), day) ? 'settedDay' : ''\n                // Стиль для ней попадающих в выбираемый диапазон\n                const class4 = showSelected(day) ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // Стиль для выбранной даты\n            const class3 = compareDates(new Date(props.current_date), day) ? 'settedDay' : ''\n            return [class1, class2, class3].join(' ')\n        }\n    }\n\n\n    const title = props.range ?\n        (props.current_date && props.current_date.some(date => date) ? showRangeDate(props.current_date) : 'Любая')\n        : showDate(props.current_date / 1000)\n\n    const handleChangeDate = () => {\n        if (props.range) {\n            setListVisible(true)\n        } else {\n            setVisibleCalendar(true)\n        }\n    }\n\n    return props.invisible ? <div/> :(\n        <div\n            className={props.className}\n            style={{width: props.width}}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='dateContaner'\n                onClick={handleChangeDate}\n            >\n                <Icon\n                    className='icon-s2 mlr5'\n                    icon={icon_calendar}\n                    color='gray'\n                />\n                <div>{title}</div>\n            </div>\n\n            <CalendarOption\n                width={props.width}\n                invisible={!listVisible}\n                allDate={props.allDate}\n                setListVisible={setListVisible}\n                setVisibleCalendar={setVisibleCalendar}\n                func={date => props.func(date)}\n            />\n\n\n            {visibleCalendar && !props.disabled ?\n                <div className={props.showTop ? 'calendar_top' : 'calendar_down'} id='calendar'>\n\n                    <CalendarNavi\n                        func={data => props.func(data)}\n                        current_date={current_date}\n                        setCurrent_day={setCurrent_day}\n                        setVisibleListMonth={setVisibleListMonth}\n                        visibleListMonth={visibleListMonth}\n                    />\n\n                    <div className='row'>\n                        {weekDays.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className='calendarWeekDay'\n                            >\n                                {day}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className='calendarDays'>\n                        {current_days.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className={dayClassName(day)}\n                                onClick={() => handleChoose(day)}\n                                onMouseOver={() => setSecondDay(day)}\n                                onMouseOut={() => setSecondDay(0)}\n                            >\n                                {day.getDate()}\n                            </div>\n                        ))}\n                    </div>\n\n                    <CalendarTime\n                        func={data => props.func(data)}\n                        current_date={props.current_date}\n                        invisible={props.range}\n                    />\n                </div> : null}\n\n        </div>\n    )\n}\n\nexport default ChooseDate","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addItemPayments, refreshDataOrder, changeStatusMenuVisible, changeVisibleState} from '../../Redux/actions'\nimport { addPaymentTag, deletePaymentTag, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\nimport {addClients} from '../../Redux/actions/clientAction'\n\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\nimport ChooseDate from '../general/calandar/ChooseDate'\n\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            'inputPaymentSumChecked': true,\n            'inputPaymentCashboxChecked': true,\n            'inputPaymentDescChecked': true,\n            'inputPaymentCashflowChecked': true,\n            'inputPaymentEmployeeChecked': true,\n            'statusPaymentsEditor': false,\n        })\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('344')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.changeVisibleState({'in}putPaymentSumChecked': false})\n            if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction))\n                props.changeVisibleState({'inputPaymentCashboxChecked': false})\n            if (!props.payment.description)\n                props.changeVisibleState({'inputPaymentDescChecked': false})\n            if (!props.payment.cashflow_category)\n                props.changeVisibleState({'inputPaymentCashflowChecked': false})\n            if (!props.payment.employee_id)\n                props.changeVisibleState({'inputPaymentEmployeeChecked': false})\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id)\n        // (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentState({custom_created_at: null})\n                            }}\n                            func2={() => {\n                                setChooseData(true)\n                                props.changePaymentState({custom_created_at: parseInt(new Date() / 1000)})\n                            }}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        <ChooseDate\n                            className='h31'\n                            width='250px'\n                            func={date => props.changePaymentState({custom_created_at: parseInt(date / 1000)})}\n                            current_date={props.payment.custom_created_at * 1000}\n                            invisible={!chooseData}\n                        />\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                            close={() => props.changeVisibleState({client_id: 0})}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 0\n                                })\n                            }}\n                            func2={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 1\n                                })\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox => props.changePaymentState({[props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'] : cashbox})}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentState({description: event.target.value})}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={category => props.changePaymentState({cashflow_category: category})}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        invisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={employee => props.changePaymentState({employee_id: employee})}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    filter: state.filter,\n    client: state.client,\n    cashboxes: state.cashbox.cashboxes,\n    current_branch_id: state.data.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.data.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    changeVisibleState,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = props.current_branch ? <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/> : null\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.data.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, changeOrderFormS, changeVisibleState} from '../../../../Redux/actions'\nimport {showPhone} from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\nimport {changeClientState} from '../../../../Redux/actions/clientAction'\n\nconst SetClient = (props) => {\n\n    const [listClientsVisible, setListClientsVisible] = useState(false)\n    const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n        ) {\n            if (listClientsVisible) {\n                setListClientsVisible(false)\n            }\n        }\n    }\n\n    const clickHandel2 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n            !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n        ) {\n            if (listClientsPhoneVisible) {\n                setListClientsPhoneVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        window.addEventListener('click', clickHandel2)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n            window.removeEventListener('click', clickHandel2)\n        }\n    })\n\n\n    return (\n        <div className='cleintForm'>\n\n            <div className='formRow'>\n                <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n                <div className='blockImput'>\n                    <div\n                        id='orderInputBoxOfOrder'\n                        className='orderInputBox'\n                        onClick={() => setListClientsVisible(true)}\n                        style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => props.changeClientState({filter_name: event.target.value})}\n                            value={props.name}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n                    {props.view.checkedOrderClient ?\n                        <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n                    {listClientsVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrder'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n            </div>\n\n            <div className='formRow'>\n\n                <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n                <div className='blockImput'>\n\n                    <div\n                        id='orderInputBoxOfOrderPhone'\n                        className='orderInputBox'\n                        onClick={() => setListClientsPhoneVisible(true)}\n                    >\n                        <LableInput\n                            className='w100'\n                            inputClassName='optionFilterInput'\n                            onChange={value => props.changeClientState({filter_phone: value})}\n                            value={props.phone}\n                            isPhone={true}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n\n\n                    {listClientsPhoneVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsPhoneVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n\n            </div>\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.client.filter_phone,\n    name: state.client.filter_name,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.changeVisibleState({[props.checkedFlag]: !!event.target.value}) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n    changeVisibleState\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentBrand, addEquipmentBrand, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderBrand = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand])\n\n\n    const edit = props.order.edit\n    const disabled = !Object.values(props.book.equipment_type).length\n    const seted = !!Object.values(props.order.brand).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_brand: {}})\n    }\n\n    const setBrand = brand => {\n        props.changeOrderState({brand})\n        props.changeBookState({equipment_brand: brand, filter_brand: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderBrand: true})\n    }\n\n    return (\n        <div>\n            <button\n                id=\"optionsOrderTextOfBrand\"\n                style={!props.view.checkedOrderBrand ? {borderColor: 'red'} : null}\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder=\"Выбирете бренд\"\n                    value={seted ? props.order.brand.title : props.book.filter_brand}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderBrand ? (\n                <div className=\"errorMassageInput\">\n                    {'Необоходимо выбрать из списка'}\n                </div>\n            ) : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfBrand\">\n                    {props.book.equipment_brands.map(brand => (\n                        visibleBotton ? null :\n                            <div\n                                key={brand.id}\n                                className=\"rowGropList\"\n                                onClick={() => setBrand(brand)}\n                            >\n                                {brand.title}\n                            </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                                onKeyPress={event => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentBrand(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_brand}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить бренд\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentBrand,\n    changeVisibleState,\n    addEquipmentBrand,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentType, addEquipmentType, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\nimport {icon_cancel, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderGroupe = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const settled = !!Object.values(props.order.kindof_good).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            kindof_good: {},\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_type: {}})\n        props.changeVisibleState({checkedOrderKindofGood: true})\n    }\n\n\n    const setOrderType = equipment => {\n        props.changeOrderState({kindof_good: equipment}) \n        props.changeBookState({filter_type: '', equipment_type: equipment})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    return (\n        <div>\n            <button\n                className='optionsFilterText'\n                id='optionsOrderTextOfGroup'\n                onClick={() => setVisibleList(true)}\n                disabled={settled}\n                style={!props.view.checkedOrderKindofGood? {borderColor: 'red'} : null}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={settled ? props.order.kindof_good.title : props.book.filter_type}\n                    disabled={settled}\n                />\n                {settled && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderKindofGood ?\n                <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n                {props.book.equipment_types.map(equipment => (\n                    visibleBotton ? null :\n                    <div\n                        key={equipment.id}\n                        className='rowGropList'\n                        onClick={() => setOrderType(equipment)}\n                    >\n                        {equipment.title}\n                    </div>\n                ))}\n                <div className='btmsts'>\n                    {visibleBotton ?\n                        <input\n                            className='optionFilterInput'\n                            autoFocus\n                            onChange={event => props.changeBookState({filter_type: event.target.value})}\n                            onKeyPress={(event) => {\n                                if (event.key === 'Enter') {\n                                    props.createEquipmentType(event.target.value)\n                                    setVisisbleBotton(false)\n                                }\n                            }}\n                            onBlur={() => setVisisbleBotton(false)}\n                            value={props.book.filter_type}\n                            placeholder='Введите и нажмиете Enter'\n                        /> :\n                        <div\n                            className='btnstsTitle'\n                            onClick={() => setVisisbleBotton(true)}\n                        >\n                            Добавить тип\n                        </div>}\n                </div>\n\n            </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentType,\n    addEquipmentType,\n    changeBookState,\n    changeOrderState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {createEquipmentModel, addEquipmentModel, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderModel = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model])\n\n\n    const disabled = !Object.values(props.book.equipment_subtype).length\n    const seted = !!Object.values(props.order.model).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const setModel = model => {\n        props.changeOrderState({model})\n        props.changeBookState({equipment_model: model, filter_model: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    const reset = () => {\n        props.changeOrderState({model: {}})\n        props.changeBookState({equipment_model: {}})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfModel\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_model: event.target.value})}\n                    placeholder=\"Выбирете модель\"\n                    value={seted ? props.order.model.title : props.book.filter_model}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfModel\">\n                    {props.book.equipment_models.map((model) => (\n                        visibleBotton ? null :\n                        <div\n                            key={model.id}\n                            className=\"rowGropList\"\n                            onClick={() => setModel(model)}\n                        >\n                            {model.title}\n                        </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_model: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentModel(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_model}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модель\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentModel,\n    changeOrderState,\n    addEquipmentModel,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, addEquipmentSubtype, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Subtype from './Subtype'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(props.order.subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_subtype: {}})\n\n    }\n\n    const setSubtype = subtype => {\n        props.changeOrderState({subtype})\n        props.changeBookState({equipment_subtype: subtype, filter_subtype: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderSubtype: true})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? props.order.subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => (\n                        visibleBotton ? null :\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(subtype)}\n                            />\n                        )\n                    )}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_subtype}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    changeVisibleState,\n    addEquipmentSubtype,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS} from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n    return (\n        <div>\n\n            <div className='formRow mt15'>\n                <div className='optionsTitle'></div>\n                <div className='orderFormTitle'>Изделиe и неисправность</div>\n            </div>\n\n            <div className='orderDevice'>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Тип устройства<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderGroup idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Бренд<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderBrand idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Модуль / Серия<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderSubtype idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>Модель</div>\n                    <div className='blockImput'>\n                        <SetOrderModel idx={0}/>\n                    </div>\n                </div>\n\n                <LabelInputOrder\n                    idx={23}\n                    className='formRow'\n                    title='Неисправность'\n                    name='malfunction'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'malfunction')}\n                    value={props.order.malfunction}\n                    checkedFlag='inputMalfunctionChecked'\n                    checked={props.view.inputMalfunctionChecked}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Комплектация'\n                    name='packagelist'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'packagelist')}\n                    value={props.order.packagelist}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Внешинй вид'\n                    name='appearance'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n                    value={props.order.appearance}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <div className='formRow'>\n                    <div className='optionsTitle'>Срочно</div>\n                    <div className='blockImput'>\n                        <div className='checkbox pd-tb-5 al-itm-fs'>\n                            <input\n                                type='checkbox'\n                                onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                                checked={props.order.urgent}\n                                disabled={!props.permissions.includes('edit_info_orders')}\n                            />\n                            <label></label>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderForm,\n    addAnotherEquipment,\n    deleteDevice,\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderFormS} from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/calandar/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n    return (\n        <div>\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Рекламная компания</div>\n                <div className=\"blockImput\">\n                    <ChooseOfList\n                        id={14}\n                        list={props.ad_campaign}\n                        setElement={props.changeOrderFormS}\n                        field='ad_campaign_id'\n                        current_id={props.order.ad_campaign_id}\n                        width={'250px'}\n                        disabled={!props.permissions.includes('edit_info_orders')}\n                    />\n                </div>\n            </div>\n\n            <ChooseSingleEquipment/>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\"></div>\n                <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n            </div>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Заметки приемщика</div>\n                <div className=\"blockImput mh\">\n          <textarea\n              className=\"textInput\"\n              name=\"manager_notes\"\n              onChange={(event) =>\n                  props.changeOrderFormS(event.target.value, 'manager_notes')\n              }\n              value={props.order.manager_notes}\n              disabled={!props.permissions.includes('edit_info_orders')}\n          />\n                </div>\n            </div>\n\n            <LabelInputOrder\n                className=\"formRow\"\n                title=\"Ориетнировачная стоимость\"\n                name=\"estimated_cost\"\n                onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n                value={props.order.estimated_cost}\n                disabled={!props.permissions.includes('edit_info_orders')}\n            />\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Дата готовности</div>\n                <div className=\"blockImput\">\n                    <ChooseDate\n                        func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n                        current_date={props.order.estimated_done_at * 1000}\n                        disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n                        showTop={true}\n                        // range={true}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ad_campaign: state.data.ad_campaign,\n    order: state.order,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id,\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n        }\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос создание операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id,\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n        }\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос создание операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id,\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        order_id: state.order.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               invisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * invisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n *\n * icon={icon} // Иконка\n *\n * iconClassName='iconClassName' // Класс иконки\n *\n * iconColor='black' // Цвет Иконки\n */\nconst Button = (props) => {\n   return props.invisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.invisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.invisible || props.disabled}\n      >\n          <div className='row'>\n              {props.icon ? <Icon icon={props.icon} className={props.iconClassName} color={props.iconColor}/> : null}\n              {props.title ? <div className='ml5'>{props.title}</div> : null}\n          </div>\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    invisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconColor: PropTypes.string\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id,\n\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id\n        }\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await  fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        order_id: state.order.edit,\n        deleted: flag,\n\n        filter_order: {\n            sort: state.filter.sort,\n            field_sort: state.filter.field_sort,\n            page: state.filter.page,\n\n            engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n            overdue: state.filter.overdue,\n            status_id: state.filter.status_id,\n            status_overdue: state.filter.status_overdue,\n            urgent: state.filter.urgent,\n            order_type_id: state.filter.order_type_id,\n            manager_id: state.filter.manager_id,\n            created_at: state.filter.created_at,\n            kindof_good_id: state.filter.kindof_good,\n            brand_id: state.filter.brand,\n            subtype_id: state.filter.subtype,\n            client_id: state.filter.client_id\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        invisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.data.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.cashbox.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPayments = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {editCurrentClient, changeVisibleState} from '../../../../Redux/actions'\nimport { changePaymentState} from '../../../../Redux/actions/paymentAction'\n\nimport Button from '../../../general/Button'\nimport TableOrderPayments from './TableOrderPayments'\n\nconst OrderPayments = (props) => {\n\n   const handleIncome = () => {\n      props.changePaymentState({\n         direction: 2,\n         client_id: props.order.client.id,\n         description: `Оплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 2,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   const handleOutcome = () => {\n      props.changePaymentState({\n         direction: 1,\n         client_id: props.order.client.id,\n         description: `Выплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 8,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handleIncome }\n               invisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handleOutcome }\n               invisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPayments/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeVisibleState,\n   changePaymentState,\n   editCurrentClient,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.invisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../../general/Icon'\nimport {icon_down, icon_print} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport Checkbox from '../../../general/Checkbox'\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('orderPrint') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div style={{width: '67px', height: '25px'}} id='orderPrint'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton m0 pd05 ml10'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listprint'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        invisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React from 'react'\n\nconst EventStatus = props => {\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n    return (\n        <div className='eventElement evFerst'>\n            <div className='row jc-sb'>\n                <div\n                    className='statusListRow mt0'\n                    style={{backgroundColor: props.event.current_status.color}}\n                    title={props.employee}\n                >\n                    {props.event.changed[0].new.title}\n                </div>\n                <div className='cgr'>{time}</div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default EventStatus","import React from 'react'\n\n\nimport Icon from '../../../../general/Icon'\nimport {\n    icon_arrow_down,\n    icon_arrow_right,\n    icon_briefcase,\n    icon_bubble,\n    icon_bug,\n    icon_calendar, icon_coin_dollar\n} from '../../../../../data/icons'\nimport {icon_letter, icon_loop, icon_pencil, icon_trush, icon_user} from '../../../../../data/icons'\n\n\nconst EventSimple = props => {\n\n    const chooseIcon = (event_type) => {\n        let list_type = ['ASSIGN_ENGINEER', 'CHANGE_ENGINEER', 'ASSIGN_MANAGER', 'CHANGE_MANAGER', 'ADD_CLIENT', 'CHANGE_CLIENT']\n        if (list_type.includes(event_type)) return icon_user\n        if (event_type === 'CHANGE_ESTIMATED_DONE_AT') return icon_calendar\n        if (event_type === 'ADD_OPERATION') return icon_briefcase\n        if (event_type === 'ADD_ORDER_PART') return icon_bug\n        if (['DELETE_OPERATION', 'DELETE_ORDER_PART', 'DELETE_PAYMENT'].includes(event_type)) return icon_trush\n        if (['ADD_COMMENT', 'SEND_SMS'].includes(event_type)) return  icon_bubble\n        if (event_type === 'SEND_EMAIL') return icon_letter\n        if (event_type === 'MOVE_TO') return icon_loop\n        if (event_type === 'ADD_PAYMENT') return icon_coin_dollar\n        return icon_pencil\n    }\n\n    const checkLength = (event) => {\n        let one, two\n        if (event.current && event.current.title){\n            one = event.current.title.toString().length\n        } else {\n            one = 0\n        }\n        if (event.new && event.new.title){\n            two = event.new.title.toString().length\n        } else {\n            two = 0\n        }\n        return one + two > 40\n    }\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n\n\n    return (\n\n        <div className='eventElement'>\n            {props.event.changed.map((event, idx) => (\n                <div>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <div\n                                style={{\n                                    backgroundColor: props.event.current_status.color,\n                                    display: idx ? 'none': null,\n                                    marginLeft: idx ? '30px': null\n                                }}\n                                className='boxHistoryIcon'\n                                title={props.employee}\n                            >\n                                <Icon className='icon-s2' icon={chooseIcon(props.event.event_type)} color='white'/>\n                            </div>\n                            <div\n                                className='ml10 txtb'\n                                style={{marginLeft: idx ? '28px': null}}\n                            >\n                                {event.title}\n                            </div>\n                        </div>\n                        <div className='cgr'>{time}</div>\n                    </div>\n                    <div\n                        className={`${checkLength(event) ? null : 'row'} ml30`}\n                    >\n                        {event.current && event.current.title ?\n                            <div className=''>{event.current.title}</div> : null}\n                        {event.current && event.current.title ?\n                            <Icon\n                                className='icon-sm8 mlr5'\n                                icon={checkLength(event) ? icon_arrow_down : icon_arrow_right}\n                            /> : null}\n                        <div style={{whiteSpace: \"pre-wrap\"}}>{event.new.title}</div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\n\nexport default EventSimple","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport EventStatus from './EventsStatus'\nimport EventSimple from './EventSimple'\nimport {order_event_types} from '../../../../../data/data'\n\nconst OrderEvents = props => {\n\n    const [date, setDate] = useState(0)\n\n    const compareDates = (date1, date2) => {\n        date1 = new Date(date1 * 1000)\n        date2 = new Date(date2 * 1000)\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n    const optionsShowDate = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        // hour: 'numeric',\n        // minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const showDate = (date) => {\n        return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.', '')\n    }\n    const values = order_event_types.filter(event => props.event_filter.includes(event.id)).map(event => event.value)\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}`: ''\n        }\n    }\n\n    return (\n        <div className='contentEditor mt15'>\n            <div className='ml30 h100'>\n                {props.events.filter(event => values.includes(event.event_type)).map((event, idx) => {\n\n                    if (event.event_type === 'CREATE_ORDER' || event.event_type === 'CHANGE_STATUS') {\n                        return (\n                            <div key={event.id}>\n                                {event.event_type === 'CREATE_ORDER' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <div\n                                    className='orderEvent'\n                                    style={{borderColor: event.current_status.color}}\n                                >\n                                    {event.event_type === 'CHANGE_STATUS' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                        <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                        : null\n                                    }\n                                    <EventStatus event={event} employee={getEmploeeName(event.employee_id)}/>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div\n                                key={event.id}\n                                className='orderEvent'\n                                style={{borderColor: event.current_status.color}}\n                            >\n                                {!idx || !compareDates(event.created_at, props.events[idx - 1].created_at) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <EventSimple event={event} employee={getEmploeeName(event.employee_id)}/>\n                            </div>\n                        )\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    events: state.order.events,\n    event_filter: state.order.event_filter,\n    employees: state.data.employees\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEvents)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         style={{width: '67px', height: '26px'}}\n         className={`tableFields ml10 ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <Icon icon={props.icon || icon_table} className='icon-table'/>\n            </div>\n            <div className='cl12'>\n                  <Icon icon={icon_down} className='icon-table'/>\n               {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n            </div>\n         </div>\n\n         {listVisible ?\n            <div \n               className={props.classNameMenu}\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useLayoutEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderState, addEventComment} from '../../../../../Redux/actions/orderActions'\n\nconst AddComment = props => {\n\n    const handlePressKey = event => {\n        if (event.key === 'Enter' && event.shiftKey) {\n            event.preventDefault()\n            props.changeOrderState({event_comment: event.target.value + '\\n'})\n            return\n        }\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            props.addEventComment()\n            return\n        }\n    }\n\n\n    const MIN_TEXTAREA_HEIGHT = 16\n    const textareaRef = React.useRef(null);\n\n    useLayoutEffect(() => {\n        // Reset height - important to shrink on delete\n        textareaRef.current.style.height = '16px'\n        // Set height\n        textareaRef.current.style.height = `${Math.max(textareaRef.current.scrollHeight - 10, MIN_TEXTAREA_HEIGHT)}px`\n    }, [props.order.event_comment])\n\n    return (\n        <div className='mt15'>\n            <div className='orderCommentBox'>\n                <textarea\n                    ref={textareaRef}\n                    style={{\n                       minHeight: MIN_TEXTAREA_HEIGHT,\n                       resize: \"none\"\n                    }}\n                    className='commentInput'\n                    onChange={event => props.changeOrderState({event_comment: event.target.value})}\n                    value={props.order.event_comment}\n                    onKeyPress={handlePressKey}\n                    placeholder=\"Введите текст комментария\"\n                />\n            </div>\n            <p className='m0 ml15 mt5'><b>Enter</b>, чтобы отправить</p>\n            <p className='m0 ml15'><b>Shift + Enter</b>, чтобы добавить еще одну строчку</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderState,\n    addEventComment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment)","import React, {useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport {selectedOrder} from '../../../../Redux/actions/orderActions'\nimport {order_event_types} from '../../../../data/data'\nimport {icon_filter} from '../../../../data/icons'\n\nimport OrderPrint from './OrderPrint'\nimport OrderEvents from './OrderEvetns/OrderEvents'\nimport TableFields from '../../../general/TableFields'\nimport Button from '../../../general/Button'\nimport AddComment from './OrderEvetns/AddComment'\n\nconst OrderHistory = props => {\n\n\n    return (\n        <div className=\"orderHistory\">\n            <div className='row al-itm-fs'>\n                <OrderPrint/>\n                <TableFields\n                    id='orderEvents'\n                    className='ml5'\n                    height='200px'\n                    classNameMenu='aventFilterMenu'\n                    list={order_event_types}\n                    checked_list={props.order.event_filter}\n                    func={props.selectedOrder}\n                    field='event_filter'\n                    icon={icon_filter}\n                />\n            </div>\n            {props.order.events.length ? <OrderEvents/> : null}\n            <AddComment/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    selectedOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\n\nimport {addDiscountMargin, addDictService, changeVisibleState} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders, getOrder} from '../../../Redux/actions/orderActions'\nimport {changeOrderState} from '../../../Redux/actions/orderActions'\n\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\nimport {addClients} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\nimport OrderHistory from './orderHisroy/OrderHistory'\n\n\n\nconst OrderEditor = (props) => {\n\n    const history = useHistory()\n    // console.log(history.location)\n    const edit = history.location.state && history.location.state.order_id\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addDictService()\n        props.resetBookEquipment()\n    }, [])\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusOrderEditor: false,\n            checkedOrderClient: false,\n            checkedOrderKindofGood: true,\n            checkedOrderBrand: true,\n            checkedOrderSubtype: true\n        })\n        props.resetOrder()\n        if (edit) history.goBack()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('addOrder') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    useEffect(() => {\n        if (edit) props.getOrder(history.location.state.order_id)\n    }, [])\n\n\n    const handleCreate = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length &&\n            props.order.malfunction\n        ) {\n            props.createOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n    const handleSave = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length\n\n        ) {\n            props.saveOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n\n    return edit && !props.order.edit ? null : (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n                <div className=\"cteateNewOrderContent\">\n\n                    <div className=\"createOrderForm\">\n\n                        <TitleOrderEditor/>\n                        {props.order.edit ?\n                            <div>\n                                <Tabs\n                                    list={['Информация о заказе', 'Работы и материалы', 'Платежи']}\n                                    func={idx => props.changeOrderState({tabs: idx})}\n                                    tab={props.order.tabs}\n                                />\n                                {props.order.tabs === 0 ? <OrderInfo/> : null}\n                                {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                                {props.order.tabs === 2 ? <OrderPayments/> : null}\n                            </div> : <OrderInfo/>}\n                    </div>\n\n                    <OrderHistory/>\n                </div>\n\n                <div className=\"boxOrderButtons\">\n                    <BottomButtons\n                        edit={props.order.edit}\n                        create={handleCreate}\n                        save={handleSave}\n                        // delete={() => props.deleteClient(props.client.edit)}\n                        close={handleClose}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order,\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addClients,\n    addDiscountMargin,\n    createOrder,\n    changeOrderState,\n    resetOrder,\n    addDictService,\n    saveOrder,\n    addOrders,\n    resetBookEquipment,\n    getOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\nconst optionsShowDate = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n}\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.toLocaleString('ru', optionsShowDate).replace('г.,', '')}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Subtype = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.subtype.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Subtype)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Manager = props => {\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}`: ''\n        }\n    }\n\n    return (\n        <td>\n            <div className='noWr'>\n                {getEmploeeName(props.order.manager_id)}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees\n})\n\nexport default connect(mapStateToProps)(Manager)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst MissedPayments = props => {\n    return (\n        <td className=\"tablePrice\">\n            <span>{props.order.missed_payments || null}</span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(MissedPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ManagerNotes = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.manager_notes}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(ManagerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Cell = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.cell}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Cell)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst AdCampaign = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.ad_campaign.name}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(AdCampaign)","import React, {useEffect, useMemo, useRef} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {addOrders, editOrder, resetOrder} from '../../Redux/actions/orderActions'\nimport {changeVisibleState, initStatusMenuVisibleAction} from '../../Redux/actions'\nimport {changeBookState} from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './newOrder/orderHisroy/StikerToPrint'\nimport {useHistory} from 'react-router-dom'\nimport Subtype from './cell/Subtype'\nimport Manager from './cell/Manager'\nimport MissedPayments from './cell/MissedPayments'\nimport ManagerNotes from './cell/ManagerNotes'\nimport Cell from './cell/Cell'\nimport AdCampaign from './cell/AdCampaign'\n\n\nconst TableOrders = props => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        let statusVis = {}\n        props.order.ordersShow.forEach((order) => {\n            statusVis[order.id] = false\n        })\n        props.initStatusMenuVisible(statusVis)\n    }, [props.order.ordersShow])\n\n    const handleEdit = (order) => {\n        props.changeBookState({\n            equipment_type: order.kindof_good,\n            equipment_brand: order.brand,\n            equipment_subtype: order.subtype,\n            equipment_model: order.model\n        })\n        history.push(`/orders/${order.id}`, {order_id: order.id })\n    }\n\n    const afterPrint = () => {\n        props.changeVisibleState({statusOrderSticker: false})\n        if(props.view.needToResetOrder) {\n            props.resetOrder()\n            props.changeVisibleState({needToResetOrder: false})\n        }\n    }\n\n    const tFields = useMemo(() => props.order.tableFields.filter(header => header.visible), [props.order, props.order.tableFields])\n\n    const table_order = useRef(null)\n    // console.log(table_order.current)\n\n    const chooseCell = (field, order) => {\n        switch (field.id) {\n\n            case 1: return <Lable key={field.id} order={order}/>\n            case 2: return <Create key={field.id} order={order}/>\n            case 3: return <EstimatedDone key={field.id} order={order}/>\n            case 4: return <Status key={field.id} order={order}/>\n            case 5: return <Equipment key={field.id} order={order}/>\n            case 6: return <KindOfGood key={field.id} order={order}/>\n            case 7: return <Brand key={field.id} order={order}/>\n            case 8: return <Subtype key={field.id} order={order}/>\n            case 9: return <Malfunction key={field.id} order={order}/>\n            case 10: return <Engineer key={field.id} order={order}/>\n            case 11: return <Manager key={field.id} order={order}/>\n            case 12: return <Client key={field.id} order={order}/>\n            case 13: return <Price key={field.id} order={order}/>\n            case 14: return <MissedPayments key={field.id} order={order}/>\n            case 15: return <EngineerNotes key={field.id} order={order}/>\n            case 16: return <ManagerNotes key={field.id} order={order}/>\n            case 17: return <Cell key={field.id} order={order}/>\n            case 18: return <AdCampaign key={field.id} order={order}/>\n            default: return null\n        }\n    }\n\n    if (props.employees) {\n        return (\n            <div className=\"tableOrdersBox\">\n                <table id=\"tableOrders\" ref={table_order}>\n                    <thead className=\"tableThead\">\n                    <tr>\n                        {tFields.map(header => (\n                            <TableHeader\n                                key={header.id}\n                                data={header}\n                                tableHeight={table_order.current ? table_order.current.offsetHeight : 40}\n                            />\n                        ))}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.order.ordersShow.map(order => (\n                        <tr\n                            key={order.id}\n                            className=\"orderTableRows\"\n                            onDoubleClick={() => handleEdit(order)}\n                        >\n                            {tFields.map(header => chooseCell(header, order))}\n                            {/*{props.order.tableFields.find(header => header.id === 1).visible ? <Lable order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 2).visible ? <Create order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 3).visible ? <EstimatedDone order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 4).visible ? <Status order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 5).visible ? <Equipment order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 6).visible ? <KindOfGood order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 7).visible ? <Brand order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 8).visible ? <Subtype order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 9).visible ? <Malfunction order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 10).visible ? <Engineer order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 11).visible ? <Manager order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 12).visible ? <Client order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 13).visible ? <Price order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 14).visible ? <MissedPayments order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 15).visible ? <EngineerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 16).visible ? <ManagerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 17).visible ? <Cell order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 18).visible ? <AdCampaign order={order}/> : null}*/}\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                {props.view.statusOrderEditor ? <OrderEditor/> : null}\n                {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n                {props.view.statusOrderSticker ?\n                    <StikerToPrint onAfterPrint={afterPrint}/> : null}\n\n            </div>\n        )\n    } else {\n        return <Loader/>\n    }\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    employees: state.data.employees,\n    user: state.data.user,\n    view: state.view,\n    mainFilter: state.filter.mainFilter\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    initStatusMenuVisible: initStatusMenuVisibleAction,\n    changeVisibleState,\n    editOrder,\n    changeBookState,\n    resetOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {addClientToTempFilter} from '../../Redux/actions/clientAction'\n\nconst CustomFilter = props => {\n\n    async function  handleChoose()  {\n        if (props.filter.active_filter !== props.data.id) {\n            if (props.data.filters.client_id) props.addClientToTempFilter(props.data.filters.client_id[0])\n            props.changeFilterState({\n                ...props.data.filters,\n                active_filter: props.data.id,\n                active_badge: 0,\n                search: '',\n                temp_statuses: props.data.filters.status_id || [],\n                temp_order_types: props.data.filters.order_type_id || [],\n                temp_managers: props.data.filters.manager_id || [],\n                temp_engineers: props.data.filters.engineer_id || [],\n                temp_created_at: props.data.filters.created_at || [0, 0],\n                temp_kindof_good_id: props.data.filters.kindof_good,\n                temp_brand: props.data.filters.brand,\n                temp_subtype: props.data.filters.subtype,\n                temp_client: {}\n            })\n        } else {\n            props.changeFilterState({\n                active_filter: 0,\n                page: 0,\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n            })\n        }\n    }\n\n    return (\n        <div\n            className='customFilter'\n            onClick={handleChoose}\n            style={{\n                backgroundColor: props.data.id === props.filter.active_filter ? '#eeeeef' : 'white',\n                opacity: props.data.id === props.filter.active_filter || props.filter.active_filter === 0 ? 1 : 0.5\n            }}\n        >\n            {props.data.title}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    addClientToTempFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../Redux/actions'\nimport LableInput from '../general/LableInput'\nimport Checkbox from '../general/Checkbox'\nimport BottomButtons from '../general/BottomButtons'\nimport {changeFilterState, createCustomFilter} from '../../Redux/actions/filterAction'\n\nconst FilterEditor = props => {\n\n    const handleClose = () => {\n        props.changeVisibleState({statusCreateNewFilter: false, inputFilterTitleChecked: true})\n    }\n\n    const clickHandel = event => {\n        if (!event.path.map((el) => el.id).includes('createNewFilterWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.filter.title) {\n            props.createCustomFilter()\n        } else {\n            props.changeVisibleState({inputFilterTitleChecked: false})\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewFilterWindow\">\n\n                <div className=\"createNewTitle w515\">{props.filter.active_filter ? props.filter.title : 'Новый фильтр'}</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                         className='mt15'\n                         title='Наименование'\n                         onChange={event => props.changeFilterState({title: event.target.value})}\n                         value={props.filter.title}\n                         checkedFlag='inputFilterTitleChecked'\n                         checked={props.inputFilterTitleChecked}\n                         redStar={true}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Общий'\n                        onChange={event => props.changeFilterState({general: event.target.checked})}\n                        checked={props.filter.general}\n                    />\n                </div>\n\n                <BottomButtons\n                    edit={props.filter.active_filter}\n                    create={handleCreate}\n                    // save={handleSave}\n                    // delete={() => props.deleteNotEvent(true)}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    inputFilterTitleChecked: state.view.inputFilterTitleChecked,\n\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    createCustomFilter,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const choosed_values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (choosed_values.length === current_statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!choosed_values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        invisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport {icon_down, icon_left} from '../../../../data/icons'\n\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\nimport Button from '../../../general/Button'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const allStatuses = props.statuses.map(status => status.id)\n\n\n    return props.invisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div className='liststatus'>\n                    <div\n                        className='blocList'\n                        style={{width: props.width ? props.width : '250px'}}\n                    >\n                        {props.status_group.map(group => (\n                            <ChooseStatusesGruoup\n                                key={group.id}\n                                label={group.name}\n                                group={group.type_group}\n                                func={value => props.func(value)}\n                                current_list={props.current_list}\n                            />\n                        ))}\n                    </div>\n                    <div className='btmsts'>\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Выбрать все'\n                            onClick={() => props.func(allStatuses)}\n                            disabled={props.current_list.length === allStatuses.length}\n                        />\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Отменить все'\n                            onClick={() => props.func_clear()}\n                        />\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5),\n    statuses: state.data.status.filter(status => status.group < 8)\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState, useRef} from 'react'\n\nimport Checkbox from './Checkbox'\nimport Icon from './Icon'\nimport {icon_down, icon_left} from '../../data/icons'\n\nconst ChooseOfListMany = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const mainCheckbox = useRef()\n\n    useEffect(() => {\n        if(mainCheckbox.current) {\n            const values = props.list.filter(el => props.checked_list.includes(el.id))\n            if (values.length === props.list.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = true\n            } else if (!values.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = false\n            } else {\n                mainCheckbox.current.indeterminate = true\n            }\n        }\n    }, [props.checked_list, listVisible])\n\n\n    const showWord = (len) => {\n        switch (len) {\n\n            case 0: {\n                return 'Ничего не выбрано'\n            }\n\n            case props.list.length: {\n                return 'Все'\n            }\n\n            default:\n                return `Выбрано ${len}`\n        }\n    }\n\n\n    return (\n        <div\n            style={{width: props.width ? props.width : '250px'}}\n            id={`chooseOfList${props.id}`}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div>{showWord(props.checked_list.length)}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='#282e33'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n\n                    <div className='checkbox'>\n                        <input\n                            ref={mainCheckbox}\n                            type='checkbox'\n                            onChange={() => props.func(props.list.map(el => el.id))}\n                            disabled={props.disabled}\n                        />\n                        <label>{props.mainLable}</label>\n                    </div>\n\n                    {props.list.map(element => {\n                        return (\n                            <div\n                                key={element.id}\n                                className='options'\n                            >\n                                <Checkbox\n                                    className='ml10'\n                                    label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                                    onChange={() => props.func([element.id])}\n                                    checked={props.checked_list.includes(element.id)}\n                                    disabled={props.disabled}\n                                />\n\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, {useEffect, useState} from 'react'\nimport {icon_cancel, icon_down, icon_left} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * id='id' // id компонента\n *\n * className='className' // className оболочки компанента\n *\n * width='250px' // ширина компонента\n *\n * title='title' // Подпись сверху\n *\n * list={props.list} // Список элементов\n *\n * current_element={props.current_element} // выбраный элемент\n *\n * setElement={() => console.log('setElement')} // функция выбора элемента\n *\n * filter={props.filter} // фильр поиска элемента\n *\n * changeFilter={() => console.log('changeFilter')} // функция изменения фильтра\n *\n * placeholder='Введите текст'\n *\n * disabled={} // заблокировать\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseWithSearch = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n\n    const clickHandel = event => {\n        if (!event.path.map(el => el.id).includes(`ChooseWithSearch${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    return (\n        <div\n            id={`ChooseWithSearch${props.id}`}\n            style={{width: props.width ? props.width : '250px'}}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <button\n                className={props.disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setListVisible(true)}\n                disabled={props.disabled || Object.values(props.current_element).length}\n            >\n                <input\n                    className={props.disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeFilter(event.target.value)}\n                    placeholder={props.placeholder}\n                    value={Object.values(props.current_element).length ? props.current_element : props.filter}\n                    disabled={props.disabled || Object.values(props.current_element).length}\n                />\n                {Object.values(props.current_element).length ?\n                    <div\n                        className='al-itm-ct'\n                        onClick={() => props.setElement({})}\n                    >\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n                    {props.list.map((element, idx) => {\n                        return (\n                            <div\n                                key={idx}\n                                className='options'\n                                onClick={() => {\n                                    props.setElement(element)\n                                    setListVisible(false)\n                                }}\n                            >\n                                {element.title || element.name}\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseWithSearch\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentType, changeBookState} from '../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nconst SetGroup = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const seted = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_kindof_good_id: null,\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_type: {},\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setType = (equipment) => {\n        props.changeFilterState({temp_kindof_good_id: equipment.id})\n        props.changeBookState({equipment_type: equipment})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Тип устройства</div>\n            <button\n                id='optionsFilterTextOfGroup'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={seted}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={seted ? props.book.equipment_type.title : props.book.filter_type}\n                    disabled={seted}\n                />\n                {seted ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfGroup'>\n                    {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className='rowGropList'\n                                onClick={() => setType(equipment)}\n                            >\n                                {equipment.title}\n                            </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentType,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetGroup)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentBrand, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetBrand = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.filter_brand, props.book.equipment_type])\n\n    const settled = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfBrand') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setBrand = (brand) => {\n        props.changeFilterState({temp_brand: brand.id})\n        props.changeBookState({equipment_brand: brand})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Бренд</div>\n            <button\n                id='optionsFilterTextOfBrand'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder='Выбирете бренд'\n                    value={settled ? props.book.equipment_brand.title : props.book.filter_brand}\n                    disabled={settled  || !settledType}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfBrand'>\n                    {props.book.equipment_brands.map(brand => (\n                        <div\n                            key={brand.id}\n                            className='rowGropList'\n                            onClick={() => setBrand(brand)}\n                        >\n                            {brand.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentBrand,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetBrand)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentSubtype, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetSubtype = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.filter_subtype, props.book.equipment_brand])\n\n    const settled = !!Object.values(props.book.equipment_subtype).length\n    const settledBrand = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfSubtype') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({temp_subtype: null})\n        props.changeBookState({\n            filter_subtype: '',\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setSubtype = (subtype) => {\n        props.changeFilterState({temp_subtype: subtype.id})\n        props.changeBookState({equipment_subtype: subtype})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Модуль/Серия</div>\n            <button\n                id='optionsFilterTextOfSubtype'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType || !settledBrand}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder='Выбирете Модуль/Серию'\n                    value={settled ? props.book.equipment_subtype.title : props.book.filter_subtype}\n                    disabled={settled  || !settledType || !settledBrand}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfSubtype'>\n                    {props.book.equipment_subtypes.map(subtype => (\n                        <div\n                            key={subtype.id}\n                            className='rowGropList'\n                            onClick={() => setSubtype(subtype)}\n                        >\n                            {subtype.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentSubtype,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetSubtype)","import React, {useEffect, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../../Redux/actions'\nimport {changeFilterState, deleteFilter, resetTempFilter, selectedFilter} from '../../../Redux/actions/filterAction'\nimport {addClients, changeClientState} from '../../../Redux/actions/clientAction'\nimport {icon_cross, icon_trush} from '../../../data/icons'\n\n\nimport FilterEditor from '../FilterEditor'\nimport Button from '../../general/Button'\nimport ChooseStatuses from '../../Settings/SettingPages/Notification/ChooseStatuses'\nimport ChooseOfListMany from '../../general/ChooseOfListMany'\nimport ChooseWithSearch from '../../general/ChooseWithSearch'\nimport ChooseDate from '../../general/calandar/ChooseDate'\nimport SetGroup from './SetGroup'\nimport SetBrand from './SetBrand'\nimport SetSubtype from './SetSubtype'\n\nconst SetFilter = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name])\n\n    const handleSet = () => {\n        const data = {\n            page: 0,\n            engineer_id: props.filter.temp_engineers.length ? props.filter.temp_engineers : null,\n            overdue: null,\n            status_id: props.filter.temp_statuses.length ? props.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: props.filter.temp_order_types.length ? props.filter.temp_order_types : null,\n            manager_id: props.filter.temp_managers.length ? props.filter.temp_managers : null,\n            created_at: props.filter.temp_created_at.length && props.filter.temp_created_at.every(el => el === 0) ? null : props.filter.temp_created_at ,\n            kindof_good: props.filter.temp_kindof_good_id,\n            brand: props.filter.temp_brand,\n            subtype: props.filter.temp_subtype,\n            client_id: Object.values(props.filter.temp_client).length ? [props.filter.temp_client.id] : null,\n            active_badge: 0,\n            active_filter: 0\n        }\n        props.changeFilterState(data)\n    }\n\n\n    return (\n        <div className=\"setCustomFilter\">\n            <div className=\"row jc-c\">\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseStatuses\n                        className='h52'\n                        width='100%'\n                        func={value => props.selectedFilter(value, 'temp_statuses')}\n                        func_clear={() => props.changeFilterState({temp_statuses: []})}\n                        current_list={props.filter.temp_statuses}\n                    />\n                    <SetGroup/>\n                    <ChooseWithSearch\n                        id='filterClient'\n                        className='mt15 h52'\n                        width='100%'\n                        title='Клиент'\n                        list={props.client.clients}\n                        current_element={Object.values(props.temp_client).length ? props.temp_client.name : ''}\n                        setElement={client => props.changeFilterState({temp_client: client})}\n                        filter={props.client.filter_name}\n                        changeFilter={filter => props.changeClientState({filter_name: filter})}\n                        placeholder='Введите имя'\n                        disabled={false}\n                    />\n                </div>\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseOfListMany\n                        id='idTypeOrders'\n                        className='h52'\n                        width='100%'\n                        title='Тип заказа'\n                        mainLable='Все'\n                        list={props.order_type}\n                        checked_list={props.filter.temp_order_types}\n                        func={value => props.selectedFilter(value, 'temp_order_types')}\n                    />\n                    <SetBrand/>\n                    <ChooseOfListMany\n                        id='idManagerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Менеджер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_managers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_managers}\n                        func={value => props.selectedFilter(value, 'temp_managers')}\n                    />\n                </div>\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseDate\n                        className='h52'\n                        title='Дата'\n                        width='100%'\n                        range={true}\n                        allDate={true}\n                        func={date => props.changeFilterState({temp_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.filter.temp_created_at}\n                    />\n                    <SetSubtype/>\n                    <ChooseOfListMany\n                        id='idEngineerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Инженер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_engineers}\n                        func={value => props.selectedFilter(value, 'temp_engineers')}\n                        disabled={!props.user.role.orders_visibility}\n                    />\n                </div>\n            </div>\n            <div className=\"buttons fs14 mt15\">\n                <Button\n                    className='blueButton'\n                    title='Применить'\n                    onClick={handleSet}\n                />\n                {props.filter.active_filter ?\n                    <Button\n                        className='whiteButton bcr'\n                        icon={icon_trush}\n                        iconClassName='icon-s1 pd1'\n                        iconColor='white'\n                        onClick={() => props.deleteFilter()}\n                    />\n                    :\n                    <Button\n                        className='whiteButton'\n                        title='Создать фильтр'\n                        onClick={() => props.changeVisibleState({statusCreateNewFilter: true})}\n                    />\n                }\n                <Button\n                    className='whiteButton'\n                    title='Сбросить параметы'\n                    onClick={() => props.resetTempFilter()}\n                    icon={icon_cross}\n                    iconClassName='icon-sm8'\n                    iconColor='#282e33'\n                />\n            </div>\n            {props.statusCreateNewFilter ? <FilterEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    statusCreateNewFilter: state.view.statusCreateNewFilter,\n    filter: state.filter,\n    order_type: state.data.order_type,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    client: state.client,\n    user: state.data.user,\n    temp_client: state.filter.temp_client\n})\n\nconst mapDispatchToProps = {\n    addClients,\n    resetTempFilter,\n    deleteFilter,\n    selectedFilter,\n    changeFilterState,\n    changeVisibleState,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport Checkbox from '../general/Checkbox'\nimport {changeOrderField} from '../../Redux/actions/orderActions'\n\n\nconst TableOrderFields = props => {\n\n    const [listVisible, setListVisible] = useState(true)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('tableOrderFields')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        setListVisible(false)\n    }, [])\n\n\n    return (\n        <div\n            id='tableOrderFields'\n            className={'tableFields otf_pos '}\n        >\n            <div\n                className='chooseFieldButton pd2'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='cl11'>\n                    <Icon icon={props.icon || icon_table} className='icon-table'/>\n                </div>\n                <div className='cl12'>\n                    <Icon icon={icon_down} className='icon-table'/>\n                    {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n                </div>\n            </div>\n\n            {listVisible ?\n                <div className='listOptionField'>\n                    <div style={{overflow: 'auto'}}>\n                        {props.order.tableFields.map(field => {\n                            return (\n                                <div\n                                    key={field.id}\n                                    className='options'\n                                >\n                                    <Checkbox\n                                        className='ml10'\n                                        label={field.title}\n                                        onChange={event => props.changeOrderField(field.id, 'visible', event.target.checked)}\n                                        checked={field.visible}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrderFields)\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport { setVisibleFlag, changeOrderFormS} from '../../Redux/actions'\nimport {icon_down, icon_filter, icon_table} from '../../data/icons'\nimport Button from '../general/Button'\nimport Icon from '../general/Icon'\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport TableOrderFields from './TableOrderFields'\n\nconst CustomPanel = (props) => {\n\n    const newOrder = () => {\n        props.changeOrderFormS(props.user.id, 'manager_id')\n        props.setVisibleFlag('statusOrderEditor', true)\n    }\n\n    const handleEditFilter = () => {\n        props.setVisibleFlag('statusSetCustomFilter', 'change')\n        props.changeFilterState({active_badge: 0,  active_filter: 0})\n    }\n\n    return (\n        <div className='mainCustomPanel '>\n            <div className='customPanel'>\n                <div className='row al-itm-fe'>\n                    <Button\n                        id='addOrder'\n                        className='greenButton'\n                        title='+ Заказ'\n                        onClick={newOrder}\n                        invisible={!props.permissions.includes('create_orders')}\n                    />\n                    <div className='customFilters'>\n                        <Button\n                            className='customFilter'\n                            title='Фильтр'\n                            onClick={handleEditFilter}\n                            invisible={false}\n                            icon={icon_filter}\n                            iconClassName='icon-s2'\n                            iconColor='282e33'\n                        />\n                        {props.customFilters.map(filter => {\n                            return (\n                                <CustomFilter data={filter} key={filter.id}/>\n                            )\n                        })}\n                    </div>\n                </div>\n                <TableOrderFields/>\n            </div>\n\n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customFilters: state.filter.customFilters,\n    statusSetCustomFilter: state.view.statusSetCustomFilter,\n    permissions: state.data.user.role.permissions,\n    statusOrderEditor: state.view.statusOrderEditor,\n    user: state.data.user,\n    edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useEffect} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport {addStatusGroupAction, addAdCampaign, addEquipment} from '../../Redux/actions'\nimport {addBadges, changeFilterForm, changeFilterState, addCustomFilters} from '../../Redux/actions/filterAction'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\n\nimport CustomPanel from './CustomPanel'\n\n\nfunction Orders(props) {\n\n    useEffect(() => {\n        props.addOrders()\n    }, [\n        props.filter.sort,\n        props.filter.field_sort,\n        props.filter.page,\n        props.filter.engineer_id,\n        props.filter.overdue,\n        props.filter.status_id,\n        props.filter.status_overdue,\n        props.filter.urgent,\n        props.filter.order_type_id,\n        props.filter.manager_id,\n        props.filter.created_at,\n        props.filter.kindof_good,\n        props.filter.brand,\n        props.filter.subtype,\n        props.filter.client_id,\n        props.filter.search\n    ])\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n\n\n    const pageChangeHandler = page => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changeFilterState({page: curent_page})\n        // props.changeFilterForm(curent_page, 'page')\n    }\n\n\n    useEffect(() => {\n        props.addBadges()\n    }, [])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    count: state.order.count,\n    ordersShow: state.order.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment,\n    addBadges,\n    changeFilterState,\n    changeFilterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeCashboxState( data ) {\n    return {\n        type: 'CHANGE_CASHBOX_STATE',\n        data\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.cashbox.showDeleted,\n        branch_id: Object.values(state.data.current_branch).length ? state.data.current_branch.id : null\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.data, current_cashbox: data.data.length ? data.data[0] : {}},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id,\n        filter: {\n            deleted: state.cashbox.showDeleted,\n            branch_id: Object.values(state.data.current_branch).length ? state.data.current_branch.id : null\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n    }\n}\n\n\n\nexport function saveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id,\n        filter: {\n            deleted: state.cashbox.showDeleted,\n            branch_id: Object.values(state.data.current_branch).length ? state.data.current_branch.id : null\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag,\n        filter: {\n            deleted: state.cashbox.showDeleted,\n            branch_id: Object.values(state.data.current_branch).length ? state.data.current_branch.id : null\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {icone_sphere, icone_setting} from '../../../data/icons'\nimport {changeVisibleState} from '../../../Redux/actions'\nimport {changeCashboxState, editCashbox} from '../../../Redux/actions/cashboxAction'\n\nimport {changePaymentState} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\nconst Cashbox = (props) => {\n\n    const activ = (id) => {\n        return id === props.activ_cashbox_id\n    }\n\n    const edit = props.user.role.permissions.includes('edit_cash')\n\n    const income = props.user.role.permissions.includes('make_income') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('incoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n    const outcome = props.user.role.permissions.includes('make_expenditure') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n    const move = props.user.role.permissions.includes('move_money') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming_move') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n    const showBalance = props.user.role.permissions.includes('see_remains') &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('show_cashbox_remains') :\n            props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n    const handleEdit = () => {\n        props.editCashbox(props.cashbox)\n        props.changeVisibleState({'statusCashboxEditor': true})\n    }\n\n    const hanldleIncome = () => {\n        props.changePaymentState({\n            'direction': 2,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleOutcome = () => {\n        props.changePaymentState({\n            'direction': 1,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleMove = () => {\n        props.changePaymentState({\n            'direction': 0,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    return (\n        <div\n            className={`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted ? 'bcg' : 'cgr'}`}\n            onClick={() => props.changeCashboxState({current_cashbox: props.cashbox})}\n        >\n            <div className='icons'>\n                <div><Icon className='smalIcon' icon={icone_sphere}\n                           color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n                <div\n                    onClick={edit ? handleEdit : null}\n                >\n                    <Icon className='smalIcon curP' icon={icone_setting}\n                          color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n                </div>\n            </div>\n            <div>{props.cashbox.title.toUpperCase()}</div>\n            {showBalance ?\n                <div className='cacsboxBalance'>\n                    {`${props.cashbox.balance ? parseFloat(props.cashbox.balance).toFixed(2) : 0} руб.`}\n                </div>\n                : null}\n            <div className='row jc-c'>\n                <Button\n                    title='+ Приход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n                    onClick={hanldleIncome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!income}\n                />\n                <Button\n                    id='344'\n                    title='- Расход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n                    onClick={hanldleOutcome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!outcome}\n                />\n            </div>\n            <Button\n                title='Перемещение'\n                className='whiteButton'\n                onClick={hanldleMove}\n                disabled={props.cashbox.deleted}\n                invisible={!move}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user,\n    activ_cashbox_id: state.cashbox.current_cashbox.id,\n})\n\nconst mapDispatchToProps = {\n    editCashbox,\n    changeCashboxState,\n    changePaymentState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeEmployeeSelected } from '../../../Redux/actions'\nimport {changeCashboxPermissions} from '../../../Redux/actions/cashboxAction'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeEmployeeSelected,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEmoloyee } from '../../../Redux/actions'\nimport {changeCashboxPermissions, changeCashboxState} from '../../../Redux/actions/cashboxAction'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxState({permissions_employee: employee.id})\n      props.editEmoloyee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxState({permissions_employee: employee_id})\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmoloyee,\n   changeCashboxState,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeCashboxState, chooseCashboxSelected} from '../../../Redux/actions/cashboxAction'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\nimport LableInput from '../../general/LableInput'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={event => props.changeCashboxState({title: event.target.value})}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxState({isGlobal: true})}\n            func2 = {() => props.changeCashboxState({isGlobal: false})}\n            checked = { props.cashbox.isGlobal }\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxState({isVirtual: event.target.checked})}\n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxState({type: 0})}\n            func2={() => props.changeCashboxState({type: 1})}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxState,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { setVisibleFlag} from '../../../Redux/actions'\nimport {changeCashboxState, createCashbox, deleteCashbox, saveEditCashbox} from '../../../Redux/actions/cashboxAction'\nimport {permission_cahsbox} from \"../../../data/permissions\"\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n            props.setVisibleFlag('statusCashboxEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.cashbox.edit) {\n            let list_per = {}\n            props.employees.filter(employee => !employee.deleted).forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_cashbox = true\n                list_per[employee.id].permissions = permission_cahsbox\n            })\n            props.changeCashboxState({employees: list_per})\n        }\n    }, [])\n\n    const hangleCreate = () => {\n        if (props.cashbox.title) {\n            props.createCashbox()\n        } else {\n            if (!props.cashbox.title) {\n                props.setVisibleFlag('inputCashboxTitleChecked', false)\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (props.cashbox.title) {\n            props.saveEditCashbox()\n        } else {\n            if (!props.cashbox.title) {\n                props.setVisibleFlag('inputCashboxTitleChecked', false)\n            }\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n                </div>\n\n                <Tabs\n                    list={['Общие', 'Доcтуп']}\n                    func={idx => props.changeCashboxState({tabs_editor: idx})}\n                    tab={props.cashbox.tabs_editor}\n                    tab_field=\"tabs_editor\"\n                />\n\n                {props.cashbox.tabs_editor === 0 ? <DataCashbox/> : null}\n                {props.cashbox.tabs_editor === 1 ? <CashboxAccess/> : null}\n\n                <BottomButtons\n                    edit={props.cashbox.edit}\n                    create={hangleCreate}\n                    save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n                    deleted={props.cashbox.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    cashbox: state.cashbox,\n    employees: state.data.employees,\n    view: state.view,\n    permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n    changeCashboxState,\n    setVisibleFlag,\n    createCashbox,\n    saveEditCashbox,\n    deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, setPayment} from '../../Redux/actions'\nimport {icon_file_text, icon_warning} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport {showDate} from '../general/utils'\n\nconst TablePayments = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payments.filter(payment => !payment.deleted).forEach(payment => {\n            income_sum += payment.income\n            outcome_sum += payment.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payments])\n\n    const showBalance = () => {\n        let cashboxAvailable = false\n        if (Object.values(props.current_cashbox).length) {\n            cashboxAvailable = (props.current_cashbox.employees[props.user.id].like_cashbox ?\n                props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n        }\n        return cashboxAvailable && props.user.role.permissions.includes('see_remains')\n    }\n\n    const payments = props.payments.filter(payment => props.showDeleted || !payment.deleted)\n        .filter(payment => props.permissions.includes('see_payment_profit') || payment.cashflow_category !== 'Прибыль')\n\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr className=''>\n                <th className='w150'>Создан</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                {showBalance() ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n            </thead>\n            <tbody>\n            {payments.map(payment => (\n                <tr\n                    key={payment.id}\n                    className={payment.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => {\n                        props.setPayment(payment)\n                        props.setVisibleFlag('statusPaymentsCard', true)\n                    }}\n                >\n                    <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                            <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                            {payment.created_at !== payment.custom_created_at ?\n                                <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}`}>\n                                    <Icon\n                                        className='icon-s2 ml5'\n                                        icon={icon_warning}\n                                        color='red'\n                                    />\n                                </div> : null}\n                        </div>\n                    </td>\n                    <td>\n                        <div>{payment.description}{payment.client.name ?` (Клиент: ${payment.client.name})` : null }</div>\n                        {payment.direction ?\n                            <div className='row'>\n                                <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                                <div className='tac ml5 cgr'>{payment.cashflow_category}</div>\n                            </div> : null}\n                    </td>\n                    <td className={payment.income ? 'greenFont tac' : 'tac'}>{payment.income}</td>\n                    <td className={payment.outcome ? 'redFont tac' : 'tac'}>{payment.outcome}</td>\n                    {showBalance() ?\n                        <td className='tac'>\n                            {payment.deposit ? parseFloat(payment.deposit).toFixed(2) : 0}\n                        </td>\n                        : null}\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payments.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    payments: state.payment.payments,\n    employees: state.data.employees,\n    user: state.data.user,\n    current_cashbox: state.cashbox.current_cashbox,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    setPayment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addPayments, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {icon_stats_docs} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\nimport ChooseDate from '../general/calandar/ChooseDate'\nimport Button from '../general/Button'\n\n\nconst ManeyMovement = (props) => {\n\n    useEffect(() => {\n        if (props.current_cashbox) {\n            props.addPayments()\n        }\n    }, [props.current_cashbox])\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    return (\n        <div className='ml30 w100'>\n\n            <div className='row'>\n                <Icon icon={icon_stats_docs}/>\n                <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n            </div>\n            <div className='row'>\n                <ChooseDate\n                    className='h27'\n                    width='250px'\n                    range={true}\n                    func={date => props.changePaymentState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                    current_date={props.filter_created_at}\n                    ivisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Button\n                    title='Применить'\n                    className='blueButton'\n                    onClick={() => props.addPayments()}\n                    invisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Checkbox\n                    label='Показать удаленные'\n                    onChange={event => setShowDeleted(event.target.checked)}\n                    value={showDeleted}\n                    invisible={!props.permissions.includes('see_delete_payments')}\n                />\n            </div>\n\n            <TablePayments showDeleted={showDeleted}/>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    current_cashbox: state.cashbox.current_cashbox,\n    filter_created_at: state.payment.filter_created_at,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {changeVisibleState} from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport {addCashboxes, changeCashboxState} from '../../../Redux/actions/cashboxAction'\n\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n    useEffect(() => {\n        if (Object.values(props.current_branch).length)  props.addCashboxes()\n    }, [props.cashbox.showDeleted, props.current_branch])\n\n    // const cashboxes = props.cashbox.cashboxes.filter(cashbox =>\n    //    (!cashbox.deleted || showDeleted) &&\n    //    cashbox.employees[props.user.id].available &&\n    //    (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n    //    )\n\n    return (\n        <div className='contentTab'>\n\n            <div className='row al-itm-bl'>\n                <div className='cashboxes'>\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => props.changeCashboxState({showDeleted: event.target.checked})}\n                        checked={props.cashbox.showDeleted}\n                    />\n                    {props.cashbox.cashboxes.map(cashbox => {\n                        return (\n                            <Cashbox\n                                key={cashbox.id}\n                                cashbox={cashbox}\n                                active={cashbox.active}\n                            />\n                        )\n                    })}\n\n                    {props.user.role.permissions.includes('edit_cash') ?\n                        <div\n                            className='whiteButton'\n                            onClick={() => props.changeVisibleState({statusCashboxEditor: true})}\n                        >\n                            + Добавить кассу\n                        </div> : null}\n\n                </div>\n                {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null}\n\n            </div>\n            {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n            {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n            {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    cashbox: state.cashbox,\n    user: state.data.user,\n    current_branch: state.data.current_branch,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addCashboxes,\n    changeCashboxState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\nimport {currentMonth} from '../../components/general/utils'\n\n\nexport function changePayrollState(data) {\n    return {\n        type: 'CHANGE_PAYROLL_STATE',\n        data\n    }\n}\n\nexport function editPayroll(payroll) {\n    return {\n        type: 'EDIT_PAYROLL',\n        payroll\n    }\n}\n\nexport function resetPayroll() {\n    return {\n        type: 'RESET_PAYROLL'\n    }\n}\n\n\nexport function selectedPayroll(value, field) {\n    return {\n        type: 'SELECTED_PAYROLL',\n        field,\n        value\n    }\n}\n\nfunction getFilter() {\n    const state = store.getState()\n    return {\n        custom_created_at: state.payroll.filter_created_at,\n        employee_id: state.payroll.setted_employee,\n        deleted: state.payroll.showDeleted\n    }\n}\n\nexport function addPayrolls() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(getFilter())\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payrolls', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос начислений не выполнен'))\n    }\n}\n\nexport function addMonthBalance() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: currentMonth(),\n        employee_id: state.payroll.setted_employee\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payroll_sum', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {month_balance: data.sum},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос баланса не выполнен'))\n    }\n}\n\nexport function createPayroll() {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n\n    const request_config = getRequestConfig({\n        description: state.payroll.description,\n        income: state.payroll.income,\n        outcome: -state.payroll.outcome,\n        direction: state.payroll.direction,\n        deleted: state.payroll.deleted,\n        reimburse: state.payroll.reimburse,\n        created_at: now,\n        custom_created_at: state.payroll.custom_created_at || now,\n        relation_type: state.payroll.relation_type,\n        relation_id: state.payroll.relation_id,\n        employee_id: state.payroll.employee_id,\n        order_id: state.payroll.order_id,\n        payment: state.payroll.relation_type === 12 ? {\n            cashbox_id: state.payroll.payment_cashbox_id,\n            cashflow_category: state.payroll.payment_cashflow_category\n        } : null,\n        filter: getFilter()\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payroll', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.payrolls}\n                    })\n                    dispatch({\n                        type: 'RESET_PAYROLL',\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPayrollEditor: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    }\n}\n\nexport function deletePayroll(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.payroll.edit,\n        deleted: flag,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        fetch(state.data.url_server + '/payroll', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.payrolls}\n                    })\n                    dispatch({\n                        type: 'RESET_PAYROLL',\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPayrollEditor: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос на удаление/восстановления начисления не выполнен'))\n\n    }\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {editPayroll} from '../../../Redux/actions/payrollActions'\n\nimport {showDate} from '../../general/utils'\nimport Icon from '../../general/Icon'\nimport {icon_warning} from '../../../data/icons'\n\nconst TablePayrolls = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат', 'Выплата']\n\n    const editPayroll = (payroll) => {\n        props.editPayroll(payroll)\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n            income_sum += payroll.income\n            outcome_sum += payroll.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payrolls])\n\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w135'>Дата</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                <th className='w91'>Баланс, руб.</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.payrolls.map(payroll => (\n                <tr\n                    key={payroll.id}\n                    className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => editPayroll(payroll)}\n                >\n                    <td className='pd-lr-5'>\n                        <div>\n                            <div className='row'>\n                                <div>{type_payrolls[payroll.relation_type]}</div>\n                                {payroll.created_at !== payroll.custom_created_at ?\n                                    <div title={`Добавлено задним числом\\n${showDate(payroll.created_at)}`}>\n                                        <Icon\n                                            className='icon-s2 ml5'\n                                            icon={icon_warning}\n                                            color='red'\n                                        />\n                                    </div> : null}\n                            </div>\n                            <div className='cgr'>{showDate(payroll.custom_created_at)}</div>\n                        </div>\n                    </td>\n                    <td className='pd-lr-5'>{payroll.description}</td>\n                    <td className={payroll.income ? 'greenFont tac' : 'tac'}>{payroll.income}</td>\n                    <td className={payroll.outcome ? 'redFont tac' : 'tac'}>{payroll.outcome}</td>\n                    <td className='tac'>{payroll.deposit ? payroll.deposit.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {props.payrolls.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n        </table>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    payrolls: state.payroll.payrolls\n})\n\nconst mapDispatchToProps = {\n    editPayroll,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\nconst PayrollForm = (props) => {\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const cashboxes = props.cashboxes.filter(cashbox => cashbox.type === props.payroll.payment_cashbox_type)\n\n    return (\n        <div className=''>\n            <div className='row al-itm-fe'>\n                <ChooseBotton\n                    className='mt15 mr-rg-20'\n                    title='Дата и время'\n                    name={['Текущее', 'Заданное']}\n                    func1={() => {\n                        setChooseData(false)\n                        props.changePayrollState({custom_created_at: null})\n                    }}\n                    func2={() => {\n                        setChooseData(true)\n                        props.changePayrollState({custom_created_at: parseInt(new Date() / 1000)})\n                    }}\n                    checked={true}\n                    // disabled={!props.permissions.includes('backdating')}\n                />\n                <ChooseDate\n                    className='h31'\n                    width='250px'\n                    func={date => props.changePayrollState({custom_created_at: parseInt(date / 1000)})}\n                    current_date={props.payroll.custom_created_at * 1000}\n                    invisible={!chooseData}\n                />\n            </div>\n            <LableInput\n                className='mt15'\n                width='70px'\n                title='Сумма'\n                onChange={event => props.changePayrollState({[props.payroll.direction === 2 ? 'income' : 'outcome']: parseFloat(event.target.value.replace(/[^0-9.]/g, ''))})}\n                value={props.payroll.outcome ? props.payroll.outcome : props.payroll.income}\n                unit='руб.'\n                checkedFlag='inputPayrollSumChecked'\n                checked={props.view.inputPayrollSumChecked}\n                disabled={props.payroll.deleted}\n                redStar={true}\n            />\n            <ChooseOfList\n                id='employeePayroll'\n                title='Сотрудник'\n                className='mt15'\n                list={props.employees}\n                setElement={id => props.changePayrollState({employee_id: id})}\n                current_id={props.payroll.employee_id}\n                width={'250px'}\n                employee={true}\n                checkedFlag='inputPayrollEmployeeChecked'\n                checked={props.view.inputPayrollEmployeeChecked}\n                disabled={props.payroll.deleted}\n            />\n            <LableArea\n                className='mt15'\n                title='Коментарий'\n                onChange={event => props.changePayrollState({description: event.target.value})}\n                value={props.payroll.description}\n                checkedFlag='inputPayrollDescChecked'\n                checked={props.view.inputPayrollDescChecked}\n                redStar={true}\n                disabled={props.payroll.deleted}\n            />\n            {props.payroll.relation_type === 12 ?\n                <div>\n                    <div className='orderFormTitle mt15'>Данные платежа</div>\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {props.changePayrollState({payment_cashbox_type: 0})}}\n                            func2={() => {props.changePayrollState({payment_cashbox_type: 1})}}\n                            checked={!props.payroll.payment_cashbox_type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox_id => props.changePayrollState({payment_cashbox_id : cashbox_id})}\n                            current_id={props.payroll.payment_cashbox_id }\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payroll.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === 1)}\n                        setElement={category => props.changePayrollState({payment_cashflow_category: category})}\n                        current_id={props.payroll.payment_cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payroll.deleted}\n                    />\n                </div>\n                : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    cashboxes: state.cashbox.cashboxes,\n    item_payments: state.data.item_payments\n})\n\nconst mapDispatchToProps = {\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.data.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {resetPayroll, changePayrollState, createPayroll, deletePayroll} from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\nconst PaypolleEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPayrollEditor', false)\n        props.setVisibleFlag('inputPayrollDescChecked', true)\n        props.setVisibleFlag('inputPayrollEmployeeChecked', true)\n        props.setVisibleFlag('inputPaymentCashboxChecked', true)\n        props.setVisibleFlag('inputPaymentCashflowChecked', true)\n        props.resetPayroll()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    const hangleCreate = () => {\n        if (\n            (props.payroll.income || props.payroll.outcome) &&\n            props.payroll.employee_id &&\n            props.payroll.description &&\n            (props.payroll.relation_type !== 12 || props.payroll.payment_cashbox_id) &&\n            (props.payroll.relation_type !== 12 || props.payroll.payment_cashflow_category)\n        ) {\n            props.createPayroll()\n        } else {\n            if (!(props.payroll.income || props.payroll.outcome)) {\n                props.setVisibleFlag('inputPayrollSumChecked', false)\n            }\n            if (!props.payroll.employee_id) {\n                props.setVisibleFlag('inputPayrollEmployeeChecked', false)\n            }\n            if (!props.payroll.description) {\n                props.setVisibleFlag('inputPayrollDescChecked', false)\n            }\n            if (!props.payroll.payment_cashbox_id) {\n                props.setVisibleFlag('inputPaymentCashboxChecked', false)\n            }\n            if (!props.payroll.payment_cashflow_category) {\n                props.setVisibleFlag('inputPaymentCashflowChecked', false)\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (\n            (props.payrolle.income || props.payrolle.outcome) &&\n            props.payroll.employee_id &&\n            props.payroll.description\n        ) {\n            // props.createPayment()\n        } else {\n            if (!(props.payrolle.income || props.payrolle.outcome)) {\n                props.setVisibleFlag('inputPayrollSumChecked', false)\n            }\n            if (!props.payroll.employee_id) {\n                props.setVisibleFlag('inputPayrollEmployeeChecked', false)\n            }\n            if (!props.payroll.description) {\n                props.setVisibleFlag('inputPayrollDescChecked', false)\n            }\n        }\n    }\n\n\n    const title = ['', 'Взыскание', 'Премия']\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.payroll.edit ? type_payrolls[props.payroll.relation_type] : (title[props.payroll.direction])}\n                </div>\n\n                <div className='contentEditor'>\n\n                    {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n                </div>\n\n                <BottomButtons\n                    edit={props.payroll.edit}\n                    create={hangleCreate}\n                    // save={ hangleSave }\n                    delete={props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null}\n                    recover={props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null}\n                    close={handleClose}\n                    deleted={props.payroll.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    setVisibleFlag,\n    resetPayroll,\n    createPayroll,\n    deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addEmployees, setVisibleFlag} from '../../../Redux/actions';\nimport {addPayrolls, addMonthBalance, changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport {showName} from '../../general/utils'\n\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\n\n\nconst EmployeeSalary = (props) => {\n\n    useEffect(() => {\n        props.addMonthBalance()\n        props.addEmployees()\n    }, [props.payroll.setted_employee])\n\n    const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n    const handleIncome = () => {\n        props.changePayrollState({\n            direction: 2,\n            relation_type: 9,\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handleOutcome = () => {\n        props.changePayrollState({\n            direction: 1,   \n            relation_type: 10,\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handlePaySalary = () => {\n        props.changePayrollState({\n            direction: 1,\n            relation_type: 12,\n            description: 'Выплата заработной платы',\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const month_balance = props.payroll.month_balance\n\n    return (\n        <div className=''>\n            <div className='createNewTitle fsz20 mt0'>\n                {showName(current_employee)}\n            </div>\n            <div className='txtb'>\n                <span>Начисленно в текущем месяце: </span>\n                <span className={month_balance >= 0 ? 'greenFont ml5' : 'redFont ml5'}>\n                    {month_balance ? month_balance.toFixed(2) : 0}\n                </span> руб.\n            </div>\n            <div className='txtb'>\n                <span>Баланс:</span>\n                <span\n                    className={current_employee.balance >= 0 ? 'greenFont ml5' : 'redFont ml5'}>\n                    {current_employee.balance ? current_employee.balance.toFixed(2) : 0}</span> руб.\n            </div>\n            <Button\n                title='Выплатить'\n                className='greenButton bcr'\n                onClick={handlePaySalary}\n            />\n\n            <div className='row mt15 jc-sb'>\n                <div className='row'>\n                    <ChooseDate\n                        className='h27'\n                        width='250px'\n                        range={true}\n                        func={date => props.changePayrollState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.payroll.filter_created_at}\n                    />\n                    <Button\n                        className='blueButton'\n                        title='Применить'\n                        onClick={() => props.addPayrolls()}\n                    />\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => props.changePayrollState({showDeleted: event.target.checked})}\n                        value={props.payroll.showDeleted}\n                        invisible={!props.permissions.includes('see_seleted_payrolls')}\n                    />\n                </div>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Премия'\n                        onClick={handleIncome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                    <Button\n                        className='greenButton bcr m10'\n                        title='- Взыскание'\n                        onClick={handleOutcome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                </div>\n            </div>\n            {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n            <TablePayrolls/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    statusPayrollEditor: state.view.statusPayrollEditor\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    addPayrolls,\n    addMonthBalance,\n    addEmployees,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {showName} from '../../general/utils'\nimport {changePayrollState} from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n\n    const [total, setTotal] = useState(0)\n\n    useEffect(() => {\n        let sum = 0\n        props.employees.filter(employee => employee.id !== 1).forEach(employee => {\n            sum += employee.balance\n        })\n        sum = sum ? sum.toFixed(2) : 0\n        setTotal(sum)\n    }, [props.employees])\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>Сотрудник</th>\n                <th>Баланс</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.employees.map(employee => (\n                <tr\n                    key={employee.id}\n                    onClick={() => props.changePayrollState({setted_employee: employee.id})}\n                    style={employee.id === props.payroll.setted_employee ? {backgroundColor: '#cae1f5'} : null}\n                >\n                    <td>{showName(employee)}</td>\n                    <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td>Итог:</td>\n                <td>{total}</td>\n            </tr>\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted && employee.id !== 0),\n    payroll: state.payroll\n})\n\nconst mapDispatchToProps = {\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollState } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollState({setted_employee: props.user_id})\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollState\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeCashboxState} from '../../Redux/actions/cashboxAction'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\nimport Loader from '../Loader/Loader'\n\nconst Payments = (props) => {\n\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Финансы</span>\n            </div>\n\n            <Tabs\n                list={['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты']}\n                func={idx => props.changeCashboxState({tabs: idx})}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <Cashboxes/> : null}\n            {props.tabs === 1 ? null : null}\n            {props.tabs === 2 ? null : null}\n            {props.tabs === 3 ? <Salaries/> : null}\n\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.cashbox.tabs,\n    statusOrderLoader: state.view.statusOrderLoader\n\n})\n\nconst mapDispatchToProps = {\n    changeCashboxState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th key={header.id}>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td key={header.title + part.id}>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td key={header.title + part.id}>{part[header.field].title}</td>\n                            return <td key={header.title + part.id}>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row al-itm-ct'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            invisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            invisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row al-itm-ct'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                invisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                invisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            classNameMenu='listOption'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={idx => props.changeWarehouseForm(idx, 'tabs')}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { useTable } from 'react-table'\nimport {addClients} from '../../Redux/actions/clientAction'\nimport {showPhone} from '../general/utils'\n\nconst TableClients = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    const data = React.useMemo(\n        () => props.client.clients.map(client => ({\n            name: client.name,\n            phone: client.phone.length ? showPhone(client.phone[0].number) : '',\n            name_doc: client.name_doc,\n            email: client.email,\n            address: client.address,\n            notes: client.notes\n        })),\n        [props.client.clients]\n    )\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Имя',\n                accessor: 'name',\n            },\n            {\n                Header: 'Телефон',\n                accessor: 'phone',\n            },\n            {\n                Header: 'Обращение',\n                accessor: 'name_doc',\n            },\n            {\n                Header: 'Email',\n                accessor: 'email',\n            },\n            {\n                Header: 'Адресс',\n                accessor: 'address',\n            },\n            {\n                Header: 'Комментарий',\n                accessor: 'notes',\n            },\n        ],\n        []\n    )\n\n    const tableInstance = useTable({ columns, data })\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = tableInstance\n\n    return (\n        // apply the table props\n        <table {...getTableProps()}>\n            <thead>\n            {// Loop over the header rows\n                headerGroups.map(headerGroup => (\n                    // Apply the header row props\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {// Loop over the headers in each row\n                            headerGroup.headers.map(column => (\n                                // Apply the header cell props\n                                <th {...column.getHeaderProps()}>\n                                    {// Render the header\n                                        column.render('Header')}\n                                </th>\n                            ))}\n                    </tr>\n                ))}\n            </thead>\n            {/* Apply the table body props */}\n            <tbody {...getTableBodyProps()}>\n            {// Loop over the table rows\n                rows.map(row => {\n                    // Prepare the row for display\n                    prepareRow(row)\n                    return (\n                        // Apply the row props\n                        <tr {...row.getRowProps()}>\n                            {// Loop over the rows cells\n                                row.cells.map(cell => {\n                                    // Apply the cell props\n                                    return (\n                                        <td {...cell.getCellProps()}>\n                                            {// Render the cell contents\n                                                cell.render('Cell')}\n                                        </td>\n                                    )\n                                })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    addClients\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableClients)","import React from 'react'\nimport {connect} from 'react-redux'\nimport TableClients from './TableClients'\n\nconst Clients = (props) => {\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Клиенты</span>\n            </div>\n            <TableClients/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusSettingRow } from '../../Redux/actions'\n\n\nfunction SettingRow(props) {\n  return (\n    <Link \n    className=\"settingRow\" \n    to={props.row.url}\n    style={{\n       backgroundColor: props.settingMenu.find(row => row.id === props.row.id).active ? '#939699' : '#53585c',\n       color: props.settingMenu.find(row => row.id === props.row.id).active ? '#fff' : null\n      }}\n    onClick={() => props.changeStatusSettingRow(props.row.id)}\n    >\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n   settingMenu: state.data.settingMenu\n})\n\nconst mapDispatchToProps = {\n   changeStatusSettingRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  invisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.message)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport { changeEmployeEditorForm, changeEmployeeEditorRoleOptions, setRoleEmployeeEdetor } from '../../../../Redux/actions'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'first_name')}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'last_name') }\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'email')}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'login') }\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? (\n        <div className=\"errorMassageInput\">Такой Login уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'password')}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeEditorForm(value, 'phone')}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'inn')}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'doc_name')}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event =>\n          props.changeEmployeEditorForm(event.target.value, 'notes')\n        }\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'post')}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        field=\"role_id\"\n        setElement={props.changeEmployeEditorForm}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeEditorForm,\n  changeEmployeeEditorRoleOptions,\n  setRoleEmployeeEdetor,\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee\n} from '../../../../Redux/actions'\nimport { addPayrules } from '../../../../Redux/actions/payrulleAction'\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst EmploeeyEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusEmployeeEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n    props.addPayrules()\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login &&\n      props.employee.password &&\n      props.employee.role_id !== 0\n    ) {\n      props.createEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n      if (!props.employee.password) {\n        props.setVisibleFlag('inputEmployeePasswordChecked', false)\n      }\n      if (props.employee.role_id === 0) {\n        props.setVisibleFlag('inputEmployeeRoleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login\n    ) {\n      props.seveEditEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit\n            ? `${props.employee.last_name} ${props.employee.first_name}`\n            : 'Новый сотрудник'}\n        </div>\n\n        <div className=\"tabs\">\n          <div\n            className={props.tabs === 1 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(1)}\n          >\n            Общие\n          </div>\n          <div\n            className={props.tabs === 2 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(2)}\n          >\n            Доступ\n          </div>\n        </div>\n\n        {props.tabs === 1 ? <EditEmployeeGenerally /> : null}\n        {props.tabs === 2 ? <EditEmployeePermission /> : null}\n\n        <BottomButtons\n          edit={props.edit}\n          create={hangleCreate}\n          save={hangleSave}\n          delete={() => props.deleteEmployee(true)}\n          recover={ props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n          close={() => props.setVisibleFlag('statusEmployeeEditor', false)}\n          deleted={props.employee.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tabs: state.employee.tabs,\n  edit: state.employee.edit,\n  employee: state.employee,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee,\n  addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editEmoloyee, setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmoloyee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n   editEmoloyee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles, changeShowDeleted, resetEmoloyee} from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmoloyee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={() => props.changeShowDeleted()}\n                        checked={props.showDeleted}\n                        invisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeShowDeleted,\n    resetEmoloyee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeShedule } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n  const weekdays = [\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n    'Воскрсение',\n  ]\n\n  return (\n    <div className=\"schedule mr-rg-20\">\n      <div className=\"lableImput mt15\">График работы локации</div>\n      {props.branch.schedule.map((day, idx) => {\n        return (\n          <div className=\"row mt15\" key={idx}>\n            <Checkbox\n              className=\"w150\"\n              onChange={(event) =>\n                props.changeShedule(idx, 'work_day', event.target.checked)\n              }\n              checked={day.work_day}\n              label={weekdays[idx]}\n              disabled={props.branch.deleted}\n            />\n\n            {props.branch.schedule[idx].work_day ? (\n              <div className=\"row\">\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'start_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.start_time}\n                />\n                <div className=\"w30 tac\">&#8212;</div>\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'end_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.end_time}\n                />\n              </div>\n            ) : null}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n  changeShedule,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeBranchForm } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\nimport {\n  icon_location,\n  icon_map_location,\n  icon_wrench,\n  icon_hammer,\n  icon_radio,\n  icon_git,\n  icon_svg,\n} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchForm('color', color)\n                        props.changeBranchForm('icon', icon)\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setBranchEmployee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\n\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.filter(employee => !employee.deleted).map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n} from '../../../../Redux/actions'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n      props.setVisibleFlag('statusBranchEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateBranch = () => {\n    if (\n      props.branch.name &&\n      props.branch.orders_prefix &&\n      props.branch.documents_prefix\n    ) {\n      props.createBranch()\n    } else {\n      if (!props.branch.name) {\n        props.setVisibleFlag('inputBranchNameChecked', false)\n      }\n      if (!props.branch.orders_prefix) {\n        props.setVisibleFlag('inputBranchPrefixChecked', false)\n      }\n      if (!props.branch.documents_prefix) {\n        props.setVisibleFlag('inputBranchPrefixDocChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.branch.edit ? props.branch.name : ' Новая локация'}\n        </div>\n\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Название\"\n          onChange={(event) => props.changeBranchForm('name', event.target.value)}\n          value={props.branch.name}\n          checkedFlag=\"inputBranchNameChecked\"\n          checked={props.view.inputBranchNameChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Адрес\"\n          onChange={(event) => props.changeBranchForm('address', event.target.value)}\n          value={props.branch.address}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className='textInput w250'\n          title='Телефон'\n          onChange={value => props.changeBranchForm('phone', value)}\n          value={props.branch.phone}\n          disabled={props.branch.deleted}\n          isPhone={true}\n        />\n        <Schedule />\n        <ChooseIcon />\n        <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n        <ChooseOfList\n          id={18}\n          list={props.order_type}\n          field=\"orders_type_id\"\n          setElement={props.changeBranchForm}\n          current_id={props.branch.orders_type_id}\n          width={'250px'}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера заказа\"\n          onChange={(event) => props.changeBranchForm('orders_prefix', event.target.value)}\n          value={props.branch.orders_prefix}\n          checkedFlag=\"inputBranchPrefixChecked\"\n          checked={props.view.inputBranchPrefixChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.orders_prefix}-${\n            props.counters.find((count) => count.id === 1).count\n          }`}\n        </p>\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера документов\"\n          onChange={(event) => props.changeBranchForm('documents_prefix', event.target.value)}\n          value={props.branch.documents_prefix}\n          checkedFlag=\"inputBranchPrefixDocChecked\"\n          checked={props.view.inputBranchPrefixDocChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.documents_prefix}-${\n            props.counters.find((count) => count.id === 2).count\n          }`}\n        </p>\n        <ChooseEmployees />\n\n        <BottomButtons\n          edit={props.branch.edit}\n          create={handleCreateBranch}\n          save={() => props.saveBranch()}\n          recover={\n            props.permissions.includes('setting_recover_branch')\n              ? () => props.deleteBranch(false)\n              : null\n          }\n          delete={() => props.deleteBranch(true)}\n          close={() => props.setVisibleFlag('statusBranchEditor', false)}\n          deleted={props.branch.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  view: state.view,\n  order_type: state.data.order_type,\n  counters: state.data.counters,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editBranch } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\n\nconst TableBranches = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th></th>\n               <th>Название локации</th>\n               <th>Адрес</th>\n               <th>Телефон</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.branches.filter(branch => props.showDeleted || !branch.deleted).map(branch =>{\n            return (\n               <tr \n                  key={branch.id}\n                  className={branch.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => props.editBranch(branch)} \n               >\n                  <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                  <td>{branch.name}</td>\n                  <td>{branch.address}</td>\n                  <td>{showPhone(branch.phone)}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   branches: state.data.branches,\n   showDeleted: state.branch.showDeleted\n   })\n\nconst mapDispatchToProps = {\n   editBranch\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addCounters, changeBranchForm } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n  useEffect(() => {\n    props.addCounters()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n          <span className='headerTitle'>Локации</span>\n        </div>\n\n        <div className='settingPageBody'>\n        <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n        <div className='row'>\n          <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusBranchEditor', true)}\n          > \n            + Добавить локацию\n          </div>\n          {props.permissions.includes('setting_see_branch') ? <Checkbox\n            className='ml10'\n            label='Показать удаленные'\n            onChange={event => props.changeBranchForm('showDeleted', event.target.checked)}\n            checked={props.showDeleted}\n          /> : null}\n        </div>\n\n        <TableBranches/>\n\n        {props.statusBranchEditor ? <BranchEditor/> : null}\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusBranchEditor: state.view.statusBranchEditor,\n  showDeleted: state.branch.showDeleted,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addCounters,\n  changeBranchForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                invisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                invisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.data.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { editEmoloyee, setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmoloyee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmoloyee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={idx => props.changeWarehouseForm(idx, 'tabs')}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        invisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        invisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            invisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        invisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    invisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос шиблонов не выполнен'))\n\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    invisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={idx => props.changeNotEventForm(idx, 'tabs')}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          invisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  classNameMenu='listOption'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.invisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            invisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                invisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.data.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments} from '../../../../Redux/actions'\nimport {changeBookState} from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n    useEffect(() => {\n        props.addEquipment()\n        props.addDictMalfunction()\n        props.addDictPackagelist()\n        props.addItemPayments()\n    }, [])\n\n    const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Справочники</span>\n            </div>\n            <div className='settingPageBody'>\n            </div>\n\n            <Tabs\n                list={tabs_list}\n                func={idx => props.changeBookState({tabs: idx})}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <BookEquipment/> : null}\n            {props.tabs === 1 ? <MalfunctionBooks/> : null}\n            {props.tabs === 2 ? <PackagelistBook/> : null}\n            {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n    changeBookState,\n    addEquipment,\n    addDictMalfunction,\n    addDictPackagelist,\n    addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n      {/* <div className='settingContent'> */}\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n          {/* </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","import React, {useEffect} from 'react';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux';\n\n\nimport {addMainData, addEmployees, addStatus, addData} from '../Redux/actions';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\nimport OrderEditor from './orders/newOrder/OrderEditor'\n\n\nfunction Main(props) {\n\n    // Загружаем строки меню в State\n    useEffect(() => {\n        props.addMainData()\n        props.addEmployees()\n        props.addStatus()\n    }, [])\n\n    useEffect(() => {\n        props.addData(props.branches.filter(branch => branch.employees.includes(props.user_id))[0] || {}, 'current_branch')\n    }, [props.branches])\n\n\n    return (\n        <div>\n            <Sidebar/>\n            <div className='contentMain'>\n                <Switch>\n                    <Route path='/tasks' component={TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path='/orders' component={Orders}/>\n                    <Route path='/shops' component={Shops}/>\n                    <Route path='/payments' component={Payments}/>\n                    <Route path='/wherehouse' component={Wherehouse}/>\n                    <Route path='/clients' component={Clients}/>\n                    <Route path='/analytics' component={Analytics}/>\n                    <Route path='/reports' component={Reports}/>\n                    <Route path='/telephony' component={Telephony}/>\n                    <Route path='/settings' component={Settings}/>\n\n\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n            <Switch>\n                <Route\n                    exact path=\"/orders/:id\"\n                    // loadData={() => props.getOrder(id)}\n                    component={OrderEditor}\n                />\n            </Switch>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.data.branches\n})\n\nconst mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loginAction, loguotAction, addUserAction, log_in } from '../Redux/actions'\n\nfunction Login(props) {\n\n\n  const handleClick = ({target: {form}}) => {\n     props.log_in(form.login.value, form.password.value)\n  }\n\n\n\n  return (\n    <div className=\"mainLoginContaner\">\n      <div className=\"loginContanier\">\n        <h2>Войдите в аккаунт</h2>\n        {props.error_message ? (\n          <span className=\"errorMessageLogin\">{props.error_message}</span>\n        ) : null}\n        <form id=\"loginForm\">\n          <div>\n            <label className=\"loginFormLable\">Логин или Email</label>\n            <input \n              id=\"login\"\n              className=\"loginFormInput\" \n              type=\"text\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <label className=\"loginFormLable\">Пароль</label>\n            <input \n              id=\"password\" \n              className=\"loginFormInput\" \n              type=\"password\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n              Авторизоваться\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  serverUrl: state.data.url_server,\n  error_message: state.data.error_message\n})\n\nconst mapDispatchToProps = {\n    // explicitly forwarding arguments\n    login: loginAction,\n    loguot: loguotAction,\n    addUser: addUserAction,\n    log_in\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)\n","import React  from \"react\";\nimport Main from './components/Main'\nimport { connect } from \"react-redux\";\n\n\nimport Login from './components/Login'\n\n\nfunction App(props) {\n\n\n  return props.token ? <Main/> : <Login/>\n\n  \n}\n\nconst mapStateToProps = state => ({\n  token: state.data.token\n})\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}