{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","data/data.js","data/dataTableHeader.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions/actionUtils.js","Redux/actions.js","Redux/actions/employeeAction.js","Redux/actions/branchAction.js","Redux/actions/dataAction.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/userSettings/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","Redux/actions/filterAction.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/cashboxAction.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/KindOfGood.js","components/orders/cell/Brand.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","Redux/actions/clientAction.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/general/calandar/CalendarTime.js","components/general/calandar/CalendarNavi.js","components/general/calandar/CalendarOption.js","components/general/calandar/ChooseDate.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPayments.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/newOrder/orderHisroy/OrderPrint.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventsStatus.js","components/orders/newOrder/orderHisroy/OrderEvetns/EventSimple.js","components/orders/newOrder/orderHisroy/OrderEvetns/OrderEvents.js","components/general/TableFields.js","components/orders/newOrder/orderHisroy/OrderEvetns/AddComment.js","components/orders/newOrder/orderHisroy/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/newOrder/orderHisroy/Sticker.js","components/orders/newOrder/orderHisroy/StikerToPrint.js","components/orders/cell/Subtype.js","components/orders/cell/Manager.js","components/orders/cell/MissedPayments.js","components/orders/cell/ManagerNotes.js","components/orders/cell/Cell.js","components/orders/cell/AdCampaign.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/FilterEditor.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","components/general/ChooseOfListMany.js","components/general/ChooseWithSearch.js","components/orders/setCustomFilter/SetGroup.js","components/orders/setCustomFilter/SetBrand.js","components/orders/setCustomFilter/SetSubtype.js","components/orders/setCustomFilter/SetFilter.js","components/orders/TableOrderFields.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/TableClients.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","data/dataUserMenu.js","components/sidebar/userSettings/UserSettingMenu.js","components/sidebar/userSettings/RangeSlider.js","components/sidebar/userSettings/ChangeAvatar.js","components/sidebar/userSettings/UserProfile.js","components/sidebar/userSettings/Logout.js","components/sidebar/userSettings/UserSetting.js","components/Alerts/Alert.js","components/Alerts/Alerts.js","components/Main.js","components/Login.js","components/general/RefreshPage.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","alerts","menuRows","id","title","image","url","group_name","permission_keys","map","per","current_menu_row","settingMenu","permission_key","current_setting_menu_row","user","JSON","parse","sessionStorage","getItem","status","status_group","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","payrules","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","csrfToken","credentials","process","login_status","error_message","url_server","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","needToResetOrder","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","inputFilterTitleChecked","errorSameMail","errorSameLogin","statusRefreshPage","clientFilter","page","name","phone","search_word","badges","customFilters","general","sort","field_sort","engineer_id","overdue","status_id","status_overdue","urgent","order_type_id","manager_id","created_at","kindof_good","brand","subtype","client_id","search","temp_statuses","temp_order_types","temp_managers","temp_engineers","temp_created_at","temp_kindof_good_id","temp_brand","temp_subtype","temp_client","active_badge","active_filter","title_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","employees","tabs","showDeleted","role_title","first_name","last_name","email","notes","avatar","img","login","password","role_id","permissions","inn","doc_name","post","deleted","avaStartPosition","scale_img","order_event_types","dataTableHeader","field","width","visible","order","ordersShow","count","events","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","model","operations","parts","attachments","payments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","warranty_measures","event_filter","event","event_comment","tableFields","position_cursor","position_over","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","filter_name","filter_phone","logo","icon_trush","icon_location","icon_warning","icon_clock","icon_table","icon_briefcase","icon_bug","icon_pencil","icon_calendar","icon_right","icon_left","icon_down","icon_filter","icon_cross","icon_cancel","branches","current_branch","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","cashboxes","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_type","relation_id","cashbox_id","employee_id","order_id","target_cashbox_id","cashbox","employee","filter_created_at","setHours","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","payrolls","reimburse","setted_employee","payment_cashbox_type","payment_cashbox_id","payment_cashflow_category","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","session_save","Object","keys","forEach","includes","setItem","stringify","assign","length","shift","alert","filter","rows","a","b","view","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","local_save","new_data","every","val","saveToApp","word","replace","role","bool","console","log","equipments_list","equipments","findIndex","phones","statusPhones","statusTitle","tag","tags_list","tab","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","bad_request","dispatch","error","message","warn","clear","showAlert","changeStatusMenuVisible","changePermissions","setClietnCheckbox","setVisibleFlag","changeVisibleState","setVisibleListFlag","changeOrderFormS","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","text","setTimeout","editClient","fetch","then","response","json","success","catch","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addMainData","counts","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addDictService","changeEmployeeState","editEmployee","getFilter","addEmployees","filters","saveEditEmployee","changeBranchState","changeDataState","mapDispatchToProps","connect","props","useHistory","location","pathname","row","className","to","style","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","src","alt","Icon","viewBox","user_id","useState","menuVisible","setMenuVisible","handleChoose","generally_menu","some","key","report_menu","setting_menu","changeFilterState","resetFilter","setSearch","placeholder","onChange","target","handleChange","onKeyPressCapture","preventDefault","handleSearch","badge","opacity","changeOrderState","resetOrder","changeOrderField","getOrderFilter","kindof_good_id","brand_id","subtype_id","update_badges","addOrders","changeStatus","update_order","changeBookForm","changeBookState","resetBookEquipment","chooseBookSelected","addEquipmentType","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","find","getEmploeeName","toLocaleString","year","month","day","hour","minute","datestamp","statusGroop","deltaMinut","Math","round","abs","deltaHour","deltaDay","getDateEstimated","reorderOrderField","columnWidth","setColumnWidth","mouseMove","deltaDrag","pageX","mouseUp","window","removeEventListener","minWidth","draggable","onDragEnd","height","onMouseDown","addEventListener","display","onDragOver","order_position","changeCashboxState","changeCashboxPermissions","get_cashbox_filter","values","changePaymentState","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","optionsShowDate","optionsShowRangeDate","showPhone","slice","check0_100","isNaN","showName","showDate","date","currentMonth","today","start_date","setDate","valueOfPhoneInput","changeClientForm","changeClientState","addClients","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","invisible","disabled","func1","func2","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","showList","setShowList","disc","CalendarTime","current_date","getHours","getMinutes","setMinutes","CalendarNavi","visibleInputYear","setVisibleInputYear","months","setCurrent_day","setMonth","getMonth","setVisibleListMonth","visibleListMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","CalendarOption","allDate","first","second","setTime","getTime","getDay","getDate","setVisibleCalendar","ChooseDate","visibleCalendar","firstDay","setFirstDay","secondDay","setSecondDay","current_days","compareDates","date1","date2","dayClassName","class1","class2","range","join","showSelected","range_date","showRangeDate","showTop","date_range","new_range","prepareRange","onMouseOver","onMouseOut","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","request_body","item","parseFloat","toString","filter_cashboxes","filter_payments","r_filter","filter_order","closed_order","orders_count","current_branch_id","order_edit","handleClose","chooseData","setChooseData","category","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","seted","setBrand","createEquipmentType","settled","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","cteateEquipmentSubtype","setSubtype","changeOrderForm","addAnotherEquipment","deleteDevice","SetOrderGroup","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","iconClassName","iconColor","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","useMemo","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","current_engineer_id","isExist","deletePayment","Checkbox","label","EventStatus","time","current_status","changed","new","EventSimple","checkLength","marginLeft","event_type","whiteSpace","TableFields","mainCheckbox","useRef","checked_list","indeterminate","classNameMenu","minHeight","ref","addEventComment","current_status_id","textareaRef","React","useLayoutEffect","max","scrollHeight","resize","shiftKey","selectedOrder","createOrder","model_id","saveOrder","getOrder","history","goBack","Sticker","forwardRef","stickerToPrintRef","printOSticker","useReactToPrint","content","onAfterPrint","initStatusMenuVisible","list_id","editOrder","mainFilter","statusVis","tFields","table_order","tableHeight","offsetHeight","push","handleEdit","chooseCell","addClientToTempFilter","createCustomFilter","current_statuses","choosed_values","current_list","labelClassName","type_group","allStatuses","func_clear","ChooseOfListMany","len","showWord","mainLable","ChooseWithSearch","current_element","changeFilter","setType","settledType","settledBrand","resetTempFilter","deleteFilter","selectedFilter","overflow","addStatusGroup","addCustomFilters","addAdCampaign","addBadges","employee_access","changeFilterForm","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","selected","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","perm","setPerm","available","chooseCashboxSelected","createCashbox","saveEditCashbox","list_per","tab_field","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","income_sum","outcome_sum","cashboxAvailable","setShowDeleted","ivisible","addCashboxes","active","changePayrollState","addPayrolls","editPayroll","type_payrolls","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","setTotal","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","choose","cat","catVisible","setCatVisible","mainCategory","createWarehouseCategory","request_config1","request_config2","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","addWarehouseCategories","addParts","choosePartSelected","columns","Header","accessor","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","getCellProps","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","createEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","resetEmployee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","resetBranch","editBranch","addCounters","addBranches","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","data_user_menu","min","top","left","saveAvatar","avaPosition","size","setAvaPosition","originalSize","setOriginalSize","start","deltaX","deltaY","pageY","clientWidth","clientHeight","logout","UserProfile","Logout","Alert","addStatus","addData","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","UserSetting","exact","OrderEditor","log_in","res","serverUrl","form","RefreshPage","reload","csrf","get","err","document","getElementsByName","app","StrictMode","ReactDOM","getElementById"],"mappings":"0SAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,uMACd,CACCD,MAAO,qBACPC,YAAa,4LAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAA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O,GACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,EACJC,MAAO,uCACP0M,MAAO,aACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,EACJC,MAAO,gEACP0M,MAAO,oBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,EACJC,MAAO,uCACP0M,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,EACJC,MAAO,+DACP0M,MAAO,YACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,EACJC,MAAO,kFACP0M,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,EACJC,MAAO,iCACP0M,MAAO,QACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACT,CACE9M,GAAI,EACJC,MAAO,sEACP0M,MAAO,UACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,EACJC,MAAO,iFACP0M,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,GACR,CACC9M,GAAI,GACJC,MAAO,qEACP0M,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC9M,GAAI,GACJC,MAAO,oDACP0M,MAAO,aACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC9M,GAAI,GACJC,MAAO,uCACP0M,MAAO,cACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC9M,GAAI,GACJC,MAAO,2BACP0M,MAAO,QACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC9M,GAAI,GACJC,MAAO,8CACP0M,MAAO,kBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC9M,GAAI,GACJC,MAAO,gHACP0M,MAAO,iBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC9M,GAAI,GACJC,MAAO,oGACP0M,MAAO,gBACPC,MAAO,IACPC,SAAS,EACTC,MAAO,IACR,CACC9M,GAAI,GACJC,MAAO,uCACP0M,MAAO,iBACPC,MAAO,IACPC,SAA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I,EACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,EACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,EACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACP,CACAlT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACP,CACAlT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACP,CACAlT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,OACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,OACR9W,MAAO,QAET,CACElT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,OAAQ,QACR9W,MAAO,QACR,CACClT,GAAI,GACJC,MAAO,KACP2M,MAAO,QACPod,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","file":"static/js/main.1b6f1803.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   },{\n      value: 'see_payment_profit',\n      description: 'Видит транзакии ивлечения прибыли'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import {data_setting_menu} from '../../data/dataSettingRows'\nimport {data_menu_rows} from '../../data/dataSidebarRows'\n\nconst initialState = {\n\n    alerts: [],\n\n    menuRows: data_menu_rows,\n    current_menu_row: '',\n    settingMenu: data_setting_menu,\n    current_setting_menu_row: '',\n\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    payrules: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    csrfToken: '',\n    credentials: process.env.REACT_APP_CREDENTIALS,\n    login_status: JSON.parse(sessionStorage.getItem('login_status')) || false,\n    error_message: '',\n    url_server: process.env.REACT_APP_URL_SERVER\n    // url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:80' // Мобильный\n    // url_server: 'http://10.6.1.26:80/' // VPN\n\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n\n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n    switch (action.type) {\n\n        case 'CHANGE_DATA_STATE': {\n            const session_save = ['login_status', 'user']\n            Object.keys(action.data).forEach(field => {\n                if (session_save.includes(field)) sessionStorage.setItem(field, JSON.stringify(action.data[field]))\n            })\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SHOW_ALERT': {\n            let alerts = state.alerts\n            if (alerts.length >= 3) alerts.shift()\n            return {\n                ...state,\n                alerts: alerts.concat([action.alert])\n            }\n        }\n        case 'CLOSE_ALERT': {\n            return {\n                ...state,\n                alerts: state.alerts.filter(alert => alert.id !== action.id)\n            }\n\n        }\n\n\n\n\n\n\n        case 'ADD_MENU_ROWS': {\n            return {\n                ...state,\n                menuRows: action.rows,\n            }\n        }\n\n        case 'ADD_STATUS': {\n            return {\n                ...state,\n                status: action.status,\n            }\n        }\n\n        case 'ADD_STATUS_GROUP': {\n            return {\n                ...state,\n                status_group: action.status_group,\n            }\n        }\n\n        case 'ADD_EMPLOYEES': {\n            return {\n                ...state,\n                employees: action.employees,\n            }\n        }\n\n        case 'ADD_USER': {\n            return {\n                ...state,\n                user: action.user,\n                login_status: true\n            }\n        }\n\n        case 'ADD_BADGES': {\n            return {\n                ...state,\n                badges: action.badges\n            }\n        }\n\n\n        case 'ADD_EQUIPMENT': {\n            return {\n                ...state,\n                equipment: action.equipment\n            }\n        }\n\n\n\n        case 'ADD_SETTING_MENU': {\n            return {\n                ...state,\n                settingMenu: action.rows.sort((a, b) => a.id - b.id),\n            }\n        }\n\n\n        case 'ADD_ROLES': {\n            return {\n                ...state,\n                roles: action.roles,\n            }\n        }\n\n        case 'ADD_AD_CAMPAIGN': {\n            return {\n                ...state,\n                ad_campaign: action.ad_campaign,\n            }\n        }\n\n\n        case 'ADD_DATA': {\n            return {\n                ...state,\n                [action.field]: action.data,\n            }\n        }\n\n\n        default:\n            return state\n    }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n   needToResetOrder: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: true,\n   checkedOrderKindofGood: true,\n   checkedOrderBrand: true,\n   checkedOrderSubtype: true,\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n   inputFilterTitleChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false,\n   statusRefreshPage: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_VISIBLE_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n\n      \n\n\n      default: return state\n   }\n   \n}\n","const initialState = {\n\n    clientFilter: {\n        page: 0,\n        name: '',\n        phone: '7'\n    },\n\n    search_word: '',\n\n\n    // ========================\n    badges: [],\n    customFilters: [],\n\n    title: '',\n    general: false,\n\n    sort: JSON.parse(localStorage.getItem('sort')) || 'desc',\n    field_sort:  JSON.parse(localStorage.getItem('field_sort')) || 'id',\n    page: JSON.parse(localStorage.getItem('page')) || 0,\n\n    engineer_id: JSON.parse(localStorage.getItem('engineer_id')) || null,\n    overdue: JSON.parse(localStorage.getItem('overdue')) || null,\n    status_id: JSON.parse(localStorage.getItem('status_id')) || null,\n    status_overdue: JSON.parse(localStorage.getItem('status_overdue')) || null,\n    urgent: JSON.parse(localStorage.getItem('urgent')) || null,\n    order_type_id: JSON.parse(localStorage.getItem('order_type_id')) || null,\n    manager_id: JSON.parse(localStorage.getItem('manager_id')) || null,\n    created_at: JSON.parse(localStorage.getItem('created_at')) || null,\n    kindof_good: JSON.parse(localStorage.getItem('kindof_good')) || null,\n    brand: JSON.parse(localStorage.getItem('brand')) || null,\n    subtype: JSON.parse(localStorage.getItem('subtype')) || null,\n    client_id: JSON.parse(localStorage.getItem('client_id')) || null,\n\n    search: '',\n\n    temp_statuses: [],\n    temp_order_types: [],\n    temp_managers: [],\n    temp_engineers: [],\n    temp_created_at: [0, 0],\n    temp_kindof_good_id: null,\n    temp_brand: null,\n    temp_subtype: null,\n    temp_client: {},\n\n    active_badge: JSON.parse(localStorage.getItem('active_badge')) || 0,\n    active_filter: JSON.parse(localStorage.getItem('active_filter')) || 0\n}\n\nexport const filterReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_FILTER_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_FILTER_STATE': {\n            const local_save = ['sort', 'field_sort', 'page', 'engineer_id', 'overdue', 'status_id', 'status_overdue',\n                'urgent', 'order_type_id', 'manager_id', 'created_at', 'kindof_good', 'brand', 'subtype', 'client_id',\n                'active_badge', 'active_filter']\n            Object.keys(action.data).forEach(field => {\n                if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n            })\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_FILTER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'RESET_FILTER':\n            return {\n                ...state,\n                page: 0,\n\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n\n                active_badge: 0,\n                active_filter: 0\n            }\n\n        case 'RESET_TEMP_FILTER':\n            return {\n                ...state,\n                temp_statuses: [],\n                temp_order_types: [],\n                temp_managers: [],\n                temp_engineers: [],\n                temp_created_at: [0, 0],\n                temp_kindof_good_id: null,\n                temp_brand: null,\n                temp_subtype: null,\n                temp_client: {},\n            }\n\n        case 'RESET_DATA_FILTER':\n            return {\n                ...state,\n                title: '',\n                general: false,\n            }\n\n        // ========================\n        // case 'ADD_STATUS': {\n        //     return {\n        //         ...state,\n        //         status: action.status.map(status => status.id),\n        //     }\n        // }\n        //\n        // case 'ADD_DATA': {\n        //     if (action.field === 'order_type') {\n        //         return {\n        //             ...state,\n        //             order_type_id: action.data.map(type => type.id)\n        //         }\n        //     } else {\n        //         return state\n        //     }\n        // }\n        //\n        // case 'ADD_EMPLOYEES': {\n        //     return {\n        //         ...state,\n        //         employees: action.employees.map(employee => employee.id),\n        //     }\n        // }\n\n\n\n\n\n\n\n        case 'CHANGE_NAME_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    name: action.word,\n                    phone: ''\n                }\n            }\n        }\n\n\n        case 'CHANGE_PHONE_CLIENTFILTER': {\n            return {\n                ...state,\n                clientFilter: {\n                    ...state.clientFilter,\n                    phone: action.word.replace(/[^0-9]/g, ''),\n                    name: ''\n                }\n            }\n        }\n\n\n\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n    employees: [],\n\n    tabs: 0,\n    edit: 0,\n    showDeleted: false,\n    role_title: '',\n\n    first_name: '',\n    last_name: '',\n    email: '',\n    notes: '',\n    phone: '',\n    avatar: '',\n    img: '',\n    login: '',\n    password: '',\n    role_id: 0,\n    permissions: [],\n    inn: '',\n    doc_name: '',\n    post: '',\n    deleted: false,\n\n    avaStartPosition: [0, 0],\n    scale_img: 100\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_EMPLOYEE_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n\n        case 'SET_ROLE_EMPLOYEE_EDITOR': {\n            return {\n                ...state,\n                role_id: action.role\n            }\n        }\n\n        case 'CHANGE_SHOW_DELETED': {\n            return {\n                ...state,\n                showDeleted: !state.showDeleted\n            }\n        }\n\n\n        case 'EDIT_EMPLOYEE': {\n            return {\n                ...state,\n                edit: action.employee.id,\n                first_name: action.employee.first_name || '',\n                last_name: action.employee.last_name || '',\n                email: action.employee.email || '',\n                notes: action.employee.notes || '',\n                phone: action.employee.phone || '',\n                login: action.employee.login || '',\n                role_id: action.employee.role.id,\n                role_title: action.employee.role.title || '',\n                permissions: action.employee.permissions || [],\n                inn: action.employee.inn || '',\n                doc_name: action.employee.doc_name || '',\n                post: action.employee.post || '',\n                deleted: action.employee.deleted,\n                avatar: action.employee.avatar\n            }\n        }\n\n        case 'RESET_EMPLOYEE': {\n            return {\n                ...state,\n                edit: 0,\n                first_name: '',\n                last_name: '',\n                email: '',\n                notes: '',\n                phone: '',\n                login: '',\n                password: '',\n                role_title: '',\n                role_id: 0,\n                permissions: [],\n                inn: '',\n                doc_name: '',\n                post: '',\n                deleted: false,\n                avatar: '',\n                img: ''\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","export const order_event_types = [\n    {id: 1, title: 'Заказ создан', value: 'CREATE_ORDER'},\n    {id: 2, title: 'Инженер назанчен', value: 'ASSIGN_ENGINEER'},\n    {id: 3, title: 'Инженер изменен', value: 'CHANGE_ENGINEER'},\n    {id: 4, title: 'Менеджер назначен', value: 'ASSIGN_MANAGER'},\n    {id: 5, title: 'Менеджер изменен', value: 'CHANGE_MANAGER'},\n    {id: 6, title: 'Добавлен клиент', value: 'ADD_CLIENT'},\n    {id: 7, title: 'Клиент изменен', value: 'CHANGE_CLIENT'},\n    {id: 8, title: 'Изменение данных', value: 'CHANGE_DATA'},\n    {id: 9, title: 'Срок выполнения изменен', value: 'CHANGE_ESTIMATED_DONE_AT'},\n    {id: 10, title: 'Добавлена операция', value: 'ADD_OPERATION'},\n    {id: 11, title: 'Операция удалена', value: 'DELETE_OPERATION'},\n    {id: 12, title: 'Операция изменена', value: 'CHANGE_OPERATION'},\n    {id: 13, title: 'Добавлена запчасть', value: 'ADD_ORDER_PART'},\n    {id: 14, title: 'Запчасть удалена', value: 'DELETE_ORDER_PART'},\n    {id: 15, title: 'Запчасть изменена', value: 'CHANGE_ORDER_PART'},\n    {id: 16, title: 'Платеж добавлен', value: 'ADD_PAYMENT'},\n    {id: 17, title: 'Платеж удален', value: 'DELETE_PAYMENT'},\n    {id: 18, title: 'Статус изменен', value: 'CHANGE_STATUS'},\n    {id: 19, title: 'Коментарии', value: 'ADD_COMMENT'},\n    {id: 20, title: 'SMS оповещение', value: 'SEND_SMS'},\n    {id: 21, title: 'Email оповещение', value: 'SEND_EMAIL'},\n    {id: 22, title: 'Перемещение заказа', value: 'MOVE_TO'}\n]","const dataTableHeader = [\n    {\n        id: 1,\n        title: 'Заказ №',\n        field: 'id',\n        width: 90,\n        visible: true,\n        order: 1\n    }, {\n        id: 2,\n        title: 'Создан',\n        field: 'created_at',\n        width: 150,\n        visible: true,\n        order: 2\n    }, {\n        id: 3,\n        title: 'Срок заказа',\n        field: 'estimated_done_at',\n        width: 150,\n        visible: true,\n        order: 3\n    }, {\n        id: 4,\n        title: 'Статус',\n        field: 'status.name',\n        width: 150,\n        visible: true,\n        order: 4\n    }, {\n        id: 5,\n        title: 'Устройство',\n        field: 'equipment',\n        width: 150,\n        visible: true,\n        order: 5\n    }, {\n        id: 6,\n        title: 'Тип устройства',\n        field: 'kindof_good',\n        width: 150,\n        visible: true,\n        order: 6\n    }, {\n        id: 7,\n        title: 'Бренд',\n        field: 'brand',\n        width: 130,\n        visible: true,\n        order: 7\n    },{\n        id: 8,\n        title: 'Модуль/Серия',\n        field: 'subtype',\n        width: 130,\n        visible: true,\n        order: 8\n    }, {\n        id: 9,\n        title: 'Неисправность',\n        field: 'malfunction',\n        width: 130,\n        visible: true,\n        order: 9\n    }, {\n        id: 10,\n        title: 'Исполнитель',\n        field: 'engineer_id',\n        width: 150,\n        visible: true,\n        order: 10\n    }, {\n        id: 11,\n        title: 'Менеджер ',\n        field: 'manager_id',\n        width: 150,\n        visible: true,\n        order: 11\n    }, {\n        id: 12,\n        title: 'Клиент',\n        field: 'client.name',\n        width: 150,\n        visible: true,\n        order: 12\n    }, {\n        id: 13,\n        title: 'Цена',\n        field: 'price',\n        width: 130,\n        visible: true,\n        order: 13\n    }, {\n        id: 14,\n        title: 'К оплате',\n        field: 'missed_payments',\n        width: 130,\n        visible: true,\n        order: 14\n    }, {\n        id: 15,\n        title: 'Заметки исполнителя',\n        field: 'engineer_notes',\n        width: 130,\n        visible: true,\n        order: 15\n    }, {\n        id: 16,\n        title: 'Заметки менеджера',\n        field: 'manager_notes',\n        width: 150,\n        visible: true,\n        order: 16\n    }, {\n        id: 17,\n        title: 'Ячейка',\n        field: 'engineer_notes',\n        width: 150,\n        visible: true,\n        order: 17\n    }, {\n        id: 18,\n        title: 'Рекламная компания',\n        field: 'ad_campaign_id',\n        width: 150,\n        visible: true,\n        order: 18\n    }\n]\n\nexport default dataTableHeader","import {order_event_types} from '../../data/data'\nimport dataTableHeader from '../../data/dataTableHeader'\n\nconst initialState = {\n\n    ordersShow: [],\n    count: 0,\n\n    events: [],\n\n    edit: 0,\n    tabs: 1,\n\n    created_at: 0,\n    done_at: 0,\n    closed_at: 0,\n    assigned_at: 0,\n    duration: 0,\n    estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n    scheduled_for: 0,\n    warranty_date: 0,\n    status_deadline: 0,\n\n    ad_campaign_id: 1,\n    branch_id: 0,\n    status: {},\n    client: {},\n    order_type_id: 1,\n    closed_by_id: 0,\n    created_by_id: 0,\n    manager_id: 0,\n    engineer_id: 0,\n    kindof_good: {},\n    brand: {},\n    subtype: {},\n    model: {},\n\n    operations: [],\n    parts: [],\n    attachments: [],\n    payments: [],\n\n    id_label: '',\n    prefix: '',\n    serial: '',\n    malfunction: '',\n    packagelist: '',\n    appearance: '',\n    engineer_notes: '',\n    manager_notes: '',\n    resume: '',\n    cell: '',\n\n    estimated_cost: 0,\n    missed_payments: 0,\n    discount_sum: 0,\n    payed: 0,\n    price: 0,\n    remaining: 0,\n    remaining_status: 0,\n    remaining_warranty: 0,\n\n    overdue: false,\n    status_overdue: false,\n    urgent: false,\n    warranty_measures: false,\n\n    event_filter: JSON.parse(localStorage.getItem('event_filter')) || order_event_types.map(event => event.id),\n    event_comment: '',\n\n    tableFields: JSON.parse(localStorage.getItem('tableFields')) || dataTableHeader,\n\n    position_cursor: 0,\n    position_over: null\n}\n\nexport const orderReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_ORDER_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SELECTED_ORDER': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_ORDER_FORM': {\n\n            let equipments_list = state.equipments\n            equipments_list[action.idx][action.field] = action.value\n\n            return {...Object.assign(state, {equipments: equipments_list})}\n\n        }\n\n        case 'CHANGE_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx][action.field] = action.value\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n        case 'REORDER_ORDER_FIELD': {\n\n            let tableFields = state.tableFields\n            const idx = tableFields.findIndex(field => field.id === action.id)\n            tableFields[idx].order = action.order + 0.5\n            tableFields = tableFields.sort( (a, b) => a.order - b.order)\n            tableFields = tableFields.map((field, idx) => {\n                field.order = idx\n                return field\n            })\n\n\n            localStorage.setItem('tableFields', JSON.stringify(tableFields))\n\n            return {...state, tableFields}\n\n        }\n\n\n        case 'ADD_ANOTHER_EQUIPMENT': {\n\n\n            return {\n                ...state,\n                equipments: state.equipments.concat([{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }])\n            }\n        }\n\n\n        case 'DELETE_DEVICE': {\n\n            let equipments_list = state.equipments\n            equipments_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                equipments: equipments_list\n            }\n        }\n\n\n        case 'CHANGE_ORDER_FORM_S': {\n\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'RESET_ORDER': {\n\n            return {\n                ...state,\n                events: [],\n                edit: 0,\n                tabs: 1,\n\n                created_at: 0,\n                done_at: 0,\n                closed_at: 0,\n                assigned_at: 0,\n                duration: 0,\n                estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n                // estimated_done_at: 0,\n                scheduled_for: 0,\n                warranty_date: 0,\n                status_deadline: 0,\n\n                ad_campaign_id: 1,\n                branch_id: 0,\n                status_id: 0,\n                client: {},\n                order_type_id: 1,\n                closed_by_id: 0,\n                created_by_id: 0,\n                manager_id: 0,\n                engineer_id: 0,\n                kindof_good: {},\n                brand: {},\n                subtype: {},\n                model: {},\n\n                operations: [],\n                parts: [],\n                attachments: [],\n                payments: [],\n\n                id_label: '',\n                prefix: '',\n                serial: '',\n                malfunction: '',\n                packagelist: '',\n                appearance: '',\n                engineer_notes: '',\n                manager_notes: '',\n                resume: '',\n                cell: '',\n\n                estimated_cost: 0,\n                missed_payments: 0,\n                discount_sum: 0,\n                payed: 0,\n                price: 0,\n                remaining: 0,\n                remaining_status: 0,\n                remaining_warranty: 0,\n\n                overdue: false,\n                status_overdue: false,\n                urgent: false,\n                warranty_measures: false,\n\n\n                equipments: [{\n                    kindof_good: {},\n                    brand: {},\n                    subtype: {},\n                    model: {},\n                    malfunction: '',\n                    packagelist: '',\n                    appearance: '',\n                    urgent: false\n                }],\n            }\n        }\n\n\n        case 'EDIT_ORDER': {\n\n            return {\n                ...state,\n                edit: action.order.id,\n                created_at: action.order.created_at,\n                done_at: action.order.done_at,\n                closed_at: action.order.closed_at,\n                assigned_at: action.order.assigned_at,\n                duration: action.order.duration,\n                estimated_done_at: action.order.estimated_done_at,\n                scheduled_for: action.order.scheduled_for,\n                warranty_date: action.order.warranty_date,\n                status_deadline: action.order.status_deadline,\n\n                ad_campaign_id: action.order.ad_campaign.id,\n                branch_id: action.order.branch.id,\n                status: action.order.status,\n                client: action.order.client,\n                order_type_id: action.order.order_type.id,\n                closed_by_id: action.order.closed_by_id,\n                created_by_id: action.order.created_by_id,\n                manager_id: action.order.manager_id,\n                engineer_id: action.order.engineer_id,\n                kindof_good: action.order.kindof_good,\n                brand: action.order.brand,\n                subtype: action.order.subtype,\n                model: action.order.model,\n\n                operations: action.order.operations,\n                parts: action.order.parts,\n                attachments: action.order.attachments,\n                payments: action.order.payments,\n\n                id_label: action.order.id_label,\n                prefix: action.order.prefix,\n                serial: action.order.serial,\n                malfunction: action.order.malfunction,\n                packagelist: action.order.packagelist,\n                appearance: action.order.appearance,\n                engineer_notes: action.order.engineer_notes || '',\n                manager_notes: action.order.manager_notes || '',\n                resume: action.order.resume || '',\n                cell: action.order.cell || '',\n\n                estimated_cost: action.order.estimated_cost,\n                missed_payments: action.order.missed_payments,\n                discount_sum: action.order.discount_sum,\n                payed: action.order.payed,\n                price: action.order.price,\n                remaining: action.order.remaining,\n                remaining_status: action.order.remaining_status,\n                remaining_warranty: action.order.remaining_warranty,\n\n                overdue: action.order.overdue,\n                status_overdue: action.order.status_overdue,\n                urgent: action.order.urgent,\n                warranty_measures: action.order.warranty_measures\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n    clients: [],\n\n    juridical: false,\n    supplier: false,\n    conflicted: false,\n    should_send_email: false,\n    deleted: false,\n\n    name: '',\n    name_doc: '',\n    email: '',\n    address: '',\n    phone: [{\n        title: 'Мобильный',\n        number: '',\n        notify: false\n    }],\n    ad_campaign_id: 1,\n    discount_code: '',\n    discount_goods: 0,\n    discount_goods_margin_id: 1,\n    discount_materials: 0,\n    discount_materials_margin_id: 1,\n    discount_services: 0,\n    discount_service_margin_id: 0,\n    notes: '',\n    tags: [],\n\n    ogrn: '',\n    inn: '',\n    kpp: '',\n    juridical_address: '',\n    director: '',\n    bank_name: '',\n    settlement_account: '',\n    corr_account: '',\n    bic: '',\n\n    discount_good_type: false,\n    discount_materials_type: false,\n    discount_service_type: false,\n\n    tabs: 0,\n    phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n    statusPhoneList: [false],\n    statusAddTitle: [false],\n\n    page: 0,\n    filter_name: '',\n    filter_phone: ''\n\n}\n\nexport const clientReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_CLIENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'CHANGE_CLIENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'SET_CLIENT_CHECKBOX': {\n\n            if (action.value === 'change') {\n                return {\n                    ...state,\n                    [action.field]: !state[action.field]\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: action.value\n                }\n            }\n        }\n\n\n        case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n            let phones = state.phone\n            phones[action.idx].number = action.value\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n        case 'ADD_PHONE_COUNTER': {\n\n            return {\n                ...state,\n                phone: state.phone.concat([{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }]),\n                statusPhoneList: state.statusPhoneList.concat([false])\n            }\n        }\n\n        case 'DELETE_COUNT_NUMBER': {\n\n            let phones = state.phone\n            phones.splice(action.idx, 1)\n            const statusPhones = state.statusPhoneList\n            statusPhones.splice(action.idx, 1)\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n\n        case 'SET_PHONE_NOTIFY': {\n\n            let phones = state.phone\n            phones[action.idx].notify = !phones[action.idx].notify\n\n            return {\n                ...state,\n                phone: phones\n            }\n        }\n\n\n        case 'SET_PHONE_TITLE': {\n\n            let phones = state.phone\n            phones[action.idx].title = action.title\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            return {\n                ...state,\n                phone: phones,\n                statusPhoneList: statusPhones\n            }\n        }\n\n        case 'CHANGE_STATUS_PHONE_LIST': {\n\n            const statusPhones = state.statusPhoneList\n            statusPhones[action.idx] = !statusPhones[action.idx]\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = false\n\n            return {\n                ...state,\n                statusPhoneList: statusPhones,\n                statusAddTitle: statusTitle\n            }\n        }\n\n\n        case 'CHANGE_STATUS_ADD_TITLE': {\n\n            const statusTitle = state.statusAddTitle\n            statusTitle[action.idx] = !statusTitle[action.idx]\n\n            return {\n                ...state,\n                statusAddTitle: statusTitle\n            }\n        }\n\n        case 'SET_AD_CANMPAIGN_CLIENT': {\n\n            return {\n                ...state,\n                ad_campaign_id: action.id\n            }\n        }\n\n        case 'ADD_CLIENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_CLIENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n        case 'RESET_DATA_CLIENT': {\n            return {\n                ...state,\n                juridical: false,\n                supplier: false,\n                conflicted: false,\n                should_send_email: false,\n                deleted: false,\n\n                name: '',\n                name_doc: '',\n                email: '',\n                address: '',\n                phone: [{\n                    title: 'Мобильный',\n                    number: '',\n                    notify: false\n                }],\n                ad_campaign_id: 1,\n                discount_code: '',\n                discount_goods: 0,\n                discount_goods_margin_id: 1,\n                discount_materials: 0,\n                discount_materials_margin_id: 1,\n                discount_services: 0,\n                discount_service_margin_id: 0,\n                notes: '',\n                tags: [],\n\n                ogrn: '',\n                inn: '',\n                kpp: '',\n                juridical_address: '',\n                director: '',\n                bank_name: '',\n                settlement_account: '',\n                corr_account: '',\n                bic: '',\n\n                discount_good_type: false,\n                discount_materials_type: false,\n                discount_service_type: false,\n\n                edit: 0,\n                tabs: 0,\n                statusPhoneList: [false],\n                statusAddTitle: [false]\n\n            }\n        }\n\n        case 'CHANGE_CLIENT_TABS': {\n\n            return {\n                ...state,\n                tabs: action.tab\n            }\n        }\n\n\n        case 'EDIT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id\n            }\n        }\n\n\n        case 'EDIT_CURRENT_CLIENT': {\n            return {\n                ...state,\n                juridical: action.client.juridical,\n                supplier: action.client.supplier,\n                conflicted: action.client.conflicted,\n                should_send_email: action.client.should_send_email,\n                deleted: action.client.deleted,\n\n                name: action.client.name,\n                name_doc: action.client.name_doc,\n                email: action.client.email,\n                address: action.client.address,\n                phone: action.client.phone,\n                ad_campaign_id: action.client.ad_campaign_id,\n                discount_code: action.client.discount_code,\n                discount_goods: action.client.discount_goods,\n                discount_goods_margin_id: action.client.discount_goods_margin_id,\n                discount_materials: action.client.discount_materials,\n                discount_materials_margin_id: action.client.discount_materials_margin_id,\n                discount_services: action.client.discount_services,\n                discount_service_margin_id: action.client.discount_service_margin_id,\n                notes: action.client.notes,\n                tags: action.client.tags,\n\n                ogrn: action.client.ogrn,\n                inn: action.client.inn,\n                kpp: action.client.kpp,\n                juridical_address: action.client.juridical_address,\n                director: action.client.director,\n                bank_name: action.client.bank_name,\n                settlement_account: action.client.settlement_account,\n                corr_account: action.client.corr_account,\n                bic: action.client.bic,\n\n                discount_good_type: action.client.discount_good_type,\n                discount_materials_type: action.client.discount_materials_type,\n                discount_service_type: action.client.discount_service_type,\n\n                edit: action.client.id,\n                tabs: 1\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n\nexport const icon_filter = 'M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z'\n\nexport const icon_cross = 'M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z'\n\nexport const icon_cancel = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13z M21 8l-5 5-5-5-3 3 5 5-5 5 3 3 5-5 5 5 3-3-5-5 5-5z'\n\nexport const icon_letter = 'M29 4h-26c-1.65 0-3 1.35-3 3v20c0 1.65 1.35 3 3 3h26c1.65 0 3-1.35 3-3v-20c0-1.65-1.35-3-3-3zM12.461 17.199l-8.461 6.59v-15.676l8.461 9.086zM5.512 8h20.976l-10.488 7.875-10.488-7.875zM12.79 17.553l3.21 3.447 3.21-3.447 6.58 8.447h-19.579l6.58-8.447zM19.539 17.199l8.461-9.086v15.676l-8.461-6.59z'\n\nexport const icon_user = 'M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'\n\nexport const icon_arrow_right = 'M19.414 27.414l10-10c0.781-0.781 0.781-2.047 0-2.828l-10-10c-0.781-0.781-2.047-0.781-2.828 0s-0.781 2.047 0 2.828l6.586 6.586h-19.172c-1.105 0-2 0.895-2 2s0.895 2 2 2h19.172l-6.586 6.586c-0.39 0.39-0.586 0.902-0.586 1.414s0.195 1.024 0.586 1.414c0.781 0.781 2.047 0.781 2.828 0z'\n\nexport const icon_bubble = 'M16 6c-1.717 0-3.375 0.271-4.928 0.804-1.46 0.502-2.76 1.211-3.863 2.108-2.069 1.681-3.209 3.843-3.209 6.088 0 1.259 0.35 2.481 1.039 3.63 0.711 1.185 1.781 2.268 3.093 3.133 0.949 0.625 1.587 1.623 1.755 2.747 0.056 0.375 0.091 0.753 0.105 1.129 0.233-0.194 0.461-0.401 0.684-0.624 0.755-0.755 1.774-1.172 2.828-1.172 0.168 0 0.336 0.011 0.505 0.032 0.655 0.083 1.325 0.126 1.99 0.126 1.717 0 3.375-0.271 4.928-0.804 1.46-0.502 2.76-1.211 3.863-2.108 2.069-1.681 3.209-3.843 3.209-6.088s-1.14-4.407-3.209-6.088c-1.104-0.897-2.404-1.606-3.863-2.108-1.553-0.534-3.211-0.804-4.928-0.804zM16 2v0c8.837 0 16 5.82 16 13s-7.163 13-16 13c-0.849 0-1.682-0.054-2.495-0.158-3.437 3.437-7.539 4.053-11.505 4.144v-0.841c2.142-1.049 4-2.961 4-5.145 0-0.305-0.024-0.604-0.068-0.897-3.619-2.383-5.932-6.024-5.932-10.103 0-7.18 7.163-13 16-13z'\n\nexport const icon_loop = 'M4 10h20v6l8-8-8-8v6h-24v12h4zM28 22h-20v-6l-8 8 8 8v-6h24v-12h-4z'\n\nexport const icon_arrow_down = 'M27.414 19.414l-10 10c-0.781 0.781-2.047 0.781-2.828 0l-10-10c-0.781-0.781-0.781-2.047 0-2.828s2.047-0.781 2.828 0l6.586 6.586v-19.172c0-1.105 0.895-2 2-2s2 0.895 2 2v19.172l6.586-6.586c0.39-0.39 0.902-0.586 1.414-0.586s1.024 0.195 1.414 0.586c0.781 0.781 0.781 2.047 0 2.828z'\n\nexport const icon_coin_dollar = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM15 29c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM16 16v-4h4v-2h-4v-2h-2v2h-4v8h4v4h-4v2h4v2h2v-2h4l-0-8h-4zM14 16h-2v-4h2v4zM18 22h-2v-4h2v4z'\n\nexport const icon_checkmarker = 'M27 4l-15 15-7-7-5 5 12 12 20-20z'\n","import {icon_location} from \"../../data/icons\"\n\nconst initialState = {\n    branches: [],\n    current_branch: {},\n\n    edit: 0,\n    name: '',\n    address: '',\n    phone: '',\n    color: 'grey',\n    icon: icon_location,\n    orders_type_id: 1,\n    orders_type_strategy: 'last',\n    orders_prefix: 'OTS',\n    documents_prefix: 'A',\n    employees: [],\n    deleted: false,\n    schedule: [\n        {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 1\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 2\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 3\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 4\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: true,\n            week_day: 5\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: false,\n            week_day: 6\n        }, {\n            start_time: '9:00',\n            end_time: '18:00',\n            work_day: false,\n            week_day: 7\n        },\n    ],\n\n    showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_BRANCH_STATE': {\n            // const local_save = []\n            // Object.keys(action.data).forEach(field => {\n            //    if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n            // })\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'CHANGE_SCHEDULE': {\n\n            let list_schedule = state.schedule\n            list_schedule[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                schedule: list_schedule\n            }\n        }\n\n        case 'SET_BRANCH_EMPLOYEE': {\n            if (action.id.every(id => state.employees.includes(id))) {\n                return {\n                    ...state,\n                    employees: state.employees.filter(id => !action.id.includes(id)),\n                }\n            } else {\n                return {\n                    ...state,\n                    employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n                }\n            }\n        }\n\n        case 'RESET_BRANCH': {\n\n            return {\n                ...state,\n                name: '',\n                address: '',\n                phone: '',\n                color: 'grey',\n                icon: icon_location,\n                orders_type_id: 1,\n                orders_type_strategy: 'last',\n                orders_prefix: 'OTS',\n                documents_prefix: 'A',\n                employees: [],\n                deleted: false,\n                schedule: [\n                    {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 1\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 2\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 3\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 4\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: true,\n                        week_day: 5\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: false,\n                        week_day: 6\n                    }, {\n                        start_time: '9:00',\n                        end_time: '18:00',\n                        work_day: false,\n                        week_day: 7\n                    },\n                ],\n\n                edit: 0\n            }\n        }\n\n\n        case 'EDIT_BRANCH': {\n\n            return {\n                ...state,\n                name: action.branch.name,\n                address: action.branch.address,\n                phone: action.branch.phone,\n                color: action.branch.color,\n                icon: action.branch.icon,\n                orders_type_id: action.branch.orders_type_id,\n                orders_type_strategy: action.branch.orders_type_strategy,\n                orders_prefix: action.branch.orders_prefix,\n                documents_prefix: action.branch.documents_prefix,\n                employees: action.branch.employees,\n                deleted: action.branch.deleted,\n                schedule: action.branch.schedule,\n\n                edit: action.branch.id\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_BOOK_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n\n   cashboxes: [],\n\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   showDeleted: false,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_CASHBOX_STATE': {\n         const local_save = []\n         Object.keys(action.data).forEach(field => {\n            if (local_save.includes(field)) localStorage.setItem(field, JSON.stringify(action.data[field]))\n         })\n         return {...Object.assign(state, action.data)}\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","const now = new Date()\n\nconst initialState = {\n\n    payments: [],\n\n    edit: 0,\n    sum: 0,\n    title: '',\n\n    cashflow_category: '',\n    description: '',\n\n    deposit: 0,\n    income: '',\n    outcome: '',\n    direction: 0,\n\n    can_print_fiscal: false,\n    deleted: false,\n    is_fiscal: false,\n\n    created_at: 0,\n    custom_created_at: null,\n\n    tags: [],\n\n    relation_type: 0,\n    relation_id: null,\n    cashbox_id: 0,\n    client_id: 0,\n    employee_id: 0,\n    order_id: 0,\n    target_cashbox_id: 0,\n\n    cashbox: {},\n    client: {},\n    employee: {},\n    order: {},\n\n    filter_created_at: [\n        parseInt(now.setHours(0, 0, 0, 0) / 1000),\n        parseInt(now.setHours(23, 59, 59, 999) / 1000)\n    ],\n    filter_tags: [],\n\n    current_type: 0,\n    context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'CHANGE_PAYMENT_STATE': {\n            return {...Object.assign(state, action.data)}\n        }\n\n        case 'CHOOSE_PAYMENT_SELECTED': {\n            if (action.id.every(id => state[action.field].includes(id))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n                }\n            }\n        }\n\n        case 'ADD_PAYMENT_TAG': {\n\n            return {\n                ...state,\n                tags: state.tags.concat([action.tag])\n            }\n        }\n\n        case 'DELETE_PAYMENT_TAG': {\n\n            let tags_list = state.tags\n            tags_list.splice(action.idx, 1)\n\n            return {\n                ...state,\n                tags: tags_list\n            }\n        }\n\n\n        case 'RESET_PAYMENTS': {\n\n            return {\n                ...state,\n                edit: 0,\n                sum: 0,\n                title: '',\n\n                cashflow_category: '',\n                description: '',\n\n                deposit: 0,\n                income: '',\n                outcome: '',\n                direction: 0,\n\n                can_print_fiscal: true,\n                deleted: false,\n                is_fiscal: false,\n\n                created_at: 0,\n                custom_created_at: 0,\n\n                tags: [],\n\n                relation_type: 0,\n                relation_id: null,\n                cashbox_id: 0,\n                client_id: 0,\n                employee_id: 0,\n                order_id: 0,\n                target_cashbox_id: 0,\n\n                context: {}\n            }\n        }\n\n        case 'SET_PAYMENT': {\n\n            return {\n                ...state,\n                edit: action.payment.id,\n\n                cashflow_category: action.payment.cashflow_category,\n                description: action.payment.description,\n\n                deposit: action.payment.deposit,\n                income: action.payment.income,\n                outcome: action.payment.outcome,\n                direction: action.payment.direction,\n\n                can_print_fiscal: action.payment.can_print_fiscal,\n                deleted: action.payment.deleted,\n                is_fiscal: action.payment.is_fiscal,\n\n                created_at: action.payment.created_at,\n                custom_created_at: action.payment.custom_created_at,\n\n                tags: action.payment.tags,\n\n                relation_type: action.payment.relation_type,\n                relation_id: action.payment.relation_id,\n                cashbox: action.payment.cashbox,\n                client: action.payment.client,\n                employee: action.payment.employee,\n                order: action.payment.order,\n                target_cashbox_id: action.payment.target_cashbox_id,\n            }\n        }\n\n\n        default:\n            return state\n    }\n\n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            // engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const now = new Date()\n\nconst initialState = {\n\n   payrolls: [],\n\n   edit: 0,                   // id при редактировании\n\n   description: '',              // Описание\n   income: 0,                    // Входящяя сумма\n   outcome: 0,                   // Иcходящая сумму\n   direction: 0,                 // Направление платежа\n   deleted: false,               // Платеж удален\n   reimburse: false,             // Совершен возврат\n   created_at: null,             // Дата создания\n   custom_created_at: null,      // Дата установленая пользователем\n   relation_type: 0,             // Тип начисления\n   relation_id: 0,               // id связанного события\n   employee_id: 0,               // Сотрудник\n   order_id: null,               // Заказ\n\n   setted_employee: 0,           // Выбранный сотрудник\n   showDeleted: false,           // Показать удаленные\n\n   filter_created_at: [\n      parseInt(now.setHours(0, 0, 0, 0) / 1000),\n      parseInt(now.setHours(23, 59, 59, 999) / 1000)\n   ],\n   payment_cashbox_type: 0,      // Тип платежа (для создания платежа при выплате ЗП)\n   payment_cashbox_id: 0,        // id кассы (для создания платежа при выплате ЗП)\n   payment_cashflow_category: 0, // категория расходов (для создания платежа при выплате ЗП)\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_PAYROLL_STATE': {\n         return {...Object.assign(state, action.data)}\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,\n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null,\n\n            payment_cashbox_type: 0,\n            payment_cashbox_id: 0,\n            payment_cashflow_category: 0\n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer,\n        compose(\n        applyMiddleware(thunk),\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ))\n\n\nexport default store","import store from '../store'\nimport {csrf, showAlert} from '../actions'\n\nexport function getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-CSRFToken\": state.data.csrfToken,\n        },\n        credentials: state.data.credentials,\n        body: JSON.stringify(body)\n    }\n}\n\nexport function bad_request(dispatch, error, message = '') {\n    console.warn(message)\n    if (error.message === 'Unexpected token < in JSON at position 0') {\n        sessionStorage.clear()\n        dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusRefreshPage: true, statusOrderLoader: false}\n        })\n    }\n    showAlert(dispatch, 'alert-danger', message)\n}\n","import store from \"./store\"\nimport {bad_request, getRequestConfig} from './actions/actionUtils'\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\n\n\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function changeVisibleState( data ) {\n    return {\n        type: 'CHANGE_VISIBLE_STATE',\n        data\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function showAlert(dispatch, type, text) {\n    const alert = {\n        id: parseInt(Date.now() / 1000),\n        type,\n        text\n    }\n    dispatch({\n        type: 'SHOW_ALERT',\n        alert\n    })\n    setTimeout(() => {\n        dispatch({\n            type: 'CLOSE_ALERT',\n            id: alert.id\n        })\n    }, 3000)\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + \"/flogin\", {\n            method: \"POST\",\n            headers: {\n                // 'Accept': 'application/json, text/javascript, */*; q=0.01',\n                \"Content-Type\": \"application/json\",\n                \"X-CSRFToken\": state.data.csrfToken\n            },\n            credentials: state.data.credentials,\n            body: JSON.stringify({email: login, password: password}),\n        })\n            .then(res => res.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {login_status: true}\n                    })\n                } else {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {error_message: data.message, login_status: false},\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error,'Запрос авторизации не выполнен'))\n    }\n}\n\n\n\nexport const csrf = () => {\n\n    const state = store.getState()\n\n    if (state.data.credentials === 'include') {\n        return dispatch => {\n\n            fetch(state.data.url_server + \"/getcsrf\", {credentials: state.data.credentials})\n                .then((res) => {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {csrfToken: res.headers.get([\"X-CSRFToken\"])}\n                    })\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    } else {\n        return dispatch => {\n            dispatch({\n                type: 'CHANGE_DATA_STATE',\n                data: {csrfToken: document.getElementsByName(\"csrf-token\")[0].content}\n            })\n        }\n    }\n\n\n}\n\n// Client ================================================================================================================\n\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error,'Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error,'Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error,'Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\n\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error,'Запрос рекламных компаний не выполнен'))\n    }\n}\n\n\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос типов изделий не выполнен'))\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление роли не выполнен'))\n\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {\n                            generally_info: data.generally_info,\n                            user: data.user,\n                            order_type: data.order_type,\n                            counters: data.counts,\n                            ad_campaign: data.ad_campaign,\n                            item_payments: data.item_payments,\n                            status_group: data.status_group,\n                            service_prices: data.service_prices\n                        }\n                    })\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branch},\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes}\n                    })\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос счетчиков не выполнен'))\n    }\n}\n\n\n\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос статей плтатежей не выполнен'))\n    }\n}\n\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение цены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос услуг не выполнен'))\n    }\n}\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {showAlert} from '../actions'\n\nexport function changeEmployeeState(data) {\n    return {\n        type: 'CHANGE_EMPLOYEE_STATE',\n        data\n    }\n}\n\nexport function editEmployee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmployee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\nfunction getFilter() {\n    const state = store.getState()\n    return {\n        deleted: state.employee.showDeleted,\n        page: 0\n    }\n}\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.data},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n        avatar: state.employee.avatar,\n        img: state.employee.img || null,\n        filter: getFilter()\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/employee', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusEmployeeEditor: false}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Сотрудник успешно создан')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание сотрудника не выполнен'))\n    }\n}\n\nexport function saveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n        avatar: state.employee.avatar,\n        img: state.employee.img || null,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/employee', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusEmployeeEditor: false}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Сотрудник успешно изменен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение сотрудника не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/employee', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_EMPLOYEE_STATE',\n                        data: {employees: data.employees},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusEmployeeEditor: false}\n                    })\n                    const text = flag ? 'Сотрудник упешно удален' : 'Сотрудник успешно восстановлен'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос удаление/восстановление сотрудника не выполнен'))\n    }\n}\n\n\nexport function saveAvatar(data) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_id: state.employee.edit,\n        left: data.avaPosition[0],\n        top: data.avaPosition[1],\n        size: data.size,\n        img: state.employee.img\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/change_avatar', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_DATA_STATE',\n                        data: {user: data.user},\n                    })\n                    showAlert(dispatch, 'alert-success', 'Аватарка успшно изменена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение аватара не выполнен'))\n    }\n}\n\nexport function logout() {\n    const url = process.env.REACT_APP_URL_SERVER + '/logout'\n\n\n    return dispatch => {\n        fetch(url)\n    }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {showAlert} from '../actions'\n\nexport function changeBranchState( data ) {\n    return {\n        type: 'CHANGE_BRANCH_STATE',\n        data\n    }\n}\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return {\n        type: 'EDIT_BRANCH',\n        branch\n    }\n}\n\nexport function resetBranch() {\n    return {\n        type: 'RESET_BRANCH'\n    }\n}\n\nfunction getFilter() {\n    const state = store.getState()\n    return {\n        employee_id: state.data.user.id,\n        deleted: state.branch.showDeleted,\n        page: 0\n    }\n}\n\n\n\nexport function addBranches() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(getFilter())\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_branch', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.data},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос филиалов не выполнен'))\n    }\n}\n\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule,\n        filter: getFilter()\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branches},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusBranchEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                    showAlert(dispatch, 'alert-success', 'Филиал успешно создан')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branches},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusBranchEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                    showAlert(dispatch, 'alert-success', 'Филиал успешно изменен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение филиала не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BRANCH_STATE',\n                        data: {branches: data.branches},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusBranchEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                    const text = flag ? 'Филиал успешно удален' : 'Филиал упешно восстановлен'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление филиала не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeDataState(data) {\n    return {\n        type: 'CHANGE_DATA_STATE',\n        data\n    }\n}","import React, {useState} from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {changeDataState} from '../../Redux/actions/dataAction'\n\n\n\nfunction MenuRow(props) {\n    const history = useHistory()\n    if (history.location.pathname === props.row.url) props.changeDataState({current_menu_row: props.row.url})\n\n    return (\n        <Link\n            className=\"menuRow\"\n            to={props.row.url}\n            style={props.current_menu_row === props.row.url ? {\n                backgroundColor: '#53585c',\n                borderLeftColor: props.current_branch.color\n            } : null}\n            onClick={() => props.changeDataState({current_menu_row: props.row.url})}\n        >\n            {props.row.image === 'task' ? (\n                <div className=\"taskNumber\">\n                    <span className=\"taskNumber1\">8</span>\n                </div>\n            ) : (\n                <svg className=\"sidebarIcon\">\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n                </svg>\n            )}\n            <span className=\"didebarItemsText\">{props.row.title}</span>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    current_branch: state.branch.current_branch,\n    current_menu_row: state.data.current_menu_row\n})\n\nconst mapDispatchToProps = {\n    changeDataState\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {editEmployee} from '../../../Redux/actions/employeeAction'\n\n\nfunction LogoUser(props) {\n\n    return (\n        <Link to='/user'>\n            <div\n                className='avatar'\n                // onClick={() => props.editEmployee(props.user.id)}\n            >\n\n                <img\n                    src={`${process.env.REACT_APP_LOCAL_SOURCE}/${props.user.avatar}`}\n                    className='imgAvatar'\n                    alt='User avatar'\n                />\n            </div>\n        </Link>\n    )\n\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user\n})\n\nconst mapDispatchToProps = {\n    editEmployee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoUser)\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeBranchState} from '../../Redux/actions/branchAction'\n\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n    const [menuVisible, setMenuVisible] = useState(false)\n\n    const handleChoose = (branch) => {\n        props.changeBranchState({current_branch: branch})\n        setMenuVisible(false)\n    }\n\n    return (\n        <div>\n            <div\n                className='menuBranch'\n                onClick={() => setMenuVisible(!menuVisible)}\n            >\n                <Icon\n                    className='smalIcon'\n                    icon={props.current_branch.icon}\n                    color={props.current_branch.color}\n                />\n                <div className='sidebarBranch'>\n                    {props.current_branch.name}\n                </div>\n            </div>\n            {menuVisible ? <div className='listOptionsBranch'>\n                {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n                    <div\n                        key={branch.id}\n                        className='listBranch'\n                        onClick={() => handleChoose(branch)}\n                    >\n                        <Icon\n                            className='smalIcon'\n                            icon={branch.icon}\n                            color={branch.color}\n                        />\n                        <div className='ml5'>{branch.name}</div>\n                    </div>\n                ))}\n            </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    current_branch: state.branch.current_branch,\n    branches: state.branch.branches,\n    user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeBranchState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './userSettings/LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.branch.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {showAlert} from '../actions'\n\n\nexport function changeFilterForm( value, field ) {\n    return {\n        type: 'CHANGE_FILTER_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeFilterState( data ) {\n    return {\n        type: 'CHANGE_FILTER_STATE',\n        data\n    }\n}\n\n// export function editFilter(filter) {\n//     return {\n//         type: 'EDIT_FILTER',\n//         filter\n//     }\n// }\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function resetTempFilter() {\n    return {\n        type: 'RESET_TEMP_FILTER'\n    }\n}\n\n\nexport function selectedFilter( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_FILTER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function addBadges() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        employee_access: !state.data.user.role.orders_visibility ? state.data.user.id : null,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос temple не выполнен'))\n    }\n}\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function createCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.filter.title,\n        general: state.filter.general,\n        employee_id: state.data.user.id,\n        filters: {\n            page: 0,\n            engineer_id: state.filter.temp_engineers.length ? state.filter.temp_engineers : null,\n            overdue: null,\n            status_id: state.filter.temp_statuses.length ? state.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: state.filter.temp_order_types.length ? state.filter.temp_order_types : null,\n            manager_id: state.filter.temp_managers.length ? state.filter.temp_managers : null,\n            created_at: state.filter.temp_created_at.some(date => date) ? state.filter.temp_created_at : null,\n            kindof_good: state.filter.temp_kindof_good_id,\n            brand: state.filter.temp_brand,\n            subtype: state.filter.temp_subtype,\n            client_id: Object.values(state.filter.temp_client).length ? [state.filter.temp_client.id] : null\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {customFilters: data.data}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                    showAlert(dispatch, 'alert-success', 'Фильтр успешно создан')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание  фильтра не выполнен'))\n\n    }\n}\n\n\nexport function deleteFilter() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.filter.active_filter,\n        employee_id: state.data.user.id\n    })\n    request_config.method = 'DELETE'\n\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {\n                            customFilters: data.data,\n                            active_filter: 0\n                        }\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCreateNewFilter: false}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_FILTER'\n                    })\n                    showAlert(dispatch, 'alert-success', 'Фильтр успешно удален')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление фильтра не выполнен'))\n    }\n}","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\nconst Header = props => {\n\n   const [search, setSearch] = useState('')\n\n    const handleChange = event => {\n        setSearch(event.target.value)\n        if (!search) props.changeFilterState({search: ''})\n    }\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if(!props.filter.active_badge) props.resetFilter()\n        if (event.key === 'Enter') props.changeFilterState({search})\n    }\n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => handleChange(event)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                    />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {changeFilterState, resetFilter} from '../../Redux/actions/filterAction'\n\n\n// function MainFilter({data: {color, title, count, img, filters}, activeBadge}) {\nconst MainFilter = props => {\n\n    const handleChoose = () => {\n        if (props.active_badge !== props.badge.id) {\n            props.changeFilterState({\n                ...props.badge.filter,\n                active_badge: props.badge.id,\n                active_filter: 0\n            })\n        } else {\n            props.resetFilter()\n        }\n    }\n\n    return (\n        <div\n            className='mainFilter'\n            style={{\n                backgroundColor: props.badge.color,\n                opacity: props.active_badge === props.badge.id || props.active_badge === 0 ? 1 : 0.3\n            }}\n            onClick={handleChoose}\n        >\n            <div className='pd5'>\n                <Icon icon={props.badge.icon} className='icon-s25' color='white'/>\n            </div>\n            <div className='filterName'>\n                <div className='filterName-value'>\n                    {props.badge.count} {props.badge.count === 1 ? 'заказ' : ((props.badge.count < 5) ? 'заказа' : 'заказов')}\n                </div>\n                <div className='filterName-title'> {props.badge.title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    active_badge: state.filter.active_badge\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    resetFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainFilter);","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport MainFilter from './MainFilter'\n\nconst Filters = props => {\n\n    return (\n        <div className='mainFilters'>\n            {props.badges.map(badge => (\n                    badge.count ? <MainFilter badge={badge} key={badge.id}/> : null\n                ))\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.filter.badges\n})\n\nexport default connect(mapStateToProps)(Filters)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\nimport {showAlert} from '../actions'\n\nexport function changeOrderState(data) {\n    return {\n        type: 'CHANGE_ORDER_STATE',\n        data\n    }\n}\n\nexport function selectedOrder(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_ORDER',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function changeOrderField(id, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FIELD',\n        id,\n        field,\n        value\n    }\n}\n\nexport function reorderOrderField(id, order) {\n    return {\n        type: 'REORDER_ORDER_FIELD',\n        id,\n        order\n    }\n}\n\nexport function getOrderFilter() {\n    const state = store.getState()\n    return {\n        sort: state.filter.sort,\n        field_sort: state.filter.field_sort,\n        page: state.filter.page,\n\n        engineer_id: !state.data.user.role.orders_visibility ? state.filter.engineer_id.concat([state.data.user.id]) : state.filter.engineer_id,\n        overdue: state.filter.overdue,\n        status_id: state.filter.status_id,\n        status_overdue: state.filter.status_overdue,\n        urgent: state.filter.urgent,\n        order_type_id: state.filter.order_type_id,\n        manager_id: state.filter.manager_id,\n        created_at: state.filter.created_at,\n        kindof_good_id: state.filter.kindof_good,\n        brand_id: state.filter.brand,\n        subtype_id: state.filter.subtype,\n        client_id: state.filter.client_id,\n        branch_id: state.branch.current_branch.id,\n\n        search: state.filter.search,\n\n        update_badges: true\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(getOrderFilter())\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count}\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusOrderLoader: false}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        created_by_id: state.data.user.id,\n        branch_id: state.branch.current_branch.id,\n        status_id: 1,\n\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id || null,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        urgent: state.order.urgent,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost,\n\n        filter: getOrderFilter()\n    })\n\n\n    return async dispatch => {\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true, statusOrderEditor: false}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    if (state.view.checkOrderSticker) {\n                        dispatch({\n                            type: 'CHANGE_VISIBLE_STATE',\n                            data: {statusOrderSticker: true, needToResetOrder: true}\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                    })\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.badges}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Заказ успешно создан')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error,'Запрос на создание заказа не выполнен'))\n\n        if (state.view.checkOrderSticker) {\n             await dispatch({\n                type: 'CHANGE_VISIBLE_STATE',\n                data: {statusOrderSticker: true}\n            })\n        } else {\n            await dispatch({\n                type: 'RESET_ORDER'\n            })\n        }\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false}\n        })\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    let filter = getOrderFilter()\n    filter.update_order = state.order.edit\n\n    const request_config = getRequestConfig({\n        order_id: order_id,\n        status_id: status_id,\n        filter\n    })\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                    })\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.badges}\n                    })\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    if (state.view.checkOrderSticker) {\n                        dispatch({\n                            type: 'CHANGE_VISIBLE_STATE',\n                            data: {statusOrderSticker: true, needToResetOrder: true}\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                    })\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.badges}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Статус успешно изменен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение статуса не выполнен'))\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client_id: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good_id: state.order.kindof_good.id,\n        brand_id: state.order.brand.id,\n        subtype_id: state.order.subtype.id,\n        model_id: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent,\n        filter: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.data, count: data.count, events: data.events || []}\n                    })\n                    dispatch({\n                        type: 'CHANGE_FILTER_STATE',\n                        data: {badges: data.badges}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Заказ успешно изменен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на именение заказа не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function getOrder(order_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({id: order_id})\n\n    return async dispatch => {\n        \n        await fetch(state.data.url_server + '/get_order', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос заказа не выполнен'))\n    }\n}\n\nexport function addEventComment() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        order_id: state.order.edit,\n        current_status_id: state.order.status.id,\n        branch_id: state.branch.current_branch.id,\n        comment: state.order.event_comment\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_comment', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || [], event_comment: ''}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Комментарий успешно добавлен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание коментариев не выполнен'))\n    }\n\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\nimport {showAlert} from '../actions'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function changeBookState(data) {\n    return {\n        type: 'CHANGE_BOOK_STATE',\n        data\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Тип успешно добавлен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание типа тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Бренд успешно добавлен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание бренда не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Модуль/серия успешно добавлен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание модуля/серии не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Модель успешно добавлена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание модели не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n            title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.branch.branches.map(branch => branch.id),\n            deleted: false,\n            filter: {\n                title,\n                deleted: state.book.showDeleted\n            }\n        })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    showAlert(dispatch, 'alert-success', 'Тип успешно добавлен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание типа не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    \n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.kindof_good.id,\n        branches: state.branch.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    showAlert(dispatch, 'alert-success', 'Бренд успешно добавлен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание бренда не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.brand.id,\n        branches: state.branch.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    showAlert(dispatch, 'alert-success', 'Модуль/серия успешно добавлена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создания модуля/серии не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.subtype.id,\n        branches: state.branch.branches.map(branch => branch.id),\n        deleted: false,\n        filter: {\n            title,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    showAlert(dispatch, 'alert-success', 'Модель успешно добавлена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание модели не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос моделей не выполнен'))\n    }\n}\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_type,\n            page: state.book.page_type - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Тип успешно изменен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение типа не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            page: state.book.page_brand - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Бренд успешно изменен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error =>  bad_request(dispatch, error, 'Запрос на изменение бренда не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            page: state.book.page_subtype - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Модуль/серия успешно изменена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение модуля/серии не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            page: state.book.page_model - 1,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    showAlert(dispatch, 'alert-success', 'Модель успешно изменена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение модели не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_type,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    const text = flag ? 'Тип успешно удален' : 'Тип упешно восстановлен'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановления типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_brand,\n            equipment_type_id: state.book.equipment_type.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    const text = flag ? 'Бренд успешно удален' : 'Бренд упешно восстановлен'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление бренда не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_subtype,\n            equipment_brand_id: state.book.equipment_brand.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    const text = flag ? 'Модуль/серия успешно удалена' : 'Модуль/серия упешно восстановлена'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановления модуля/серии не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    \n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n        filter: {\n            title: state.book.filter_model,\n            equipment_subtype_id: state.book.equipment_subtype.id,\n            deleted: state.book.showDeleted\n        }\n    })\n    request_config.method = 'PUT'\n    \n\n    return async (dispatch) => {\n\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                    const text = flag ? 'Модель успешно удалена' : 'Модель упешно восстановлена'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление модели не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = props => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        const employee = props.employees.find((employee) => employee.id === id)\n        return employee ? `${employee.last_name} ${employee.first_name}`: ''\n      }\n    }\n\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(props.order.created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(props.order.created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\n\nconst Lable = props => {\n   return (\n      <td className=\"orderLabel tableRow\">\n          <Link\n              className='orderLink'\n              to={{\n                  pathname: `/orders/${props.order.id}`,\n                  state: { order_id: props.order.id }\n              }}\n          >\n              <span\n                  className={props.order.urgent && props.order.status.group < 4 ? 'fire-text': null}\n              >\n                  { props.order.id_label }\n              </span>\n          </Link>\n      </td>\n   )\n}\n\n\nconst mapDispatchToProps ={\n}\n  \n export default connect(null, mapDispatchToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = props => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 48) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!props.order.overdue && props.order.status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(props.order.remaining, props.order.status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(props.order.estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {changeOrderField, changeOrderState, reorderOrderField} from '../../Redux/actions/orderActions'\n\n\nfunction TableHeader(props) {\n\n    const [columnWidth, setColumnWidth] = useState(props.data.width)\n\n    const mouseMove = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        if (deltaDrag) setColumnWidth(columnWidth + deltaDrag)\n    }\n\n    const mouseUp = (event) => {\n        const deltaDrag = event.pageX - props.order.position_cursor\n        setColumnWidth(columnWidth + deltaDrag)\n        props.changeOrderField(props.data.id, 'width', columnWidth + deltaDrag)\n        window.removeEventListener('mousemove', mouseMove)\n        window.removeEventListener('mouseup', mouseUp)\n    }\n\n    const handleDragStart = event => {\n        props.changeOrderState({position_cursor: event.pageX})\n        window.addEventListener('mousemove', mouseMove)\n        window.addEventListener('mouseup', mouseUp)\n    }\n\n    const handleEndDrag = () => {\n        props.reorderOrderField(props.data.id, props.order.position_over)\n        props.changeOrderState({position_over: null})\n    }\n    const handleDragOver = (order_position) => {\n        if (props.order.position_over !== order_position) {\n            props.changeOrderState({position_over: order_position})\n        }\n    }\n\n\n    return (\n        <th\n            className='tableColumnHeader'\n            style={{minWidth: `${columnWidth}px`}}\n        >\n            <div className='row'>\n\n                <div\n                    className='ml5 w100 '\n                    onClick={() => props.changeFilterState({\n                        field_sort: props.data.field,\n                        sort: props.filter.sort === 'asc' ? 'desc' : 'asc'\n                    })}\n                    draggable\n                    onDragEnd={handleEndDrag}\n                >\n                    {props.data.title}\n                    <span>\n                            {props.filter.field_sort === props.data.field ? (props.filter.sort === 'asc' ? '↓' : '↑') : null}\n                        </span>\n                </div>\n                <div\n                    style={{height: '40px'}}\n                    className='curResize'\n                    onMouseDown={handleDragStart}\n                />\n                <div\n                    style={{display: props.order.position_over === props.data.order ? 'block' : 'none'}}\n                    className='dragOver'\n                />\n                <div\n                    className='overArea'\n                    onDragOver={() => handleDragOver(props.data.order)}\n                />\n            </div>\n\n        </th>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    changeOrderField,\n    changeOrderState,\n    reorderOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {showAlert} from '../actions'\n\n\nexport function changeCashboxState( data ) {\n    return {\n        type: 'CHANGE_CASHBOX_STATE',\n        data\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\nexport function get_cashbox_filter() {\n\n    const state = store.getState()\n\n    return {\n        deleted: state.cashbox.showDeleted,\n        branch_id: Object.values(state.branch.current_branch).length ? state.branch.current_branch.id : null\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(get_cashbox_filter())\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.data, current_cashbox: data.data.length ? data.data[0] : {}},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос касс не выполнен'))\n\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.branch.current_branch.id,\n        filter: get_cashbox_filter()\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                    showAlert(dispatch, 'alert-success', 'Касса успешно создана')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание кассы не выполнен'))\n    }\n}\n\n\n\nexport function saveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.branch.current_branch.id,\n        filter: get_cashbox_filter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                    showAlert(dispatch, 'alert-success', 'Касса успешно изменена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение кассы не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag,\n        filter: get_cashbox_filter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_STATE',\n                        data: {cashboxes: data.cashboxes},\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusCashboxEditor: false}\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                    const text = flag ? 'Касса успешно удалена' : 'Касса успешно восстановлена'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление кассы не выполнен'))\n    }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {getOrderFilter} from './orderActions'\nimport {get_cashbox_filter} from './cashboxAction'\nimport {showAlert} from '../actions'\n\n\nexport function changePaymentState( data ) {\n    return {\n        type: 'CHANGE_PAYMENT_STATE',\n        data\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    let request_body = {\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.cashbox.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: parseFloat(state.payment.income.toString().replace(',', '.')) || 0,\n        outcome: -parseFloat(state.payment.outcome.toString().replace(',', '.')) || 0,\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at || now,\n        tags: state.payment.tags,\n        relation_type: state.payment.relation_type,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    }\n    if (context.type === 'payment') {\n        request_body.filter_cashboxes = get_cashbox_filter()\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    if (context.type === 'order') {\n        let r_filter = getOrderFilter()\n        r_filter.update_order = state.order.edit\n        request_body.filter_order = r_filter\n    }\n    if (context.type === 'closed_order') {\n        let r_filter = getOrderFilter()\n        r_filter.update_order = state.order.edit\n        request_body.closed_order = {\n            order_id: context.order_id,\n            status_id: context.status_id,\n            filter: r_filter\n        }\n    }\n    const request_config = getRequestConfig(request_body)\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (context.type === 'payment') {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'CHANGE_CASHBOX_STATE',\n                            data: {cashboxes: data.cashboxes},\n                        })\n                    }\n                    if (context.type === 'order') {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    }\n                    if (context.type === 'closed_order') {\n                        if (state.order.edit) {\n                            dispatch({\n                                type: 'EDIT_ORDER',\n                                order: data.order\n                            })\n                            dispatch({\n                                type: 'CHANGE_ORDER_STATE',\n                                data: {events: data.events}\n                            })\n                        }\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, count: data.orders_count}\n                        })\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {badges: data.badges}\n                        })\n                    }\n                    showAlert(dispatch, 'alert-success', 'Платеж успешно добавлен')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {statusOrderLoader: false, statusPaymentsEditor: false}\n        })\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: state.payment.filter_created_at,\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYMENT_STATE',\n                        data: {payments: data.data}\n                    })\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос платежей не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_body = {\n        id: state.payment.edit,\n        relation_type: state.payment.relation_type,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        order_id: state.payment.order.id,\n        deleted: flag\n    }\n    if (state.order.edit) {\n        let r_filter = getOrderFilter()\n        r_filter.update_order = state.order.edit\n        request_body.filter_order = r_filter\n    } else {\n        request_body.filter_cashboxes = {\n            deleted: null\n        }\n        request_body.filter_payments = {\n            custom_created_at: state.payment.filter_created_at,\n            cashbox_id: state.cashbox.current_cashbox.id,\n            tags: state.payment.filter_tags.length ? state.payment.filter_tags : null,\n            deleted: null\n        }\n    }\n    let request_config = getRequestConfig(request_body)\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.order\n                        })\n                        dispatch({\n                            type: 'CHANGE_ORDER_STATE',\n                            data: {ordersShow: data.orders, events: data.events}\n                        })\n                    } else {\n                        dispatch({\n                            type: 'CHANGE_PAYMENT_STATE',\n                            data: {payments: data.payments}\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                        dispatch({\n                            type: 'CHANGE_CASHBOX_STATE',\n                            data: {cashboxes: data.cashboxes}\n                        })\n                    }\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPaymentsCard: false}\n                    })\n                }\n                const text = flag ? 'Платеж успешно удален' : 'Платеж упешно восстановлен'\n                showAlert(dispatch, 'alert-success', text)\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос удаление платежа не выполнен'))\n\n        await dispatch({\n            type: 'RESET_PAYMENTS'\n        })\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, changeVisibleState} from '../../Redux/actions'\nimport { changePaymentState} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentState({\n                direction: income ? 2 : 1,\n                [income ? 'income': 'outcome']: Math.abs(props.order.missed_payments),\n                client_id: props.order.client.id,\n                description: income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`,\n                cashflow_category: income ? 2 : 8,\n                employee_id: props.current_user_id,\n                order_id: props.order.edit || props.order.id,\n                context: {\n                    type: 'closed_order',\n                    order_id: props.order.edit || props.order.id,\n                    status_id: status.id\n                }\n            })\n            props.editCurrentClient(props.order.client)\n            props.changeVisibleState({'statusPaymentsEditor': true})\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                // props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentState,\n    changeVisibleState,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.order.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.order.id)}\n            >\n                {props.order.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.order.id]] ? <StatusList order={props.order}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = props => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {props.order.kindof_good.title}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Brand = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.brand.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Brand)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Malfunction = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.malfunction}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Engineer = props => {\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}` : ''\n        }\n    }\n\n    return (\n        <td>\n            <div>\n                {getEmploeeName(props.order.engineer_id)}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees\n})\n\nexport default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\nconst optionsShowRangeDate = {\n   year: 'numeric',\n   month: 'numeric',\n   day: 'numeric'\n}\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 9)}-${phone.slice(9, 11)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function showRangeDate (range_date) {\n   const first = new Date(range_date[0] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   const second = new Date(range_date[1] * 1000).toLocaleString('ru', optionsShowRangeDate).replace('г.,', '')\n   return `${first} - ${second}`\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = props => {\n\n   return props.permissions.includes('see_client') ? (\n      <td>\n      <div className=\"tableClientName noWr\">{props.order.client.name}</div>\n      <div className=\"orderDate noWr\">{showPhone(props.order.client.phone[0].number)}</div>\n    </td>\n   ) : <td><div/></td>\n}\n\nconst mapStateToProps = state => ({\n    permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = props => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{props.order.price || null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = props => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {props.order.engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = props => {\n    return (\n        <td>\n            <div className=\"tableText row\">\n                <div>\n                    <img\n                        alt=''\n                        className=\"icon_equipment\"\n                        src={props.order.kindof_good.icon}\n                    />\n                </div>\n                <div>\n                    <div className='noWr'>\n                        {props.order.kindof_good.icon ? null : <span className=\"\">{props.order.kindof_good.title}</span>}\n                        <span className=\"ml5\">{props.order.brand.title}</span>\n                    </div>\n                    <div className='noWr'>\n                        <span>{props.order.subtype.title}</span>\n                        <span className=\"orderDate ml5\">{props.order.model.title}</span>\n                    </div>\n                </div>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Equipment)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeClientState( data ) {\n    return {\n        type: 'CHANGE_CLIENT_STATE',\n        data\n    }\n}\n\n\nexport function addClients() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.client.page,\n        name: state.client.filter_name,\n        phone: state.client.filter_phone\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_CLIENT_STATE',\n                        data: {clients: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос клиентов не выполнен'))\n    }\n}\n\nexport function addClientToTempFilter(id) {\n\n    const state = store.getState()\n\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    if (data.count) {\n                        dispatch({\n                            type: 'CHANGE_FILTER_STATE',\n                            data: {temp_client: data.data[0]}\n                        })\n                    }\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос клиентa не выполнен'))\n\n    }\n}\n","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.invisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// invisible={false}","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.invisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (current ? `${current.last_name} ${current.first_name}` : 'не назначен') :\n               (current ? (current.title || current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   invisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.invisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  invisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport {icon_trush} from '../../../data/icons'\nimport {valueOfPhoneInput} from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n    const handleChange = (idx, event) => {\n        const out = event.target.value.replace(/[^0-9]/g, '')\n        if (out.length < 12) props.changeClientEditorPhone(idx, out)\n    }\n\n    return (\n        <div>\n            {props.client.phone.map((phone, idx) => (\n                <div key={idx}>\n                    <PhoneTitle idx={idx} title={phone.title}/>\n\n                    <div className=\"inputPhoneBox\">\n                        <input\n                            className='textInput w250'\n                            onChange={event => handleChange(idx, event)}\n                            value={valueOfPhoneInput(phone.number)}\n                            onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n                            style={!props.view.inputClientPhoneChecked[idx] ? {borderColor: 'red'} : null}\n                        />\n                        {idx !== 0 ? (\n                            <div\n                                onClick={() => {\n                                    props.deleteCountNumber(idx)\n                                    props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                                }}\n                            >\n                                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                                    <path d={icon_trush}/>\n                                </svg>\n                            </div>\n                        ) : null}\n                    </div>\n                    {!props.view.inputClientPhoneChecked[idx] ? (\n                        <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n                    ) : null}\n                    <div className=\"checkbox mt5\">\n                        <input\n                            type=\"checkbox\"\n                            onChange={() => props.setPhoneNotify(idx)}\n                            checked={phone.notify}\n                        />\n                        <label>Согласен получать SMS</label>\n                    </div>\n                </div>\n            ))}\n            <div\n                className=\"addPhone\"\n                onClick={() => {\n                    props.addPhoneCounter()\n                    props.addVisibleFlag('inputClientPhoneChecked')\n                }}\n            >\n                + Добавить телефон\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    client: state.client,\n    view: state.view,\n})\n\nconst mapDispatchToProps = {\n    changeClientEditorPhone,\n    addPhoneCounter,\n    deleteCountNumber,\n    setPhoneNotify,\n    setVisibleListFlag,\n    addVisibleFlag,\n    deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx)}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientState} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={idx => props.changeClientState({tabs: idx})}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { editCurrentClient, changeVisibleState} from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\nimport {showPhone} from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\nimport {changeClientState} from '../../Redux/actions/clientAction'\n\nconst SetClientByName = (props) => {\n\n    const [showList, setShowList] = useState(false)\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n            !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n        ) {\n            setShowList(false)\n        }\n    }\n\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className='w400 h52'>\n\n            <div className='lableImput mt15'>Имя клиента</div>\n\n            <div className='blockImput'>\n                <div\n                    id='clientInputBoxOfPayments'\n                    className='orderInputBox'\n                    onClick={() => setShowList(true)}\n                >\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changeClientState({filter_name: event.target.value})}\n                    />\n                    <div\n                        className='simbolButton'\n                        onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                    >\n                        +\n                    </div>\n                    <div className='simbolButton'>&#6662;</div>\n                </div>\n\n                {showList ?\n                    <div className='listFilter' id='listClientsOfOfPayments'>\n                        {props.clients.map(client => (\n                            <div\n                                className='rowGropList'\n                                key={client.id}\n                                onClick={() => {\n                                    setShowList(false)\n                                    props.editCurrentClient(client)\n                                    props.changePaymentState({client_id: client.id})\n                                }}\n                            >\n                                <div>{client.name}</div>\n                                <div className='orderDate'>\n                                    {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                </div>\n                            </div>\n                        ))}\n                    </div> : null}\n\n            </div>\n\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.filter.clientFilter.phone,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    editCurrentClient,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentState} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentState({\n                                    [props.payment.direction === 2 ? 'income' : 'outcome']: event.target.value.replace(/[^0-9.,]/g, '')\n                                 })}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.cashbox.cashboxes\n})\n\nconst mapDispatchToProps = {\n   changePaymentState,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React from 'react'\n\nconst CalendarTime = props => {\n    return props.invisible ? null : (\n        <div className='calandarTime'>\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            :\n            <div className='mtime'>\n                <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                <div className='ssm'>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default CalendarTime\n\n","\nimport React, {useState} from 'react'\n\nconst CalendarNavi = props => {\n\n\n    const [visibleInputYear, setVisibleInputYear] = useState(false)\n\n    const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n    const handleInputYear = (value) => {\n        let out = value.replace(/[^0-9]/g, '')\n        if (value > 9999) out = 9999\n        if (value < 0) out = 0\n        props.setCurrent_day(new Date(props.current_date.setFullYear(out)))\n    }\n\n    return (\n        <div>\n        <div className='calendarNavi'>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() - 1)))}\n            >\n                {'<'}\n            </div>\n\n            <div className='row'>\n                <div\n                    className='currMonth'\n                    onClick={() => props.setVisibleListMonth(!props.visibleListMonth)}\n                >\n                    <div>{months[props.current_date.getMonth()]}</div>\n                    <div className='gu'>&#6662;</div>\n                </div>\n\n                {visibleInputYear ?\n                    <input\n                        className='optionFilterInput w30'\n                        autoFocus\n                        onChange={event => handleInputYear(event.target.value)}\n                        value={props.current_date.getFullYear()}\n                        onBlur={() => setVisibleInputYear(false)}\n                    /> :\n                    <div\n                        className='pd5'\n                        onDoubleClick={() => setVisibleInputYear(true)}\n                    >\n                        {props.current_date.getFullYear()}\n                    </div>}\n                <div className='nextY'>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() + 1)))}\n                    >\n                        &#9650;\n                    </div>\n                    <div\n                        className='gy'\n                        onClick={() => props.setCurrent_day(new Date(props.current_date.setFullYear(props.current_date.getFullYear() - 1)))}\n                    >\n                        &#9660;\n                    </div>\n                </div>\n            </div>\n            <div\n                className='nextB'\n                onClick={() => props.setCurrent_day(new Date(props.current_date.setMonth(props.current_date.getMonth() + 1)))}\n            >\n                {'>'}\n            </div>\n        </div>\n        {props.visibleListMonth ?\n            <div className='monthList' id='monthList'>\n                    {months.map((month, idx) => (\n                        <div\n                            key={idx}\n                            className='month'\n                            onClick={() => {\n                                props.setCurrent_day(new Date(props.current_date.setMonth(idx)))\n                                props.setVisibleListMonth(!props.visibleListMonth)\n                            }}\n                        >\n                            {month}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\n\n\nexport default CalendarNavi","import React from 'react'\n\n\nconst CalendarOption = props => {\n\n    const chooseAllDate = () => {\n        props.func([0, 0])\n        props.setListVisible(false)\n    }\n\n    const chooseToday = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Устанавливаем время на конец дня\n        second.setHours(23, 59, 59, 999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день текущей недели\n        first.setTime(first.getTime() - (first.getDay() - 1 || 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день недели\n        // second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем первый день текущего месяца\n        first.setDate(1)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        // second.setMonth(first.getMonth() + 1)\n        // second.setDate(1)\n        // second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        // Устанавливаем время на конец дня\n        // second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseThisYear = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем время на начало года\n        first.setMonth(0)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n\n    }\n\n    const chooseLastWeek = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Вычисляем первый день прошлой недели\n        first.setTime(first.getTime() - ((first.getDay() - 1 || 7) + 7) * 24 * 60 * 60 * 1000)\n        // Устанавливаем время на начало дня\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день прошлой недели\n        second.setDate(first.getDate() + 6)\n        // Устанавливаем время на конец дня\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseLastMonth = () => {\n        // Берем за основу текущую дату\n        const first = new Date()\n        // Устанавливаем дату на начало прошлого месяца\n        first.setMonth(first.getMonth() - 1)\n        first.setDate(1)\n        first.setHours(0, 0, 0, 0)\n        // Берем за основу текущую дату\n        const second = new Date()\n        // Вычисляем последний день месяца\n        second.setMonth(first.getMonth() + 1)\n        second.setDate(1)\n        second.setTime(second.getTime() - 24 * 60 * 60 * 1000)\n        second.setHours(23,59,59,999)\n        // Возвращаем даты массивом\n        props.func([first, second])\n        // Закрываем меню выбора\n        props.setListVisible(false)\n    }\n\n    const chooseDate = () => {\n        props.setListVisible(false)\n        props.setVisibleCalendar(true)\n    }\n\n\n    return props.invisible ? null : (\n        <div\n            id='listCalendarOption'\n            className='listOptionsChoose'\n            style={{width: props.width}}\n        >\n            {props.allDate ? <div className='options' onClick={chooseAllDate}>Все время</div> : null}\n            <div className='options' onClick={chooseToday}>Сегодня</div>\n            <div className='options' onClick={chooseThisWeek}>Текущая неделя</div>\n            <div className='options' onClick={chooseThisMonth}>Текущий месяц</div>\n            <div className='options' onClick={chooseThisYear}>Текущий год</div>\n            <div className='options' onClick={chooseLastWeek}>Прошлая неделя</div>\n            <div className='options' onClick={chooseLastMonth}>Прошлый месяц</div>\n            <div className='options' onClick={chooseDate}>Выбрать даты</div>\n        </div>\n    )\n}\n\n\nexport default CalendarOption","import React, {useState, useEffect} from 'react'\n\n\nimport {showDate, showRangeDate} from '../utils'\n\nimport Icon from '../Icon'\nimport {icon_calendar} from '../../../data/icons'\nimport CalendarTime from './CalendarTime'\nimport CalendarNavi from './CalendarNavi'\nimport CalendarOption from './CalendarOption'\n\n\n/**\n *\n * title='title'\n *\n * className='className'\n *\n * width='100%'\n *\n * showTop={false}\n *\n * range={false}\n *\n * allDate={false}\n *\n * func={date => console.log(date)}\n *\n * current_date={props.current_date}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseDate = (props) => {\n\n    // Текущий день, от которого расчитвывается текущие показания календаря\n    const [current_date, setCurrent_day] = useState(new Date)\n    // Флаг - показать скрыть меню выбора месяца\n    const [visibleListMonth, setVisibleListMonth] = useState(false)\n    // Флаг - показать/скрыть календарь\n    const [visibleCalendar, setVisibleCalendar] = useState(false)\n    // Первый выбраный день из диапазона\n    const [firstDay, setFirstDay] = useState(0)\n    // Второй выбраный день (выбирается наводом курсора)\n    const [secondDay, setSecondDay] = useState(0)\n    // Меню выбора диапазона дат\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        // Скрываем меню выбора месяца при клику вне меню\n        if (!event.path.map(el => el.id).includes('monthList')) {\n            if (visibleListMonth) {\n                setVisibleListMonth(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('calendar')) {\n            if (visibleCalendar) {\n                setVisibleCalendar(false)\n            }\n        }\n        // Скрываем клендарь при клике вне календаря\n        if (!event.path.map(el => el.id).includes('listCalendarOption')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        // Добавим слушателя кликов и обработчик при создании компанента\n        window.addEventListener('click', clickHandel)\n        // и удалим слушателя при удалении компанента\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n\n    // Создаим объект даты из текущей выбранной дыты\n    let first = new Date(current_date)\n    // Утановим теущей дате 1 число\n    first.setDate(1)\n    // Отнимим от текущей даты количество дней равное дню недели (получим дату отсчета для отрисовки в поле календаря)\n    first.setTime(first.getTime() - (first.getDay() || 7) * 24 * 60 * 60 * 1000)\n\n    // создадим массив дней для отрисовки в поле календаря\n    let current_days = []\n    // Заполним массив днями приращивая по одному\n    for (let i = 0; i < 42; i++) {\n        current_days[i] = new Date(first.getTime() + 24 * 60 * 60 * 1000)\n        first.setTime(first.getTime() + 24 * 60 * 60 * 1000)\n    }\n\n    /**\n     *\n     * @param date1 - Объект Date\n     * @param date2 - Объект Date\n     * @returns {boolean} - true - если год, месяц и день совпадают, false - если нет\n     */\n    const compareDates = (date1, date2) => {\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n\n    /**\n     * Подготовка диапазона дат перед тем как вернуть данный диапазон\n     *\n     * @param date_range {array} - Массив из двух объектов Date\n     * @returns {array} - Массив из timestamp\n     */\n    const prepareRange = (date_range) => {\n        // Функция сортировки для метода sort\n        const sort_func = (a, b) => {\n            if (a > b) return 1\n            return -1\n        }\n        // Отсортируем в даты в порядке возрастания\n        let new_range = date_range.sort(sort_func)\n        // Установим время для первой даты\n        new_range[0].setHours(0, 0, 0, 0)\n        // Установим время для второй даты\n        new_range[1].setHours(23, 59, 59, 999)\n        // возвращаем новый дипазон\n        return new_range\n    }\n\n    /**\n     * Обработчик события onClick дня каледара\n     * @param day {Object} - Объект Date\n     */\n    const handleChoose = (day) => {\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если еще не выбран первый день\n            if (!firstDay) {\n                // Обнуляем текущее значение в state приложения (чтобы не отображался выбраный диапазон на календаре)\n                props.func([0, 0])\n                // Устанавливаем первый день в state копмпонета\n                setFirstDay(day)\n            // Если первый день уже выбран\n            } else {\n                // Возвращаем предварительно подготовленные данные из компонента\n                props.func(prepareRange([firstDay, day]))\n                // Обнуляем первый день в state компонента\n                setFirstDay(0)\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // возвращаем выбранную дату\n            props.func(day)\n            // устанавливаем текущую дату в state компонента\n            setCurrent_day(new Date(day))\n        }\n\n    }\n\n    /**\n     * Очень запутанная функция для определения класса стилей для каждого отрисовываемого дня в календаре\n     *\n     * @param day {Object} - Объект Date\n     * @returns {string} - набор стилей для каждого отрисованного дня в календаре\n     */\n    const dayClassName = (day) => {\n        // Общий стиль для всег дней\n        const class1 = 'calendarDay'\n        // Стиль для дней за пределами отображаемого месяца\n        const class2 =  day.getMonth() === current_date.getMonth() ? '' : 'calgr'\n        // Если задан режим выбора диапазона дат\n        if (props.range) {\n            // Если сущестует уже выбранный диапазон\n            if (props.current_date && props.current_date[0] && props.current_date[1]) {\n                // Стиль для крайних дней уже выбранного диапазона дат\n                const class3 = compareDates(new Date(props.current_date[0] * 1000), day) ||\n                               compareDates(new Date(props.current_date[1] * 1000), day) ? 'settedDay' : ''\n                // Стиль для дня внутри уже выбранного диапазона дат\n                const class4 = props.current_date[0] < day/1000 && day/1000 < props.current_date[1] ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            // Если диапазон дат еще не выбран\n            } else {\n                // Функция для определения попадает ли день в выбираемый диапазон дат\n                const showSelected = (day) => {\n                    if (firstDay && secondDay) {\n                        return  firstDay/1000 < day/1000 && day/1000 <= secondDay/1000 ||\n                            firstDay/1000 > day/1000 && day/1000 >= secondDay/1000\n                    } else { return false }\n                }\n                // Стиль для первого выбрнного дня\n                const class3 = compareDates(firstDay || new Date(0), day) ? 'settedDay' : ''\n                // Стиль для ней попадающих в выбираемый диапазон\n                const class4 = showSelected(day) ? 'settedSecondDay' : ''\n                return [class1, class2, class3, class4].join(' ')\n            }\n        // Если задан режим выбора одной даты\n        } else {\n            // Стиль для выбранной даты\n            const class3 = compareDates(new Date(props.current_date), day) ? 'settedDay' : ''\n            return [class1, class2, class3].join(' ')\n        }\n    }\n\n\n    const title = props.range ?\n        (props.current_date && props.current_date.some(date => date) ? showRangeDate(props.current_date) : 'Любая')\n        : showDate(props.current_date / 1000)\n\n    const handleChangeDate = () => {\n        if (props.range) {\n            setListVisible(true)\n        } else {\n            setVisibleCalendar(true)\n        }\n    }\n\n    return props.invisible ? <div/> :(\n        <div\n            className={props.className}\n            style={{width: props.width}}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='dateContaner'\n                onClick={handleChangeDate}\n            >\n                <Icon\n                    className='icon-s2 mlr5'\n                    icon={icon_calendar}\n                    color='gray'\n                />\n                <div>{title}</div>\n            </div>\n\n            <CalendarOption\n                width={props.width}\n                invisible={!listVisible}\n                allDate={props.allDate}\n                setListVisible={setListVisible}\n                setVisibleCalendar={setVisibleCalendar}\n                func={date => props.func(date)}\n            />\n\n\n            {visibleCalendar && !props.disabled ?\n                <div className={props.showTop ? 'calendar_top' : 'calendar_down'} id='calendar'>\n\n                    <CalendarNavi\n                        func={data => props.func(data)}\n                        current_date={current_date}\n                        setCurrent_day={setCurrent_day}\n                        setVisibleListMonth={setVisibleListMonth}\n                        visibleListMonth={visibleListMonth}\n                    />\n\n                    <div className='row'>\n                        {weekDays.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className='calendarWeekDay'\n                            >\n                                {day}\n                            </div>\n                        ))}\n                    </div>\n\n                    <div className='calendarDays'>\n                        {current_days.map((day, idx) => (\n                            <div\n                                key={idx}\n                                className={dayClassName(day)}\n                                onClick={() => handleChoose(day)}\n                                onMouseOver={() => setSecondDay(day)}\n                                onMouseOut={() => setSecondDay(0)}\n                            >\n                                {day.getDate()}\n                            </div>\n                        ))}\n                    </div>\n\n                    <CalendarTime\n                        func={data => props.func(data)}\n                        current_date={props.current_date}\n                        invisible={props.range}\n                    />\n                </div> : null}\n\n        </div>\n    )\n}\n\nexport default ChooseDate","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addItemPayments, refreshDataOrder, changeStatusMenuVisible, changeVisibleState} from '../../Redux/actions'\nimport { addPaymentTag, deletePaymentTag, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\nimport {addClients} from '../../Redux/actions/clientAction'\n\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\nimport ChooseDate from '../general/calandar/ChooseDate'\n\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            'inputPaymentSumChecked': true,\n            'inputPaymentCashboxChecked': true,\n            'inputPaymentDescChecked': true,\n            'inputPaymentCashflowChecked': true,\n            'inputPaymentEmployeeChecked': true,\n            'statusPaymentsEditor': false,\n        })\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('344')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.changeVisibleState({'inputPaymentSumChecked': false})\n            if (!(props.payment.cashbox_id && props.payment.direction || props.payment.target_cashbox_id && !props.payment.direction))\n                props.changeVisibleState({'inputPaymentCashboxChecked': false})\n            if (!props.payment.description)\n                props.changeVisibleState({'inputPaymentDescChecked': false})\n            if (!props.payment.cashflow_category)\n                props.changeVisibleState({'inputPaymentCashflowChecked': false})\n            if (!props.payment.employee_id)\n                props.changeVisibleState({'inputPaymentEmployeeChecked': false})\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id)\n        // (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentState({custom_created_at: null})\n                            }}\n                            func2={() => {\n                                setChooseData(true)\n                                props.changePaymentState({custom_created_at: parseInt(new Date() / 1000)})\n                            }}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        <ChooseDate\n                            className='h31'\n                            width='250px'\n                            func={date => props.changePaymentState({custom_created_at: parseInt(date / 1000)})}\n                            current_date={props.payment.custom_created_at * 1000}\n                            invisible={!chooseData}\n                        />\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                            close={() => props.changeVisibleState({client_id: 0})}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 0\n                                })\n                            }}\n                            func2={() => {\n                                props.changePaymentState({\n                                    [props.payment.direction ? 'cashbox_id' : 'target_cashbox_id']: 0,\n                                    current_type: 1\n                                })\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox => props.changePaymentState({[props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'] : cashbox})}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentState({description: event.target.value})}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={category => props.changePaymentState({cashflow_category: category})}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        invisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={employee => props.changePaymentState({employee_id: employee})}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    filter: state.filter,\n    client: state.client,\n    cashboxes: state.cashbox.cashboxes,\n    current_branch_id: state.branch.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.employee.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    changeVisibleState,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = props.current_branch ? <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/> : null\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.branch.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, changeOrderFormS, changeVisibleState} from '../../../../Redux/actions'\nimport {showPhone} from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\nimport {changeClientState} from '../../../../Redux/actions/clientAction'\n\nconst SetClient = (props) => {\n\n    const [listClientsVisible, setListClientsVisible] = useState(false)\n    const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n        ) {\n            if (listClientsVisible) {\n                setListClientsVisible(false)\n            }\n        }\n    }\n\n    const clickHandel2 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n            !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n        ) {\n            if (listClientsPhoneVisible) {\n                setListClientsPhoneVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        window.addEventListener('click', clickHandel2)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n            window.removeEventListener('click', clickHandel2)\n        }\n    })\n\n\n    return (\n        <div className='cleintForm'>\n\n            <div className='formRow'>\n                <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n                <div className='blockImput'>\n                    <div\n                        id='orderInputBoxOfOrder'\n                        className='orderInputBox'\n                        onClick={() => setListClientsVisible(true)}\n                        style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => props.changeClientState({filter_name: event.target.value})}\n                            value={props.name}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n                    {props.view.checkedOrderClient ?\n                        <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n                    {listClientsVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrder'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n            </div>\n\n            <div className='formRow'>\n\n                <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n                <div className='blockImput'>\n\n                    <div\n                        id='orderInputBoxOfOrderPhone'\n                        className='orderInputBox'\n                        onClick={() => setListClientsPhoneVisible(true)}\n                    >\n                        <LableInput\n                            className='w100'\n                            inputClassName='optionFilterInput'\n                            onChange={value => props.changeClientState({filter_phone: value})}\n                            value={props.phone}\n                            isPhone={true}\n                        />\n                        <div\n                            className='simbolButton'\n                            onClick={() => props.changeVisibleState({'statusCreateNewClient': true})}\n                        >\n                            +\n                        </div>\n                        <div className='simbolButton'>&#6662;</div>\n                    </div>\n\n\n                    {listClientsPhoneVisible ?\n                        <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                            {props.clients.map(client => (\n                                <div\n                                    className='rowGropList'\n                                    key={client.id}\n                                    onClick={() => {\n                                        props.changeOrderFormS(client, 'client')\n                                        setListClientsPhoneVisible(false)\n                                    }}\n                                >\n                                    <div>{client.name}</div>\n                                    <div className='orderDate'>\n                                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                                    </div>\n                                </div>\n                            ))}\n                        </div> : null}\n\n                </div>\n\n            </div>\n\n            {props.view.statusCreateNewClient ? <ClientEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    clients: state.client.clients,\n    phone: state.client.filter_phone,\n    name: state.client.filter_name,\n    view: state.view,\n    client: state.order.client\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderFormS,\n    changeClientState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.changeVisibleState({[props.checkedFlag]: !!event.target.value}) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n    changeVisibleState\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentBrand, addEquipmentBrand, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderBrand = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand])\n\n\n    const edit = props.order.edit\n    const disabled = !Object.values(props.book.equipment_type).length\n    const seted = !!Object.values(props.order.brand).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_brand: {}})\n    }\n\n    const setBrand = brand => {\n        props.changeOrderState({brand})\n        props.changeBookState({equipment_brand: brand, filter_brand: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderBrand: true})\n    }\n\n    return (\n        <div>\n            <button\n                id=\"optionsOrderTextOfBrand\"\n                style={!props.view.checkedOrderBrand ? {borderColor: 'red'} : null}\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder=\"Выбирете бренд\"\n                    value={seted ? props.order.brand.title : props.book.filter_brand}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderBrand ? (\n                <div className=\"errorMassageInput\">\n                    {'Необоходимо выбрать из списка'}\n                </div>\n            ) : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfBrand\">\n                    {props.book.equipment_brands.map(brand => (\n                        visibleBotton ? null :\n                            <div\n                                key={brand.id}\n                                className=\"rowGropList\"\n                                onClick={() => setBrand(brand)}\n                            >\n                                {brand.title}\n                            </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                                onKeyPress={event => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentBrand(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_brand}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить бренд\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentBrand,\n    changeVisibleState,\n    addEquipmentBrand,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {createEquipmentType, addEquipmentType, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\nimport {icon_cancel, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderGroupe = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const settled = !!Object.values(props.order.kindof_good).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            kindof_good: {},\n            brand: {},\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_type: {}})\n        props.changeVisibleState({checkedOrderKindofGood: true})\n    }\n\n\n    const setOrderType = equipment => {\n        props.changeOrderState({kindof_good: equipment}) \n        props.changeBookState({filter_type: '', equipment_type: equipment})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    return (\n        <div>\n            <button\n                className='optionsFilterText'\n                id='optionsOrderTextOfGroup'\n                onClick={() => setVisibleList(true)}\n                disabled={settled}\n                style={!props.view.checkedOrderKindofGood? {borderColor: 'red'} : null}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={settled ? props.order.kindof_good.title : props.book.filter_type}\n                    disabled={settled}\n                />\n                {settled && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderKindofGood ?\n                <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n                {props.book.equipment_types.map(equipment => (\n                    visibleBotton ? null :\n                    <div\n                        key={equipment.id}\n                        className='rowGropList'\n                        onClick={() => setOrderType(equipment)}\n                    >\n                        {equipment.title}\n                    </div>\n                ))}\n                <div className='btmsts'>\n                    {visibleBotton ?\n                        <input\n                            className='optionFilterInput'\n                            autoFocus\n                            onChange={event => props.changeBookState({filter_type: event.target.value})}\n                            onKeyPress={(event) => {\n                                if (event.key === 'Enter') {\n                                    props.createEquipmentType(event.target.value)\n                                    setVisisbleBotton(false)\n                                }\n                            }}\n                            onBlur={() => setVisisbleBotton(false)}\n                            value={props.book.filter_type}\n                            placeholder='Введите и нажмиете Enter'\n                        /> :\n                        <div\n                            className='btnstsTitle'\n                            onClick={() => setVisisbleBotton(true)}\n                        >\n                            Добавить тип\n                        </div>}\n                </div>\n\n            </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentType,\n    addEquipmentType,\n    changeBookState,\n    changeOrderState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {createEquipmentModel, addEquipmentModel, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nconst SetOrderModel = (props) => {\n\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model])\n\n\n    const disabled = !Object.values(props.book.equipment_subtype).length\n    const seted = !!Object.values(props.order.model).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const setModel = model => {\n        props.changeOrderState({model})\n        props.changeBookState({equipment_model: model, filter_model: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }\n\n    const reset = () => {\n        props.changeOrderState({model: {}})\n        props.changeBookState({equipment_model: {}})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfModel\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_model: event.target.value})}\n                    placeholder=\"Выбирете модель\"\n                    value={seted ? props.order.model.title : props.book.filter_model}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfModel\">\n                    {props.book.equipment_models.map((model) => (\n                        visibleBotton ? null :\n                        <div\n                            key={model.id}\n                            className=\"rowGropList\"\n                            onClick={() => setModel(model)}\n                        >\n                            {model.title}\n                        </div>\n                    ))}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_model: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.createEquipmentModel(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_model}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модель\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    createEquipmentModel,\n    changeOrderState,\n    addEquipmentModel,\n    changeBookState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, addEquipmentSubtype, changeBookState} from '../../../../Redux/actions/bookActions'\nimport {changeOrderState} from '../../../../Redux/actions/orderActions'\n\nimport {icon_cancel, icon_close, icon_down} from '../../../../data/icons'\nimport Subtype from './Subtype'\nimport Icon from '../../../general/Icon'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(props.order.subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeOrderState({\n            subtype: {},\n            model: {}\n        })\n        props.changeBookState({equipment_subtype: {}})\n\n    }\n\n    const setSubtype = subtype => {\n        props.changeOrderState({subtype})\n        props.changeBookState({equipment_subtype: subtype, filter_subtype: ''})\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.changeVisibleState({checkedOrderSubtype: true})\n    }\n\n    return (\n        <div>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? props.order.subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={icon_down} className='icon-s2'/>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => (\n                        visibleBotton ? null :\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(subtype)}\n                            />\n                        )\n                    )}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(event.target.value)\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                onBlur={() => setVisisbleBotton(false)}\n                                value={props.book.filter_subtype}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    changeVisibleState,\n    addEquipmentSubtype,\n    changeBookState,\n    changeOrderState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS} from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n    return (\n        <div>\n\n            <div className='formRow mt15'>\n                <div className='optionsTitle'></div>\n                <div className='orderFormTitle'>Изделиe и неисправность</div>\n            </div>\n\n            <div className='orderDevice'>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Тип устройства<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderGroup idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Бренд<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderBrand idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>\n                        Модуль / Серия<span className='redStar'>*</span>\n                    </div>\n                    <div className='blockImput'>\n                        <SetOrderSubtype idx={0}/>\n                    </div>\n                </div>\n\n                <div className='formRow'>\n                    <div className='optionsTitle'>Модель</div>\n                    <div className='blockImput'>\n                        <SetOrderModel idx={0}/>\n                    </div>\n                </div>\n\n                <LabelInputOrder\n                    idx={23}\n                    className='formRow'\n                    title='Неисправность'\n                    name='malfunction'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'malfunction')}\n                    value={props.order.malfunction}\n                    checkedFlag='inputMalfunctionChecked'\n                    checked={props.view.inputMalfunctionChecked}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Комплектация'\n                    name='packagelist'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'packagelist')}\n                    value={props.order.packagelist}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <LabelInputOrder\n                    className='formRow'\n                    title='Внешинй вид'\n                    name='appearance'\n                    onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n                    value={props.order.appearance}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                />\n                <div className='formRow'>\n                    <div className='optionsTitle'>Срочно</div>\n                    <div className='blockImput'>\n                        <div className='checkbox pd-tb-5 al-itm-fs'>\n                            <input\n                                type='checkbox'\n                                onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                                checked={props.order.urgent}\n                                disabled={!props.permissions.includes('edit_info_orders')}\n                            />\n                            <label></label>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    order: state.order,\n    view: state.view,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderForm,\n    addAnotherEquipment,\n    deleteDevice,\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderFormS} from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/calandar/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n    return (\n        <div>\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Рекламная компания</div>\n                <div className=\"blockImput\">\n                    <ChooseOfList\n                        id={14}\n                        list={props.ad_campaign}\n                        setElement={props.changeOrderFormS}\n                        field='ad_campaign_id'\n                        current_id={props.order.ad_campaign_id}\n                        width={'250px'}\n                        disabled={!props.permissions.includes('edit_info_orders')}\n                    />\n                </div>\n            </div>\n\n            <ChooseSingleEquipment/>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\"/>\n                <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n            </div>\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Заметки приемщика</div>\n                <div className=\"blockImput mh\">\n          <textarea\n              className=\"textInput\"\n              name=\"manager_notes\"\n              onChange={(event) =>\n                  props.changeOrderFormS(event.target.value, 'manager_notes')\n              }\n              value={props.order.manager_notes}\n              disabled={!props.permissions.includes('edit_info_orders')}\n          />\n                </div>\n            </div>\n\n            <LabelInputOrder\n                className=\"formRow\"\n                title=\"Ориетнировачная стоимость\"\n                name=\"estimated_cost\"\n                onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n                value={props.order.estimated_cost}\n                disabled={!props.permissions.includes('edit_info_orders')}\n            />\n\n            <div className=\"formRow\">\n                <div className=\"optionsTitle\">Дата готовности</div>\n                <div className=\"blockImput\">\n                    <ChooseDate\n                        func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n                        current_date={props.order.estimated_done_at * 1000}\n                        disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n                        showTop={true}\n                        // range={true}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    ad_campaign: state.data.ad_campaign,\n    order: state.order,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\nimport {getOrderFilter} from './orderActions'\nimport {showAlert} from '../actions'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id,\n        filter_order: getOrderFilter()\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Операция успешно добалена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос добавления операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id,\n        filter_order: getOrderFilter()\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Операция успешно добалена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос добавления операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        filter_order: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Операция успешно изменена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        order_id: state.order.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {events: data.events || []}\n                    })\n                    const text = flag ? 'Операция успешно удалена' : 'Операция успшно восстановлена'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление операции не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               invisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.employee.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport Icon from './Icon'\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * invisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n *\n * icon={icon} // Иконка\n *\n * iconClassName='iconClassName' // Класс иконки\n *\n * iconColor='black' // Цвет Иконки\n */\nconst Button = (props) => {\n   return props.invisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.invisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.invisible || props.disabled}\n      >\n          <div className='row'>\n              {props.icon ? <Icon icon={props.icon} className={props.iconClassName} color={props.iconColor}/> : null}\n              {props.title ? <div className='ml5'>{props.title}</div> : null}\n          </div>\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    invisible: PropTypes.bool,\n    disabled: PropTypes.bool,\n    icon: PropTypes.string,\n    iconClassName: PropTypes.string,\n    iconColor: PropTypes.string\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport {getOrderFilter} from './orderActions'\nimport {showAlert} from '../actions'\nimport {text} from 'react-table/src/filterTypes'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id,\n\n        filter_order: getOrderFilter()\n    })\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Запчасть успешно добавлена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на добавление зачасти не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        filter_order: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await  fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Запчасть успешно изменена')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на измененеие запчасти не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        order_id: state.order.edit,\n        deleted: flag,\n\n        filter_order: getOrderFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': true}\n        })\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.order\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_STATE',\n                        data: {ordersShow: data.orders, events: data.events || []}\n                    })\n                    const text = flag ? 'Запчасть успешно удалена' : 'Запчасть успешно восстановлена'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос заказов не выполнен'))\n\n        await  dispatch({\n            type: 'CHANGE_VISIBLE_STATE',\n            data: {'statusOrderLoader': false}\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        invisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.employee.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.cashbox.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPayments = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {editCurrentClient, changeVisibleState} from '../../../../Redux/actions'\nimport { changePaymentState} from '../../../../Redux/actions/paymentAction'\n\nimport Button from '../../../general/Button'\nimport TableOrderPayments from './TableOrderPayments'\n\nconst OrderPayments = (props) => {\n\n   const handleIncome = () => {\n      props.changePaymentState({\n         direction: 2,\n         client_id: props.order.client.id,\n         description: `Оплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 2,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   const handleOutcome = () => {\n      props.changePaymentState({\n         direction: 1,\n         client_id: props.order.client.id,\n         description: `Выплата по заказу № ${props.order.id_label}`,\n         cashflow_category: 8,\n         employee_id: props.current_user_id,\n         order_id: props.order.edit,\n         context: {type: 'order'}\n      })\n      props.editCurrentClient(props.order.client)\n      props.changeVisibleState({'statusPaymentsEditor': true})\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handleIncome }\n               invisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handleOutcome }\n               invisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPayments/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeVisibleState,\n   changePaymentState,\n   editCurrentClient,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * invisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.invisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    invisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../../../general/Icon'\nimport {icon_down, icon_print} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport Checkbox from '../../../general/Checkbox'\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('orderPrint') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div style={{width: '67px', height: '25px'}} id='orderPrint'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton m0 pd05 ml10'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listprint'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        invisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React from 'react'\n\nconst EventStatus = props => {\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n    return (\n        <div className='eventElement evFerst'>\n            <div className='row jc-sb'>\n                <div\n                    className='statusListRow mt0'\n                    style={{backgroundColor: props.event.current_status.color}}\n                    title={props.employee}\n                >\n                    {props.event.changed[0].new.title}\n                </div>\n                <div className='cgr'>{time}</div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default EventStatus","import React from 'react'\n\n\nimport Icon from '../../../../general/Icon'\nimport {\n    icon_arrow_down,\n    icon_arrow_right,\n    icon_briefcase,\n    icon_bubble,\n    icon_bug,\n    icon_calendar, icon_coin_dollar\n} from '../../../../../data/icons'\nimport {icon_letter, icon_loop, icon_pencil, icon_trush, icon_user} from '../../../../../data/icons'\n\n\nconst EventSimple = props => {\n\n    const chooseIcon = (event_type) => {\n        let list_type = ['ASSIGN_ENGINEER', 'CHANGE_ENGINEER', 'ASSIGN_MANAGER', 'CHANGE_MANAGER', 'ADD_CLIENT', 'CHANGE_CLIENT']\n        if (list_type.includes(event_type)) return icon_user\n        if (event_type === 'CHANGE_ESTIMATED_DONE_AT') return icon_calendar\n        if (event_type === 'ADD_OPERATION') return icon_briefcase\n        if (event_type === 'ADD_ORDER_PART') return icon_bug\n        if (['DELETE_OPERATION', 'DELETE_ORDER_PART', 'DELETE_PAYMENT'].includes(event_type)) return icon_trush\n        if (['ADD_COMMENT', 'SEND_SMS'].includes(event_type)) return  icon_bubble\n        if (event_type === 'SEND_EMAIL') return icon_letter\n        if (event_type === 'MOVE_TO') return icon_loop\n        if (event_type === 'ADD_PAYMENT') return icon_coin_dollar\n        return icon_pencil\n    }\n\n    const checkLength = (event) => {\n        let one, two\n        if (event.current && event.current.title){\n            one = event.current.title.toString().length\n        } else {\n            one = 0\n        }\n        if (event.new && event.new.title){\n            two = event.new.title.toString().length\n        } else {\n            two = 0\n        }\n        return one + two > 40\n    }\n\n    const optionsShowDate = {\n        // year: 'numeric',\n        // month: 'long',\n        // day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const time = new Date(props.event.created_at * 1000).toLocaleString('ru', optionsShowDate)\n\n\n\n    return (\n\n        <div className='eventElement'>\n            {props.event.changed.map((event, idx) => (\n                <div>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <div\n                                style={{\n                                    backgroundColor: props.event.current_status.color,\n                                    display: idx ? 'none': null,\n                                    marginLeft: idx ? '30px': null\n                                }}\n                                className='boxHistoryIcon'\n                                title={props.employee}\n                            >\n                                <Icon className='icon-s2' icon={chooseIcon(props.event.event_type)} color='white'/>\n                            </div>\n                            <div\n                                className='ml10 txtb'\n                                style={{marginLeft: idx ? '28px': null}}\n                            >\n                                {event.title}\n                            </div>\n                        </div>\n                        <div className='cgr'>{time}</div>\n                    </div>\n                    <div\n                        className={`${checkLength(event) ? null : 'row'} ml30`}\n                    >\n                        {event.current && event.current.title ?\n                            <div className=''>{event.current.title}</div> : null}\n                        {event.current && event.current.title ?\n                            <Icon\n                                className='icon-sm8 mlr5'\n                                icon={checkLength(event) ? icon_arrow_down : icon_arrow_right}\n                            /> : null}\n                        <div style={{whiteSpace: \"pre-wrap\"}}>{event.new.title}</div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\n\nexport default EventSimple","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport EventStatus from './EventsStatus'\nimport EventSimple from './EventSimple'\nimport {order_event_types} from '../../../../../data/data'\n\nconst OrderEvents = props => {\n\n    const [date, setDate] = useState(0)\n\n    const compareDates = (date1, date2) => {\n        date1 = new Date(date1 * 1000)\n        date2 = new Date(date2 * 1000)\n        return date1.getDate() === date2.getDate() &&\n            date1.getMonth() === date2.getMonth() &&\n            date1.getFullYear() === date2.getFullYear()\n    }\n\n    const optionsShowDate = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        // hour: 'numeric',\n        // minute: 'numeric',\n        // second: 'numeric'\n    }\n\n    const showDate = (date) => {\n        return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.', '')\n    }\n    const values = order_event_types.filter(event => props.event_filter.includes(event.id)).map(event => event.value)\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}`: ''\n        }\n    }\n\n    return (\n        <div className='contentEditor mt15'>\n            <div className='ml30 h100'>\n                {props.events.filter(event => values.includes(event.event_type)).map((event, idx) => {\n\n                    if (event.event_type === 'CREATE_ORDER' || event.event_type === 'CHANGE_STATUS') {\n                        return (\n                            <div key={event.id}>\n                                {event.event_type === 'CREATE_ORDER' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <div\n                                    className='orderEvent'\n                                    style={{borderColor: event.current_status.color}}\n                                >\n                                    {event.event_type === 'CHANGE_STATUS' && (!idx || !compareDates(event.created_at, props.events[idx - 1].created_at)) ?\n                                        <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                        : null\n                                    }\n                                    <EventStatus event={event} employee={getEmploeeName(event.employee_id)}/>\n                                </div>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div\n                                key={event.id}\n                                className='orderEvent'\n                                style={{borderColor: event.current_status.color}}\n                            >\n                                {!idx || !compareDates(event.created_at, props.events[idx - 1].created_at) ?\n                                    <div className='dateEvent'>{showDate(event.created_at)}</div>\n                                    : null\n                                }\n                                <EventSimple event={event} employee={getEmploeeName(event.employee_id)}/>\n                            </div>\n                        )\n                    }\n                })}\n\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    events: state.order.events,\n    event_filter: state.order.event_filter,\n    employees: state.employee.employees\n})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEvents)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         style={{width: '67px', height: '26px'}}\n         className={`tableFields ml10 ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <Icon icon={props.icon || icon_table} className='icon-table'/>\n            </div>\n            <div className='cl12'>\n                  <Icon icon={icon_down} className='icon-table'/>\n               {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n            </div>\n         </div>\n\n         {listVisible ?\n            <div \n               className={props.classNameMenu}\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useLayoutEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeOrderState, addEventComment} from '../../../../../Redux/actions/orderActions'\n\nconst AddComment = props => {\n\n    const handlePressKey = event => {\n        if (event.key === 'Enter' && event.shiftKey) {\n            event.preventDefault()\n            props.changeOrderState({event_comment: event.target.value + '\\n'})\n            return\n        }\n        if (event.key === 'Enter') {\n            event.preventDefault()\n            props.addEventComment()\n            return\n        }\n    }\n\n\n    const MIN_TEXTAREA_HEIGHT = 16\n    const textareaRef = React.useRef(null);\n\n    useLayoutEffect(() => {\n        // Reset height - important to shrink on delete\n        textareaRef.current.style.height = '16px'\n        // Set height\n        textareaRef.current.style.height = `${Math.max(textareaRef.current.scrollHeight - 10, MIN_TEXTAREA_HEIGHT)}px`\n    }, [props.order.event_comment])\n\n    return (\n        <div className='mt15'>\n            <div className='orderCommentBox'>\n                <textarea\n                    ref={textareaRef}\n                    style={{\n                       minHeight: MIN_TEXTAREA_HEIGHT,\n                       resize: \"none\"\n                    }}\n                    className='commentInput'\n                    onChange={event => props.changeOrderState({event_comment: event.target.value})}\n                    value={props.order.event_comment}\n                    onKeyPress={handlePressKey}\n                    placeholder=\"Введите текст комментария\"\n                />\n            </div>\n            <p className='m0 ml15 mt5'><b>Enter</b>, чтобы отправить</p>\n            <p className='m0 ml15'><b>Shift + Enter</b>, чтобы добавить еще одну строчку</p>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderState,\n    addEventComment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComment)","import React, {useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport {selectedOrder} from '../../../../Redux/actions/orderActions'\nimport {order_event_types} from '../../../../data/data'\nimport {icon_filter} from '../../../../data/icons'\n\nimport OrderPrint from './OrderPrint'\nimport OrderEvents from './OrderEvetns/OrderEvents'\nimport TableFields from '../../../general/TableFields'\nimport Button from '../../../general/Button'\nimport AddComment from './OrderEvetns/AddComment'\n\nconst OrderHistory = props => {\n\n\n    return (\n        <div className=\"orderHistory\">\n            <div className='row al-itm-fs'>\n                <OrderPrint/>\n                <TableFields\n                    id='orderEvents'\n                    className='ml5'\n                    height='200px'\n                    classNameMenu='aventFilterMenu'\n                    list={order_event_types}\n                    checked_list={props.order.event_filter}\n                    func={props.selectedOrder}\n                    field='event_filter'\n                    icon={icon_filter}\n                />\n            </div>\n            {props.order.events.length ? <OrderEvents/> : null}\n            <AddComment/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    selectedOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\n\nimport {addDiscountMargin, addDictService, changeVisibleState} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders, getOrder} from '../../../Redux/actions/orderActions'\nimport {changeOrderState} from '../../../Redux/actions/orderActions'\n\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\nimport {addClients} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\nimport OrderHistory from './orderHisroy/OrderHistory'\n\n\n\nconst OrderEditor = (props) => {\n\n    const history = useHistory()\n    // console.log(history.location)\n    const edit = history.location.state && history.location.state.order_id\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addDictService()\n        props.resetBookEquipment()\n    }, [])\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusOrderEditor: false,\n            checkedOrderClient: false,\n            checkedOrderKindofGood: true,\n            checkedOrderBrand: true,\n            checkedOrderSubtype: true\n        })\n        props.resetOrder()\n        if (edit) history.goBack()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('addOrder') &&\n            !event.path.map((el) => el.id).includes('createNewOrder') &&\n            !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    useEffect(() => {\n        if (edit) props.getOrder(history.location.state.order_id)\n    }, [])\n\n\n    const handleCreate = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length &&\n            props.order.malfunction\n        ) {\n            props.createOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n    const handleSave = () => {\n        if (\n            Object.values(props.order.client).length &&\n            Object.values(props.order.kindof_good).length &&\n            Object.values(props.order.brand).length &&\n            Object.values(props.order.subtype).length\n\n        ) {\n            props.saveOrder()\n        } else {\n            if (!Object.values(props.order.client).length) props.changeVisibleState({checkedOrderClient: true})\n            if (!Object.values(props.order.kindof_good).length) props.changeVisibleState({checkedOrderKindofGood: false})\n            if (!Object.values(props.order.brand).length) props.changeVisibleState({checkedOrderBrand: false})\n            if (!Object.values(props.order.subtype).length) props.changeVisibleState({checkedOrderSubtype: false})\n            if (!props.order.malfunction) props.changeVisibleState({inputMalfunctionChecked: false})\n        }\n    }\n\n\n    return edit && !props.order.edit ? null : (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n                <div className=\"cteateNewOrderContent\">\n\n                    <div className=\"createOrderForm\">\n\n                        <TitleOrderEditor/>\n                        {props.order.edit ?\n                            <div>\n                                <Tabs\n                                    list={['Информация о заказе', 'Работы и материалы', 'Платежи']}\n                                    func={idx => props.changeOrderState({tabs: idx})}\n                                    tab={props.order.tabs}\n                                />\n                                {props.order.tabs === 0 ? <OrderInfo/> : null}\n                                {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                                {props.order.tabs === 2 ? <OrderPayments/> : null}\n                            </div> : <OrderInfo/>}\n                    </div>\n\n                    <OrderHistory/>\n                </div>\n\n                <div className=\"boxOrderButtons\">\n                    <BottomButtons\n                        edit={props.order.edit}\n                        create={handleCreate}\n                        save={handleSave}\n                        // delete={() => props.deleteClient(props.client.edit)}\n                        close={handleClose}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    order: state.order,\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addClients,\n    addDiscountMargin,\n    createOrder,\n    changeOrderState,\n    resetOrder,\n    addDictService,\n    saveOrder,\n    addOrders,\n    resetBookEquipment,\n    getOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\nconst optionsShowDate = {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric'\n}\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.toLocaleString('ru', optionsShowDate).replace('г.,', '')}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React from 'react'\nimport {connect} from 'react-redux'\n\nconst Subtype = props => {\n    return (\n        <td>\n            <span className=\"tableText\">\n                {props.order.subtype.title}\n            </span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Subtype)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Manager = props => {\n\n    function getEmploeeName(id) {\n        if (id) {\n            const employee = props.employees.find((employee) => employee.id === id)\n            return employee ? `${employee.last_name} ${employee.first_name}`: ''\n        }\n    }\n\n    return (\n        <td>\n            <div className='noWr'>\n                {getEmploeeName(props.order.manager_id)}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees\n})\n\nexport default connect(mapStateToProps)(Manager)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst MissedPayments = props => {\n    return (\n        <td className=\"tablePrice\">\n            <span>{props.order.missed_payments || null}</span>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(MissedPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ManagerNotes = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.manager_notes}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(ManagerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Cell = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.cell}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Cell)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst AdCampaign = props => {\n    return (\n        <td>\n            <div className=\"tableText tableOne\">\n                {props.order.ad_campaign.name}\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(AdCampaign)","import React, {useEffect, useMemo, useRef} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {addOrders, editOrder, resetOrder} from '../../Redux/actions/orderActions'\nimport {changeVisibleState, initStatusMenuVisibleAction} from '../../Redux/actions'\nimport {changeBookState} from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './newOrder/orderHisroy/StikerToPrint'\nimport {useHistory} from 'react-router-dom'\nimport Subtype from './cell/Subtype'\nimport Manager from './cell/Manager'\nimport MissedPayments from './cell/MissedPayments'\nimport ManagerNotes from './cell/ManagerNotes'\nimport Cell from './cell/Cell'\nimport AdCampaign from './cell/AdCampaign'\n\n\nconst TableOrders = props => {\n\n    const history = useHistory()\n\n    useEffect(() => {\n        let statusVis = {}\n        props.order.ordersShow.forEach((order) => {\n            statusVis[order.id] = false\n        })\n        props.initStatusMenuVisible(statusVis)\n    }, [props.order.ordersShow])\n\n    const handleEdit = (order) => {\n        props.changeBookState({\n            equipment_type: order.kindof_good,\n            equipment_brand: order.brand,\n            equipment_subtype: order.subtype,\n            equipment_model: order.model\n        })\n        history.push(`/orders/${order.id}`, {order_id: order.id })\n    }\n\n    const afterPrint = () => {\n        props.changeVisibleState({statusOrderSticker: false})\n        if(props.view.needToResetOrder) {\n            props.resetOrder()\n            props.changeVisibleState({needToResetOrder: false})\n        }\n    }\n\n    const tFields = useMemo(() => props.order.tableFields.filter(header => header.visible), [props.order, props.order.tableFields])\n\n    const table_order = useRef(null)\n    // console.log(table_order.current)\n\n    const chooseCell = (field, order) => {\n        switch (field.id) {\n\n            case 1: return <Lable key={field.id} order={order}/>\n            case 2: return <Create key={field.id} order={order}/>\n            case 3: return <EstimatedDone key={field.id} order={order}/>\n            case 4: return <Status key={field.id} order={order}/>\n            case 5: return <Equipment key={field.id} order={order}/>\n            case 6: return <KindOfGood key={field.id} order={order}/>\n            case 7: return <Brand key={field.id} order={order}/>\n            case 8: return <Subtype key={field.id} order={order}/>\n            case 9: return <Malfunction key={field.id} order={order}/>\n            case 10: return <Engineer key={field.id} order={order}/>\n            case 11: return <Manager key={field.id} order={order}/>\n            case 12: return <Client key={field.id} order={order}/>\n            case 13: return <Price key={field.id} order={order}/>\n            case 14: return <MissedPayments key={field.id} order={order}/>\n            case 15: return <EngineerNotes key={field.id} order={order}/>\n            case 16: return <ManagerNotes key={field.id} order={order}/>\n            case 17: return <Cell key={field.id} order={order}/>\n            case 18: return <AdCampaign key={field.id} order={order}/>\n            default: return null\n        }\n    }\n\n    if (props.employees) {\n        return (\n            <div className=\"tableOrdersBox\">\n                <table id=\"tableOrders\" ref={table_order}>\n                    <thead className=\"tableThead\">\n                    <tr>\n                        {tFields.map(header => (\n                            <TableHeader\n                                key={header.id}\n                                data={header}\n                                tableHeight={table_order.current ? table_order.current.offsetHeight : 40}\n                            />\n                        ))}\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {props.order.ordersShow.map(order => (\n                        <tr\n                            key={order.id}\n                            className=\"orderTableRows\"\n                            onDoubleClick={() => handleEdit(order)}\n                        >\n                            {tFields.map(header => chooseCell(header, order))}\n                            {/*{props.order.tableFields.find(header => header.id === 1).visible ? <Lable order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 2).visible ? <Create order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 3).visible ? <EstimatedDone order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 4).visible ? <Status order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 5).visible ? <Equipment order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 6).visible ? <KindOfGood order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 7).visible ? <Brand order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 8).visible ? <Subtype order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 9).visible ? <Malfunction order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 10).visible ? <Engineer order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 11).visible ? <Manager order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 12).visible ? <Client order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 13).visible ? <Price order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 14).visible ? <MissedPayments order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 15).visible ? <EngineerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 16).visible ? <ManagerNotes order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 17).visible ? <Cell order={order}/> : null}*/}\n                            {/*{props.order.tableFields.find(header => header.id === 18).visible ? <AdCampaign order={order}/> : null}*/}\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                {props.view.statusOrderEditor ? <OrderEditor/> : null}\n                {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n                {props.view.statusOrderSticker ?\n                    <StikerToPrint onAfterPrint={afterPrint}/> : null}\n\n            </div>\n        )\n    } else {\n        return <Loader/>\n    }\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    employees: state.employee.employees,\n    user: state.data.user,\n    view: state.view,\n    mainFilter: state.filter.mainFilter\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    initStatusMenuVisible: initStatusMenuVisibleAction,\n    changeVisibleState,\n    editOrder,\n    changeBookState,\n    resetOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {addClientToTempFilter} from '../../Redux/actions/clientAction'\n\nconst CustomFilter = props => {\n\n    async function  handleChoose()  {\n        if (props.filter.active_filter !== props.data.id) {\n            if (props.data.filters.client_id) props.addClientToTempFilter(props.data.filters.client_id[0])\n            props.changeFilterState({\n                ...props.data.filters,\n                active_filter: props.data.id,\n                active_badge: 0,\n                search: '',\n                temp_statuses: props.data.filters.status_id || [],\n                temp_order_types: props.data.filters.order_type_id || [],\n                temp_managers: props.data.filters.manager_id || [],\n                temp_engineers: props.data.filters.engineer_id || [],\n                temp_created_at: props.data.filters.created_at || [0, 0],\n                temp_kindof_good_id: props.data.filters.kindof_good,\n                temp_brand: props.data.filters.brand,\n                temp_subtype: props.data.filters.subtype,\n                temp_client: {}\n            })\n        } else {\n            props.changeFilterState({\n                active_filter: 0,\n                page: 0,\n                engineer_id: null,\n                overdue: null,\n                status_id: null,\n                status_overdue: null,\n                urgent: null,\n                order_type_id: null,\n                manager_id: null,\n                created_at: null,\n                kindof_good: null,\n                brand: null,\n                subtype: null,\n                client_id: null,\n            })\n        }\n    }\n\n    return (\n        <div\n            className='customFilter'\n            onClick={handleChoose}\n            style={{\n                backgroundColor: props.data.id === props.filter.active_filter ? '#eeeeef' : 'white',\n                opacity: props.data.id === props.filter.active_filter || props.filter.active_filter === 0 ? 1 : 0.5\n            }}\n        >\n            {props.data.title}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter\n})\n\nconst mapDispatchToProps = {\n    changeFilterState,\n    addClientToTempFilter\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../Redux/actions'\nimport LableInput from '../general/LableInput'\nimport Checkbox from '../general/Checkbox'\nimport BottomButtons from '../general/BottomButtons'\nimport {changeFilterState, createCustomFilter} from '../../Redux/actions/filterAction'\n\nconst FilterEditor = props => {\n\n    const handleClose = () => {\n        props.changeVisibleState({statusCreateNewFilter: false, inputFilterTitleChecked: true})\n    }\n\n    const clickHandel = event => {\n        if (!event.path.map((el) => el.id).includes('createNewFilterWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.filter.title) {\n            props.createCustomFilter()\n        } else {\n            props.changeVisibleState({inputFilterTitleChecked: false})\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewFilterWindow\">\n\n                <div className=\"createNewTitle w515\">{props.filter.active_filter ? props.filter.title : 'Новый фильтр'}</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                         className='mt15'\n                         title='Наименование'\n                         onChange={event => props.changeFilterState({title: event.target.value})}\n                         value={props.filter.title}\n                         checkedFlag='inputFilterTitleChecked'\n                         checked={props.inputFilterTitleChecked}\n                         redStar={true}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Общий'\n                        onChange={event => props.changeFilterState({general: event.target.checked})}\n                        checked={props.filter.general}\n                    />\n                </div>\n\n                <BottomButtons\n                    edit={props.filter.active_filter}\n                    create={handleCreate}\n                    // save={handleSave}\n                    // delete={() => props.deleteNotEvent(true)}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    inputFilterTitleChecked: state.view.inputFilterTitleChecked,\n\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    createCustomFilter,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterEditor)\n","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const choosed_values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (choosed_values.length === current_statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!choosed_values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        invisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport {icon_down, icon_left} from '../../../../data/icons'\n\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\nimport Button from '../../../general/Button'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const allStatuses = props.statuses.map(status => status.id)\n\n\n    return props.invisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div className='liststatus'>\n                    <div\n                        className='blocList'\n                        style={{width: props.width ? props.width : '250px'}}\n                    >\n                        {props.status_group.map(group => (\n                            <ChooseStatusesGruoup\n                                key={group.id}\n                                label={group.name}\n                                group={group.type_group}\n                                func={value => props.func(value)}\n                                current_list={props.current_list}\n                            />\n                        ))}\n                    </div>\n                    <div className='btmsts'>\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Выбрать все'\n                            onClick={() => props.func(allStatuses)}\n                            disabled={props.current_list.length === allStatuses.length}\n                        />\n                        <Button\n                            className='whiteBlueBotton'\n                            title='Отменить все'\n                            onClick={() => props.func_clear()}\n                        />\n                    </div>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5),\n    statuses: state.data.status.filter(status => status.group < 8)\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// invisible={false}","import React, {useEffect, useState, useRef} from 'react'\n\nimport Checkbox from './Checkbox'\nimport Icon from './Icon'\nimport {icon_down, icon_left} from '../../data/icons'\n\nconst ChooseOfListMany = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const mainCheckbox = useRef()\n\n    useEffect(() => {\n        if(mainCheckbox.current) {\n            const values = props.list.filter(el => props.checked_list.includes(el.id))\n            if (values.length === props.list.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = true\n            } else if (!values.length) {\n                mainCheckbox.current.indeterminate = false\n                mainCheckbox.current.checked = false\n            } else {\n                mainCheckbox.current.indeterminate = true\n            }\n        }\n    }, [props.checked_list, listVisible])\n\n\n    const showWord = (len) => {\n        switch (len) {\n\n            case 0: {\n                return 'Ничего не выбрано'\n            }\n\n            case props.list.length: {\n                return 'Все'\n            }\n\n            default:\n                return `Выбрано ${len}`\n        }\n    }\n\n\n    return (\n        <div\n            style={{width: props.width ? props.width : '250px'}}\n            id={`chooseOfList${props.id}`}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <div\n                className='optionsButton al-itm-ct'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div>{showWord(props.checked_list.length)}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='#282e33'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n\n                    <div className='checkbox'>\n                        <input\n                            ref={mainCheckbox}\n                            type='checkbox'\n                            onChange={() => props.func(props.list.map(el => el.id))}\n                            disabled={props.disabled}\n                        />\n                        <label>{props.mainLable}</label>\n                    </div>\n\n                    {props.list.map(element => {\n                        return (\n                            <div\n                                key={element.id}\n                                className='options'\n                            >\n                                <Checkbox\n                                    className='ml10'\n                                    label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                                    onChange={() => props.func([element.id])}\n                                    checked={props.checked_list.includes(element.id)}\n                                    disabled={props.disabled}\n                                />\n\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, {useEffect, useState} from 'react'\nimport {icon_cancel, icon_down, icon_left} from '../../data/icons'\nimport Icon from './Icon'\n\n\n/**\n * id='id' // id компонента\n *\n * className='className' // className оболочки компанента\n *\n * width='250px' // ширина компонента\n *\n * title='title' // Подпись сверху\n *\n * list={props.list} // Список элементов\n *\n * current_element={props.current_element} // выбраный элемент\n *\n * setElement={() => console.log('setElement')} // функция выбора элемента\n *\n * filter={props.filter} // фильр поиска элемента\n *\n * changeFilter={() => console.log('changeFilter')} // функция изменения фильтра\n *\n * placeholder='Введите текст'\n *\n * disabled={} // заблокировать\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseWithSearch = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n\n    const clickHandel = event => {\n        if (!event.path.map(el => el.id).includes(`ChooseWithSearch${props.id}`)) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    return (\n        <div\n            id={`ChooseWithSearch${props.id}`}\n            style={{width: props.width ? props.width : '250px'}}\n            className={props.className}\n        >\n            <div className='lableImput'>{props.title}</div>\n            <button\n                className={props.disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                onClick={() => setListVisible(true)}\n                disabled={props.disabled || Object.values(props.current_element).length}\n            >\n                <input\n                    className={props.disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeFilter(event.target.value)}\n                    placeholder={props.placeholder}\n                    value={Object.values(props.current_element).length ? props.current_element : props.filter}\n                    disabled={props.disabled || Object.values(props.current_element).length}\n                />\n                {Object.values(props.current_element).length ?\n                    <div\n                        className='al-itm-ct'\n                        onClick={() => props.setElement({})}\n                    >\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n                    {props.list.map((element, idx) => {\n                        return (\n                            <div\n                                key={idx}\n                                className='options'\n                                onClick={() => {\n                                    props.setElement(element)\n                                    setListVisible(false)\n                                }}\n                            >\n                                {element.title || element.name}\n                            </div>\n                        )\n                    })}\n                </div> : null}\n        </div>\n    )\n}\n\n\nexport default ChooseWithSearch\n\n\n\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentType, changeBookState} from '../../../Redux/actions/bookActions'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nconst SetGroup = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type])\n\n    const seted = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfGroup') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfGroup')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_kindof_good_id: null,\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_type: {},\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setType = (equipment) => {\n        props.changeFilterState({temp_kindof_good_id: equipment.id})\n        props.changeBookState({equipment_type: equipment})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Тип устройства</div>\n            <button\n                id='optionsFilterTextOfGroup'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={seted}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_type: event.target.value})}\n                    placeholder='Выбирете группу'\n                    value={seted ? props.book.equipment_type.title : props.book.filter_type}\n                    disabled={seted}\n                />\n                {seted ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfGroup'>\n                    {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className='rowGropList'\n                                onClick={() => setType(equipment)}\n                            >\n                                {equipment.title}\n                            </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentType,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetGroup)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentBrand, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\n\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetBrand = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.filter_brand, props.book.equipment_type])\n\n    const settled = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfBrand') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfBrand')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({\n            temp_brand: null,\n            temp_subtype: null\n        })\n        props.changeBookState({\n            filter_brand: '',\n            filter_subtype: '',\n            equipment_brand: {},\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setBrand = (brand) => {\n        props.changeFilterState({temp_brand: brand.id})\n        props.changeBookState({equipment_brand: brand})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Бренд</div>\n            <button\n                id='optionsFilterTextOfBrand'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_brand: event.target.value})}\n                    placeholder='Выбирете бренд'\n                    value={settled ? props.book.equipment_brand.title : props.book.filter_brand}\n                    disabled={settled  || !settledType}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfBrand'>\n                    {props.book.equipment_brands.map(brand => (\n                        <div\n                            key={brand.id}\n                            className='rowGropList'\n                            onClick={() => setBrand(brand)}\n                        >\n                            {brand.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentBrand,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetBrand)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport { addEquipmentSubtype, changeBookState} from '../../../Redux/actions/bookActions'\nimport {changeFilterState} from '../../../Redux/actions/filterAction'\nimport {icon_cancel, icon_down, icon_left} from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst SetSubtype = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.filter_subtype, props.book.equipment_brand])\n\n    const settled = !!Object.values(props.book.equipment_subtype).length\n    const settledBrand = !!Object.values(props.book.equipment_brand).length\n    const settledType = !!Object.values(props.book.equipment_type).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listFilterOfSubtype') &&\n            !event.path.map(el => el.id).includes('optionsFilterTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        props.changeFilterState({temp_subtype: null})\n        props.changeBookState({\n            filter_subtype: '',\n            equipment_subtype: {}\n        })\n    }\n\n\n    const setSubtype = (subtype) => {\n        props.changeFilterState({temp_subtype: subtype.id})\n        props.changeBookState({equipment_subtype: subtype})\n        setVisibleList(false)\n    }\n\n    return (\n        <div className='mt15 h52'>\n            <div className='lableImput'>Модуль/Серия</div>\n            <button\n                id='optionsFilterTextOfSubtype'\n                className='optionsFilterText'\n                onClick={() => setVisibleList(true)}\n                disabled={settled || !settledType || !settledBrand}\n            >\n                <input\n                    className='optionFilterInput'\n                    onChange={event => props.changeBookState({filter_subtype: event.target.value})}\n                    placeholder='Выбирете Модуль/Серию'\n                    value={settled ? props.book.equipment_subtype.title : props.book.filter_subtype}\n                    disabled={settled  || !settledType || !settledBrand}\n                />\n                {settled ?\n                    <div onClick={reset}>\n                        <Icon icon={icon_cancel} className='icon-close'/>\n                    </div>\n                    :\n                    <Icon icon={visibleList ? icon_down : icon_left} className='icon-s2'/>\n                }\n            </button>\n            {visibleList ?\n                <div className='listFilter' id='listFilterOfSubtype'>\n                    {props.book.equipment_subtypes.map(subtype => (\n                        <div\n                            key={subtype.id}\n                            className='rowGropList'\n                            onClick={() => setSubtype(subtype)}\n                        >\n                            {subtype.title}\n                        </div>\n                    ))}\n                </div> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    addEquipmentSubtype,\n    changeBookState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetSubtype)","import React, {useEffect, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport { changeVisibleState,} from '../../../Redux/actions'\nimport {changeFilterState, deleteFilter, resetTempFilter, selectedFilter} from '../../../Redux/actions/filterAction'\nimport {addClients, changeClientState} from '../../../Redux/actions/clientAction'\nimport {icon_cross, icon_trush} from '../../../data/icons'\n\n\nimport FilterEditor from '../FilterEditor'\nimport Button from '../../general/Button'\nimport ChooseStatuses from '../../Settings/SettingPages/Notification/ChooseStatuses'\nimport ChooseOfListMany from '../../general/ChooseOfListMany'\nimport ChooseWithSearch from '../../general/ChooseWithSearch'\nimport ChooseDate from '../../general/calandar/ChooseDate'\nimport SetGroup from './SetGroup'\nimport SetBrand from './SetBrand'\nimport SetSubtype from './SetSubtype'\n\nconst SetFilter = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name])\n\n    const handleSet = () => {\n        const data = {\n            page: 0,\n            engineer_id: props.filter.temp_engineers.length ? props.filter.temp_engineers : null,\n            overdue: null,\n            status_id: props.filter.temp_statuses.length ? props.filter.temp_statuses : null,\n            status_overdue: null,\n            urgent: null,\n            order_type_id: props.filter.temp_order_types.length ? props.filter.temp_order_types : null,\n            manager_id: props.filter.temp_managers.length ? props.filter.temp_managers : null,\n            created_at: props.filter.temp_created_at.length && props.filter.temp_created_at.every(el => el === 0) ? null : props.filter.temp_created_at ,\n            kindof_good: props.filter.temp_kindof_good_id,\n            brand: props.filter.temp_brand,\n            subtype: props.filter.temp_subtype,\n            client_id: Object.values(props.filter.temp_client).length ? [props.filter.temp_client.id] : null,\n            active_badge: 0,\n            active_filter: 0\n        }\n        props.changeFilterState(data)\n    }\n\n\n    return (\n        <div className=\"setCustomFilter\">\n            <div className=\"row jc-c\">\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseStatuses\n                        className='h52'\n                        width='100%'\n                        func={value => props.selectedFilter(value, 'temp_statuses')}\n                        func_clear={() => props.changeFilterState({temp_statuses: []})}\n                        current_list={props.filter.temp_statuses}\n                    />\n                    <SetGroup/>\n                    <ChooseWithSearch\n                        id='filterClient'\n                        className='mt15 h52'\n                        width='100%'\n                        title='Клиент'\n                        list={props.client.clients}\n                        current_element={Object.values(props.temp_client).length ? props.temp_client.name : ''}\n                        setElement={client => props.changeFilterState({temp_client: client})}\n                        filter={props.client.filter_name}\n                        changeFilter={filter => props.changeClientState({filter_name: filter})}\n                        placeholder='Введите имя'\n                        disabled={false}\n                    />\n                </div>\n\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseOfListMany\n                        id='idTypeOrders'\n                        className='h52'\n                        width='100%'\n                        title='Тип заказа'\n                        mainLable='Все'\n                        list={props.order_type}\n                        checked_list={props.filter.temp_order_types}\n                        func={value => props.selectedFilter(value, 'temp_order_types')}\n                    />\n                    <SetBrand/>\n                    <ChooseOfListMany\n                        id='idManagerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Менеджер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_managers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_managers}\n                        func={value => props.selectedFilter(value, 'temp_managers')}\n                    />\n                </div>\n                <div className=\"jc-sb w100 m10\">\n                    <ChooseDate\n                        className='h52'\n                        title='Дата'\n                        width='100%'\n                        range={true}\n                        allDate={true}\n                        func={date => props.changeFilterState({temp_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.filter.temp_created_at}\n                    />\n                    <SetSubtype/>\n                    <ChooseOfListMany\n                        id='idEngineerOrders'\n                        className='h52 mt15'\n                        width='100%'\n                        title='Инженер'\n                        mainLable='Все'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        employee={true}\n                        checked_list={props.filter.temp_engineers}\n                        func={value => props.selectedFilter(value, 'temp_engineers')}\n                        disabled={!props.user.role.orders_visibility}\n                    />\n                </div>\n            </div>\n            <div className=\"buttons fs14 mt15\">\n                <Button\n                    className='blueButton'\n                    title='Применить'\n                    onClick={handleSet}\n                />\n                {props.filter.active_filter ?\n                    <Button\n                        className='whiteButton bcr'\n                        icon={icon_trush}\n                        iconClassName='icon-s1 pd1'\n                        iconColor='white'\n                        onClick={() => props.deleteFilter()}\n                    />\n                    :\n                    <Button\n                        className='whiteButton'\n                        title='Создать фильтр'\n                        onClick={() => props.changeVisibleState({statusCreateNewFilter: true})}\n                    />\n                }\n                <Button\n                    className='whiteButton'\n                    title='Сбросить параметы'\n                    onClick={() => props.resetTempFilter()}\n                    icon={icon_cross}\n                    iconClassName='icon-sm8'\n                    iconColor='#282e33'\n                />\n            </div>\n            {props.statusCreateNewFilter ? <FilterEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    statusCreateNewFilter: state.view.statusCreateNewFilter,\n    filter: state.filter,\n    order_type: state.data.order_type,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    client: state.client,\n    user: state.data.user,\n    temp_client: state.filter.temp_client\n})\n\nconst mapDispatchToProps = {\n    addClients,\n    resetTempFilter,\n    deleteFilter,\n    selectedFilter,\n    changeFilterState,\n    changeVisibleState,\n    changeClientState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {icon_down, icon_table} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport Checkbox from '../general/Checkbox'\nimport {changeOrderField} from '../../Redux/actions/orderActions'\n\n\nconst TableOrderFields = props => {\n\n    const [listVisible, setListVisible] = useState(true)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('tableOrderFields')) {\n            if (listVisible) {\n                setListVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        setListVisible(false)\n    }, [])\n\n\n    return (\n        <div\n            id='tableOrderFields'\n            className={'tableFields otf_pos '}\n        >\n            <div\n                className='chooseFieldButton pd2'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='cl11'>\n                    <Icon icon={props.icon || icon_table} className='icon-table'/>\n                </div>\n                <div className='cl12'>\n                    <Icon icon={icon_down} className='icon-table'/>\n                    {/*<span className=\"fieldSeparate\">&#6662;</span>*/}\n                </div>\n            </div>\n\n            {listVisible ?\n                <div className='listOptionField'>\n                    <div style={{overflow: 'auto'}}>\n                        {props.order.tableFields.map(field => {\n                            return (\n                                <div\n                                    key={field.id}\n                                    className='options'\n                                >\n                                    <Checkbox\n                                        className='ml10'\n                                        label={field.title}\n                                        onChange={event => props.changeOrderField(field.id, 'visible', event.target.checked)}\n                                        checked={field.visible}\n                                    />\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n    changeOrderField\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrderFields)\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport { setVisibleFlag} from '../../Redux/actions'\nimport {changeFilterState} from '../../Redux/actions/filterAction'\nimport {changeOrderState} from '../../Redux/actions/orderActions'\nimport {icon_filter} from '../../data/icons'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport Button from '../general/Button'\nimport TableOrderFields from './TableOrderFields'\n\nconst CustomPanel = (props) => {\n\n    const newOrder = () => {\n        // Посчитаем ориентировочную дату готовности\n        const days_to_add = 4   // Количество дней, которое прибавляем\n        let estimated_done_at = new Date()\n        for (let i = 0; i < days_to_add; ) {\n            estimated_done_at.setDate(estimated_done_at.getDate() + 1) // прибавим день\n            let week_day = estimated_done_at.getDay() || 7 // вычеслим текущий день недели\n            if (props.schedule.find(day => day.week_day === week_day).work_day) i++ // Если день рабочий, довим шаг цикла\n        }\n\n        props.changeOrderState({manager_id: props.user.id, estimated_done_at: parseInt(estimated_done_at / 1000)})\n        props.setVisibleFlag('statusOrderEditor', true)\n    }\n\n    const handleEditFilter = () => {\n        props.setVisibleFlag('statusSetCustomFilter', 'change')\n        props.changeFilterState({active_badge: 0,  active_filter: 0})\n    }\n\n    return (\n        <div className='mainCustomPanel '>\n            <div className='customPanel'>\n                <div className='row al-itm-fe'>\n                    <Button\n                        id='addOrder'\n                        className='greenButton'\n                        title='+ Заказ'\n                        onClick={newOrder}\n                        invisible={!props.permissions.includes('create_orders')}\n                    />\n                    <div className='customFilters'>\n                        <Button\n                            className='customFilter'\n                            title='Фильтр'\n                            onClick={handleEditFilter}\n                            invisible={false}\n                            icon={icon_filter}\n                            iconClassName='icon-s2'\n                            iconColor='282e33'\n                        />\n                        {props.customFilters.map(filter => {\n                            return (\n                                <CustomFilter data={filter} key={filter.id}/>\n                            )\n                        })}\n                    </div>\n                </div>\n                <TableOrderFields/>\n            </div>\n\n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    customFilters: state.filter.customFilters,\n    statusSetCustomFilter: state.view.statusSetCustomFilter,\n    permissions: state.data.user.role.permissions,\n    statusOrderEditor: state.view.statusOrderEditor,\n    user: state.data.user,\n    edit: state.order.edit,\n    schedule: state.branch.current_branch.schedule\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeOrderState,\n    changeFilterState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useEffect} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport {addStatusGroupAction, addAdCampaign, addEquipment} from '../../Redux/actions'\nimport {addBadges, changeFilterForm, changeFilterState, addCustomFilters} from '../../Redux/actions/filterAction'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\n\nimport CustomPanel from './CustomPanel'\n\n\nfunction Orders(props) {\n\n    useEffect(() => {\n        if (Object.values(props.current_branch).length) props.addOrders()\n    }, [\n        props.filter.sort,\n        props.filter.field_sort,\n        props.filter.page,\n        props.filter.engineer_id,\n        props.filter.overdue,\n        props.filter.status_id,\n        props.filter.status_overdue,\n        props.filter.urgent,\n        props.filter.order_type_id,\n        props.filter.manager_id,\n        props.filter.created_at,\n        props.filter.kindof_good,\n        props.filter.brand,\n        props.filter.subtype,\n        props.filter.client_id,\n        props.filter.search,\n        props.current_branch\n    ])\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n\n\n    const pageChangeHandler = page => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changeFilterState({page: curent_page})\n        // props.changeFilterForm(curent_page, 'page')\n    }\n\n\n    useEffect(() => {\n        props.addBadges()\n    }, [])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    filter: state.filter,\n    count: state.order.count,\n    ordersShow: state.order.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader,\n    current_branch: state.branch.current_branch\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment,\n    addBadges,\n    changeFilterState,\n    changeFilterForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {icone_sphere, icone_setting} from '../../../data/icons'\nimport {changeVisibleState} from '../../../Redux/actions'\nimport {changeCashboxState, editCashbox} from '../../../Redux/actions/cashboxAction'\n\nimport {changePaymentState} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\nconst Cashbox = (props) => {\n\n    const activ = (id) => {\n        return id === props.activ_cashbox_id\n    }\n\n    const edit = props.user.role.permissions.includes('edit_cash')\n\n    const income = props.user.role.permissions.includes('make_income') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('incoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n    const outcome = props.user.role.permissions.includes('make_expenditure') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n    const move = props.user.role.permissions.includes('move_money') &&\n        activ(props.cashbox.id) &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('outcoming_move') :\n            props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n    const showBalance = props.user.role.permissions.includes('see_remains') &&\n        (props.cashbox.employees[props.user.id].like_cashbox ?\n            props.cashbox.permissions.includes('show_cashbox_remains') :\n            props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n    const handleEdit = () => {\n        props.editCashbox(props.cashbox)\n        props.changeVisibleState({'statusCashboxEditor': true})\n    }\n\n    const hanldleIncome = () => {\n        props.changePaymentState({\n            'direction': 2,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleOutcome = () => {\n        props.changePaymentState({\n            'direction': 1,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    const hanldleMove = () => {\n        props.changePaymentState({\n            'direction': 0,\n            'context': {type: 'payment'},\n            'current_type': props.cashbox.type,\n            'employee_id': props.user.id,\n            'cashbox_id': props.cashbox.id\n        })\n        props.changeVisibleState({'statusPaymentsEditor': true})\n    }\n\n    return (\n        <div\n            className={`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted ? 'bcg' : 'cgr'}`}\n            onClick={() => props.changeCashboxState({current_cashbox: props.cashbox})}\n        >\n            <div className='icons'>\n                <div><Icon className='smalIcon' icon={icone_sphere}\n                           color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n                <div\n                    onClick={edit ? handleEdit : null}\n                >\n                    <Icon className='smalIcon curP' icon={icone_setting}\n                          color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n                </div>\n            </div>\n            <div>{props.cashbox.title.toUpperCase()}</div>\n            {showBalance ?\n                <div className='cacsboxBalance'>\n                    {`${props.cashbox.balance ? parseFloat(props.cashbox.balance).toFixed(2) : 0} руб.`}\n                </div>\n                : null}\n            <div className='row jc-c'>\n                <Button\n                    title='+ Приход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n                    onClick={hanldleIncome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!income}\n                />\n                <Button\n                    id='344'\n                    title='- Расход'\n                    className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n                    onClick={hanldleOutcome}\n                    disabled={props.cashbox.deleted}\n                    invisible={!outcome}\n                />\n            </div>\n            <Button\n                title='Перемещение'\n                className='whiteButton'\n                onClick={hanldleMove}\n                disabled={props.cashbox.deleted}\n                invisible={!move}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    user: state.data.user,\n    activ_cashbox_id: state.cashbox.current_cashbox.id,\n})\n\nconst mapDispatchToProps = {\n    editCashbox,\n    changeCashboxState,\n    changePaymentState,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {changeCashboxPermissions} from '../../../Redux/actions/cashboxAction'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editEmployee} from '../../../Redux/actions/employeeAction'\n\nimport {changeCashboxPermissions, changeCashboxState} from '../../../Redux/actions/cashboxAction'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxState({permissions_employee: employee.id})\n      props.editEmployee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxState({permissions_employee: employee_id})\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmployee,\n   changeCashboxState,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeCashboxState, chooseCashboxSelected} from '../../../Redux/actions/cashboxAction'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\nimport LableInput from '../../general/LableInput'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={event => props.changeCashboxState({title: event.target.value})}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxState({isGlobal: true})}\n            func2 = {() => props.changeCashboxState({isGlobal: false})}\n            checked = { props.cashbox.isGlobal }\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxState({isVirtual: event.target.checked})}\n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxState({type: 0})}\n            func2={() => props.changeCashboxState({type: 1})}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxState,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport { setVisibleFlag} from '../../../Redux/actions'\nimport {changeCashboxState, createCashbox, deleteCashbox, saveEditCashbox} from '../../../Redux/actions/cashboxAction'\nimport {permission_cahsbox} from \"../../../data/permissions\"\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n            props.setVisibleFlag('statusCashboxEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.cashbox.edit) {\n            let list_per = {}\n            props.employees.filter(employee => !employee.deleted).forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_cashbox = true\n                list_per[employee.id].permissions = permission_cahsbox\n            })\n            props.changeCashboxState({employees: list_per})\n        }\n    }, [])\n\n    const hangleCreate = () => {\n        if (props.cashbox.title) {\n            props.createCashbox()\n        } else {\n            if (!props.cashbox.title) {\n                props.setVisibleFlag('inputCashboxTitleChecked', false)\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (props.cashbox.title) {\n            props.saveEditCashbox()\n        } else {\n            if (!props.cashbox.title) {\n                props.setVisibleFlag('inputCashboxTitleChecked', false)\n            }\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n                </div>\n\n                <Tabs\n                    list={['Общие', 'Доcтуп']}\n                    func={idx => props.changeCashboxState({tabs_editor: idx})}\n                    tab={props.cashbox.tabs_editor}\n                    tab_field=\"tabs_editor\"\n                />\n\n                {props.cashbox.tabs_editor === 0 ? <DataCashbox/> : null}\n                {props.cashbox.tabs_editor === 1 ? <CashboxAccess/> : null}\n\n                <BottomButtons\n                    edit={props.cashbox.edit}\n                    create={hangleCreate}\n                    save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n                    deleted={props.cashbox.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    cashbox: state.cashbox,\n    employees: state.employee.employees,\n    view: state.view,\n    permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n    changeCashboxState,\n    setVisibleFlag,\n    createCashbox,\n    saveEditCashbox,\n    deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, setPayment} from '../../Redux/actions'\nimport {icon_file_text, icon_warning} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport {showDate} from '../general/utils'\n\nconst TablePayments = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payments.filter(payment => !payment.deleted).forEach(payment => {\n            income_sum += payment.income\n            outcome_sum += payment.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payments])\n\n    const showBalance = () => {\n        let cashboxAvailable = false\n        if (Object.values(props.current_cashbox).length) {\n            cashboxAvailable = (props.current_cashbox.employees[props.user.id].like_cashbox ?\n                props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n        }\n        return cashboxAvailable && props.user.role.permissions.includes('see_remains')\n    }\n\n    const payments = props.payments.filter(payment => props.showDeleted || !payment.deleted)\n        .filter(payment => props.permissions.includes('see_payment_profit') || payment.cashflow_category !== 'Прибыль')\n\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr className=''>\n                <th className='w150'>Создан</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                {showBalance() ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n            </thead>\n            <tbody>\n            {payments.map(payment => (\n                <tr\n                    key={payment.id}\n                    className={payment.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => {\n                        props.setPayment(payment)\n                        props.setVisibleFlag('statusPaymentsCard', true)\n                    }}\n                >\n                    <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                            <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                            {payment.created_at !== payment.custom_created_at ?\n                                <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}`}>\n                                    <Icon\n                                        className='icon-s2 ml5'\n                                        icon={icon_warning}\n                                        color='red'\n                                    />\n                                </div> : null}\n                        </div>\n                    </td>\n                    <td>\n                        <div>{payment.description}{payment.client.name ?` (Клиент: ${payment.client.name})` : null }</div>\n                        {payment.direction ?\n                            <div className='row'>\n                                <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                                <div className='tac ml5 cgr'>{payment.cashflow_category}</div>\n                            </div> : null}\n                    </td>\n                    <td className={payment.income ? 'greenFont tac' : 'tac'}>{payment.income}</td>\n                    <td className={payment.outcome ? 'redFont tac' : 'tac'}>{payment.outcome}</td>\n                    {showBalance() ?\n                        <td className='tac'>\n                            {payment.deposit ? parseFloat(payment.deposit).toFixed(2) : 0}\n                        </td>\n                        : null}\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {payments.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    payments: state.payment.payments,\n    employees: state.employee.employees,\n    user: state.data.user,\n    current_cashbox: state.cashbox.current_cashbox,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    setPayment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addPayments, changePaymentState} from '../../Redux/actions/paymentAction'\nimport {icon_stats_docs} from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\nimport ChooseDate from '../general/calandar/ChooseDate'\nimport Button from '../general/Button'\n\n\nconst ManeyMovement = (props) => {\n\n    useEffect(() => {\n        if (props.current_cashbox) {\n            props.addPayments()\n        }\n    }, [props.current_cashbox])\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    return (\n        <div className='ml30 w100'>\n\n            <div className='row'>\n                <Icon icon={icon_stats_docs}/>\n                <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n            </div>\n            <div className='row'>\n                <ChooseDate\n                    className='h27'\n                    width='250px'\n                    range={true}\n                    func={date => props.changePaymentState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                    current_date={props.filter_created_at}\n                    ivisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Button\n                    title='Применить'\n                    className='blueButton'\n                    onClick={() => props.addPayments()}\n                    invisible={!props.permissions.includes('see_moving_money_all_time')}\n                />\n                <Checkbox\n                    label='Показать удаленные'\n                    onChange={event => setShowDeleted(event.target.checked)}\n                    value={showDeleted}\n                    invisible={!props.permissions.includes('see_delete_payments')}\n                />\n            </div>\n\n            <TablePayments showDeleted={showDeleted}/>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    current_cashbox: state.cashbox.current_cashbox,\n    filter_created_at: state.payment.filter_created_at,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changePaymentState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {changeVisibleState} from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport {addCashboxes, changeCashboxState} from '../../../Redux/actions/cashboxAction'\n\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n    useEffect(() => {\n        if (Object.values(props.current_branch).length)  props.addCashboxes()\n    }, [props.cashbox.showDeleted, props.current_branch])\n\n    // const cashboxes = props.cashbox.cashboxes.filter(cashbox =>\n    //    (!cashbox.deleted || showDeleted) &&\n    //    cashbox.employees[props.user.id].available &&\n    //    (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n    //    )\n\n    return (\n        <div className='contentTab'>\n\n            <div className='row al-itm-bl'>\n                <div className='cashboxes'>\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => props.changeCashboxState({showDeleted: event.target.checked})}\n                        checked={props.cashbox.showDeleted}\n                    />\n                    {props.cashbox.cashboxes.map(cashbox => {\n                        return (\n                            <Cashbox\n                                key={cashbox.id}\n                                cashbox={cashbox}\n                                active={cashbox.active}\n                            />\n                        )\n                    })}\n\n                    {props.user.role.permissions.includes('edit_cash') ?\n                        <div\n                            className='whiteButton'\n                            onClick={() => props.changeVisibleState({statusCashboxEditor: true})}\n                        >\n                            + Добавить кассу\n                        </div> : null}\n\n                </div>\n                {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null}\n\n            </div>\n            {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n            {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n            {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    cashbox: state.cashbox,\n    user: state.data.user,\n    current_branch: state.branch.current_branch,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addCashboxes,\n    changeCashboxState,\n    addPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\nimport {currentMonth} from '../../components/general/utils'\nimport {showAlert} from '../actions'\n\n\nexport function changePayrollState(data) {\n    return {\n        type: 'CHANGE_PAYROLL_STATE',\n        data\n    }\n}\n\nexport function editPayroll(payroll) {\n    return {\n        type: 'EDIT_PAYROLL',\n        payroll\n    }\n}\n\nexport function resetPayroll() {\n    return {\n        type: 'RESET_PAYROLL'\n    }\n}\n\n\nexport function selectedPayroll(value, field) {\n    return {\n        type: 'SELECTED_PAYROLL',\n        field,\n        value\n    }\n}\n\nfunction getFilter() {\n    const state = store.getState()\n    return {\n        custom_created_at: state.payroll.filter_created_at,\n        employee_id: state.payroll.setted_employee,\n        deleted: state.payroll.showDeleted\n    }\n}\n\nexport function addPayrolls() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig(getFilter())\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payrolls', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.data}\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос начислений не выполнен'))\n    }\n}\n\nexport function addMonthBalance() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: currentMonth(),\n        employee_id: state.payroll.setted_employee\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payroll_sum', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {month_balance: data.sum},\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос баланса не выполнен'))\n    }\n}\n\nexport function createPayroll() {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n\n    const request_config = getRequestConfig({\n        description: state.payroll.description,\n        income: state.payroll.income,\n        outcome: -state.payroll.outcome,\n        direction: state.payroll.direction,\n        deleted: state.payroll.deleted,\n        reimburse: state.payroll.reimburse,\n        created_at: now,\n        custom_created_at: state.payroll.custom_created_at || now,\n        relation_type: state.payroll.relation_type,\n        relation_id: state.payroll.relation_id,\n        employee_id: state.payroll.employee_id,\n        order_id: state.payroll.order_id,\n        payment: state.payroll.relation_type === 12 ? {\n            cashbox_id: state.payroll.payment_cashbox_id,\n            cashflow_category: state.payroll.payment_cashflow_category\n        } : null,\n        filter: getFilter()\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payroll', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.payrolls}\n                    })\n                    dispatch({\n                        type: 'RESET_PAYROLL',\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPayrollEditor: false}\n                    })\n                    showAlert(dispatch, 'alert-success', 'Начисление успешно создано')\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание начисления не выполнен'))\n    }\n}\n\nexport function deletePayroll(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.payroll.edit,\n        deleted: flag,\n        filter: getFilter()\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        fetch(state.data.url_server + '/payroll', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PAYROLL_STATE',\n                        data: {payrolls: data.payrolls}\n                    })\n                    dispatch({\n                        type: 'RESET_PAYROLL',\n                    })\n                    dispatch({\n                        type: 'CHANGE_VISIBLE_STATE',\n                        data: {statusPayrollEditor: false}\n                    })\n                    const text = flag ? 'Начисление успешно удалено' : 'Начисление успешно восстановленно'\n                    showAlert(dispatch, 'alert-success', text)\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление начисления не выполнен'))\n    }\n}","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {editPayroll} from '../../../Redux/actions/payrollActions'\n\nimport {showDate} from '../../general/utils'\nimport Icon from '../../general/Icon'\nimport {icon_warning} from '../../../data/icons'\n\nconst TablePayrolls = (props) => {\n\n    const [incomeSum, setIncomeSum] = useState(0)\n    const [outcomeSum, setOutcomeSum] = useState(0)\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат', 'Выплата']\n\n    const editPayroll = (payroll) => {\n        props.editPayroll(payroll)\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n\n    useEffect(() => {\n        let income_sum = 0\n        let outcome_sum = 0\n        props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n            income_sum += payroll.income\n            outcome_sum += payroll.outcome\n        })\n        setIncomeSum(income_sum)\n        setOutcomeSum(outcome_sum)\n    }, [props.payrolls])\n\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w135'>Дата</th>\n                <th>Описание</th>\n                <th className='w91'>Приход, руб.</th>\n                <th className='w91'>Расход, руб.</th>\n                <th className='w91'>Баланс, руб.</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.payrolls.map(payroll => (\n                <tr\n                    key={payroll.id}\n                    className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                    onDoubleClick={() => editPayroll(payroll)}\n                >\n                    <td className='pd-lr-5'>\n                        <div>\n                            <div className='row'>\n                                <div>{type_payrolls[payroll.relation_type]}</div>\n                                {payroll.created_at !== payroll.custom_created_at ?\n                                    <div title={`Добавлено задним числом\\n${showDate(payroll.created_at)}`}>\n                                        <Icon\n                                            className='icon-s2 ml5'\n                                            icon={icon_warning}\n                                            color='red'\n                                        />\n                                    </div> : null}\n                            </div>\n                            <div className='cgr'>{showDate(payroll.custom_created_at)}</div>\n                        </div>\n                    </td>\n                    <td className='pd-lr-5'>{payroll.description}</td>\n                    <td className={payroll.income ? 'greenFont tac' : 'tac'}>{payroll.income}</td>\n                    <td className={payroll.outcome ? 'redFont tac' : 'tac'}>{payroll.outcome}</td>\n                    <td className='tac'>{payroll.deposit ? payroll.deposit.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td colSpan='2'>Всего - {props.payrolls.length}</td>\n                <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n                <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n                <td></td>\n            </tr>\n            </tbody>\n        </table>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    payrolls: state.payroll.payrolls\n})\n\nconst mapDispatchToProps = {\n    editPayroll,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changePayrollState} from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\nconst PayrollForm = (props) => {\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const cashboxes = props.cashboxes.filter(cashbox => cashbox.type === props.payroll.payment_cashbox_type)\n\n    return (\n        <div className=''>\n            <div className='row al-itm-fe'>\n                <ChooseBotton\n                    className='mt15 mr-rg-20'\n                    title='Дата и время'\n                    name={['Текущее', 'Заданное']}\n                    func1={() => {\n                        setChooseData(false)\n                        props.changePayrollState({custom_created_at: null})\n                    }}\n                    func2={() => {\n                        setChooseData(true)\n                        props.changePayrollState({custom_created_at: parseInt(new Date() / 1000)})\n                    }}\n                    checked={true}\n                    // disabled={!props.permissions.includes('backdating')}\n                />\n                <ChooseDate\n                    className='h31'\n                    width='250px'\n                    func={date => props.changePayrollState({custom_created_at: parseInt(date / 1000)})}\n                    current_date={props.payroll.custom_created_at * 1000}\n                    invisible={!chooseData}\n                />\n            </div>\n            <LableInput\n                className='mt15'\n                width='70px'\n                title='Сумма'\n                onChange={event => props.changePayrollState({[props.payroll.direction === 2 ? 'income' : 'outcome']: parseFloat(event.target.value.replace(/[^0-9.]/g, ''))})}\n                value={props.payroll.outcome ? props.payroll.outcome : props.payroll.income}\n                unit='руб.'\n                checkedFlag='inputPayrollSumChecked'\n                checked={props.view.inputPayrollSumChecked}\n                disabled={props.payroll.deleted}\n                redStar={true}\n            />\n            <ChooseOfList\n                id='employeePayroll'\n                title='Сотрудник'\n                className='mt15'\n                list={props.employees}\n                setElement={id => props.changePayrollState({employee_id: id})}\n                current_id={props.payroll.employee_id}\n                width={'250px'}\n                employee={true}\n                checkedFlag='inputPayrollEmployeeChecked'\n                checked={props.view.inputPayrollEmployeeChecked}\n                disabled={props.payroll.deleted}\n            />\n            <LableArea\n                className='mt15'\n                title='Коментарий'\n                onChange={event => props.changePayrollState({description: event.target.value})}\n                value={props.payroll.description}\n                checkedFlag='inputPayrollDescChecked'\n                checked={props.view.inputPayrollDescChecked}\n                redStar={true}\n                disabled={props.payroll.deleted}\n            />\n            {props.payroll.relation_type === 12 ?\n                <div>\n                    <div className='orderFormTitle mt15'>Данные платежа</div>\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {props.changePayrollState({payment_cashbox_type: 0})}}\n                            func2={() => {props.changePayrollState({payment_cashbox_type: 1})}}\n                            checked={!props.payroll.payment_cashbox_type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            setElement={cashbox_id => props.changePayrollState({payment_cashbox_id : cashbox_id})}\n                            current_id={props.payroll.payment_cashbox_id }\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payroll.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === 1)}\n                        setElement={category => props.changePayrollState({payment_cashflow_category: category})}\n                        current_id={props.payroll.payment_cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payroll.deleted}\n                    />\n                </div>\n                : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    cashboxes: state.cashbox.cashboxes,\n    item_payments: state.data.item_payments\n})\n\nconst mapDispatchToProps = {\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.employee.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\n\nimport {setVisibleFlag} from '../../../Redux/actions'\nimport {resetPayroll, changePayrollState, createPayroll, deletePayroll} from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\nconst PaypolleEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPayrollEditor', false)\n        props.setVisibleFlag('inputPayrollDescChecked', true)\n        props.setVisibleFlag('inputPayrollEmployeeChecked', true)\n        props.setVisibleFlag('inputPaymentCashboxChecked', true)\n        props.setVisibleFlag('inputPaymentCashflowChecked', true)\n        props.resetPayroll()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    const hangleCreate = () => {\n        if (\n            (props.payroll.income || props.payroll.outcome) &&\n            props.payroll.employee_id &&\n            props.payroll.description &&\n            (props.payroll.relation_type !== 12 || props.payroll.payment_cashbox_id) &&\n            (props.payroll.relation_type !== 12 || props.payroll.payment_cashflow_category)\n        ) {\n            props.createPayroll()\n        } else {\n            if (!(props.payroll.income || props.payroll.outcome)) {\n                props.setVisibleFlag('inputPayrollSumChecked', false)\n            }\n            if (!props.payroll.employee_id) {\n                props.setVisibleFlag('inputPayrollEmployeeChecked', false)\n            }\n            if (!props.payroll.description) {\n                props.setVisibleFlag('inputPayrollDescChecked', false)\n            }\n            if (!props.payroll.payment_cashbox_id) {\n                props.setVisibleFlag('inputPaymentCashboxChecked', false)\n            }\n            if (!props.payroll.payment_cashflow_category) {\n                props.setVisibleFlag('inputPaymentCashflowChecked', false)\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (\n            (props.payrolle.income || props.payrolle.outcome) &&\n            props.payroll.employee_id &&\n            props.payroll.description\n        ) {\n            // props.createPayment()\n        } else {\n            if (!(props.payrolle.income || props.payrolle.outcome)) {\n                props.setVisibleFlag('inputPayrollSumChecked', false)\n            }\n            if (!props.payroll.employee_id) {\n                props.setVisibleFlag('inputPayrollEmployeeChecked', false)\n            }\n            if (!props.payroll.description) {\n                props.setVisibleFlag('inputPayrollDescChecked', false)\n            }\n        }\n    }\n\n\n    const title = ['', 'Взыскание', 'Премия']\n\n    const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.payroll.edit ? type_payrolls[props.payroll.relation_type] : (title[props.payroll.direction])}\n                </div>\n\n                <div className='contentEditor'>\n\n                    {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n                </div>\n\n                <BottomButtons\n                    edit={props.payroll.edit}\n                    create={hangleCreate}\n                    // save={ hangleSave }\n                    delete={props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null}\n                    recover={props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null}\n                    close={handleClose}\n                    deleted={props.payroll.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    employees: state.employee.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    setVisibleFlag,\n    resetPayroll,\n    createPayroll,\n    deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {addPayrolls, addMonthBalance, changePayrollState} from '../../../Redux/actions/payrollActions'\nimport {addEmployees} from '../../../Redux/actions/employeeAction'\n\nimport {showName} from '../../general/utils'\n\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\nimport ChooseDate from '../../general/calandar/ChooseDate'\n\n\n\nconst EmployeeSalary = (props) => {\n\n    useEffect(() => {\n        props.addMonthBalance()\n        props.addEmployees()\n    }, [props.payroll.setted_employee])\n\n    const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n    const handleIncome = () => {\n        props.changePayrollState({\n            direction: 2,\n            relation_type: 9,\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handleOutcome = () => {\n        props.changePayrollState({\n            direction: 1,   \n            relation_type: 10,\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const handlePaySalary = () => {\n        props.changePayrollState({\n            direction: 1,\n            relation_type: 12,\n            description: 'Выплата заработной платы',\n            employee_id: props.payroll.setted_employee\n        })\n        props.setVisibleFlag('statusPayrollEditor', true)\n    }\n\n    const month_balance = props.payroll.month_balance\n\n    return (\n        <div className=''>\n            <div className='createNewTitle fsz20 mt0'>\n                {showName(current_employee)}\n            </div>\n            <div className='txtb'>\n                <span>Начисленно в текущем месяце: </span>\n                <span className={month_balance >= 0 ? 'greenFont ml5' : 'redFont ml5'}>\n                    {month_balance ? month_balance.toFixed(2) : 0}\n                </span> руб.\n            </div>\n            <div className='txtb'>\n                <span>Баланс:</span>\n                <span\n                    className={current_employee.balance >= 0 ? 'greenFont ml5' : 'redFont ml5'}>\n                    {current_employee.balance ? current_employee.balance.toFixed(2) : 0}</span> руб.\n            </div>\n            <Button\n                title='Выплатить'\n                className='greenButton bcr'\n                onClick={handlePaySalary}\n            />\n\n            <div className='row mt15 jc-sb'>\n                <div className='row'>\n                    <ChooseDate\n                        className='h27'\n                        width='250px'\n                        range={true}\n                        func={date => props.changePayrollState({filter_created_at: date.map(date => parseInt(date / 1000))})}\n                        current_date={props.payroll.filter_created_at}\n                    />\n                    <Button\n                        className='blueButton'\n                        title='Применить'\n                        onClick={() => props.addPayrolls()}\n                    />\n                    <Checkbox\n                        label='Показать удаленные'\n                        onChange={event => props.changePayrollState({showDeleted: event.target.checked})}\n                        value={props.payroll.showDeleted}\n                        invisible={!props.permissions.includes('see_seleted_payrolls')}\n                    />\n                </div>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Премия'\n                        onClick={handleIncome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                    <Button\n                        className='greenButton bcr m10'\n                        title='- Взыскание'\n                        onClick={handleOutcome}\n                        invisible={!props.permissions.includes('create_payrolls')}\n                    />\n                </div>\n            </div>\n            {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n            <TablePayrolls/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees,\n    payroll: state.payroll,\n    permissions: state.data.user.role.permissions,\n    statusPayrollEditor: state.view.statusPayrollEditor\n})\n\nconst mapDispatchToProps = {\n    changePayrollState,\n    addPayrolls,\n    addMonthBalance,\n    addEmployees,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {showName} from '../../general/utils'\nimport {changePayrollState} from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n\n    const [total, setTotal] = useState(0)\n\n    useEffect(() => {\n        let sum = 0\n        props.employees.filter(employee => employee.id !== 1).forEach(employee => {\n            sum += employee.balance\n        })\n        sum = sum ? sum.toFixed(2) : 0\n        setTotal(sum)\n    }, [props.employees])\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>Сотрудник</th>\n                <th>Баланс</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.employees.map(employee => (\n                <tr\n                    key={employee.id}\n                    onClick={() => props.changePayrollState({setted_employee: employee.id})}\n                    style={employee.id === props.payroll.setted_employee ? {backgroundColor: '#cae1f5'} : null}\n                >\n                    <td>{showName(employee)}</td>\n                    <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n                </tr>\n            ))}\n            <tr>\n                <td>Итог:</td>\n                <td>{total}</td>\n            </tr>\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees.filter(employee => !employee.deleted && employee.id !== 0),\n    payroll: state.payroll\n})\n\nconst mapDispatchToProps = {\n    changePayrollState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollState } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollState({setted_employee: props.user_id})\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollState\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeCashboxState} from '../../Redux/actions/cashboxAction'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\nimport Loader from '../Loader/Loader'\n\nconst Payments = (props) => {\n\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Финансы</span>\n            </div>\n\n            <Tabs\n                list={['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты']}\n                func={idx => props.changeCashboxState({tabs: idx})}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <Cashboxes/> : null}\n            {props.tabs === 1 ? null : null}\n            {props.tabs === 2 ? null : null}\n            {props.tabs === 3 ? <Salaries/> : null}\n\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.cashbox.tabs,\n    statusOrderLoader: state.view.statusOrderLoader\n\n})\n\nconst mapDispatchToProps = {\n    changeCashboxState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\n/**\n *\n *\n * className='' // класс оболочки\n *\n * title='Добавить изображение'\n *\n * url={image_url} // ссылка на загуженную картинку на сервер\n *\n * onChange={file => props.someFunction(file)} // функция обработки загруженного изображения\n *\n * value={props.part.img} // только что загруженное изображение (хранящееся в state)\n *\n * disabled={false}\n *\n *\n * @returns {JSX.Element}\n *\n */\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th key={header.id}>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td key={header.title + part.id}>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td key={header.title + part.id}>{part[header.field].title}</td>\n                            return <td key={header.title + part.id}>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row al-itm-ct'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            invisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            invisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row al-itm-ct'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                invisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                invisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            classNameMenu='listOption'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={idx => props.changeWarehouseForm(idx, 'tabs')}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { useTable } from 'react-table'\nimport {addClients} from '../../Redux/actions/clientAction'\nimport {showPhone} from '../general/utils'\n\nconst TableClients = props => {\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.client.filter_name, props.client.filter_phone])\n\n    const data = React.useMemo(\n        () => props.client.clients.map(client => ({\n            name: client.name,\n            phone: client.phone.length ? showPhone(client.phone[0].number) : '',\n            name_doc: client.name_doc,\n            email: client.email,\n            address: client.address,\n            notes: client.notes\n        })),\n        [props.client.clients]\n    )\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Имя',\n                accessor: 'name',\n            },\n            {\n                Header: 'Телефон',\n                accessor: 'phone',\n            },\n            {\n                Header: 'Обращение',\n                accessor: 'name_doc',\n            },\n            {\n                Header: 'Email',\n                accessor: 'email',\n            },\n            {\n                Header: 'Адресс',\n                accessor: 'address',\n            },\n            {\n                Header: 'Комментарий',\n                accessor: 'notes',\n            },\n        ],\n        []\n    )\n\n    const tableInstance = useTable({ columns, data })\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = tableInstance\n\n    return (\n        // apply the table props\n        <table {...getTableProps()}>\n            <thead>\n            {// Loop over the header rows\n                headerGroups.map(headerGroup => (\n                    // Apply the header row props\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {// Loop over the headers in each row\n                            headerGroup.headers.map(column => (\n                                // Apply the header cell props\n                                <th {...column.getHeaderProps()}>\n                                    {// Render the header\n                                        column.render('Header')}\n                                </th>\n                            ))}\n                    </tr>\n                ))}\n            </thead>\n            {/* Apply the table body props */}\n            <tbody {...getTableBodyProps()}>\n            {// Loop over the table rows\n                rows.map(row => {\n                    // Prepare the row for display\n                    prepareRow(row)\n                    return (\n                        // Apply the row props\n                        <tr {...row.getRowProps()}>\n                            {// Loop over the rows cells\n                                row.cells.map(cell => {\n                                    // Apply the cell props\n                                    return (\n                                        <td {...cell.getCellProps()}>\n                                            {// Render the cell contents\n                                                cell.render('Cell')}\n                                        </td>\n                                    )\n                                })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    client: state.client\n})\n\nconst mapDispatchToProps = {\n    addClients\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableClients)","import React from 'react'\nimport {connect} from 'react-redux'\nimport TableClients from './TableClients'\n\nconst Clients = (props) => {\n    return (\n        <div className='pageContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Клиенты</span>\n            </div>\n            <TableClients/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport {Link, useHistory} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {changeDataState} from '../../Redux/actions/dataAction'\n\n\n\nfunction SettingRow(props) {\n\n    const history = useHistory()\n    if (history.location.pathname === props.row.url && history.location.pathname !== props.current_setting_menu_row)\n        props.changeDataState({current_setting_menu_row: props.row.url})\n\n    return (\n        <Link\n            className=\"settingRow\"\n            to={props.row.url}\n            style={{\n                backgroundColor: props.current_setting_menu_row === props.row.url ? '#939699' : '#53585c',\n                color: props.current_setting_menu_row === props.row.url ? '#fff' : null\n            }}\n            onClick={() => props.changeDataState({current_setting_menu_row: props.row.url})}\n        >\n            <span className=\"didebarItemsText\">{props.row.title}</span>\n        </Link>\n    )\n}\n\nconst mapStateToProps = state => ({\n    settingMenu: state.data.settingMenu,\n    current_setting_menu_row: state.data.current_setting_menu_row\n})\n\nconst mapDispatchToProps = {\n    changeDataState\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  invisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  invisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\n\nexport function changeSalaryRuleForm(value, field) {\n    return {\n        type: 'CHANGE_SALARY_FORM',\n        field,\n        value\n    }\n}\n\nexport function changeSalaryCoefForm(idx, field, value) {\n    return {\n        type: 'CHANGE_SALARY_COEF_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\nexport function addSalaryCountCoef() {\n    return {\n        type: 'ADD_SALARY_COUNT_COEF'\n    }\n}\n\nexport function deleteSalaryCountCoef(idx) {\n    return {\n        type: 'DELETE_SALARY_COUNT_COEF',\n        idx\n    }\n}\n\nexport function editPayrule(salary_rule) {\n    return {\n        type: 'EDIT_SALARY',\n        salary_rule\n    }\n}\n\nexport function resetPayrule() {\n    return {\n        type: 'RESET_SALARY_RULE'\n    }\n}\n\n\nexport function addPayrules() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payrules',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос правил не выполнен'))\n    }\n}\n\nexport function createSalaryRule() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n        type_rule: state.salaryRule.type_rule,\n        order_type: state.salaryRule.order_type,\n        method: state.salaryRule.method,\n        coefficient: state.salaryRule.coefficient,\n        count_coeff: state.salaryRule.count_coeff,\n        fix_salary: state.salaryRule.fix_salary,\n        deleted: state.salaryRule.deleted,\n        employee_id: state.data.user.id,\n        check_status: state.salaryRule.check_status\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payrule', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание правила не выполнен'))\n\n        await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payrules',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusSalaryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SALARY_RULE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос правил не выполнен'))\n    }\n}\n\nexport function saveSalaryRule() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.salaryRule.edit,\n        title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n        type_rule: state.salaryRule.type_rule,\n        order_type: state.salaryRule.order_type,\n        method: state.salaryRule.method,\n        coefficient: state.salaryRule.coefficient,\n        count_coeff: state.salaryRule.count_coeff,\n        fix_salary: state.salaryRule.fix_salary,\n        deleted: state.salaryRule.deleted,\n        employee_id: state.data.user.id,\n        check_status: state.salaryRule.check_status\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payrule', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение правила не выполнен'))\n\n        await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payrules',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusSalaryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SALARY_RULE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос правил не выполнен'))\n    }\n}\n\n\nexport function deleteSalaryRule(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.salaryRule.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payrule', request_config)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление правила не выполнен'))\n\n        await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payrules',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusSalaryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SALARY_RULE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос правил не выполнен'))\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport {changeEmployeeState} from '../../../../Redux/actions/employeeAction'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeeState({first_name: event.target.value})}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeeState({last_name: event.target.value})}\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeeState({email: event.target.value})}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeeState({login: event.target.value})}\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? <div className=\"errorMassageInput\">Такой Login уже существует</div> : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeeState({password: event.target.value})}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeeState({phone: value})}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeeState({inn: event.target.value})}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeeState({doc_name: event.target.value})}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event => props.changeEmployeeState({notes: event.target.value})}\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeeState({post: event.target.value})}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        setElement={id => props.changeEmployeeState({role_id: id})}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeState\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState} from '../../../../Redux/actions'\nimport {changeEmployeeState, createEmployee, deleteEmployee, saveEditEmployee} from '../../../../Redux/actions/employeeAction'\nimport {addPayrules} from '../../../../Redux/actions/payrulleAction'\n\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from '../../../general/Tabs'\n\n\nconst EmploeeyEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusEmployeeEditor: false,\n            inputEmployeeNameChecked: true,\n            inputEmployeeEmailChecked: true,\n            inputEmployeeLoginChecked: true,\n            inputEmployeePasswordChecked: true,\n            inputEmployeeRoleChecked: true\n        })\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addPayrules()\n    }, [])\n\n    const hangleCreate = () => {\n        if (\n            props.employee.first_name &&\n            props.employee.email &&\n            props.employee.login &&\n            props.employee.password &&\n            props.employee.role_id !== 0\n        ) {\n            props.createEmployee()\n        } else {\n            if (!props.employee.first_name) {\n                props.changeVisibleState({inputEmployeeNameChecked: false})\n            }\n            if (!props.employee.email) {\n                props.changeVisibleState({inputEmployeeEmailChecked: false})\n            }\n            if (!props.employee.login) {\n                props.changeVisibleState({inputEmployeeLoginChecked: false})\n            }\n            if (!props.employee.password) {\n                props.changeVisibleState({inputEmployeePasswordChecked: false})\n            }\n            if (props.employee.role_id === 0) {\n                props.changeVisibleState({inputEmployeeRoleChecked: false})\n            }\n        }\n    }\n\n    const hangleSave = () => {\n        if (\n            props.employee.first_name &&\n            props.employee.email &&\n            props.employee.login\n        ) {\n            props.saveEditEmployee()\n        } else {\n            if (!props.employee.first_name) {\n                props.changeVisibleState({inputEmployeeNameChecked: false})\n            }\n            if (!props.employee.email) {\n                props.changeVisibleState({inputEmployeeEmailChecked: false})\n            }\n            if (!props.employee.login) {\n                props.changeVisibleState({inputEmployeeLoginChecked: false})\n            }\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.edit\n                        ? `${props.employee.last_name} ${props.employee.first_name}`\n                        : 'Новый сотрудник'}\n                </div>\n\n                <Tabs\n                    list={['Общие', 'Доступ']}\n                    func={idx => props.changeEmployeeState({tabs: idx})}\n                    tab={props.tabs}\n                />\n\n                {props.tabs === 0 ? <EditEmployeeGenerally/> : null}\n                {props.tabs === 1 ? <EditEmployeePermission/> : null}\n\n                <BottomButtons\n                    edit={props.edit}\n                    create={hangleCreate}\n                    save={hangleSave}\n                    delete={() => props.deleteEmployee(true)}\n                    recover={props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n                    close={handleClose}\n                    deleted={props.employee.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    tabs: state.employee.tabs,\n    edit: state.employee.edit,\n    employee: state.employee,\n    permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n    changeEmployeeState,\n    changeVisibleState,\n    createEmployee,\n    saveEditEmployee,\n    deleteEmployee,\n    addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\nimport {editEmployee} from '../../../../Redux/actions/employeeAction'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmployee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n    editEmployee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles} from '../../../../Redux/actions'\nimport {changeEmployeeState, resetEmployee} from '../../../../Redux/actions/employeeAction'\n\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmployee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => props.changeEmployeeState({showDeleted: event.target.checked})}\n                        checked={props.showDeleted}\n                        invisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeEmployeeState,\n    resetEmployee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeShedule} from '../../../../Redux/actions/branchAction'\n\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n    const weekdays = [\n        'Понедельник',\n        'Вторник',\n        'Среда',\n        'Четверг',\n        'Пятница',\n        'Суббота',\n        'Воскрсение',\n    ]\n\n    return (\n        <div className=\"schedule mr-rg-20\">\n            <div className=\"lableImput mt15\">График работы локации</div>\n            {props.branch.schedule.sort((a, b) => a.week_day - b.week_day).map((day, idx) => {\n                return (\n                    <div className=\"row mt15\" key={idx}>\n                        <Checkbox\n                            className=\"w150\"\n                            onChange={(event) =>\n                                props.changeShedule(idx, 'work_day', event.target.checked)\n                            }\n                            checked={day.work_day}\n                            label={weekdays[idx]}\n                            disabled={props.branch.deleted}\n                        />\n\n                        {props.branch.schedule[idx].work_day ? (\n                            <div className=\"row\">\n                                <input\n                                    className=\"w70\"\n                                    onChange={event => props.changeShedule(idx, 'start_time', event.target.value)}\n                                    value={day.start_time}\n                                    disabled={props.branch.deleted}\n                                />\n                                <div className=\"w30 tac\">&#8212;</div>\n                                <input\n                                    className=\"w70\"\n                                    onChange={event => props.changeShedule(idx, 'end_time', event.target.value)}\n                                    value={day.end_time}\n                                    disabled={props.branch.deleted}\n                                />\n                            </div>\n                        ) : null}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n    changeShedule\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeBranchState} from '../../../../Redux/actions/branchAction'\n\nimport Icon from '../../../general/Icon'\nimport {icon_location, icon_map_location, icon_wrench, icon_hammer, icon_radio, icon_git, icon_svg,} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchState({color})\n                        props.changeBranchState({icon})\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setBranchEmployee} from '../../../../Redux/actions/branchAction'\n\nimport Checkbox from '../../../general/Checkbox'\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.employee.employees.filter(employee => !employee.deleted && employee.id !== 0),\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeBranchState, createBranch, deleteBranch, resetBranch, saveBranch} from '../../../../Redux/actions/branchAction'\nimport {changeVisibleState} from '../../../../Redux/actions'\n\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n\n    const handleClose = () => {\n        props.changeVisibleState({\n            statusBranchEditor: false,\n            inputBranchNameChecked: true,\n            inputBranchPrefixChecked: true,\n            inputBranchPrefixDocChecked: true\n        })\n        props.resetBranch()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreateBranch = () => {\n        if (\n            props.branch.name &&\n            props.branch.orders_prefix &&\n            props.branch.documents_prefix\n        ) {\n            props.createBranch()\n        } else {\n            if (!props.branch.name) {\n                props.changeVisibleState({inputBranchNameChecked: false})\n            }\n            if (!props.branch.orders_prefix) {\n                props.changeVisibleState({inputBranchPrefixChecked: false})\n            }\n            if (!props.branch.documents_prefix) {\n                props.changeVisibleState({inputBranchPrefixDocChecked: false})\n            }\n        }\n    }\n\n    const handleSaveBranch = () => {\n        if (\n            props.branch.name &&\n            props.branch.orders_prefix &&\n            props.branch.documents_prefix\n        ) {\n            props.saveBranch()\n        } else {\n            if (!props.branch.name) {\n                props.changeVisibleState({inputBranchNameChecked: false})\n            }\n            if (!props.branch.orders_prefix) {\n                props.changeVisibleState({inputBranchPrefixChecked: false})\n            }\n            if (!props.branch.documents_prefix) {\n                props.changeVisibleState({inputBranchPrefixDocChecked: false})\n            }\n        }\n    }\n    const handleRecover = () => {\n        if (props.permissions.includes('setting_recover_branch'))\n            props.deleteBranch(false)\n    }\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {props.branch.edit ? props.branch.name : ' Новая локация'}\n                </div>\n\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Название\"\n                    onChange={event => props.changeBranchState({name: event.target.value})}\n                    value={props.branch.name}\n                    checkedFlag=\"inputBranchNameChecked\"\n                    checked={props.view.inputBranchNameChecked}\n                    redStar={true}\n                    disabled={props.branch.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Адрес\"\n                    onChange={event => props.changeBranchState({address: event.target.value})}\n                    value={props.branch.address}\n                    disabled={props.branch.deleted}\n                />\n                <LableInput\n                    className='textInput w250'\n                    title='Телефон'\n                    onChange={value => props.changeBranchState({phone: value})}\n                    value={props.branch.phone}\n                    disabled={props.branch.deleted}\n                    isPhone={true}\n                />\n                <Schedule/>\n                <ChooseIcon/>\n                <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n                <ChooseOfList\n                    id={18}\n                    list={props.order_type}\n                    setElement={orders_type_id => props.changeBranchState({orders_type_id})}\n                    current_id={props.branch.orders_type_id}\n                    width={'250px'}\n                    disabled={props.branch.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Шаблон номера заказа\"\n                    onChange={event => props.changeBranchState({orders_prefix: event.target.value})}\n                    value={props.branch.orders_prefix}\n                    checkedFlag=\"inputBranchPrefixChecked\"\n                    checked={props.view.inputBranchPrefixChecked}\n                    redStar={true}\n                    disabled={props.branch.deleted}\n                />\n                <p className=\"mt0\">\n                    Пример:{' '}\n                    {`${props.branch.orders_prefix}-${\n                        props.counters.find((count) => count.id === 1).count\n                    }`}\n                </p>\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Шаблон номера документов\"\n                    onChange={event => props.changeBranchState({documents_prefix: event.target.value})}\n                    value={props.branch.documents_prefix}\n                    checkedFlag=\"inputBranchPrefixDocChecked\"\n                    checked={props.view.inputBranchPrefixDocChecked}\n                    redStar={true}\n                    disabled={props.branch.deleted}\n                />\n                <p className=\"mt0\">\n                    Пример:{' '}\n                    {`${props.branch.documents_prefix}-${\n                        props.counters.find((count) => count.id === 2).count\n                    }`}\n                </p>\n                <ChooseEmployees/>\n\n                <BottomButtons\n                    edit={props.branch.edit}\n                    create={handleCreateBranch}\n                    save={handleSaveBranch}\n                    recover={handleRecover}\n                    delete={() => props.deleteBranch(true)}\n                    close={handleClose}\n                    deleted={props.branch.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    branch: state.branch,\n    view: state.view,\n    order_type: state.data.order_type,\n    counters: state.data.counters,\n    permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    changeBranchState,\n    createBranch,\n    saveBranch,\n    deleteBranch,\n    resetBranch\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {showPhone} from '../../../general/utils'\nimport {editBranch} from '../../../../Redux/actions/branchAction'\nimport {changeVisibleState} from '../../../../Redux/actions'\n\nimport Icon from '../../../general/Icon'\n\n\nconst TableBranches = (props) => {\n\n    const handleEdit = (branch) => {\n        props.editBranch(branch)\n        props.changeVisibleState({statusBranchEditor: true})\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th></th>\n                <th>Название локации</th>\n                <th>Адрес</th>\n                <th>Телефон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.branches.map(branch => {\n                return (\n                    <tr\n                        key={branch.id}\n                        className={branch.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(branch)}\n                    >\n                        <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                        <td>{branch.name}</td>\n                        <td>{branch.address}</td>\n                        <td>{showPhone(branch.phone)}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    branches: state.branch.branches,\n    showDeleted: state.branch.showDeleted\n})\n\nconst mapDispatchToProps = {\n    editBranch,\n    changeVisibleState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {changeVisibleState, addCounters} from '../../../../Redux/actions'\nimport {addBranches, changeBranchState} from '../../../../Redux/actions/branchAction'\n\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n    useEffect(() => {\n        props.addCounters()\n    }, [])\n\n    useEffect(() => {\n        props.addBranches()\n    }, [props.showDeleted])\n\n    const addBranch = () => {\n        props.changeVisibleState({statusBranchEditor: true})\n        props.changeBranchState({\n            employees: props.employees.filter(employee => !employee.deleted && employee.id !== 0).map(employee => employee.id)\n        })\n    }\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Локации</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n                <div className='row'>\n                    <div\n                        className='greenButton'\n                        onClick={addBranch}\n                    >\n                        + Добавить локацию\n                    </div>\n                    {props.permissions.includes('setting_see_branch') ? <Checkbox\n                        className='ml10'\n                        label='Показать удаленные'\n                        onChange={event => props.changeBranchState({showDeleted: event.target.checked})}\n                        checked={props.showDeleted}\n                    /> : null}\n                </div>\n\n                <TableBranches/>\n\n                {props.statusBranchEditor ? <BranchEditor/> : null}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusBranchEditor: state.view.statusBranchEditor,\n    showDeleted: state.branch.showDeleted,\n    permissions: state.data.user.role.permissions,\n    employees: state.employee.employees\n})\n\nconst mapDispatchToProps = {\n    changeVisibleState,\n    addCounters,\n    changeBranchState,\n    addBranches\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                invisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                invisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.branch.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\nimport {editEmployee} from '../../../../Redux/actions/employeeAction'\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmployee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmployee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={idx => props.changeWarehouseForm(idx, 'tabs')}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.employee.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        invisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        invisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос событий не выполнен'))\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос событий не выполнен'))\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос событий не выполнен'))\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос событий не выполнен'))\n\n    }\n}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            invisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        invisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    invisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос шаблонов не выполнен'))\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос шаблонов не выполнен'))\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос шаблонов не выполнен'))\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(error => bad_request(dispatch, error, 'Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.message)\n                }\n            })\n            .catch(error => bad_request(dispatch, error, 'Запрос шиблонов не выполнен'))\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    invisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    invisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={idx => props.changeNotEventForm(idx, 'tabs')}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          invisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                invisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  classNameMenu='listOption'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.invisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            invisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.branch.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                invisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.branch.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments} from '../../../../Redux/actions'\nimport {changeBookState} from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n    useEffect(() => {\n        props.addEquipment()\n        props.addDictMalfunction()\n        props.addDictPackagelist()\n        props.addItemPayments()\n    }, [])\n\n    const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Справочники</span>\n            </div>\n            <div className='settingPageBody'>\n            </div>\n\n            <Tabs\n                list={tabs_list}\n                func={idx => props.changeBookState({tabs: idx})}\n                tab={props.tabs}\n            />\n            {props.tabs === 0 ? <BookEquipment/> : null}\n            {props.tabs === 1 ? <MalfunctionBooks/> : null}\n            {props.tabs === 2 ? <PackagelistBook/> : null}\n            {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n    changeBookState,\n    addEquipment,\n    addDictMalfunction,\n    addDictPackagelist,\n    addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          invisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          invisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","export const data_user_menu = [\n    {\n        id: 1,\n        title: 'Профиль',\n        url: '/user/profile',\n        group_name: 'user_setting',\n        permission_key: 'user_setting'\n    },{\n        id: 2,\n        title: 'Настройки',\n        url: '/user/personality',\n        group_name: 'user_setting',\n        permission_key: 'user_setting'\n    },{\n        id: 3,\n        title: 'Выход',\n        url: '/user/logout',\n        group_name: 'user_setting',\n        permission_key: 'user_setting'\n    }\n]","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport SettingRow from '../../Settings/settingRow'\nimport {data_user_menu} from '../../../data/dataUserMenu'\n\nconst UserSettingMenu = (props) => {\n    return (\n        <div className = 'settingMenuMain'>\n                {data_user_menu.map(row => <SettingRow row = {row} key = {row.id}/>)}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSettingMenu)","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst RangeSlider = (props) => {\n\n    return (\n        <div className={`${props.className} rangebox`}>\n            <input\n                type=\"range\"\n                className=\"participants\"\n                min=\"0\"\n                max=\"100\"\n                value={props.value}\n                onChange={event => props.onChange(event.target.value)}\n                disabled={props.disabled}\n            />\n            <span\n                className=\"rangeslider\"\n                style={{\n                    top: '-8px',\n                    left: `${props.value - 0.15*props.value}%`,\n                    display: props.disabled ? 'none': 'flex'\n                }}\n            >\n                {props.value}\n            </span>\n            <div className='rangeline'/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RangeSlider)","import React, {useEffect, useMemo, useRef, useState} from 'react'\nimport { connect } from 'react-redux'\nimport Compress from 'react-image-file-resizer'\n\nimport {changeEmployeeState, saveAvatar} from '../../../Redux/actions/employeeAction'\nimport Button from '../../general/Button'\nimport RangeSlider from './RangeSlider'\n\nconst ChangeAvatar = (props) => {\n\n    const [avaPosition, setAvaPosition] = useState([0, 0])\n    const [originalSize, setOriginalSize] = useState()\n    const img = useRef(null)\n\n    const mouseMove = event => {\n        const start = props.employee.avaStartPosition\n        const deltaX = event.pageX - start[0]\n        const deltaY = event.pageY - start[1]\n        setAvaPosition([avaPosition[0] + deltaX, avaPosition[1] + deltaY])\n    }\n\n    const mouseUp = () => {\n        window.removeEventListener('mousemove', mouseMove)\n        window.removeEventListener('mouseup', mouseUp)\n    }\n\n    const fileHandlerResize = file => {\n        if (file) {\n            Compress.imageFileResizer(\n                file,\n                1000,\n                1000,\n                \"JPEG\",\n                100,\n                0,\n                (uri) => {\n                    props.changeEmployeeState({img: uri})\n                },\n                \"base64\" // blob or base64 default base64\n            )\n        }\n    }\n\n    const fileHandler = event => {\n        if (event.target.files[0]) {\n            img.current.style.width = 'initial'\n            clear()\n            let reader = new FileReader()\n            reader.onload = function (e) {\n                props.changeEmployeeState({img: e.target.result})\n            }\n            reader.readAsDataURL(event.target.files[0])\n        }\n    }\n\n\n    const handleDragStart = event => {\n        if (props.employee.img) {\n            props.changeEmployeeState({avaStartPosition: [event.pageX, event.pageY]})\n            window.addEventListener('mousemove', mouseMove)\n            window.addEventListener('mouseup', mouseUp)\n        }\n    }\n\n    useEffect(() => {\n        if (img.current && img.current.clientWidth) {\n            setOriginalSize(img.current.clientWidth)\n        }\n    }, [props.employee.img])\n\n    useEffect(() => {\n        if (originalSize) {\n            img.current.style.width = `${props.employee.scale_img / 100 * originalSize}px`\n        }\n    }, [props.employee.scale_img])\n\n    const clear = () => {\n        props.changeEmployeeState({img: '', avatar: ''})\n        setAvaPosition([0, 0])\n        props.changeEmployeeState({scale_img: 100})\n    }\n\n    const save = () => {\n        if (props.employee.img) {\n            props.saveAvatar({\n                avaPosition,\n                size: [img.current ? img.current.clientWidth: 0, img.current ? img.current.clientHeight: 0]\n            })\n        }\n    }\n\n    return (\n\n        <div className={`${props.className} boxAvatar`}>\n            <div className='lableImput'>Изменить аватар</div>\n            <div>{`Size: ${img.current ? img.current.clientWidth: 0}x${img.current ? img.current.clientHeight: 0}`}</div>\n            <div className='borderMask'>\n                <div className='mask'\n                     draggable={false}\n                     onMouseDown={handleDragStart}\n                />\n                <img\n                    style={{\n                        left: avaPosition[0],\n                        top: avaPosition[1],\n                    }}\n                    src={props.employee.img || `${process.env.REACT_APP_LOCAL_SOURCE}/${props.employee.avatar}`}\n                    ref={img}\n                    className='editAvaImg'\n                />\n            </div>\n\n            <RangeSlider\n                className='mt15'\n                onChange={value => props.changeEmployeeState({scale_img: value})}\n                value={props.employee.scale_img}\n                disabled={!props.employee.img }\n            />\n\n            <div className='row mt15'>\n\n                <label className=\"labelAva\"> Загрузить\n                    <input\n                        className='addAva'\n                        type='file'\n                        accept=\".jpg,.jpeg\"\n                        onChange={fileHandler}\n                        disabled={props.disabled}\n                    />\n                </label>\n                <Button\n                    className='greenButton bcr ml15'\n                    title='Очистить'\n                    onClick={clear}\n                />\n                <Button\n                    className='blueButton '\n                    title='Сохранить'\n                    onClick={save}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employee: state.employee\n})\n\nconst mapDispatchToProps = {\n    changeEmployeeState,\n    saveAvatar\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeAvatar)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeEmployeeState, editEmployee, saveEditEmployee} from '../../../Redux/actions/employeeAction'\nimport ChangeAvatar from './ChangeAvatar'\nimport LableInput from '../../general/LableInput'\nimport Button from '../../general/Button'\n\nconst UserProfile = (props) => {\n\n    useEffect(() => {\n        if (Object.values(props.user).length) props.editEmployee(props.user)\n    }, [props.user])\n\n    const handleSave = () => {\n        if (props.employee.first_name && props.employee.email) {\n            props.saveEditEmployee()\n        } else {\n            if (!props.employee.first_name) {\n                props.changeVisibleState({inputEmployeeNameChecked: false})\n            }\n            if (!props.employee.email) {\n                props.changeVisibleState({inputEmployeeEmailChecked: false})\n            }\n        }\n    }\n\n    return (\n        <div className='settingContent jc-c df'>\n            <div className='profbox'>\n                <ChangeAvatar className='ml15 mt15'/>\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Имя\"\n                    onChange={event => props.changeEmployeeState({first_name: event.target.value})}\n                    value={props.employee.first_name}\n                    checkedFlag=\"inputEmployeeNameChecked\"\n                    checked={props.view.inputEmployeeNameChecked}\n                    redStar={ true }\n                    disabled={props.employee.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Фамилия\"\n                    onChange={event => props.changeEmployeeState({last_name: event.target.value})}\n                    value={props.employee.last_name}\n                    disabled={props.employee.deleted}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"email\"\n                    onChange={event => props.changeEmployeeState({email: event.target.value})}\n                    value={props.employee.email}\n                    checkedFlag=\"inputEmployeeEmailChecked\"\n                    checked={props.view.inputEmployeeEmailChecked}\n                    redStar={ true }\n                    disabled={props.employee.deleted}\n                />\n                {props.view.errorSameMail ? (\n                    <div className=\"errorMassageInput\">Такой email уже существует</div>\n                ) : null}\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"Телефон\"\n                    onChange={value => props.changeEmployeeState({phone: value})}\n                    value={props.employee.phone}\n                    disabled={props.employee.deleted}\n                    isPhone={true}\n                />\n                <LableInput\n                    className=\"w250 mt15\"\n                    title=\"ИНН\"\n                    onChange={event => props.changeEmployeeState({inn: event.target.value})}\n                    value={props.employee.inn}\n                    disabled={props.employee.deleted}\n                />\n                <Button\n                    className='blueButton mt15 m0'\n                    title='Сохранить'\n                    onClick={handleSave}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employee: state.employee,\n    view: state.view,\n    user: state.data.user\n})\n\nconst mapDispatchToProps = {\n    changeEmployeeState,\n    editEmployee,\n    saveEditEmployee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport {logout} from '../../../Redux/actions/employeeAction'\nimport {changeDataState} from '../../../Redux/actions/dataAction'\n\nconst Logout = (props) => {\n\n    useEffect(() => {\n        props.logout()\n        props.changeDataState({login_status: false})\n        props.history.push('/')\n    })\n\n    return (\n        <div className = 'tempPage'>\n            <div className = 'tempContainer'>\n                <h1 className = 'tempTitle'>Выход</h1>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n    logout,\n    changeDataState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {Redirect, Route, Switch} from 'react-router-dom'\n\nimport UserSettingMenu from './UserSettingMenu'\nimport UserProfile from './UserProfile'\nimport Logout from './Logout'\n\n\nconst UserSetting = (props) => {\n    return (\n        <div className='settingPage'>\n            <UserSettingMenu/>\n            <Switch>\n                <Route path = '/user/profile' component = {UserProfile}/>\n                <Route path = '/user/logout' component = {Logout}/>\n                <Redirect from='/user' to='/user/profile'/>\n            </Switch>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSetting)","import React from 'react'\nimport {icon_checkmarker, icon_cross, icon_warning} from '../../data/icons'\nimport Icon from '../general/Icon'\n\nconst Alert = (props) => {\n\n    let icon, color\n    if (props.type === 'alert-success') {\n        icon = icon_checkmarker\n        color = '#155724'\n    }\n    if (props.type === 'alert-warning') {\n        icon = icon_warning\n        color = '#856404'\n    }\n    if (props.type === 'alert-danger') {\n        icon = icon_cross\n        color = '#721c24'\n    }\n\n    return (\n        <div className={`alert ${props.type}`}>\n            <Icon icon={icon} color={color} className='icon-s2 mr5'/>\n            <div>{props.text}</div>\n        </div>\n    )\n}\n\nexport default Alert","import React from 'react'\nimport { connect } from 'react-redux'\nimport Alert from './Alert'\n\nconst Alerts = (props) => {\n    return (\n        <div className='alertAria'>\n            {props.alerts.length ? props.alerts.map(alert =>(\n                <Alert text={alert.text} type={alert.type} key={alert.id}/>\n            )) : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.data.alerts\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Alerts)","import React, {useEffect} from 'react';\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux';\n\n\nimport {addMainData, addStatus, addData} from '../Redux/actions'\nimport {addEmployees} from '../Redux/actions/employeeAction'\nimport {changeBranchState} from '../Redux/actions/branchAction'\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\nimport OrderEditor from './orders/newOrder/OrderEditor'\nimport UserSetting from './sidebar/userSettings/UserSetting'\nimport Alerts from './Alerts/Alerts'\n\n\nfunction Main(props) {\n\n    useEffect(() => {\n        props.addMainData()\n        props.addStatus()\n    }, [])\n\n    useEffect(() => {\n        props.changeBranchState({\n            current_branch: props.branches.filter(branch => branch.employees.includes(props.user_id))[0] || {}\n        })\n    }, [props.branches])\n\n\n    return (\n        <div>\n            <Sidebar/>\n            <div className='contentMain'>\n                <Alerts/>\n                <Switch>\n                    <Route path='/tasks' component={TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path='/orders' component={Orders}/>\n                    <Route path='/shops' component={Shops}/>\n                    <Route path='/payments' component={Payments}/>\n                    <Route path='/wherehouse' component={Wherehouse}/>\n                    <Route path='/clients' component={Clients}/>\n                    <Route path='/analytics' component={Analytics}/>\n                    <Route path='/reports' component={Reports}/>\n                    <Route path='/telephony' component={Telephony}/>\n                    <Route path='/settings' component={Settings}/>\n                    <Route path='/user' component={UserSetting}/>\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n            <Switch>\n                <Route\n                    exact path=\"/orders/:id\"\n                    // loadData={() => props.getOrder(id)}\n                    component={OrderEditor}\n                />\n            </Switch>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.branch.branches\n})\n\nconst mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData,\n    changeBranchState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport { log_in} from '../Redux/actions'\nimport {changeDataState} from '../Redux/actions/dataAction'\n\nfunction Login(props) {\n\n\n    const handleClick = ({target: {form}}) => {\n        props.log_in(form.login.value, form.password.value)\n    }\n\n\n    return (\n        <div className=\"mainLoginContaner\">\n            <div className=\"loginContanier\">\n                <h2>Войдите в аккаунт</h2>\n                {props.error_message ? (<span className=\"errorMessageLogin\">{props.error_message}</span>) : null}\n                <form id=\"loginForm\">\n                    <div>\n                        <label className=\"loginFormLable\">Логин или Email</label>\n                        <input\n                            id=\"login\"\n                            className=\"loginFormInput\"\n                            type=\"text\"\n                            onKeyPress={event => {\n                                if (event.key === 'Enter') handleClick(event)\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <label className=\"loginFormLable\">Пароль</label>\n                        <input\n                            id=\"password\"\n                            className=\"loginFormInput\"\n                            type=\"password\"\n                            onKeyPress={event => {\n                                if (event.key === 'Enter') handleClick(event)\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n                            Авторизоваться\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    serverUrl: state.data.url_server,\n    error_message: state.data.error_message,\n    csrfToken: state.data.csrfToken\n})\n\nconst mapDispatchToProps = {\n    log_in,\n    changeDataState\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React from 'react'\nimport Button from './Button'\n\n\nconst RefreshPage = (props) => {\n\n    const refreshPage = () =>{\n        window.location.reload()\n    }\n\n    return (\n        <div className='centerBlockFix'>\n            <div className='blockWindowFix wmx750 wmn750 al-itm-ct'>\n                <div className='createNewTitle'>Время сесси истекло, перезагрузите страницу</div>\n                <div className='jc-c m30'>\n                    <Button\n                        className='greenButton'\n                        title='Перезагрузить'\n                        onClick={refreshPage}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RefreshPage","import React, {useEffect} from \"react\";\nimport Main from './components/Main'\nimport {connect} from \"react-redux\";\n\n\nimport Login from './components/Login'\nimport {addMainData, csrf} from './Redux/actions'\nimport {changeDataState} from './Redux/actions/dataAction'\nimport RefreshPage from './components/general/RefreshPage'\n\n\nfunction App(props) {\n\n\n    useEffect(() => props.csrf(), [])\n    // props.csrf()\n\n\n    useEffect(() => {\n        if (props.login_status && props.csrfToken) props.addMainData()\n    }, [props.login_status])\n\n    return (\n        <div>\n            {Object.values(props.user).length && props.login_status && props.csrfToken ? <Main/> : null}\n            {props.login_status ? null : <Login/>}\n            {props.statusRefreshPage ? <RefreshPage/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    login_status: state.data.login_status,\n    user: state.data.user,\n    url_server: state.data.url_server,\n    csrfToken: state.data.csrfToken,\n    statusRefreshPage: state.view.statusRefreshPage\n})\n\nconst mapDispatchToProps = {\n    addMainData,\n    changeDataState,\n    csrf\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}