{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/LogoUser.js","components/Loader/Loader.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/actionUtils.js","Redux/actions/orderActions.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/Brand.js","components/orders/cell/KindOfGood.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","components/general/BottomButtons.js","components/orders/newOrder/TitleOrderEditor.js","components/general/Tabs.js","components/general/ChooseOfList.js","components/orders/newOrder/AssingEmployee.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/LableInput.js","components/general/ChooseBotton.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/Clients/ClientEditor/ClientEditor.js","components/orders/newOrder/ClientCard.js","components/general/InputPhone.js","components/orders/newOrder/SetClient.js","components/orders/newOrder/SetTypeOrder.js","components/orders/newOrder/LabelInputOrder.js","Redux/actions/bookActions.js","components/orders/newOrder/SetOrderBrand.js","components/orders/newOrder/SetOrderGroup.js","components/orders/newOrder/SetOrderModel.js","components/orders/newOrder/SetOrderSubtype.js","components/orders/newOrder/ChooseEquipment.js","components/orders/newOrder/ChooseSingleEquipment.js","components/general/ChooseDate.js","components/orders/newOrder/TypeForm1.js","components/orders/newOrder/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/OperationEditor.js","components/orders/newOrder/SetWorkMatireals.js","components/orders/newOrder/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/CellEditor.js","components/orders/newOrder/SetCell.js","components/orders/newOrder/OrderWorksMaterials.js","components/general/Button.js","components/orders/newOrder/TableOrderPaymants.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/OrderPayments.js","components/orders/newOrder/OrderEditor.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/setCustomFilter/SetBrand.js","components/orders/setCustomFilter/SetClient.js","components/orders/setCustomFilter/SetDataCreate.js","components/orders/setCustomFilter/SetEngeneer.js","components/orders/setCustomFilter/SetGroup.js","components/orders/setCustomFilter/SetManager.js","components/orders/setCustomFilter/SetSubtype.js","components/orders/setCustomFilter/SetStatus.js","components/orders/setCustomFilter/SetTypeOrders.js","components/orders/CreateNewFilter.js","components/orders/setCustomFilter/SetFilter.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","components/general/Checkbox.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","components/Wherehouse/Wherehouse.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","components/Settings/SettingPages/SettingAlerts.js","components/general/TableFields.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/general/AddPicture.js","components/general/ChooseOfListMany.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","initialState","ordersShow","count","clientShow","count_clients","menuRows","id","title","image","url","group_name","active","permission_keys","map","per","settingMenu","permission_key","payments","employees","user","status","status_group","badges","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","branches","cashboxes","payrules","payrolls","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","current_branch","token","login_status","url_server","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","errorSameMail","errorSameLogin","order_type_id","customFilters","mainFilter","sort","field_sort","page","tempFilter","status_id","engineer_id","manager_id","kindof_good","brand","subtype","model","client_name","created_at","clientFilter","name","phone","search_word","title_create","generale_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","tabs","showDeleted","role_title","first_name","last_name","email","notes","login","password","role_id","permissions","inn","doc_name","post","deleted","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","operations","parts","attachments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","overdue","status_overdue","urgent","warranty_measures","equipments","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","logo","icon_trush","icon_close","icon_location","icon_warning","icon_clock","icon_table","icon_pencil","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_id","cashbox_id","client_id","employee_id","order_id","target_cashbox_id","cashbox","employee","order","filter_created_at","Math","round","filter_tags","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","field","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","warranty_period","dict_id","percent","discount","reimburse","relation_type","setted_employee","month_balance","rootReducer","combineReducers","data","state","action","rows","row","a","b","view","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","filters","word","toString","search","includes","Number","manager","engineer","replace","range","Object","assign","date","find","filter_new","role","every","val","bool","console","log","tab","equipments_list","branch","phones","statusPhones","statusTitle","tag","tags_list","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","operation","payroll","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","Accept","JSON","stringify","bad_request","massage","sessionStorage","clear","warn","changeStatusMenuVisibleAction","changeNameClientFilter","changeStatusCreateNewFilter","changePermissions","editEmoloyee","setClietnCheckbox","changeClientEditorForm","setVisibleFlag","setVisibleListFlag","resetEquipment","setOrderEquipment","changeOrderForm","addAnotherEquipment","deleteDevice","changeOrderFormS","changeBranchForm","resetBookEquipment","changeCashboxForm","changeCashboxPermissions","addData","changePaymentForm","editCurrentClient","resetPayments","changePriceForm","changeDictServiceForm","addClients","dispatch","fetch","then","response","json","success","catch","editClient","addEmployees","addEquipment","addDiscountMargin","addDictMalfunction","request_config","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addCashboxes","available","addPayments","length","addDictService","mapDispatchToProps","changeStatusMenuRow","connect","props","className","to","style","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","LogoUser","src","alt","Loader","Icon","viewBox","user_id","useState","menuVisibel","setMenuVisibel","generally_menu","some","key","report_menu","setting_menu","changeFilter","placeholder","onChange","event","preventDefault","target","activeBadge","img","badge","getEmploeeName","toLocaleString","year","month","day","hour","minute","datestamp","statusGroop","deltaMinut","abs","deltaHour","deltaDay","getDateEstimated","changeSort","minWidth","width","addOrders","changeStatusMenuVisible","changeStatus","request_config1","request_config2","refreshDataOrder","groupName","groupIdx","orderId","clichHandel","path","el","useEffect","window","addEventListener","removeEventListener","optionsShowDate","showPhone","slice","check0_100","isNaN","check0_999","showName","showDate","currentMonth","today","start_date","setDate","setHours","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","iconBr","iconB","iconC","Tabs","func","tab_field","listVisible","setListVisible","clickHandel","current","element","current_id","unvisible","checkedFlag","disabled","checked","borderColor","errorMassage","setElement","handleClickChecked","handleClick","list_managers","list_ingineers","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","redStar","unit","onBlur","ChooseBotton","stateButton","setStateButton","func1","func2","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","mask","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","resetDataClient","createNewClient","changeClientTabs","saveChangeClient","deleteClient","flag","ph","forEach","changePhoneClientFilter","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","setlistVisible","changeBookForm","addEquipmentType","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","types","useMemo","setOrderType","createEquipmentModel","setModel","cteateEquipmentSubtype","setSubtype","SetOrderGroup","ChooseDate","current_date","setCurrent_day","visibleListMonth","setVisibleListMonth","visibleInputYear","setVisibleInputYear","visibleCalendar","setVisibleCalendar","months","first","setTime","getTime","getDay","current_days","setMonth","getMonth","out","setFullYear","handleInputYear","getFullYear","onDoubleClick","date1","date2","getDate","getHours","getMinutes","setMinutes","registerLocale","ru","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","handleClose","createOperation","service_id","discount_margin_id","filterWorks","setFileterWorks","servises","toLowerCase","velue","handelCreateOperation","editOperation","part","colSpan","cells","height","current_user_id","current_engineer_id","Button","showList","setShowList","disc","parseFloat","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","item","request_config_2","current_branch_id","chooseData","setChooseData","chooseForm","setChooseForm","selected","isClearable","placeholderText","dateFormat","locale","maxDate","showTimeSelect","deleteCashbox","createOrder","resetOrder","saveOrder","initStatusMenuVisible","list_id","editOrder","statusVis","table_headers","header","appCustomFilter","changeBrandListFilter","changeBrandMainFilter","list_brand","equip","Set","listOfBrand","changeClientListFilter","changeClientMainFilter","changeCreateAtMainFilter","selectsRange","startDate","endDate","update","changeEngineerListFilter","changeCheckEngineer","setAllEngineerTrue","setAllEngineerFalse","changeGroupListFilter","changeGroupMainFilter","changeManagerListFilter","changeCheckManager","setAllManagerTrue","setAllManagerFalse","changeSubtypeListFilter","changeSubtypeMainFilter","list_subtype","listOfSubtype","changeStausListFilter","changeCheckStatus","setAllStatusFalse","setAllStatusTrue","count_status","changeTypeListFilter","changeCheckType","setAllTypeTrue","setAllTypeFalse","changeTitleCreate","changeGeneraleCreate","addCustomFilter","general","appFilter","resetFilter","saveCustomFilter","idActiveFilter","removeFilter","SetGroup","SetEngeneer","changeSetStatusFilter","display","changePage","addBagges","addStatusGroup","addCustomFilters","addAdCampaign","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","fetchOrders","Checkbox","label","activeCashbox","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","text","changeEmployeeSelected","perm","setPerm","chooseCashboxSelected","createCashbox","seveEditCashbox","list_per","setPayment","setShowDeleted","deletePayment","changePayrollForm","addPayrolls","editPayroll","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","type_payrolls","income_sum","outcome_sum","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","changeStatusSettingRow","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","changeEmployeEditorForm","changeEmployeeEditorRoleOptions","setRoleEmployeeEdetor","changeEmployeeTabs","createEmployee","seveEditEmployee","deleteEmployee","addPayrules","mainCheckbox","useRef","indeterminate","ref","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","changeShowDeleted","resetEmoloyee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","editBranch","addCounters","TableFields","checked_list","minHeight","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableFields","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","AddPicture","class","ChooseOfListMany","len","showWord","mainLable","setIcons","chooseEquipmentBranches","createBookEquipment","seveEditEquipment","deleteEquipment","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","setShowDeteled","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","chooseBookSelected","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","addStatus","addMainData","counts","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","loguot","addUser","log_in","setItem","access_token","serverUrl","errorMessage","useHistory","form","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"6QAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,gBACPC,YAAa,4LACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,wMAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,6JACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,aACPC,YAAa,sJACd,CACCD,MAAO,wBACPC,YAAa,mNACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAAO,uBACPC,YAAa,8JACd,CACCD,MAAO,qBACPC,YAAa,sLACd,CACCD,MAAO,6BACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,wHACd,CACCD,MAAO,gCACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,2DAINU,EAAa,CACvB,CACGA,WAlgBoB,CACvB,CACGX,MAAO,UACPC,YAAa,8OACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,4LACd,CACCD,MAAO,uBACPC,YAAa,iJACd,CACCD,MAAO,oBACPC,YAAa,sOACd,CACCD,MAAO,aACPC,YAAa,yKACd,CACCD,MAAO,mBACPC,YAAa,sOACd,CACCD,MAAO,oBACPC,YAAa,kPACd,CACCD,MAAO,WACPC,YAAa,mGACd,CACCD,MAAO,YACPC,YAAa,0KAqebA,YAAa,kCACd,CACCU,WAAYZ,EACZE,YAAa,wCACd,CACCU,WAAYT,EACZD,YAAa,0DACd,CACCU,WAAYR,EACZF,YAAa,wCACd,CACCU,WAAYP,EACZH,YAAa,8CACd,CACCU,WAAYN,EACZJ,YAAa,8CAC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","file":"static/js/main.9198fbaf.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_equipment', // не реализовано\n      description: 'Может видеть информацию об изделии'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', // не реализовано\n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'create_new_goods', // не реализовано\n      description: 'Может создавать новые товары'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'edit_goods', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'edit_goods_categories', // не реализовано\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'delete_goods', // не реализовано\n      description: 'Может удалять товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n","import { data_setting_menu } from '../../data/dataSettingRows'\nimport { data_menu_rows } from '../../data/dataSidebarRows'\n\nconst initialState = {\n  ordersShow: [],\n  count: 0,\n  clientShow: [],\n  count_clients: 0,\n  menuRows: data_menu_rows,\n  settingMenu: data_setting_menu,\n  payments: [],\n\n  employees: [],\n  // user: JSON.parse(sessionStorage.getItem('user')) || {},\n  user: {},\n  status: [],\n  status_group: [],\n  badges: [],\n  order_type: [],\n  equipment: [],\n  discount_margin: [],\n  roles: [],\n  ad_campaign: [],\n  generally_info: {},\n  branches: [],\n  cashboxes: [],\n  payrules: [],\n  payrolls: [],\n  group_dict_service: [],\n  dict_service: [],\n  service_prices: [],\n\n  counters: [],\n  dictMalfunction: [],\n  count_malfunction: 0,\n  dictPackagelist: [],\n  count_packagelist: 0,\n  item_payments: [],\n  count_item_payments: 0,\n  equipment_types: [],\n  equipment_type_count: 0,\n  equipment_brands: [],\n  equipment_brand_count: 0,\n  equipment_subtypes: [],\n  equipment_subtype_count: 0,\n  equipment_models: [],\n  equipment_models_count: 0,\n \n\n  current_branch: {},\n\n  // token: sessionStorage.getItem('1xsndt') || '',\n  token: '',\n  login_status: false,\n  // url_server: 'http://192.168.1.48:80' // Домашний\n  // url_server: 'http://192.168.43.224:5005' // Мобильный\n  // url_server: 'http://172.16.6.218:5005' // КЕХУ\n  // url_server: 'http://192.168.1.49:5005' // рабочий WiFI\n  url_server: 'http://5.53.124.252:80'\n  // url_server: 'http://onetwonline.ru'\n  \n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n  switch (action.type) {\n\n    case 'LOGIN': {\n      return {\n         ...state, \n         token: action.token\n        }}\n\n    case 'LOGUOT': {\n      return {\n         ...state, \n         token: '',\n         login_status: false \n        }}\n\n    case 'ADD_MENU_ROWS': {\n      return {\n         ...state, \n         menuRows: action.rows,\n        }}\n\n    case 'ADD_STATUS': {\n      return {\n         ...state, \n         status: action.status,\n        }}\n\n    case 'ADD_STATUS_GROUP': {\n      return {\n          ...state, \n          status_group: action.status_group,\n        }}\n    \n    case 'ADD_ORDERS_SHOW': {\n      return {\n         ...state, \n         ordersShow: action.ordersShow,\n         count: action.count\n        }}\n\n    case 'ADD_CLIENTS_SHOW': {\n      return {\n          ...state, \n          clientShow: action.clientShow,\n          count_clients: action.count\n        }}\n    \n    case 'ADD_EMPLOYEES': {\n      return {\n         ...state, \n         employees: action.employees,\n        }}\n\n    case 'ADD_USER': {\n      return {\n         ...state, \n         user: action.user,\n         login_status: true \n        }}\n\n    case 'ADD_BADGES': {\n      return {\n          ...state, \n          badges: action.badges\n      }}\n\n\n    case 'ADD_EQUIPMENT': {\n      return {\n        ...state,\n        equipment: action.equipment\n      }}\n\n    case 'CHANGE_STATUS_MENU_ROW': {\n      return {\n      ...state,\n      menuRows: state.menuRows.map(row => {\n        return {\n          ...row,\n          active: row.id === action.id ? true : false\n        }})}} \n\n    \n    case 'ADD_SETTING_MENU': {\n    return {\n        ...state, \n        settingMenu: action.rows.sort((a, b) => a.id - b.id),\n      }}\n      \n    case 'CHANGE_STATUS_SETTING_ROW': {\n      return {\n        ...state,\n        settingMenu: state.settingMenu.map(row => {\n          return {\n            ...row,\n            active: row.id === action.id ? true : false\n          }})}} \n\n\n\n    case 'ADD_ROLES': {\n      return {\n          ...state, \n          roles: action.roles,\n        }}\n\n    case 'ADD_AD_CAMPAIGN': {\n      return {\n          ...state, \n          ad_campaign: action.ad_campaign,\n        }\n      }\n\n        \n    case 'ADD_DATA': {\n      return {\n          ...state, \n          [action.field]: action.data,\n        }\n      }\n\n        case 'ACTIVE_CASHBOX': {\n          return {\n              ...state, \n              cashboxes: state.cashboxes.map(cashbox => {\n                cashbox.active = cashbox.id === action.id ? true : false\n                return cashbox\n              }),\n            }\n          }\n\n    default:\n      return state\n  }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    active: false,\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: [true],\n   checkedOrderKindofGood: [true],\n   checkedOrderBrand: [true],\n   checkedOrderSubtype: [true],\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n      \n      case 'CHANGE_STATUS_SET_STATUS_FILTER': {\n         return {\n            ...state, \n            statusSetCustomFilter: !state.statusSetCustomFilter,\n         }\n      }\n\n      case 'CHANGE_STATUS_LIST_FILTER': {\n         return {\n            ...state, \n            stausListFilter: !state.stausListFilter,\n         }\n      }\n      \n      case 'CHANGE_TYPE_LIST_FILTER': {\n         return {\n            ...state, \n            typeListFilter: !state.typeListFilter,\n         }\n      }\n\n      case 'CHANGE_MANAGER_LIST_FILTER': {\n         return {\n            ...state, \n            managerListFilter: !state.managerListFilter,\n         }\n      }\n\n      case 'CHANGE_ENGINEER_LIST_FILTER': {\n         return {\n            ...state, \n            engineerListFilter: !state.engineerListFilter,\n         }\n      }\n\n      case 'CHANGE_GROUP_LIST_FILTER': {\n         return {\n            ...state, \n            groupListFilter: !state.groupListFilter,\n         }\n      }\n\n      case 'CHANGE_BRAND_LIST_FILTER': {\n         return {\n            ...state, \n            brandListFilter: !state.brandListFilter,\n         }\n      }\n\n      case 'CHANGE_SUBTYPE_LIST_FILTER': {\n         return {\n            ...state, \n            subtypeListFilter: !state.subtypeListFilter,\n         }\n      }\n\n      case 'CHANGE_CLIENT_LIST_FILTER': {\n         return {\n            ...state, \n            clientListFilter: !state.clientListFilter,\n         }\n      }\n\n      case 'CHANGE_STATUS_CREATE_NEW_FILTER': {\n         return {\n            ...state, \n            statusCreateNewFilter: !state.statusCreateNewFilter,\n         }\n      }\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n      \n      // case 'SET_ORDER_EQUIPMENT': {\n         \n      //    let checked_list = state[action.field]\n      //    checked_list[action.idx] = true\n\n      //    return {\n      //       ...state, \n      //       [action.field]: checked_list\n      //    }\n      // }\n\n      \n\n\n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n\n   status: [],\n   order_type_id: [],\n   employees: [],\n   customFilters: [],\n\n   mainFilter: {\n    sort: 'asc',\n    field_sort: 'id',\n    page: 0\n  },\n\n  tempFilter: {\n   status_id: [],\n   order_type_id: [],\n   engineer_id: [],\n   manager_id: [],\n   kindof_good: '',\n   brand: '',\n   subtype: '',\n   model: '',\n   client_name: '',\n   created_at: [null, null]\n },\n\n  clientFilter: {\n    page: 0,\n    name: '',\n    phone: ''\n  },\n\n  search_word: '',\n\n  title_create: '',\n  generale_create: false\n}\n\nexport const filterReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'ADD_STATUS': {\n         return {\n            ...state, \n            status: action.status.map(status => status.id),\n           }}\n\n      case 'ADD_DATA': {\n         if (action.field === 'order_type') {\n            return {\n                  ...state, \n                  order_type_id: action.data.map(type => type.id)\n            }\n         } else {\n            return state\n         }\n      }\n\n      case 'ADD_EMPLOYEES': {\n         return {\n            ...state, \n            employees: action.employees.map(employee => employee.id),\n           }}\n      \n\n      case 'ADD_ORDERS_SHOW': {\n         return {\n            ...state, \n            count: action.count\n         }}\n\n      case 'CHANGE_PAGE': {\n         return {\n            ...state, \n            mainFilter: {\n              ...state.mainFilter, \n              page: action.page\n             }}}\n      \n      case 'CHANGE_SORT': {\n         return {\n            ...state, \n            mainFilter: {\n               ...state.mainFilter, \n               sort: action.field === state.mainFilter.field_sort ? (state.mainFilter.sort === 'asc' ? 'desc' : 'asc') : state.mainFilter.sort,\n               field_sort: action.field,\n               page: 0\n               }}}\n         \n      case 'ACTIVE_BADGE': {\n         return {\n               ...state, \n               search_word: '',\n               mainFilter: {\n                  ...action.filters,\n                  page: 0,\n                  sort: 'asc',\n                  field_sort: 'id'\n               },\n               customFilters: state.customFilters.map(filter => {\n                  return {\n                     ...filter,\n                     active: false\n                  }}),\n            }}\n\n\n      case 'CANGE_FILTER': {\n\n         const word = action.word.toString()\n\n            return {\n               ...state, \n               search_word: word, \n               mainFilter: {\n               ...state.mainFilter,\n               page: 0,\n               sort: 'asc',\n               field_sort: 'id',\n               search: word,\n               }}}\n\n         \n      case 'CHANGE_CHECK_STATUS': {\n\n         if (state.tempFilter.status_id.includes(action.field)) {\n         return {\n               ...state, \n               tempFilter: {\n               ...state.tempFilter, \n               status_id: state.tempFilter.status_id.filter(status => status !== action.field)\n            }\n            }\n         } else {\n            return {\n               ...state, \n               tempFilter: {\n               ...state.tempFilter, \n               status_id: state.tempFilter.status_id.concat([ action.field ])\n            }\n            }}}\n\n\n      case 'SET_ALL_STATUS_TRUE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            status_id: state.status\n         }}}\n\n      case 'SET_ALL_STATUS_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            status_id: []\n         }}}\n\n         \n      case 'CHANGE_CHECK_TYPE': {\n\n      if (state.tempFilter.order_type_id.includes(Number(action.field))) {\n\n      return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            order_type_id: state.tempFilter.order_type_id.filter(order_type => order_type !== Number(action.field))}\n         }\n      } else {\n         return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            order_type_id: state.tempFilter.order_type_id.concat([Number(action.field)])}\n         }}}\n\n      case 'SET_ALL_TYPE_TRUE': {\n         \n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            order_type_id: state.order_type_id\n         }}}\n\n      case 'SET_ALL_TYPE_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            order_type_id: []\n         }}}\n\n            \n      case 'CHANGE_CHECK_MANAGER': {\n\n      if (state.tempFilter.manager_id.includes(action.field)) {\n\n      return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            manager_id: state.tempFilter.manager_id.filter(manager => manager !== action.field)}\n         }\n      } else {\n         return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            manager_id: state.tempFilter.manager_id.concat([action.field])}\n         }}}\n\n      case 'SET_ALL_MANAGER_TRUE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            manager_id: state.employees\n         }}}\n\n      case 'SET_ALL_MANAGER_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            manager_id: []\n         }}}\n\n      case 'CHANGE_CHECK_ENGINEER': {\n\n      if (state.tempFilter.engineer_id.includes(action.field)) {\n\n      return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            engineer_id: state.tempFilter.engineer_id.filter(engineer => engineer !== action.field)}\n         }\n      } else {\n         return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            engineer_id: state.tempFilter.engineer_id.concat([action.field])}\n         }}}\n\n      case 'SET_ALL_ENGINEER_TRUE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            engineer_id: state.employees\n         }}}\n\n      case 'SET_ALL_ENGINEER_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            engineer_id: []\n         }}}\n\n      case 'CHANGE_GROUP_MAINFILTER': {\n         return {\n            ...state,\n            tempFilter: {\n               ...state.tempFilter,\n               kindof_good: action.word\n            }}}\n\n      case 'CHANGE_BRAND_MAINFILTER': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            brand: action.word\n         }}}\n\n      case 'CHANGE_SUBTYPE_MAINFILTER': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            subtype: action.word\n         }}}\n\n\n      case 'CHANGE_CLIENT_MAINFILTER': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            client_name: action.word\n         }}}\n\n      case 'CHANGE_NAME_CLIENTFILTER': {\n      return {\n         ...state,\n         clientFilter: {\n            ...state.clientFilter,\n            name: action.word,\n            phone: ''\n         }}}\n\n         \n      case 'CHANGE_PHONE_CLIENTFILTER': {\n         return {\n            ...state,\n            clientFilter: {\n               ...state.clientFilter,\n               phone: action.word.replace(/[^0-9]/g, ''),\n               name: ''\n            }}}\n\n      case 'CHANGE_CREATE_AT_MAINFILTER': {\n         return {\n            ...state,\n            tempFilter: {\n               ...state.tempFilter,\n               created_at: action.range\n            }}}\n\n\n            \n      case 'APPLY_FILTER': {\n\n         let filter = {}\n\n         if (state.tempFilter.status_id) {\n            Object.assign(filter, {status_id: state.tempFilter.status_id})\n         }\n\n         if (state.tempFilter.order_type_id) {\n            Object.assign(filter, {order_type_id: state.tempFilter.order_type_id})\n         }\n\n         if (state.tempFilter.engineer_id) {\n            Object.assign(filter, {engineer_id: state.tempFilter.engineer_id})\n         }\n\n         if (state.tempFilter.manager_id) {\n            Object.assign(filter, {manager_id: state.tempFilter.manager_id})\n         }\n\n         if (state.tempFilter.kindof_good) {\n            Object.assign(filter, {kindof_good: state.tempFilter.kindof_good})\n         }\n\n         if (state.tempFilter.brand) {\n            Object.assign(filter, {brand: state.tempFilter.brand})\n         }\n\n         if (state.tempFilter.subtype) {\n            Object.assign(filter, {subtype: state.tempFilter.subtype})\n         }\n\n         if (state.tempFilter.client_name) {\n            Object.assign(filter, {client_name: state.tempFilter.client_name})\n         }\n\n         if (state.tempFilter.created_at[0] || state.tempFilter.created_at[1]) {\n            Object.assign(filter, {created_at: state.tempFilter.created_at.map(date => date / 1000)})\n         }\n\n\n         return {\n            ...state,\n            mainFilter: {\n               ...filter,\n               sort: 'asc',\n               field_sort: 'id',\n               page: 0\n         }}\n      }\n\n      case 'RESET_FILTER':\n         return {\n            ...state,\n            tempFilter: {\n               status_id: [],\n               order_type_id: [],\n               engineer_id: [],\n               manager_id: [],\n               kindof_good: '',\n               brand: '',\n               subtype: '',\n               model: '',\n               client_name: '',\n               created_at: [null, null]\n            }\n         }\n\n      case 'CHANGE_TITLE_CREATE':\n         return {\n            ...state,\n            title_create: action.title\n         }\n\n         \n      case 'CHANGE_GENERALE_CREATE':\n         return {\n            ...state,\n            generale_create: !state.generale_create\n         }\n\n      case 'ADD_CUSTOM_FILTERS': {\n         return {\n            ...state,\n            customFilters: action.filters.sort((a, b) => a.id - b.id),\n            title_create: '',\n            generale_create: false\n         }}\n      \n      \n      case 'APPLY_CUSTOM_FILTER': {\n\n         if (!state.customFilters.find(filter => filter.id === action.id).active) {\n\n            let filter_new = {}\n\n            if (action.filter.status_id) {\n               Object.assign(filter_new, {status_id: action.filter.status_id})\n            }\n\n            if (action.filter.order_type_id) {\n               Object.assign(filter_new, {order_type_id: action.filter.order_type_id})\n            }\n\n            if (action.filter.engineer_id) {\n               Object.assign(filter_new, {engineer_id: action.filter.engineer_id})\n            }\n\n            if (action.filter.manager_id) {\n               Object.assign(filter_new, {manager_id: action.filter.manager_id})\n            }\n\n            if (action.filter.kindof_good) {\n               Object.assign(filter_new, {kindof_good: action.filter.kindof_good})\n            }\n\n            if (action.filter.brand) {\n               Object.assign(filter_new, {brand: action.filter.brand})\n            }\n\n            if (action.filter.subtype) {\n               Object.assign(filter_new, {subtype: action.filter.subtype})\n            }\n\n            if (action.filter.client_name) {\n               Object.assign(filter_new, {client_name: action.filter.client_name})\n            }\n\n            if (action.filter.created_at[0] || action.filter.created_at[1]) {\n               Object.assign(filter_new, {created_at: action.filter.created_at.map(date => date / 1000)})\n            }\n\n            return {\n               ...state,\n               tempFilter: action.filter,\n               customFilters: state.customFilters.map(filter => {\n                  return {\n                     ...filter,\n                     active: filter.id === action.id ? true : false\n                  }}),\n               mainFilter: {\n                  ...filter_new,\n                  sort: 'asc',\n                  field_sort: 'id',\n                  page: 0\n            }}\n      } else {\n         return {\n            ...state,\n            tempFilter: {\n               status_id: [],\n               order_type_id: [],\n               engineer_id: [],\n               manager_id: [],\n               kindof_good: '',\n               brand: '',\n               subtype: '',\n               model: '',\n               client_name: '',\n               created_at: [null, null]\n            },\n            customFilters: state.customFilters.map(filter => {\n               return {\n                  ...filter,\n                  active: false\n               }}),\n            mainFilter: {\n               sort: 'asc',\n               field_sort: 'id',\n               page: 0\n         }}}}\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         }\n      }\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n  tabs: 1,\n  edit: 0,\n  showDeleted: false,\n  role_title: '',\n\n  first_name: '',\n  last_name: '',\n  email: '',\n  notes: '',\n  phone: '',\n  login: '',\n  password: '',\n  role_id: 0,\n  permissions: [],\n  inn: '',\n  doc_name: '',\n  post: '',\n  deleted: false\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_EMPLOYEE_TAB': {\n         return {\n            ...state, \n            tabs: action.tab,\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n      \n      case 'CHOOSE_EMPLOYEE_SELECTED': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n\n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            role_id: action.role\n         }\n      }\n      \n      case 'CHANGE_SHOW_DELETED': {\n         return {\n            ...state, \n            showDeleted: !state.showDeleted\n         }\n      }\n\n      \n      case 'EDIT_EMPLOYEE': {\n         return {\n            ...state, \n            edit: action.employee.id,\n            first_name: action.employee.first_name,\n            last_name: action.employee.last_name,\n            email: action.employee.email,\n            notes: action.employee.notes,\n            phone: action.employee.phone,\n            login: action.employee.login,\n            role_id: action.employee.role.id,\n            role_title: action.employee.role.title,\n            permissions: action.employee.permissions,\n            inn: action.employee.inn,\n            doc_name: action.employee.doc_name,\n            post: action.employee.post,\n            deleted: action.employee.deleted\n         }\n      }\n\n      case 'RESET_EMPLOYEE': {\n         return {\n            ...state, \n            edit: 0,\n            first_name: '',\n            last_name: '',\n            email: '',\n            notes: '',\n            phone: '',\n            login: '',\n            password: '',\n            role_title: '',\n            role_id: 0,\n            permissions: [],\n            inn: '',\n            doc_name: '',\n            post: '',\n            deleted: false\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,\n   tabs: 1,\n\n   created_at: 0,\n   done_at: 0,\n   closed_at: 0,\n   assigned_at: 0,\n   duration: 0,\n   estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n   scheduled_for: 0,\n   warranty_date: 0, \n   status_deadline: 0,\n\n   ad_campaign_id: 1,\n   branch_id: 0,\n   status: {},\n   client: {},\n   order_type_id: 1,\n   closed_by_id: 0,\n   created_by_id: 0,\n   manager_id: 0,\n   engineer_id: 0,\n   kindof_good: {},\n   brand: {},\n   subtype: {},\n   model: {},\n\n   operations: [],\n   parts: [], \n   attachments: [], \n   payments: [],\n\n   id_label: '',\n   prefix: '',\n   serial: '',\n   malfunction: '',\n   packagelist: '',\n   appearance: '',\n   engineer_notes: '',\n   manager_notes: '',\n   resume: '',\n   cell: '', \n\n   estimated_cost: 0,\n   missed_payments: 0,\n   discount_sum: 0,\n   payed: 0,\n   price: 0,\n   remaining: 0, \n   remaining_status: 0, \n   remaining_warranty: 0, \n\n   overdue: false,\n   status_overdue: false,\n   urgent: false,\n   warranty_measures: false,\n\n   equipments: [{\n      kindof_good: {},\n      brand: {},\n      subtype: {},\n      model: {},\n      malfunction: '',\n      packagelist: '',\n      appearance: '',\n      urgent: false\n   }],\n  \n}\n\nexport const orderReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'RESET_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {}\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n      \n      case 'SET_ORDER_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {\n            id: action.data.id,\n            icon: action.data.icon,\n            title: action.data.title,\n            url: action.data.url\n         }\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n\n        \n         return {\n            ...state, \n            equipments: state.equipments.concat([{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }])\n         }\n      }\n\n      \n      case 'DELETE_DEVICE': {\n\n         let equipments_list = state.equipments\n         equipments_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM_S': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'RESET_ORDER': {\n\n         return {\n            ...state, \n            edit: 0,\n            tabs: 1,\n\n            created_at: 0,\n            done_at: 0,\n            closed_at: 0,\n            assigned_at: 0,\n            duration: 0,\n            estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n            // estimated_done_at: 0,\n            scheduled_for: 0,\n            warranty_date: 0, \n            status_deadline: 0,\n\n            ad_campaign_id: 1,\n            branch_id: 0,\n            status_id: 0,\n            client: {},\n            order_type_id: 1,\n            closed_by_id: 0,\n            created_by_id: 0,\n            manager_id: 0,\n            engineer_id: 0,\n            kindof_good:{},\n            brand: {},\n            subtype: {},\n            model: {},\n\n            operations: [],\n            parts: [],\n            attachments: [],\n            payments: [],\n\n            id_label: '',\n            prefix: '',\n            serial: '',\n            malfunction: '',\n            packagelist: '',\n            appearance: '',\n            engineer_notes: '',\n            manager_notes: '',\n            resume: '',\n            cell: '',\n\n            estimated_cost: 0,\n            missed_payments: 0,\n            discount_sum: 0,\n            payed: 0,\n            price: 0,\n            remaining: 0, \n            remaining_status: 0, \n            remaining_warranty: 0, \n\n            overdue: false,\n            status_overdue: false,\n            urgent: false,\n            warranty_measures: false,\n\n\n            equipments: [{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }],\n         }\n      }\n\n      \n      case 'EDIT_ORDER': {\n\n         return {\n            ...state, \n            edit: action.order.id,\n            created_at: action.order.created_at,\n            done_at: action.order.done_at,\n            closed_at: action.order.closed_at,\n            assigned_at: action.order.assigned_at,\n            duration: action.order.duration,\n            estimated_done_at: action.order.estimated_done_at,\n            scheduled_for: action.order.scheduled_for,\n            warranty_date: action.order.warranty_date, \n            status_deadline: action.order.status_deadline,\n\n            ad_campaign_id: action.order.ad_campaign.id,\n            branch_id: action.order.branch.id,\n            status: action.order.status,\n            client: action.order.client,\n            order_type_id: action.order.order_type.id,\n            closed_by_id: action.order.closed_by_id,\n            created_by_id: action.order.created_by_id,\n            manager_id: action.order.manager_id,\n            engineer_id: action.order.engineer_id,\n            kindof_good: action.order.kindof_good,\n            brand: action.order.brand,\n            subtype: action.order.subtype,\n            model: action.order.model,\n\n            operations: action.order.operations,\n            parts: action.order.parts,\n            attachments: action.order.attachments,\n            payments: action.order.payments,\n\n            id_label: action.order.id_label,\n            prefix: action.order.prefix,\n            serial: action.order.serial,\n            malfunction: action.order.malfunction,\n            packagelist: action.order.packagelist,\n            appearance: action.order.appearance,\n            engineer_notes: action.order.engineer_notes,\n            manager_notes: action.order.manager_notes,\n            resume: action.order.resume,\n            cell: action.order.cell,\n\n            estimated_cost: action.order.estimated_cost,\n            missed_payments: action.order.missed_payments,\n            discount_sum: action.order.discount_sum,\n            payed: action.order.payed,\n            price: action.order.price,\n            remaining: action.order.remaining,\n            remaining_status: action.order.remaining_status,\n            remaining_warranty: action.order.remaining_warranty,\n\n            overdue: action.order.overdue,\n            status_overdue: action.order.status_overdue,\n            urgent: action.order.urgent,\n            warranty_measures: action.order.warranty_measures\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","\n\nconst initialState = {\n   juridical: false,\n   supplier: false,\n   conflicted: false,\n   should_send_email: false,\n   deleted: false,\n\n   name: '',\n   name_doc: '',\n   email: '',\n   address: '',\n   phone: [{\n      title: 'Мобильный',\n      number: '',\n      notify: false\n   }],\n   ad_campaign_id: 1,\n   discount_code: '',\n   discount_goods: 0,\n   discount_goods_margin_id: 1,\n   discount_materials: 0,\n   discount_materials_margin_id: 1,\n   discount_services: 0,\n   discount_service_margin_id: 0,\n   notes: '',\n   tags: [],\n   \n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   discount_good_type: false,\n   discount_materials_type: false,\n   discount_service_type: false,\n\n   tabs: 1,\n   phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n   statusPhoneList: [false],\n   statusAddTitle: [false]\n}\n\nexport const clientReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'SET_CLIENT_CHECKBOX': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'CHANGE_CLIENT_EDITOR_FORM': {\n            return {\n               ...state, \n               [action.field]: action.value\n            }\n      }\n      \n      case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n      let phones = state.phone\n      phones[action.idx].number = action.value\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n   \n   case 'ADD_PHONE_COUNTER': {\n\n         return {\n            ...state, \n            phone: state.phone.concat([{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }]),\n            statusPhoneList: state.statusPhoneList.concat([false])\n         }\n      }\n   \n   case 'DELETE_COUNT_NUMBER': {\n\n      let phones = state.phone\n      phones.splice(action.idx, 1)\n      const statusPhones = state.statusPhoneList\n      statusPhones.splice(action.idx, 1)\n\n         return {\n            ...state, \n            phone: phones,\n            statusPhoneList: statusPhones\n         }\n      }\n      \n      \n   case 'SET_PHONE_NOTIFY': {\n\n      let phones = state.phone\n      phones[action.idx].notify = !phones[action.idx].notify\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n\n      \n      case 'SET_PHONE_TITLE': {\n\n         let phones = state.phone\n         phones[action.idx].title = action.title\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n   \n            return {\n               ...state, \n               phone: phones,\n               statusPhoneList: statusPhones\n            }\n         }\n\n      case 'CHANGE_STATUS_PHONE_LIST': {\n\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = false\n\n         return {\n            ...state, \n            statusPhoneList: statusPhones,\n            statusAddTitle: statusTitle\n         }\n      }\n\n      \n      case 'CHANGE_STATUS_ADD_TITLE': {\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = !statusTitle[action.idx]\n\n         return {\n            ...state, \n            statusAddTitle: statusTitle\n         }\n      }\n\n      case 'SET_AD_CANMPAIGN_CLIENT': {\n\n         return {\n            ...state, \n            ad_campaign_id: action.id\n         }\n      }\n      \n      case 'ADD_CLIENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_CLIENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      case 'RESET_DATA_CLIENT': {\n         return {\n            ...state,\n            juridical: false,\n            supplier: false,\n            conflicted: false,\n            should_send_email: false,\n            deleted: false,\n\n            name: '',\n            name_doc: '',\n            email: '',\n            address: '',\n            phone: [{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }],\n            ad_campaign_id: 1,\n            discount_code: '',\n            discount_goods: 0,\n            discount_goods_margin_id: 1,\n            discount_materials: 0,\n            discount_materials_margin_id: 1,\n            discount_services: 0,\n            discount_service_margin_id: 0,\n            notes: '',\n            tags: [],\n            \n            ogrn: '',\n            inn: '',\n            kpp: '',\n            juridical_address: '',\n            director: '',\n            bank_name: '',\n            settlement_account: '',\n            corr_account: '',\n            bic: '',\n\n            discount_good_type: false,\n            discount_materials_type: false,\n            discount_service_type: false,\n\n            edit: 0,\n            tabs: 1,\n            statusPhoneList: [false],\n            statusAddTitle: [false]\n\n         }\n      }\n\n      case 'CHANGE_CLIENT_TABS': {\n\n         return {\n            ...state, \n            tabs: action.tab\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id,\n            tabs: 1\n         }\n      }\n\n      \n      case 'EDIT_CURRENT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id,\n            tabs: 1\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn ='M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'","import { icon_location } from \"../../data/icons\"\n\nconst initialState = {\n   name: '',\n   address: '',\n   phone: '',\n   color: 'grey',\n   icon: icon_location,\n   orders_type_id: 1,\n   orders_type_strategy: 'last',\n   orders_prefix: 'OTS',\n   documents_prefix: 'A',\n   employees: [],\n   deleted: false,\n   schedule: [\n      {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 1\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 2\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 3\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 4\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 5\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 6\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 7\n      },\n   ],\n\n   edit: 0,\n   showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BRANCH_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_SCHEDULE': {\n\n         let list_schedule = state.schedule\n         list_schedule[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            schedule: list_schedule\n         }\n      }\n      \n      case 'SET_BRANCH_EMPLOYEE': {\n         if (action.id.every(id => state.employees.includes(id))) {\n            return {\n               ...state, \n               employees: state.employees.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n            }\n         }\n      }\n\n      case 'RESET_BRANCH': {\n\n         return {\n            ...state, \n            name: '',\n            address: '',\n            phone: '',\n            color: 'grey',\n            icon: icon_location,\n            orders_type_id: 1,\n            orders_type_strategy: 'last',\n            orders_prefix: 'OTS',\n            documents_prefix: 'A',\n            employees: [],\n            deleted: false,\n            schedule: [\n               {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 1\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 2\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 3\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 4\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 5\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 6\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 7\n               },\n            ],\n\n            edit: 0\n         }\n      }\n\n      \n      case 'EDIT_BRANCH': {\n\n         return {\n            ...state, \n            name: action.branch.name,\n            address: action.branch.address,\n            phone: action.branch.phone,\n            color: action.branch.color,\n            icon: action.branch.icon,\n            orders_type_id: action.branch.orders_type_id,\n            orders_type_strategy: action.branch.orders_type_strategy,\n            orders_prefix: action.branch.orders_prefix,\n            documents_prefix: action.branch.documents_prefix,\n            employees: action.branch.employees,\n            deleted: action.branch.deleted,\n            schedule: action.branch.schedule,\n\n            edit: action.branch.id\n         }\n      }\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n\n   direction: 0,\n\n   \n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","\n\nconst initialState = {\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: ['show_cashbox_remains', 'show_cash_flow', 'incoming', 'incoming_move', 'outcoming', 'outcoming_move'],\n   employees: {},\n   branch_id: 0,\n\n   permissions_employee: 0,\n   current_cashbox: {}\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: ['show_cashbox_remains', 'show_cash_flow', 'incoming', 'incoming_move', 'outcoming', 'outcoming_move'],\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         let employees = state.employees\n         if (action.field === 'permissions') {\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val != action.value)\n            } else {\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         } else {\n            employees[state.permissions_employee][[action.field]] = action.value\n         } \n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   edit: 0,\n   sum: 0,\n   title: '',\n\n   cashflow_category: '',\n   description: '',\n\n   deposit: 0,\n   income: 0,\n   outcome: 0,\n   direction: 0,\n\n   can_print_fiscal: false,\n   deleted: false,\n   is_fiscal: false,\n\n   created_at: 0,\n   custom_created_at: 0,\n\n   tags: [],\n\n   relation_id: null,\n   cashbox_id: 0,\n   client_id: 0,\n   employee_id: 0,\n   order_id: 0,\n   target_cashbox_id: 0,\n\n   cashbox: {},\n   client: {},\n   employee: {},\n   order: {},\n\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n   filter_tags: []\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_PAYMENT_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_PAYMENT_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n\n      case 'ADD_PAYMENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_PAYMENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      \n      case 'RESET_PAYMENTS': {\n\n         return {\n            ...state, \n            edit: 0,\n            sum: 0,\n            title: '',\n\n            cashflow_category: '',\n            description: '',\n\n            deposit: 0,\n            income: 0,\n            outcome: 0,\n            direction: 0,\n\n            can_print_fiscal: true,\n            deleted: false,\n            is_fiscal: false,\n\n            created_at: 0,\n            custom_created_at: 0,\n\n            tags: [],\n\n            cashbox_id: 0,\n            client_id: 0,\n            employee_id: 0,\n            order_id: 0,\n            target_cashbox_id: 0,\n         }\n      }\n      \n      case 'SET_PAYMENT': {\n\n         return {\n            ...state, \n            edit: action.payment.id,\n\n            cashflow_category: action.payment.cashflow_category,\n            description: action.payment.description,\n\n            deposit: action.payment.deposit,\n            income: action.payment.income,\n            outcome: action.payment.outcome,\n            direction: action.payment.direction,\n\n            can_print_fiscal: action.payment.can_print_fiscal,\n            deleted: action.payment.deleted,\n            is_fiscal: action.payment.is_fiscal,\n\n            created_at: action.payment.created_at,\n            custom_created_at: action.payment.custom_created_at,\n\n            tags: action.payment.tags,\n\n            cashbox: action.payment.cashbox,\n            client: action.payment.client,\n            employee: action.payment.employee,\n            order: action.payment.order,\n            target_cashbox_id: action.payment.target_cashbox_id,\n         }\n      }\n      \n      \n\n      \n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n       \n      //  case 'CHOOSE_EMPLOYEE_SELECTED': {\n      //     if (action.value.every(val => state[action.field].includes(val))) {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n      //        }\n      //     } else {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n      //        }\n      //     }\n      //  }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60,\n   percent: true,\n   discount: 0\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,                // id при редактировании\n\n   description: '',        // Описание\n   income: 0,              // Входящяя сумма\n   outcome: 0,             // Иcходящая сумму\n   direction: 0,           // Направление платежа\n   deleted: false,         // Платеж удален\n   reimburse: false,       // Совершен возврат\n   created_at: null,       // Дата создания\n   custom_created_at: null,// Дата установленая пользователем\n   relation_type: 0,       // Тип начисления\n   relation_id: 0,         // id связанного события\n   employee_id: 0,         // Сотрудник\n   order_id: null,         // Заказ\n\n   setted_employee: 0,     // Выбранный сотрудник\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_PAYROLL_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,  \n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null            \n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer\n})\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { rootReducer } from './rootReducer'\nimport { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer, compose(\n   applyMiddleware(\n     thunk\n   ),\n  //  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n ))\n\n export default store","import store from \"./store\"\n\nfunction getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nfunction bad_request(massage='') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return { type: 'LOGUOT' }\n}\n\nexport function loginAction(token) {\n  return {\n    type: 'LOGIN',\n    token,\n  }\n}\n\nexport function loguotAction() {\n  return {\n    type: 'LOGUOT'\n  }\n}\n\nexport function addUserAction(user) {\n  return {\n    type: 'ADD_USER',\n    user: user\n  }\n}\n\nexport function changePageAction(page) {\n  return {\n    type: 'CHANGE_PAGE',\n    page: page\n  }\n}\n\nexport function changeSortAction(field) {\n  return {\n    type: 'CHANGE_SORT',\n    field: field\n  }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n  return {\n    type: 'INIT_STATUS_MENU_VISIBLE',\n    data: list_id\n  }\n}\n\nexport function changeStatusMenuVisibleAction(id_order) {\n  return {\n    type: 'CANGE_STATUS_MENU_VISIBLE',\n    id_order: id_order\n  }\n}\n\nexport function changeFilterAction(word) {\n  return {\n    type: 'CANGE_FILTER',\n    word: word\n  }\n}\n\nexport function activeBadgeAction(filters) {\n  return {\n    type: 'ACTIVE_BADGE',\n    filters\n  }\n}\n\n\nexport function changeSetStatusFilter() {\n  return {\n    type: 'CHANGE_STATUS_SET_STATUS_FILTER'\n  }\n}\n\nexport function changeStausListFilter() {\n  return {\n    type: 'CHANGE_STATUS_LIST_FILTER'\n  }\n}\n\nexport function changeCheckStatus(field) {\n  return {\n    type: 'CHANGE_CHECK_STATUS',\n    field\n  }\n}\n\nexport function setAllStatusFalse() {\n  return {\n    type: 'SET_ALL_STATUS_FALSE'\n  }\n}\n\nexport function setAllStatusTrue() {\n  return {\n    type: 'SET_ALL_STATUS_TRUE'\n  }\n}\n\nexport function changeTypeListFilter() {\n  return {\n    type: 'CHANGE_TYPE_LIST_FILTER'\n  }\n}\n\n\nexport function changeCheckType(field) {\n  return {\n    type: 'CHANGE_CHECK_TYPE',\n    field\n  }\n}\n\nexport function setAllTypeTrue() {\n  return {\n    type: 'SET_ALL_TYPE_TRUE'\n  }\n}\n\nexport function setAllTypeFalse() {\n  return {\n    type: 'SET_ALL_TYPE_FALSE'\n  }\n}\n\nexport function changeManagerListFilter() {\n  return {\n    type: 'CHANGE_MANAGER_LIST_FILTER'\n  }\n}\n\n\nexport function changeCheckManager(field) {\n  return {\n    type: 'CHANGE_CHECK_MANAGER',\n    field\n  }\n}\n\nexport function setAllManagerTrue() {\n  return {\n    type: 'SET_ALL_MANAGER_TRUE'\n  }\n}\n\nexport function setAllManagerFalse() {\n  return {\n    type: 'SET_ALL_MANAGER_FALSE'\n  }\n}\n\nexport function changeEngineerListFilter() {\n  return {\n    type: 'CHANGE_ENGINEER_LIST_FILTER'\n  }\n}\n\n\nexport function changeCheckEngineer(field) {\n  return {\n    type: 'CHANGE_CHECK_ENGINEER',\n    field\n  }\n}\n\nexport function setAllEngineerTrue() {\n  return {\n    type: 'SET_ALL_ENGINEER_TRUE'\n  }\n}\n\nexport function setAllEngineerFalse() {\n  return {\n    type: 'SET_ALL_ENGINEER_FALSE'\n  }\n}\n\nexport function changeGroupListFilter() {\n  return {\n    type: 'CHANGE_GROUP_LIST_FILTER'\n  }\n}\n\n\nexport function changeGroupMainFilter(word) {\n  return {\n    type: 'CHANGE_GROUP_MAINFILTER',\n    word\n  }\n}\n\nexport function changeBrandListFilter() {\n  return {\n    type: 'CHANGE_BRAND_LIST_FILTER'\n  }\n}\n\nexport function changeBrandMainFilter(word) {\n  return {\n    type: 'CHANGE_BRAND_MAINFILTER',\n    word\n  }\n}\n\nexport function changeSubtypeListFilter() {\n  return {\n    type: 'CHANGE_SUBTYPE_LIST_FILTER'\n  }\n}\n\nexport function changeSubtypeMainFilter(word) {\n  return {\n    type: 'CHANGE_SUBTYPE_MAINFILTER',\n    word\n  }\n}\n\nexport function changeClientListFilter() {\n  return {\n    type: 'CHANGE_CLIENT_LIST_FILTER'\n  }\n}\n\nexport function changeClientMainFilter(word) {\n  return {\n    type: 'CHANGE_CLIENT_MAINFILTER',\n    word\n  }\n}\n\nexport function changeNameClientFilter(word) {\n  return {\n    type: 'CHANGE_NAME_CLIENTFILTER',\n    word\n  }\n}\n\nexport function changePhoneClientFilter(word) {\n  return {\n    type: 'CHANGE_PHONE_CLIENTFILTER',\n    word\n  }\n}\n\nexport function changeCreateAtMainFilter(range) {\n  return {\n    type: 'CHANGE_CREATE_AT_MAINFILTER',\n    range\n  }\n}\n\nexport function appFilter() {\n  return {\n    type: 'APPLY_FILTER'\n  }\n}\n\nexport function resetFilter() {\n  return {\n    type: 'RESET_FILTER'\n  }\n}\n\n  \nexport function changeStatusCreateNewFilter() {\n  return {\n    type: 'CHANGE_STATUS_CREATE_NEW_FILTER'\n  }\n  }\n\nexport function changeTitleCreate(title) {\n  return {\n    type: 'CHANGE_TITLE_CREATE',\n    title\n  }}\n\n  \nexport function changeGeneraleCreate() {\n  return {\n    type: 'CHANGE_GENERALE_CREATE'\n  }}\n\n  \nexport function appCustomFilter(filter, id) {\n  return {\n    type: 'APPLY_CUSTOM_FILTER',\n    filter,\n    id\n  }}\n\nexport function changeStatusMenuRow(id) {\n  return {\n    type: 'CHANGE_STATUS_MENU_ROW',\n    id\n  }}\n\n    \nexport function changeStatusSettingRow(id) {\n  return {\n    type: 'CHANGE_STATUS_SETTING_ROW',\n    id\n  }\n}\n  \n\n\nexport function changeTitleCreateRole(title) {\n  return {\n    type: 'CHANGE_TITLE_CREATE_ROLE',\n    title\n  }}\n\nexport function changePermissions(value) {\n  return {\n    type: 'CHANGE_PERMISSION',\n    value\n  }}\n  \nexport function cahngeEarningsVisibility(bool) {\n  return {\n    type: 'CHANGE_EARNINGS_VISIBILITY',\n    bool\n  }}\n\nexport function cahngeLeadsVisibility(bool) {\n  return {\n    type: 'CHANGE_LEADS_VISIBILITY',\n    bool\n  }}\n\nexport function cahngeOrdersVisibility(bool) {\n  return {\n    type: 'CHANGE_ORDERS_VISIBILITY',\n    bool\n  }}\n\nexport function changeVisibleStatuses(id) {\n  return {\n    type: 'CHANGE_VISIBLE_STATUSES',\n    id\n  }}\n\nexport function changeSettableStatuses(id) {\n  return {\n    type: 'CHANGE_SETTABLE_STATUSES',\n    id\n  }}\n\n  \nexport function changeSettableMargin(id) {\n  return {\n    type: 'CHANGE_SETTABLE_MARGIN',\n    id\n  }}\n\n  \nexport function editRole(role) {\n  return {\n    type: 'EDIT_ROLE',\n    role\n  }}\n\n\nexport function changeEmployeeTabs(tab) {\n  return {\n    type: 'CHANGE_EMPLOYEE_TAB',\n    tab\n  }}\n\n  \nexport function changeEmployeEditorForm( value, field) {\n  return {\n    type: 'CHANGE_EMPLOYEE_EDITOR_FORM',\n    value,\n    field\n  }\n}\n  \nexport function changeEmployeeSelected( value, field ) {\n  return {\n    type: 'CHOOSE_EMPLOYEE_SELECTED',\n    value,\n    field\n  }\n}\n\n  \nexport function changeEmployeeEditorRoleOptions() {\n  return {\n    type: 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS'\n  }}\n\n\nexport function setRoleEmployeeEdetor(role) {\n  return {\n    type: 'SET_ROLE_EMPLOYEE_EDITOR',\n    role\n  }}\n\nexport function changeShowDeleted() {\n  return {\n    type: 'CHANGE_SHOW_DELETED'\n  }}\n\n  \nexport function editEmoloyee(employee) {\n  return {\n    type: 'EDIT_EMPLOYEE',\n    employee\n  }\n}\n  \nexport function resetEmoloyee() {\n  return {\n    type: 'RESET_EMPLOYEE'\n  }\n}\n\n  \nexport function setClietnCheckbox(field, value) {\n  return {\n    type: 'SET_CLIENT_CHECKBOX',\n    field,\n    value\n  }}\n\n  \nexport function changeClientEditorForm(value, field) {\n  return {\n    type: 'CHANGE_CLIENT_EDITOR_FORM',\n    field,\n    value\n  }}\n\n  \nexport function changeClientEditorPhone(idx, value) {\n  return {\n    type: 'CHANGE_CLIENT_EDITOR_PHONE',\n    idx,\n    value\n  }}\n\n  \nexport function addPhoneCounter() {\n  return {\n    type: 'ADD_PHONE_COUNTER'\n  }}\n\n  \nexport function deleteCountNumber(idx) {\n  return {\n    type: 'DELETE_COUNT_NUMBER',\n    idx\n  }}\n\n  \nexport function setPhoneNotify(idx) {\n  return {\n    type: 'SET_PHONE_NOTIFY',\n    idx\n  }}\n  \n  \nexport function changeStatusPhoneList(idx) {\n  return {\n    type: 'CHANGE_STATUS_PHONE_LIST',\n    idx\n  }}\n\n  \nexport function setPhoneTitle(idx, title) {\n  return {\n    type: 'SET_PHONE_TITLE',\n    idx,\n    title\n  }}\n\n  \nexport function changeStatusAddTitle(idx) {\n  return {\n    type: 'CHANGE_STATUS_ADD_TITLE',\n    idx\n  }}\n\nexport function changeStatusAdCampaignClient() {\n  return {\n    type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n  }\n}\n\nexport function setAdCampaignClient(id) {\n  return {\n    type: 'SET_AD_CANMPAIGN_CLIENT',\n    id\n  }\n}\n\n\nexport function addClientTag(tag) {\n  return {\n    type: 'ADD_CLIENT_TAG',\n    tag\n  }\n}\n\nexport function deleteClientTag(idx) {\n  return {\n    type: 'DELETE_CLIENT_TAG',\n    idx\n  }\n}\n\nexport function addPaymentTag(tag) {\n  return {\n    type: 'ADD_PAYMENT_TAG',\n    tag\n  }\n}\n\nexport function deletePaymentTag(idx) {\n  return {\n    type: 'DELETE_PAYMENT_TAG',\n    idx\n  }\n}\n\nexport function setVisibleFlag(field, value) {\n  return {\n    type: 'SET_VISIBLE_FLAG',\n    field,\n    value\n  }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n  return {\n    type: 'SET_VISIBLE_LIST_FLAG',\n    field,\n    idx,\n    value\n  }\n}\n\nexport function addVisibleFlag(field) {\n  return {\n    type: 'ADD_FLAG',\n    field\n  }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n  return {\n    type: 'DELETE_FLAG',\n    field,\n    idx\n  }\n}\n\n\nexport function resetDataClient() {\n  return {\n    type: 'RESET_DATA_CLIENT'\n  }\n}\n\n\nexport function changeClientTabs(tab) {\n  return {\n    type: 'CHANGE_CLIENT_TABS',\n    tab\n  }\n}\n\n\nexport function resetEquipment(idx, field) {\n  return {\n    type: 'RESET_EQUIPMENT',\n    idx,\n    field\n  }\n}\n\nexport function setOrderEquipment(idx, field, data) {\n  return {\n    type: 'SET_ORDER_EQUIPMENT',\n    idx,\n    field,\n    data\n  }\n}\n\n\nexport function changeOrderForm(idx, field, value) {\n  return {\n    type: 'CHANGE_ORDER_FORM',\n    idx,\n    field,\n    value\n  }\n}\n\n\nexport function addAnotherEquipment() {\n  return {\n    type: 'ADD_ANOTHER_EQUIPMENT'\n  }\n}\n\n\nexport function deleteDevice(idx) {\n  return {\n    type: 'DELETE_DEVICE',\n    idx\n  }\n}\n\n\nexport function changeOrderFormS(value, field) {\n  return {\n    type: 'CHANGE_ORDER_FORM_S',\n    field,\n    value\n  }\n}\n\n\nexport function changeMaindataForm(field, value) {\n  return {\n    type: 'CHANGE_MAINDATA_FORM',\n    field,\n    value\n  }\n}\n\n\nexport function changeBranchForm(field, value) {\n  return {\n    type: 'CHANGE_BRANCH_FORM',\n    field,\n    value\n  }\n}\n\n\nexport function changeShedule(idx, field, value) {\n  return {\n    type: 'CHANGE_SCHEDULE',\n    idx,\n    field,\n    value\n  }\n}\n\n\nexport function setBranchEmployee(id) {\n  return {\n    type: 'SET_BRANCH_EMPLOYEE',\n    id\n  }\n}\n\nexport function editBranch(branch) {\n  return dispatch => {\n    dispatch({\n      type: 'EDIT_BRANCH',\n      branch\n    })\n    dispatch({\n      type: 'SET_VISIBLE_FLAG',\n      field: 'statusBranchEditor',\n      value: true\n    })\n  }\n}\n\n\n\n\n\nexport function chooseEquipmentBranches( id ) {\n  return {\n    type: 'CHOOSE_EQUIPMENT_BRANCHES',\n    id\n  }\n}\n\n\nexport function editEquipment( equipment ) {\n  return {\n    type: 'EDIT_EQUIPMENT',\n    equipment\n  }\n}\n\nexport function resetBookEquipment() {\n  return {\n    type: 'RESET_BOOK_EQUIPMENT'\n  }\n}\n\nexport function chooseBookSelected( id, field ) {\n  return {\n    type: 'CHOOSE_BOOK_SELECTED',\n    id,\n    field\n  }\n}\n\n\nexport function changeCashboxForm( value, field ) {\n  return {\n    type: 'CHANGE_CASHBOX_FORM',\n    field,\n    value\n  }\n}\n\nexport function chooseCashboxSelected( id, field ) {\n  return {\n    type: 'CHOOSE_CASHBOX_SELECTED',\n    id,\n    field\n  }\n}\n\nexport function changeCashboxPermissions( value, field ) {\n  return {\n    type: 'CHANGE_CASHBOX_PERMISSION',\n    value,\n    field\n  }\n}\n\nexport function addData( data, field ) {\n  return {\n    type: 'ADD_DATA',\n    data,\n    field\n  }\n}\n\nexport function activeCashbox( id ) {\n  return {\n    type: 'ACTIVE_CASHBOX',\n    id\n  }\n}\n\nexport function editCashbox( cashbox ) {\n  return {\n    type: 'EDIT_CASHBOX',\n    cashbox\n  }\n}\n\n\nexport function changePaymentForm( value, field ) {\n  return {\n    type: 'CHANGE_PAYMENT_FORM',\n    field,\n    value\n  }\n}\n\n\nexport function editCurrentClient( client ) {\n  return {\n    type: 'EDIT_CURRENT_CLIENT',\n    client\n  }\n}\n\nexport function resetPayments( ) {\n  return {\n    type: 'RESET_PAYMENTS'\n  }\n}\n\nexport function setPayment( payment ) {\n  return {\n    type: 'SET_PAYMENT',\n    payment\n  }\n}\n\n\n\n\n\n\nexport function changePriceForm( value, field ) {\n  return {\n    type: 'CHANGE_PRICE_FORM',\n    field,\n    value\n  }\n}\n\nexport function editPrice(price) {\n  return {\n    type: 'EDIT_PRICE',\n    price\n  }\n}\n\nexport function resetPrice() {\n  return {\n    type: 'RESET_PRICE'\n  }\n}\n\n\nexport function changeDictServiceForm( value, field ) {\n  return {\n    type: 'CHANGE_DICT_SERVICE_FORM',\n    field,\n    value\n  }\n}\n\nexport function resetGruopDictService() {\n  return {\n    type: 'RESET_GROPE_DICT_SERVICE'\n  }\n}\n\nexport function editGroupDictService(group) {\n  return {\n    type: 'EDIT_GRUOP_DICT_SERVICE',\n    group\n  }\n}\n\nexport function resetService() {\n  return {\n    type: 'RESET_SERVICE'\n  }\n}\n\n\nexport function selectedService( value, field ) {\n  return {\n    type: 'SELECTED_OPERATION',\n    field,\n    value\n  }\n}\n\n\nexport function editDictService(service) {\n  return {\n    type: 'EDIT_SERVICE',\n    service\n  }\n}\n\nexport function log_in(login, password) {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    email: login,\n    password\n  })\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/login', request_config)\n    .then(response => {\n      let data = response.json()\n      return data\n    })\n    .then(data => {\n      if (data.success) {\n        sessionStorage.setItem('1xsndt', data.access_token);\n        sessionStorage.setItem('user', JSON.stringify(data.user))\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'user',\n          data: data.user,\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'login_status',\n          data: true,\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'token',\n          data: data.access_token,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос авторизации не выполнен'))\n  }\n}\n\n\n\n\n// Client ================================================================================================================\nexport function addClients() {\n\n  const state = store.getState()\n\n  return dispatch => {\n      \n      fetch(state.data.url_server + '/get_clients', getRequestConfig(state.filter.clientFilter))\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_CLIENTS_SHOW',\n            clientShow: data.data,\n            count: data.count\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос клиентов не выполнен'))\n  }\n}\n\nexport function createNewClient() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    juridical: state.client.juridical,\n    supplier: state.client.supplier,\n    conflicted: state.client.conflicted,\n    should_send_email: state.client.should_send_email,\n    discount_good_type: state.client.discount_good_type,\n    discount_materials_type: state.client.discount_materials_type,\n \n    name: state.client.name,\n    name_doc: state.client.name_doc,\n    email: state.client.email,\n    address: state.client.address,\n    discount_code: state.client.discount_code,\n    notes: state.client.notes,\n    ogrn: state.client.ogrn,\n    inn: state.client.inn,\n    kpp: state.client.kpp,\n    juridical_address: state.client.juridical_address,\n    director: state.client.director,\n    bank_name: state.client.bank_name,\n    settlement_account: state.client.settlement_account,\n    corr_account: state.client.corr_account,\n    bic: state.client.bic,\n\n    discount_goods: state.client.discount_goods,\n    discount_materials: state.client.discount_materials,\n    discount_services: state.client.discount_services,\n\n    ad_campaign_id: state.client.ad_campaign_id,\n    discount_goods_margin_id: state.client.discount_goods_margin_id,\n    discount_materials_margin_id: state.client.discount_materials_margin_id,\n    discount_service_margin_id: state.client.discount_service_margin_id,\n    discount_service_type: state.client.discount_service_type,\n\n    tags: state.client.tags,\n    phone: state.client.phone,\n  })\n\n  return dispatch => {\n   \n    fetch(state.data.url_server + '/clients', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_ORDER_FORM_S',\n          field: 'client',\n          value: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCreateNewClient',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_DATA_CLIENT'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос на создание клиента не выполнен'))  \n  }\n}\n\nexport function saveChangeClient() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.client.edit,\n    juridical: state.client.juridical,\n    supplier: state.client.supplier,\n    conflicted: state.client.conflicted,\n    should_send_email: state.client.should_send_email,\n    discount_good_type: state.client.discount_good_type,\n    discount_materials_type: state.client.discount_materials_type,\n    discount_service_type: state.client.discount_service_type,\n \n    name: state.client.name,\n    name_doc: state.client.name_doc,\n    email: state.client.email,\n    address: state.client.address,\n    discount_code: state.client.discount_code,\n    notes: state.client.notes,\n    ogrn: state.client.ogrn,\n    inn: state.client.inn,\n    kpp: state.client.kpp,\n    juridical_address: state.client.juridical_address,\n    director: state.client.director,\n    bank_name: state.client.bank_name,\n    settlement_account: state.client.settlement_account,\n    corr_account: state.client.corr_account,\n    bic: state.client.bic,\n\n    discount_goods: state.client.discount_goods,\n    discount_materials: state.client.discount_materials,\n    discount_services: state.client.discount_services,\n\n    ad_campaign_id: state.client.ad_campaign_id,\n    discount_goods_margin_id: state.client.discount_goods_margin_id,\n    discount_materials_margin_id: state.client.discount_materials_margin_id,\n    discount_service_margin_id: state.client.discount_service_margin_id,\n\n    tags: state.client.tags,\n    phone: state.client.phone,\n  })\n  request_config.method = 'PUT'\n\n  return dispatch => {\n    \n    fetch(state.data.url_server + '/clients', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_ORDER_FORM_S',\n          field: 'client',\n          value: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCreateNewClient',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))  \n  }\n}\n\n\nexport function editClient( id ) {\n\n  const state = store.getState()\n\n  return dispatch => {\n      \n    fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'EDIT_CLIENT',\n          client: data.data[0]\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос данных клиента не выполнен'))  \n  }\n}\n\n\nexport function deleteClient(flag) {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.client.edit,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  return dispatch => {\n   \n    \n    fetch(state.data.url_server + '/clients', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_ORDER_FORM_S',\n          field: 'client',\n          value: {}\n        })\n        dispatch({\n          type: 'RESET_DATA_CLIENT'\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCreateNewClient',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос на изменение клиента не выполнен'))  \n  }\n}\n//===========================================================================================================================\n\n\n\nexport function addEmployees( filters ) {\n  \n  const state = store.getState()\n\n  return dispatch => {\n     \n    fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_EMPLOYEES',\n          employees: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос сотрудников не выполнен'))\n  }\n}\n\nexport function addAdCampaign() {\n  \n  const state = store.getState()\n\n  return dispatch => {\n     \n      fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_AD_CAMPAIGN',\n            ad_campaign: data.data,\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n  }\n}\n\n\nexport function createEmployee() {\n  \n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    first_name: state.employee.first_name,\n    last_name: state.employee.last_name,\n    email: state.employee.email,\n    notes: state.employee.notes,\n    phone: state.employee.phone.replace(/[^0-9]/g, ''),\n    password: state.employee.password,\n    role_id: state.employee.role_id,\n    login: state.employee.login,\n    inn: state.employee.inn,\n    doc_name: state.employee.doc_name,\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/employee', request_config)\n    .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n     \n    await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_EMPLOYEES',\n          employees: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusEmployeeEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос сотрудников не выполнен'))\n  }\n}\n\nexport function seveEditEmployee() {\n  \n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.employee.edit,\n    first_name: state.employee.first_name,\n    last_name: state.employee.last_name,\n    email: state.employee.email,\n    notes: state.employee.notes,\n    phone: state.employee.phone.replace(/[^0-9]/g, ''),\n    password: state.employee.password,\n    role_id: state.employee.role_id,\n    login: state.employee.login,\n    inn: state.employee.inn,\n    doc_name: state.employee.doc_name,\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/employee', request_config)\n    .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n    \n    await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_EMPLOYEES',\n          employees: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusEmployeeEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос сотрудников не выполнен'))\n  }\n}\n\n\n\nexport function deleteEmployee(flag) {\n  \n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.employee.edit,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/employee', request_config)\n    .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n    \n    await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_EMPLOYEES',\n          employees: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusEmployeeEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос сотрудников не выполнен'))\n  }\n}\n\nexport function addStatus() {\n\n  const state = store.getState()\n\n  return dispatch => {\n      \n    fetch(state.data.url_server + '/get_status', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_STATUS',\n          status: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос статусов не выполнен'))\n  }\n}\n\n\n\n\nexport function refreshDataOrder( order_id ) {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: order_id\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/get_orders', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'EDIT_ORDER',\n          order: data.data[0],\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n  }\n}\n\n\nexport function addBaggesAction() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n  return dispatch => {\n      \n      fetch(state.data.url_server + '/bagges', request_config)\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_BADGES',\n            badges: data.data,\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос беджей не выполнен'))\n  }\n}\n\n       \nexport function  addStatusGroupAction() {\n\n  const state = store.getState()\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_STATUS_GROUP',\n          status_group: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос групп статусов не выполнен'))\n  }\n}\n\n\nexport function  addEquipment() {\n\n  const state = store.getState()\n\n  return dispatch => {\n      \n      fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_EQUIPMENT',\n            equipment: data.data,\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос типов изделий не выполнен'))  \n    }\n  }\n\n\nexport function addCustomFilter() {\n\n  const state = store.getState()\n\n  const request_config1 = getRequestConfig({\n    employee_id: state.data.user.id,\n    title: state.filter.title_create,\n    filters: state.filter.tempFilter,\n    general: state.filter.addCustomFilter\n  })\n\n  const request_config2 = getRequestConfig({ employee_id: state.data.user.id })\n\n  return async dispatch => {\n  \n    await fetch(state.data.url_server + '/custom_filters', request_config1)\n    .catch(() => bad_request('Запрос на создание фильтра не выполнен')) \n     \n    await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_CUSTOM_FILTERS',\n          filters: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))  \n  }\n}\n\n        \nexport function  addCustomFilters() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({ employee_id: state.data.user.id })\n\n  return dispatch => {\n      \n    fetch(state.data.url_server + '/get_custom_filters', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_CUSTOM_FILTERS',\n          filters: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))  \n  }\n}\n\n          \nexport function saveCustomFilter() {\n\n  const state = store.getState()\n  const idActiveFilter = state.filter.customFilters.find(filter => filter.active === true).id\n\n  let request_config = getRequestConfig({\n    id: idActiveFilter,\n    filters: state.filter.tempFilter\n  })\n  request_config.method = 'PUT'\n\n  const request_config2 = getRequestConfig({ employee_id: state.data.user.id })\n\n  return async dispatch => {\n     \n    await fetch(state.data.url_server + '/custom_filters', request_config)\n    .catch(() => bad_request('Запрос на изменеие фильтра не выполнен'))  \n      \n    await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_CUSTOM_FILTERS',\n          filters: data.data,\n        })\n        dispatch({\n          type: 'APPLY_CUSTOM_FILTER',\n          id: idActiveFilter,\n          filter: data.data.find(filter => filter.id === idActiveFilter).filters\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос пользовательских фильров не выполнен'))  \n  }\n}\n\n        \nexport function removeFilter() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.filter.customFilters.find(filter => filter.active === true).id\n  })\n  request_config.method = 'DELETE'\n\n  const request_config2 =getRequestConfig({ employee_id: state.data.user.id })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/custom_filters', request_config)\n    .catch(() => bad_request('Запрос на удаление фильтра не выполнен'))  \n      \n    await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_CUSTOM_FILTERS',\n          filters: data.data,\n        })\n        dispatch({\n          type: 'CHANGE_ORDER_FORM_S',\n          field: 'client',\n          value: {}\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))  \n  }\n}\n\nexport function addDiscountMargin() {\n\n  const state = store.getState()\n\n  return  dispatch => {\n\n    fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'discount_margin',\n          data: data.data,\n      })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос наценок не выполнен'))  \n  }\n}\n\n          \nexport function createRole() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    title: state.role.title_create,                                       \n    earnings_visibility: state.role.earnings_visibility,           \n    leads_visibility: state.role.leads_visibility,                  \n    orders_visibility: state.role.orders_visibility,               \n    permissions: state.role.list_permissions,                           \n    settable_statuses: state.role.settable_statuses,                \n    visible_statuses: state.role.visible_statuses,                 \n    settable_discount_margin: state.role.settable_discount_margin   \n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/roles', request_config)\n    .catch(() => bad_request('Запрос на создание роли не выполнен')) \n\n    await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_ROLES',\n          roles: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCreateNewRole',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос ролей не выполнен'))  \n  }\n}\n\n          \nexport function addRoles() {\n\n  const state = store.getState()\n\n  return dispatch => {\n     fetch(state.data.url_server + '/get_roles', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_ROLES',\n          roles: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос ролей не выполнен'))  \n  }\n}\n\n\nexport function seveEditRole() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.role.edit,\n    title: state.role.title_create,                                       \n    earnings_visibility: state.role.earnings_visibility,           \n    leads_visibility: state.role.leads_visibility,                  \n    orders_visibility: state.role.orders_visibility,               \n    permissions: state.role.list_permissions,                           \n    settable_statuses: state.role.settable_statuses,                \n    visible_statuses: state.role.visible_statuses,                 \n    settable_discount_margin: state.role.settable_discount_margin   \n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n    \n    await fetch(state.data.url_server + '/roles', request_config)\n    .catch(() => bad_request('Запрос на изменение роли не выполнен')) \n\n    await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_ROLES',\n          roles: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCreateNewRole',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос ролей не выполнен'))\n  }\n}\n\n        \nexport function deleteRole() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({id: state.role.edit})\n  request_config.method = 'DELETE'\n\n  return async dispatch => {\n    \n    await fetch(state.data.url_server + '/roles', request_config)\n    .catch(() => bad_request('Запрос на удаление роли не выполнен')) \n\n    await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_ROLES',\n          roles: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCreateNewRole',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос ролей не выполнен'))  \n  }\n}\n\n\nexport function addMainData() {\n \n  const state = store.getState()\n\n  const request_config = getRequestConfig({})\n  \n  return dispatch => {\n   \n    fetch(state.data.url_server + '/get_main_data', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'generally_info',\n          data: data.generally_info,\n        })\n        dispatch({\n          type: 'ADD_GENERALLY_INFO',\n          data: data.generally_info,\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'branches',\n          data: data.branch,\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'order_type',\n          data: data.order_type,\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'counters',\n          data: data.counts,\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'ad_campaign',\n          data: data.ad_campaign,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос основных данных не выполнен'))  \n    }\n  }\n\n\n  \n  export function saveGenerallyInfo() {\n\n    const state = store.getState()\n  \n    let request_config = getRequestConfig({\n      id: 1,\n      name: state.maindata.name,\n      address: state.maindata.address,\n      email: state.maindata.email,\n    \n      ogrn: state.maindata.ogrn,\n      inn: state.maindata.inn,\n      kpp: state.maindata.kpp,\n      juridical_address: state.maindata.juridical_address,\n      director: state.maindata.director,\n      bank_name: state.maindata.bank_name,\n      settlement_account: state.maindata.settlement_account,\n      corr_account: state.maindata.corr_account,\n      bic: state.maindata.bic,\n    \n      description: state.maindata.description,\n      phone: state.maindata.phone,\n      logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n      \n    return async dispatch => {\n        \n        \n      await fetch(state.data.url_server + '/generally_info', request_config)\n      .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n      \n      await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_GENERALLY_INFO',\n            data: data.data,\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос основных данных компании не выполнен'))  \n  }\n}\n\n\nexport function addCounters() {\n\n  const state = store.getState()\n\n  return dispatch => {\n   \n    fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'counters',\n          data: data.data\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос счетчиков не выполнен'))  \n    }\n  }\n\n\nexport function createBranch() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    name: state.branch.name,\n    address: state.branch.address,\n    phone: state.branch.phone,\n    color: state.branch.color,\n    icon: state.branch.icon,\n    orders_type_id: state.branch.orders_type_id,\n    orders_type_strategy: state.branch.orders_type_strategy,\n    orders_prefix: state.branch.orders_prefix,\n    documents_prefix: state.branch.documents_prefix,\n    employees: state.branch.employees,\n    deleted: state.branch.deleted,\n    schedule: state.branch.schedule\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/branch', request_config)\n    .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n\n    await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'branches',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusBranchEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_BRANCH'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос филиалов не выполнен'))  \n  }\n}\n\nexport function saveBranch() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n\n    id: state.branch.edit,\n    name: state.branch.name,\n    address: state.branch.address,\n    phone: state.branch.phone,\n    color: state.branch.color,\n    icon: state.branch.icon,\n    orders_type_id: state.branch.orders_type_id,\n    orders_type_strategy: state.branch.orders_type_strategy,\n    orders_prefix: state.branch.orders_prefix,\n    documents_prefix: state.branch.documents_prefix,\n    employees: state.branch.employees,\n    deleted: state.branch.deleted,\n    schedule: state.branch.schedule\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/branch', request_config)\n    .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n\n    await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'branches',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusBranchEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_BRANCH'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос флиалов не выполнен'))  \n  }\n}\n\n\nexport function deleteBranch(flag) {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.branch.edit,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/branch', request_config)\n    .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n\n    await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'branches',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusBranchEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_BRANCH'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос филиалов не выполнен'))  \n  }\n}\n\n\nexport function seveEditEquipment( ) {\n\n  const state = store.getState()\n  \n  const field_lidt = ['equipment', 'equipment_type_id', 'equipment_brand_id', 'equipment_subtype_id']\n  const url_list = ['/equipment_type', '/equipment_brand', '/equipment_subtype', '/equipment_model']\n\n  let request_config = getRequestConfig({\n    id: state.book.edit,\n    title: state.book.title,\n    icon: state.book.icon,\n    url: state.book.url,\n    [field_lidt[state.book.type]]: state.book.parent_id,\n    branches: state.book.branches\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + url_list[state.book.type], request_config)\n    .catch(() => bad_request('Запрос на изменение данных изделия не выполнен')) \n    \n    await fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_EQUIPMENT',\n          equipment: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusEquipmentEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос данных изделий не выполнен'))  \n  }\n}\n\n\nexport function deleteEquipment( flag ) {\n\n  const state = store.getState()\n  \n  const url_list = ['/equipment_type', '/equipment_brand', '/equipment_subtype', '/equipment_model']\n\n  let request_config = getRequestConfig({\n    id: state.book.edit,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n   \n    await fetch(state.data.url_server + url_list[state.book.type], request_config)\n    .catch(() => bad_request('Запрос на удаление/восстановление изделия не выполнен'))\n    \n    await fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_EQUIPMENT',\n          equipment: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusEquipmentEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос изделий не выполнен'))  \n  }\n}\n\nexport function createBookEquipment() {\n\n  const state = store.getState()\n  \n  const field_lidt = ['equipment', 'equipment_type_id', 'equipment_brand_id', 'equipment_subtype_id']\n  const url_list = ['/equipment_type', '/equipment_brand', '/equipment_subtype', '/equipment_model']\n\n  const request_config = getRequestConfig({\n    title: state.book.title,\n    icon: state.book.icon,\n    url: state.book.url,\n    [field_lidt[state.book.type]]: state.book.parent_id,\n    branches: state.book.branches\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + url_list[state.book.type], request_config)\n    .catch(() => bad_request('Запрос на создание изделия не выполнен'))\n    \n    await fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_EQUIPMENT',\n          equipment: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusEquipmentEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос изделий не выполнен'))  \n  }\n}\n\n \nexport function addDictMalfunction() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    page: state.book.page_malfunction\n  })\n\n  return dispatch => {\n   \n    fetch(state.data.url_server + '/get_malfunction', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'dictMalfunction',\n          data: data.data\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'count_malfunction',\n          data: data.count\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))  \n    }\n  }\n\n\n\n  \n  export function createBookElement() {\n\n    const state = store.getState()\n    \n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n  \n    const request_config = getRequestConfig({\n      title: state.book.title,\n      direction: state.book.direction\n    })\n  \n    return async dispatch => {\n  \n      await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n      .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))  \n      \n      await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: field_list[state.book.type],\n            data: data.data\n          })\n          dispatch({\n            type: 'ADD_DATA',\n            field: `count_${url_list[state.book.type]}`,\n            data: data.count\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос данных словаря не выполнен'))  \n    }\n  }\n  \n\n  \n  export function deleteBookElements() {\n\n    const state = store.getState()\n    \n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n  \n    let request_config = getRequestConfig({\n      del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n  \n    return async dispatch => {\n  \n      await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n      .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n      await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: field_list[state.book.type],\n            data: data.data\n          })\n          dispatch({\n            type: 'ADD_DATA',\n            field: `count_${url_list[state.book.type]}`,\n            data: data.count\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос данных словаря не выполнен'))  \n    }\n  }\n\n  \nexport function addDictPackagelist() {\n\n  const state = store.getState()\n  \n  const request_config = getRequestConfig({\n    page: state.book.page_packagelist\n  })\n  \n  return dispatch => {\n    \n    fetch(state.data.url_server + '/get_packagelist', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'dictPackagelist',\n          data: data.data\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'count_packagelist',\n          data: data.count\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос списка комплектаций не выполнен'))  \n  }\n}\n\nexport function addItemPayments() {\n\n  const state = store.getState()\n  \n  const request_config = getRequestConfig({\n    page: state.book.page_item_payments\n  })\n  \n  return dispatch => {\n    \n    fetch(state.data.url_server + '/get_item_payments', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'item_payments',\n          data: data.data\n        })\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'count_item_payments',\n          data: data.count\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос статей плтатежей не выполнен'))  \n  }\n}\n\n\n\nexport function createCashbox() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    title: state.cashbox.title,\n    balance: state.cashbox.balance,\n    type: state.cashbox.type,\n    isGlobal: state.cashbox.isGlobal,\n    isVirtual: state.cashbox.isVirtual,\n    deleted: state.cashbox.deleted,\n    permissions: state.cashbox.permissions,\n    employees: state.cashbox.employees,\n    branch_id: state.data.current_branch.id\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/cashbox', request_config)\n    .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n\n    await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'cashboxes',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCashboxEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_CASHBOX'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос касс не выполнен'))  \n  }\n}\n\n\nexport function addCashboxes() {\n\n  const state = store.getState()\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_cashbox', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'cashboxes',\n          data: data.data,\n        })\n        dispatch({\n          type: 'CHANGE_CASHBOX_FORM',\n          field: 'current_cashbox',\n          value: data.data.filter(cashbox => \n            !cashbox.deleted && \n            cashbox.employees[state.data.user.id].available &&\n            (cashbox.branch_id === (state.data.current_branch ? state.data.current_branch.id : false ) || cashbox.isGlobal)\n          )[0]\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос касс не выполнен'))\n  }\n}\n\nexport function seveEditCashbox() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.cashbox.edit,\n    title: state.cashbox.title,\n    balance: state.cashbox.balance,\n    type: state.cashbox.type,\n    isGlobal: state.cashbox.isGlobal,\n    isVirtual: state.cashbox.isVirtual,\n    deleted: state.cashbox.deleted,\n    permissions: state.cashbox.permissions,\n    employees: state.cashbox.employees,\n    branch_id: state.data.current_branch.id\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n    \n    await fetch(state.data.url_server + '/cashbox', request_config)\n    .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n    \n    await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'cashboxes',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCashboxEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_CASHBOX'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос касс не выполнен'))\n  }\n}\n\n\nexport function deleteCashbox(flag) {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.cashbox.edit,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n    \n    await fetch(state.data.url_server + '/cashbox', request_config)\n    .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n\n    await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'cashboxes',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusCashboxEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_CASHBOX'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос касс не выполнен'))   \n  }\n}\n\n\nexport function createPayment() {\n\n  const state = store.getState()\n\n  const now = Math.round(Date.now() / 1000)\n  const cashbox1 = state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n  const cashbox2 = state.payment.target_cashbox_id ? state.data.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n  const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n  const request_config = getRequestConfig({\n    cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n    description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n    deposit: state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n    income: state.payment.income,\n    outcome: -state.payment.outcome,\n    direction: state.payment.direction,\n    deleted: false,\n    can_print_fiscal: state.payment.can_print_fiscal,\n    is_fiscal: state.payment.is_fiscal,\n    created_at: now,\n    custom_created_at: state.payment.custom_created_at ? state.payment.custom_created_at : now,\n    tags: state.payment.tags,\n    cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n    client_id: state.payment.client_id ? state.payment.client_id : null,\n    employee_id: state.payment.employee_id,\n    order_id: state.payment.order_id ? state.payment.order_id : null,\n    target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n  })\n  \n  const request_config_2 = getRequestConfig({\n    custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n    cashbox_id: state.cashbox.current_cashbox.id,\n    tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payments', request_config)\n    .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n    await fetch(state.data.url_server + '/get_payments', request_config_2)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payments',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPaymentsEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_PAYMENTS'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос платежей не выполнен'))  \n   \n    await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'cashboxes',\n          data: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос касс не выполнен'))  \n\n    if(state.order.edit) {\n      fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n      .then(response =>  response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'EDIT_ORDER',\n            order: data.data[0]\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n  }\n}\n\nexport function addPayments() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n    cashbox_id: state.cashbox.current_cashbox.id,\n    tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n  })\n\n  return dispatch => {\n    \n    fetch(state.data.url_server + '/get_payments', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payments',\n          data: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос платежей не выполнен'))  \n  }\n}\n\n\nexport function deletePayment(flag) {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.payment.edit,\n    relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n    cashbox_id: state.cashbox.current_cashbox.id,\n    tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n  })\n\n  return async dispatch => {\n    \n    await fetch(state.data.url_server + '/payments', request_config)\n    .catch(() => bad_request('Запрос на удаление/восстановление платежа не выполнен'))\n\n    await fetch(state.data.url_server + '/get_payments', request_config2)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payments',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPaymentsCard',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_PAYMENTS'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос платежей не выполнен'))  \n    \n    await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'cashboxes',\n          data: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос касс не выполнен'))  \n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\nexport function createPrice() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    title: state.price.title,\n    margin: state.price.margin,\n    margin_type: state.price.margin_type,\n    deleted: state.price.deleted\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/discount_margin', request_config)\n    .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n    await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'discount_margin',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPriceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_PRICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос наценок не выполнен'))  \n  }\n}\n\n\nexport function savePrice() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    id: state.price.edit,\n    title: state.price.title,\n    margin: state.price.margin,\n    margin_type: state.price.margin_type,\n    deleted: state.price.deleted\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/discount_margin', request_config)\n    .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n    await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'discount_margin',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPriceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_PRICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос наценок не выполнен'))  \n  }\n}\n\nexport function deletePrice( flag ) {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    id: state.price.edit,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/discount_margin', request_config)\n    .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n    await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'discount_margin',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPriceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_PRICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос наценок не выполнен'))  \n  }\n}\n\n\nexport function addGroupeService() {\n\n  const state = store.getState()\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'group_dict_service',\n          data: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос категорий не выполнен'))  \n  }\n}\n\n\nexport function createGroupDictService() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    title: state.dictService.group_title,\n    deleted: false\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/group_dict_service', request_config)\n    .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n    await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'group_dict_service',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusGroupServiceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_GROPE_DICT_SERVICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос категорий не выполнен'))  \n  }\n}\n\n\nexport function saveGroupDictService() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.dictService.group_edit,\n    title: state.dictService.group_title\n    })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/group_dict_service', request_config)\n    .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n    await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'group_dict_service',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusGroupServiceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_GROPE_DICT_SERVICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос категорий не выполнен'))  \n  }\n}\n\nexport function deleteGroupDictService( flag ) {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.dictService.group_edit,\n    deleted: flag\n    })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/group_dict_service', request_config)\n    .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n    await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'group_dict_service',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusGroupServiceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_GROPE_DICT_SERVICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос категорий не выполнен'))  \n  }\n}\n\n\n\nexport function addDictService() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    category_id: state.dictService.seted_categiry\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/get_dict_service', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'dict_service',\n          data: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос услуг не выполнен'))  \n  }\n}\n\n\nexport function createDictService() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    title: state.dictService.title,\n    price: state.dictService.price,\n    cost: state.dictService.cost,\n    warranty: state.dictService.warranty,\n    code: state.dictService.code,\n    earnings_percent: state.dictService.earnings_percent,\n    earnings_summ: state.dictService.earnings_summ,\n    deleted: false,\n    category_id: state.dictService.category_id\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/dict_service', request_config)\n    .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n    await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'dict_service',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusServiceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_SERVICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос услуг не выполнен'))  \n  }\n}\n\nexport function saveDictService() {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.dictService.edit,\n    title: state.dictService.title,\n    price: state.dictService.price,\n    cost: state.dictService.cost,\n    warranty: state.dictService.warranty,\n    code: state.dictService.code,\n    earnings_percent: state.dictService.earnings_percent,\n    earnings_summ: state.dictService.earnings_summ,\n    deleted: state.dictService.deleted,\n    category_id: state.dictService.category_id\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/dict_service', request_config)\n    .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n    await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'dict_service',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusServiceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_SERVICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос услуг не выполнен'))  \n  }\n}\n\n\nexport function deleteDictService(flag) {\n\n  const state = store.getState()\n\n  let request_config = getRequestConfig({\n    id: state.dictService.edit,\n    deleted: flag\n  })\n  request_config.method = 'PUT'\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/dict_service', request_config)\n    .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n    await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'dict_service',\n          data: data.data,\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusServiceEditor',\n          value: false\n        })\n        dispatch({\n          type: 'RESET_SERVICE'\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос услуг не выполнен'))  \n  }\n}\n\nexport function addServicePrices() {\n\n  const state = store.getState()\n\n  return  dispatch => {\n\n    fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'service_prices',\n          data: data.data,\n      })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос цен на услуги не выполнен'))  \n  }\n}\n\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    id,\n    cost,\n    discount_margin_id,\n    service_id\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/service_prices', request_config)\n    .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n    await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'service_prices',\n          data: data.data,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос услуг не выполнен'))  \n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuRow } from '../../Redux/actions'\n\n\nfunction MenuRow(props) {\n  return (\n    <Link \n      className=\"menuRow\" \n      to={props.row.url}\n      style={props.menuRows.find(row => row.id === props.row.id).active ? {\n        backgroundColor: '#53585c',\n        borderLeftColor: props.current_branch.color \n      } : null}\n      onClick={() => props.changeStatusMenuRow(props.row.id)}\n    >\n      {props.row.image === 'task' ? (\n        <div className=\"taskNumber\">\n          <span className=\"taskNumber1\">8</span>\n        </div>\n      ) : (\n        <svg className=\"sidebarIcon\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n        </svg>\n      )}\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n  menuRows: state.data.menuRows,\n  current_branch: state.data.current_branch\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\n\n\n\nfunction LogoUser() {\n    \n    return (\n        <div className = 'avatar'> \n        \n            <img \n            src = 'ava.jpeg'  \n            className = 'imgAvatar' \n            alt = 'User avatar' />\n        </div>\n    )\n    \n}\n\nexport default LogoUser;\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = () => {\n    return (\n        <div className = 'tempPage'>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addData } from '../../Redux/actions'\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n   const [menuVisibel, setMenuVisibel] = useState(false)\n\n   return (\n      <div>\n      <div \n         className='menuBranch'\n         onClick={() => setMenuVisibel(!menuVisibel)}\n      >\n         <Icon \n            className='smalIcon'\n            icon={props.current_branch.icon} \n            color={props.current_branch.color}\n         />\n         <div className='sidebarBranch'>\n           {props.current_branch.name}\n         </div>\n      </div>\n      {menuVisibel ? <div className='listOptionsBranch'>\n         {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n            <div \n               key={branch.id}\n               className='listBranch'\n               onClick={() => {\n                  props.addData(branch, 'current_branch')\n                  setMenuVisibel(false)\n               }}\n            >\n               <Icon \n                  className='smalIcon'\n                  icon={branch.icon} \n                  color={branch.color}\n               />\n               <div className='ml5'>{branch.name}</div>\n            </div>\n         ))}\n      </div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_branch: state.data.current_branch,\n   branches: state.data.branches,\n   user_id: state.data.user.id\n   })\n\nconst mapDispatchToProps = {\n   addData\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './LogoUser';\nimport { connect } from 'react-redux'\nimport  Loader  from '../Loader/Loader';\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : <Loader/>}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.data.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilterAction } from '../../Redux/actions'\n\nfunction Header({changeFilter, search_word}) {\n\n   \n\n    const handleChange = (event) => {\n        event.preventDefault()\n        changeFilter(event.target.value) \n    }\n\n    \n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange = {handleChange}\n                        value = {search_word}\n                        />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    search_word: state.data.search_word\n})\n\nconst mapDispatchToProps = {\n    changeFilter: changeFilterAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { activeBadgeAction } from '../../Redux/actions'\n\n\n\n\nfunction MainFilter({data: {color, title, count, img, filters}, activeBadge}) { \n\n    return (\n        <div \n        className = 'mainFilter' \n        style = {{backgroundColor: color}}\n        onClick = {() => activeBadge(filters)}\n        >\n            <div className = 'filterIcon'>\n                <svg className = \"svgFilterIcon\">\n                    <path  d = {img}></path>\n                </svg>\n            </div>\n            <div className = 'filterName'>\n                <div className = 'filterName-value'>{count} {count === 1 ? 'заказ': ((count < 5) ? 'заказа': 'заказов') }</div>\n                <div className = 'filterName-title'> {title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    activeBadge: activeBadgeAction\n}\n\nexport default connect(null, mapDispatchToProps) (MainFilter);","import React from 'react'\nimport MainFilter from './MainFilter';\nimport dataMainFilters from '../../data/dataMainFilters'\nimport { connect } from 'react-redux';\n\n\nfunction Filters({badges}) {\n \n    return (\n        <div className = 'mainFilters'>\n            {badges.map(badge => {\n                return (\n                   badge.count ? <MainFilter data = {badge} key = {badge.id}/> : null\n                    )\n                }\n            )\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.data.badges\n})\n\nexport default connect(mapStateToProps) (Filters);","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = ({data: { created_by_id, created_at}, employees}) => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Lable = ({data: {id_label, urgent}}) => {\n   return (\n      <td className=\"orderLabel tableRow\">\n         <span className={urgent ? 'fire-text': null}>{ id_label }</span>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = ({data : {estimated_done_at, overdue, status, remaining }}) => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 24) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!overdue && status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(remaining, status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { changeSortAction } from '../../Redux/actions'\n\n\nfunction TableHeader(props) {\n\n  //  let startDrag = 0\n  //  let endDrag = 0\n  //  let deltaDrag = 0\n   \n   \n   \n  //  function handleDragStart(event) {\n  //     startDrag = event.pageX\n      \n      \n  //  }\n\n  //  function handleDragEnd(event) {\n  //     endDrag = event.pageX\n  //     deltaDrag = endDrag - startDrag \n  //     console.log('отрезок :', deltaDrag)\n  //     const currentSize = parseInt(tableOrdersHeaders.find(header => header.field === data.field).width)\n  //     resizeOrderHeader(data.field,  currentSize + deltaDrag)\n\n  //  }\n\n\n\n\n  return (\n     <>\n    <th className = 'tableColumnHeader'\n      style = {{ minWidth: `${props.data.width}px` }}\n      onClick = {() => props.changeSort(props.data.field)}\n    >\n      {props.data.title}\n      <span>\n        {props.mainFilter.field_sort === props.data.field ? (props.mainFilter.sort === 'asc' ? '↓' : '↑') : null}\n      </span>\n    </th>\n    {/* <th \n    className = 'cursorResizeTable'\n    onDragStart = {handleDragStart}\n    onDragEnd = {handleDragEnd}\n    /> */}\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  mainFilter: state.filter.mainFilter\n})\n\nconst mapDispatchToProps = {\n  changeSort: changeSortAction,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TableHeader)\n","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nexport function bad_request(massage='') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return { type: 'LOGUOT' }\n}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function editOrder( order ) {\n  return {\n    type: 'EDIT_ORDER',\n    order\n  }\n}\n\nexport function resetOrder () {\n  return {\n    type: 'RESET_ORDER'\n  }\n}\n\nexport function addOrders() {\n\n  const state = store.getState()\n\n  let filters = state.filter.mainFilter\n  filters.engineer_id = !state.data.user.role.orders_visibility ? [state.data.user.id] : state.filter.mainFilter.engineer_id\n\n  return dispatch => {\n      \n    fetch(state.data.url_server + '/get_orders', getRequestConfig(filters))\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_ORDERS_SHOW',\n          ordersShow: data.data,\n          count: data.count\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос заказов не выполнен'))\n  }\n}\n\nexport function createOrder() {\n\n  const state = store.getState()\n\n    const request_config = getRequestConfig({\n          estimated_done_at: state.order.estimated_done_at,\n    \n          order_type_id: state.order.order_type_id,\n          client_id: state.order.client.id,\n          ad_campaign_id: state.order.ad_campaign_id,\n          manager_id: state.order.manager_id,\n          engineer_id: state.order.engineer_id ? state.order.engineer_id : null,\n          created_by_id: state.data.user.id,\n          branch_id: state.data.current_branch.id,\n          status_id: 1,\n\n          equipments: state.order.equipments,\n    \n          manager_notes: state.order.manager_notes,\n          estimated_cost: state.order.estimated_cost\n        })\n    \n    let filters = state.filter.mainFilter\n    filters.engineer_id = !state.data.user.role.orders_visibility ? [state.data.user.id] : state.filter.mainFilter.engineer_id\n\n    return async dispatch => {\n  \n      await fetch(state.data.url_server + '/orders', request_config)\n      .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n      await fetch(state.data.url_server + '/get_orders', getRequestConfig(filters))\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'ordersShow',\n            data: data.data\n          })\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'count',\n            data: data.count\n          })\n          dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderEditor',\n            value: false\n          })\n          dispatch({\n            type: 'RESET_ORDER'\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос заказов не выполнен'))  \n      }\n    }\n\n\nexport function changeStatus( status_id, order_id) {\n\n   const state = store.getState()\n \n   const request_config1 = getRequestConfig({\n     id: order_id,\n     status_id: status_id\n   }) \n   const request_config2 = getRequestConfig(state.filter.mainFilter)\n \n \n   return async dispatch => {\n     \n     await fetch(state.data.url_server + '/change_order_status', request_config1)\n     .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n \n     await fetch(state.data.url_server + '/get_orders', request_config2)\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_ORDERS_SHOW',\n           ordersShow: data.data,\n           count: data.count\n         })\n         if (state.order.edit) {\n           dispatch({\n             type: 'EDIT_ORDER',\n             order: data.data.find(order => order.id === state.order.edit),\n           })\n         }\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос заказов не выполнен'))\n   }\n }\n\n export function saveOrder() {\n\n  const state = store.getState()\n\n    let request_config = getRequestConfig({\n      id: state.order.edit,   \n      assigned_at: state.order.assigned_at,\n      duration: state.order.duration,\n      estimated_done_at: state.order.estimated_done_at,\n      scheduled_for: state.order.scheduled_for,\n      warranty_date: state.order.warranty_date, \n      status_deadline: state.order.status_deadline,\n   \n      ad_campaign_id: state.order.ad_campaign_id,\n      client: state.order.client.id,\n      order_type_id: state.order_type_id,\n      manager_id: state.order.manager_id,\n      engineer_id: state.order.engineer_id,\n      kindof_good: state.order.kindof_good.id,\n      brand: state.order.brand.id,\n      subtype: state.order.subtype.id,\n      model: state.order.model.id,\n\n      serial: state.order.serial,\n      malfunction: state.order.malfunction,\n      packagelist: state.order.packagelist,\n      appearance: state.order.appearance,\n      engineer_notes: state.order.engineer_notes,\n      manager_notes: state.order.manager_notes,\n      resume: state.order.resume,\n      cell: state.order.cell, \n   \n      estimated_cost: state.order.estimated_cost, \n      overdue: state.order.overdue\n    })\n    request_config.method = 'PUT'\n    \n    let filters = state.filter.mainFilter\n    filters.engineer_id = !state.data.user.role.orders_visibility ? [state.data.user.id] : state.filter.mainFilter.engineer_id\n\n    return async dispatch => {\n  \n      await fetch(state.data.url_server + '/orders', request_config)\n      .catch(() => bad_request('Запрос на изменение заказов не выполнен'))\n\n      fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n     .then(response =>  response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'EDIT_ORDER',\n           order: data.data[0]\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос заказов не выполнен'))\n      }\n    }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addOrders } from '../../Redux/actions/orderActions'\nimport { changeStatusMenuVisibleAction, refreshDataOrder } from '../../Redux/actions'\nimport { changeStatus } from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    return (\n      <>\n        <span>{props.groupName}</span>\n        {props.status.filter((status) => status.group === props.groupIdx + 1)\n          .map((status) => {\n            return (\n              <li\n                key={status.id}\n                className=\"statusListRow\"\n                style={{ backgroundColor: status.color }}\n                onClick={props.order.edit ? () => {\n                  props.changeStatus(status.id, props.orderId)\n                  props.refreshDataOrder(props.order.edit)\n                } : () => {\n                  props.changeStatus(status.id, props.orderId)\n                  props.changeStatusMenuVisible(props.orderId)\n                }}\n              >\n                {status.name}\n              </li>\n            )\n          })}\n      </>\n    )\n}\n\nconst mapStateToProps = state => ({\n  status: state.data.status,\n  order: state.order\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible: changeStatusMenuVisibleAction,\n  changeStatus,\n  addOrders,\n  refreshDataOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisibleAction, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (\n      // event.target.parentElement.id !== 'statusList' &&\n      // event.target.id !== 'statusList'\n      !event.path.map(el => el.id).includes('statusListOrderForm') \n    ) {\n      props.changeStatusMenuVisible(props.orderId)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          orderId={props.orderId}\n          groupIdx={idx}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible: changeStatusMenuVisibleAction,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport { changeStatusMenuVisibleAction } from '../../../Redux/actions'\n\nconst Status = ({data: {status, id}, statusMenuVisible, changeStatusMenuVisible}) => {\n\n\n   return (\n      <td>\n      <div className=\"orderStatus\">\n        <span>\n          <button\n            className=\"statusButtom\"\n            type=\"button\"\n            style={{ backgroundColor: status.color }}\n            onClick={() => changeStatusMenuVisible(id)}\n          >\n            {status.name}\n            <span className=\"statusSeparate\"> | &#6662;</span>\n          </button>\n          {statusMenuVisible[[id]] ? ( <StatusList orderId = {id}/> ) : null}\n        </span>\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusMenuVisible: state.view.statusMenuVisible\n   })\n\nconst mapDispatchToProps = {\n   changeStatusMenuVisible: changeStatusMenuVisibleAction\n}   \n\n export default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Brand = ({data: {brand}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {brand.title}\n     </span>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(Brand)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = ({data: {kindof_good}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {kindof_good}\n     </span>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(KindOfGood)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Malfunction = ({data: {malfunction}}) => {\n   return (\n    <td>\n      <div className=\"tableText tableOne\">\n         {malfunction}\n      </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Engineer = ({data: {engineer_id}, employees}) => {\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n\n   return (\n     <td>\n     <div>\n        {getEmploeeName(engineer_id)}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 10)}-${phone.slice(9, 12)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = ({data: {client}}) => {\n   return (\n      <td>\n      <div className=\"tableClientName\">{client.name}</div>\n      <div className=\"orderDate\">{showPhone(client.phone[0].number)}</div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = ({data: {price}}) => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{price ? price : null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = ({data: {engineer_notes}}) => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = ({ data }) => {\n   return (\n     <td>\n         <div className=\"tableText row\">\n            <div>\n               <img\n                  className=\"icon_equipment\"\n                  src={data.kindof_good.icon}\n               />\n            </div>\n            <div>\n               <div className='noWr'>\n                  {data.kindof_good.icon ? null : <span className=\"\">{data.kindof_good.title}</span>}\n                  <span className=\"ml5\">{data.brand.title}</span>\n               </div>\n               <div className='noWr'>\n                  <span>{data.subtype.title}</span>\n                  <span className=\"orderDate ml5\">{data.model.title}</span>\n               </div>\n            </div>\n         </div>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n     // addTodo: todo => ref('todos').push(todo)\n   })\n  \n export default connect(mapStateToProps)(Equipment)","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/>\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?  <StatusList orderId = {props.order.edit}/>  : null}\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   current_branch: state.data.current_branch,\n   statusStatusList: state.view.statusStatusList\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React from 'react'\n\nconst Tabs = (props) => {\n   return (\n      <div className='tabs'>\n         {props.list.map((tab, idx) => (\n            <div \n               key={idx}\n               className={props.tab === idx ? 'tabOn' : 'tab'}\n               onClick={() => props.func(idx, props.tab_field ? props.tab_field : 'tabs')}\n            >\n               {tab}\n            </div>\n         ))}\n      </div>\n\n   )\n}\n\n  \n export default Tabs","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\n\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   return props.unvisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (props.current_id ? `${current.last_name} ${current.first_name}` : 'не назначен') : \n               (props.current_id ? (current.title ? current.title : current.name) : 'Выберете тип')}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // unvisible={false}","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../Redux/actions'\n\nimport ChooseOfList from '../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n  \n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id }\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\n\nconst LableInput = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.onChange}\n                  value={props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''","\nimport React, { useState } from 'react'\n\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.unvisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// unvisible={false}","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\n\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeClientEditorForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientEditorForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientEditorForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientEditorForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientEditorForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientEditorForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientEditorForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n  changeClientEditorForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={(event) => {\n                  if (event.key === 'Enter') {\n                    props.setPhoneTitle(props.idx, event.target.value)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport InputMask from 'react-input-mask'\n\nimport {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport { icon_trush } from '../../../data/icons'\n\nconst AddPhones = (props) => {\n  return (\n    <div>\n      {props.client.phone.map((phone, idx) => (\n        <div key={idx}>\n          <PhoneTitle idx={idx} title={phone.title} />\n\n          <div className=\"inputPhoneBox\">\n            <InputMask\n              mask=\"+7(999) 999-99-99\"\n              className=\"textInput w250\"\n              onChange={(event) =>\n                props.changeClientEditorPhone(\n                  idx,\n                  event.target.value.replace(/[^0-9]/g, '')\n                )\n              }\n              value={phone.number}\n              onBlur={(event) =>\n                props.setVisibleListFlag(\n                  'inputClientPhoneChecked',\n                  idx,\n                  event.target.value.replace(/[^0-9]/g, '').length === 11\n                )\n              }\n              style={\n                !props.view.inputClientPhoneChecked[idx]\n                  ? { borderColor: 'red' }\n                  : null\n              }\n            />\n            {idx !== 0 ? (\n              <div\n                onClick={() => {\n                  props.deleteCountNumber(idx)\n                  props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                }}\n              >\n                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                  <path d={icon_trush} />\n                </svg>\n              </div>\n            ) : null}\n          </div>\n          {!props.view.inputClientPhoneChecked[idx] ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n          <div className=\"checkbox mt5\">\n            <input\n              type=\"checkbox\"\n              onChange={() => props.setPhoneNotify(idx)}\n              checked={phone.notify}\n            />\n            <label>Согласен получать SMS</label>\n          </div>\n        </div>\n      ))}\n      <div\n        className=\"addPhone\"\n        onClick={() => {\n          props.addPhoneCounter()\n          props.addVisibleFlag('inputClientPhoneChecked')\n        }}\n      >\n        + Добавить телефон\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeClientEditorForm } from '../../../Redux/actions'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeClientEditorForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeClientEditorForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientEditorForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n  changeClientEditorForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  resetDataClient,\n  setVisibleListFlag,\n  createNewClient,\n  changeClientTabs,\n  saveChangeClient,\n  deleteClient,\n} from '../../../Redux/actions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport { check0_100 } from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\n\nconst ClientEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewClient')) {\n      if (props.view.statusCreateNewClient) {\n        //  props.setVisibleFlag('statusCreateNewClient', false)\n        props.resetDataClient()\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handelCreateClient = () => {\n    if (\n      props.client.name &&\n      props.view.inputClientPhoneChecked.every((ph) => ph) &&\n      check0_100(props.client.discount_materials) &&\n      check0_100(props.client.discount_goods) &&\n      check0_100(props.client.discount_services)\n    ) {\n      props.createNewClient()\n    } else {\n      if (!props.client.name) {\n        props.setVisibleFlag('inputClientNameChecked', false)\n      }\n      if (!check0_100(props.client.discount_materials)) {\n        props.setVisibleFlag('inputClientDiscMatChecked', false)\n      }\n      if (!check0_100(props.client.discount_goods)) {\n        props.setVisibleFlag('inputClientDiscGoodChecked', false)\n      }\n      if (!check0_100(props.client.discount_services)) {\n        props.setVisibleFlag('inputClientDiscServChecked', false)\n      }\n      props.client.phone.forEach((phone, idx) => {\n        if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n          props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n        }\n      })\n    }\n  }\n\n  const handelSaveClient = () => {\n    if (\n      props.client.name &&\n      props.view.inputClientPhoneChecked.every((ph) => ph) &&\n      check0_100(props.client.discount_materials) &&\n      check0_100(props.client.discount_goods) &&\n      check0_100(props.client.discount_services)\n    ) {\n      props.saveChangeClient()\n    } else {\n      if (!props.client.name) {\n        props.setVisibleFlag('inputClientNameChecked', false)\n      }\n      if (!check0_100(props.client.discount_materials)) {\n        props.setVisibleFlag('inputClientDiscMatChecked', false)\n      }\n      if (!check0_100(props.client.discount_goods)) {\n        props.setVisibleFlag('inputClientDiscGoodChecked', false)\n      }\n      if (!check0_100(props.client.discount_services)) {\n        props.setVisibleFlag('inputClientDiscServChecked', false)\n      }\n      props.client.phone.forEach((phone, idx) => {\n        if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n          props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n        }\n      })\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n        <div className=\"createNewTitle\">\n          {props.client.edit ? props.client.name : 'Новый клиент'}\n        </div>\n\n        <div className='contentEditor'>\n        {props.client.edit ? (\n          <div>\n            <div className=\"tabs\">\n              <div\n                className={props.client.tabs === 1 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(1)}\n              >\n                Общие\n              </div>\n              <div\n                className={props.client.tabs === 2 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(2)}\n              >\n                Баланс\n              </div>\n              <div\n                className={props.client.tabs === 3 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(3)}\n              >\n                Обращения\n              </div>\n              <div\n                className={props.client.tabs === 4 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(4)}\n              >\n                Заказы\n              </div>\n              <div\n                className={props.client.tabs === 5 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(5)}\n              >\n                Платежи\n              </div>\n              <div\n                className={props.client.tabs === 6 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(6)}\n              >\n                Звонки\n              </div>\n              <div\n                className={props.client.tabs === 7 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(7)}\n              >\n                SMS\n              </div>\n              <div\n                className={props.client.tabs === 8 ? 'tabOn' : 'tab'}\n                onClick={() => props.changeClientTabs(8)}\n              >\n                Задачи\n              </div>\n            </div>\n\n            {props.client.tabs === 1 ? <ClientInfo /> : null}\n            {props.client.tabs === 2 ? <ClientBalans /> : null}\n            {props.client.tabs === 3 ? <ClientLeads /> : null}\n            {props.client.tabs === 4 ? <ClientOrder /> : null}\n            {props.client.tabs === 5 ? <ClientPayments /> : null}\n            {props.client.tabs === 6 ? <ClientCalls /> : null}\n            {props.client.tabs === 7 ? <ClientSMS /> : null}\n            {props.client.tabs === 8 ? <ClientTask /> : null}\n          </div>\n        ) : (\n          <ClientInfo />\n        )}\n        </div>\n\n        <BottomButtons\n          edit={props.client.edit}\n          create={handelCreateClient}\n          save={handelSaveClient}\n          delete={ props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n          recover={ props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n          close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n          deleted={props.client.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view,\n  client: state.client,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  resetDataClient,\n  setVisibleListFlag,\n  createNewClient,\n  changeClientTabs,\n  saveChangeClient,\n  deleteClient,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../Redux/actions'\nimport ClientEditor from '../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\n\nconst InputPhone = (props) => {\n\n   const value = `+${props.value.slice(0, 1)}(${props.value.slice(1, 4)}) ${props.value.slice(4, 7)}-${props.value.slice(7, 10)}-${props.value.slice(9, 12)}`\n\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`textInput ${props.disabled ? 'ds' : null}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.onChange}\n                  value={value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  disabled={props.disabled}\n               />\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(InputPhone)\n\n\n//  className=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''","import React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\nimport InputMask from 'react-input-mask'\n\nimport { changeNameClientFilter, changePhoneClientFilter, setVisibleFlag, changeOrderFormS } from '../../../Redux/actions'\nimport { showPhone } from '../../general/utils'\nimport ClientEditor from '../../Clients/ClientEditor/ClientEditor'\nimport InputPhone from '../../general/InputPhone'\n\nconst SetClient = (props) => {\n\n   const [listClientsVisible, setListClientsVisible] = useState(false)\n   const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n   const clickHandel1 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n         ) {\n         if (listClientsVisible) {\n            setListClientsVisible(false)\n      }}\n    }\n\n    const clickHandel2 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n         !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n         ) {\n         if (listClientsPhoneVisible) {\n            setListClientsPhoneVisible(false)\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel1)\n      window.addEventListener('click', clickHandel2)\n      return () => {\n        window.removeEventListener('click', clickHandel1)\n        window.removeEventListener('click', clickHandel2)\n      }\n    })\n\n\n\n   return (\n      <div className='cleintForm'>\n\n         <div className = 'formRow'>\n            <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n            <div className='blockImput'>\n               <div \n                  id='orderInputBoxOfOrder'\n                  className='orderInputBox'\n                  onClick={() => setListClientsVisible(true)}\n                  style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n               >\n                  <input\n                     className='optionFilterInput'\n                     onChange={event => props.changeNameClientFilter(event.target.value)}\n                     // onBlur={() => props.setVisibleFlag('checkedOrderClient', !Object.values(props.client).length)}\n                  />\n                  <div \n                     className='simbolButton'\n                     onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                  >\n                     +\n                  </div>\n                  <div className='simbolButton'>&#6662;</div> \n               </div>\n               {props.view.checkedOrderClient ? <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n               {listClientsVisible ? \n               <div className='listFilter' id='listFilterOfOrOrder'>\n               {props.clientShow.map(client => (\n                  <div \n                     className='rowGropList' \n                     key={client.id}\n                     onClick={() => {\n                        props.changeOrderFormS(client, 'client')\n                        setListClientsVisible(false)\n                     }}\n                  >\n                     <div>{client.name}</div>\n                     <div className='orderDate'>\n                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                     </div>\n                  </div>\n               ))}\n               </div> : null}\n\n            </div>\n            </div>\n\n            <div className = 'formRow'>\n\n               <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n               <div className='blockImput'>\n\n                  <div \n                     id='orderInputBoxOfOrderPhone'\n                     className='orderInputBox'\n                     onClick={() => setListClientsPhoneVisible(true)}\n                  >\n                     <InputMask \n                        mask=\"+7(999) 999-99-99\"\n                        className='optionFilterInput'\n                        onChange={event => props.changePhoneClientFilter(event.target.value)}\n                        value={props.phone}\n                     />\n                     <div \n                        className='simbolButton'\n                        onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                     >\n                        +\n                     </div>\n                     <div className='simbolButton'>&#6662;</div> \n                  </div>\n\n                 \n\n                  {listClientsPhoneVisible ? \n                  <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                  {props.clientShow.map(client => (\n                     <div \n                        className='rowGropList' \n                        key={client.id}\n                        onClick={() => {\n                           props.changeOrderFormS(client, 'client')\n                           setListClientsPhoneVisible(false)\n                        }}\n                     >\n                        <div>{client.name}</div>\n                        <div className='orderDate'>\n                           {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                        </div>\n                     </div>\n                  ))}\n                  </div> : null}\n\n               </div>\n               \n            </div>\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   clientShow: state.data.clientShow,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   changePhoneClientFilter,\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n  const [listVisible, setlistVisible] = useState(false)\n\n   const clickHandel = (event) => {\n\n      if ( \n          !event.path.map(el => el.id).includes('listOrderOfType') && \n          !event.path.map(el => el.id).includes('optionsOrderButtonOfType')\n      ) {\n         if (listVisible) {\n          setlistVisible(false)\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n\n   return (\n    <div className='formRow mt15'>\n\n      <div className='optionsTitle'>Тип заказа</div>\n      <div className='blockImput'>\n        <div \n          className='optionsFilterButton w150'\n          id='optionsOrderButtonOfType'\n          onClick={() => setlistVisible(true)}\n        > \n          <span>{props.order_type.find(type => type.id === props.order_type_id).name}</span>  \n          <span>&#6662;</span> \n        </div>\n        {listVisible ? <div className='listFilter' id='listOrderOfType'>\n\n            {props.order_type.map(type => {\n              return (\n\n                <div className='listTitle' key={type.id}>\n                    <div \n                    className='rowList'\n                    onClick={() => {\n                      props.changeOrderFormS(type.id, 'order_type_id')\n                      setlistVisible(false)\n                    }}\n                    >\n                      {type.name}\n                    </div>\n                </div>\n              )\n            })}\n            \n        </div> : null}\n      </div>\n    </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order_type_id: state.order.order_type_id\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleListFlag } from '../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleListFlag(props.checkedFlag, props.idx, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleListFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeBookForm(value, field) {\n  return {\n    type: 'CHANGE_BOOK_FORM',\n    field,\n    value,\n  }\n}\n\nexport function createEquipmentType(title) {\n  const state = store.getState()\n\n  const request_config = title ? getRequestConfig({ title }) :\n   getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n      })\n\n      const request_config2 = getRequestConfig({\n         title\n       })\n\n   return async (dispatch) => {\n      await fetch(state.data.url_server + '/equipment_type', request_config)\n         .catch(() => bad_request('Запрос на создание типа не выполнен'));\n\n      await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n         .then((response) => response.json())\n         .then((data) => {\n            if (data.success) {\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_types',\n               data: data.data\n            })\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_type_count',\n               data: data.count\n            })\n            } else {\n               console.warn(data.massage)\n            }\n         })\n         .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n   }\n}\n\nexport function addEquipmentType() {\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.book.filter_type,\n     page: state.book.page_type-1\n   })\n \n   return async (dispatch) => {\n     await fetch(state.data.url_server + '/get_equipment_type', request_config)\n       .then((response) => response.json())\n       .then((data) => {\n         if (data.success) {\n           dispatch({\n             type: 'ADD_DATA',\n             field: 'equipment_types',\n             data: data.data\n           })\n           dispatch({\n             type: 'ADD_DATA',\n             field: 'equipment_type_count',\n             data: data.count\n           })\n         } else {\n           console.warn(data.massage)\n         }\n       })\n       .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n   }\n }\n\nexport function createEquipmentBrand(idx, title) {\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n      title,\n      equipment_type_id: state.order.edit ? state.order.kindof_good.id : state.order.equipments[idx].kindof_good.id\n   })\n\n   const request_config2 = getRequestConfig({\n      title,\n      equipment_type_id: state.book.equipment_type.id,\n   })\n\n   return async (dispatch) => {\n      await fetch(state.data.url_server + '/equipment_brand', request_config)\n         .catch(() => bad_request('Запрос на создание бренда не выполнен'))\n\n      await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n         .then((response) => response.json())\n         .then((data) => {\n            if (data.success) {\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_brands',\n               data: data.data\n            })\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_brand_count',\n               data: data.count\n            })\n            } else {\n            console.warn(data.massage)\n            }\n         })\n         .catch(() => bad_request('Запрос брендов не выполнен'))\n   }\n}\n\nexport function addEquipmentBrand() {\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.book.filter_brand,\n     equipment_type_id: state.book.equipment_type.id,\n     page: state.book.page_brand-1\n   })\n \n   return async (dispatch) => {\n     await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n       .then((response) => response.json())\n       .then((data) => {\n         if (data.success) {\n           dispatch({\n             type: 'ADD_DATA',\n             field: 'equipment_brands',\n             data: data.data\n           })\n           dispatch({\n             type: 'ADD_DATA',\n             field: 'equipment_brand_count',\n             data: data.count\n           })\n         } else {\n           console.warn(data.massage)\n         }\n       })\n       .catch(() => bad_request('Запрос брендов не выполнен'))\n   }\n }\n\nexport function cteateEquipmentSubtype(idx, title) {\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n      title,\n      equipment_brand_id: state.order.edit ? state.order.brand.id : state.order.equipments[idx].brand.id \n   })\n   \n   const request_config2 = getRequestConfig({\n      title,\n      equipment_brand_id: state.book.equipment_brand.id,\n   })\n\n   return async (dispatch) => {\n      await fetch(state.data.url_server + '/equipment_subtype',request_config)\n      .catch(() => bad_request('Запрос на создание подтипа не выполнен'))\n\n      await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n         .then((response) => response.json())\n         .then((data) => {\n         if (data.success) {\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_subtypes',\n               data: data.data,\n            })\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_subtype_count',\n               data: data.count,\n            })\n         } else {\n            console.warn(data.massage)\n         }\n         })\n         .catch(() => bad_request('Запрос модулей не выполнен'))\n   }\n}\n\nexport function addEquipmentSubtype() {\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    title: state.book.filter_subtype,\n    equipment_brand_id: state.book.equipment_brand.id,\n    page: state.book.page_subtype-1\n  })\n\n  return async (dispatch) => {\n    await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'equipment_subtypes',\n            data: data.data,\n          })\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'equipment_subtype_count',\n            data: data.count,\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос модулей не выполнен'))\n  }\n}\n\nexport function createEquipmentModel(idx, title) {\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n      title,\n      equipment_subtype_id: state.order.edit ? state.order.subtype.id : state.order.equipments[idx].subtype.id \n   })\n\n   const request_config2 = getRequestConfig({\n      title,\n      equipment_subtype_id: state.book.equipment_subtype.id\n   })\n\n   return async (dispatch) => {\n      await fetch(state.data.url_server + '/equipment_model', request_config)\n      .catch(() => bad_request('Запрос на создание модели не выполнен'))\n\n      await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n         .then((response) => response.json())\n         .then((data) => {\n         if (data.success) {\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_models',\n               data: data.data,\n            })\n            dispatch({\n               type: 'ADD_DATA',\n               field: 'equipment_models_count',\n               data: data.count,\n            })\n         } else {\n            console.warn(data.massage)\n         }\n         })\n         .catch(() => bad_request('Запрос моделей не выполнен'))\n   }\n}\n\nexport function addEquipmentModel() {\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n    title: state.book.filter_model,\n    equipment_subtype_id: state.book.equipment_subtype.id,\n    page: state.book.page_model-1\n  })\n\n  return async (dispatch) => {\n    await fetch(state.data.url_server + '/get_equipment_model', request_config)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'equipment_models',\n            data: data.data,\n          })\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'equipment_models_count',\n            data: data.count,\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос моделей не выполнен'))\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS } from '../../../Redux/actions'\nimport { createEquipmentBrand, addEquipmentBrand, changeBookForm} from '../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../data/icons'\n\nconst SetOrderBrand = (props) => {\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n  }, [props.book.equipment_type, props.book.filter_brand])\n\n\n  const edit = props.order.edit\n  const disabled = !Object.values(props.book.equipment_type).length\n  const brand = props.order.edit ? props.order.brand : props.order.equipments[props.idx].brand\n  const seted = !!Object.values(brand).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS({}, 'brand')\n      props.changeOrderFormS({}, 'subtype')\n      props.changeOrderFormS({}, 'model')\n    } else {\n      props.resetEquipment(props.idx, 'brand')\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_brand')\n  }\n\n  const setBrand = (idx, brand) => {\n    edit ? props.changeOrderFormS(brand, 'brand') : props.setOrderEquipment(idx, 'brand', brand)\n    props.changeBookForm(brand, 'equipment_brand')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.setVisibleListFlag('checkedOrderBrand', props.idx, true)\n    props.changeBookForm('', 'filter_brand')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfBrand\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n        style={!props.view.checkedOrderBrand[props.idx] ? { borderColor: 'red' } : null}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={event => props.changeBookForm(event.target.value, 'filter_brand')}\n          placeholder=\"Выбирете бренд\"\n          value={seted ? brand.title : props.book.filter_brand}\n          disabled={disabled || seted}\n        />\n        {seted ? \n          <svg\n            className=\"icon-close\"\n            viewBox=\"0 0 22 22\"\n            onClick={ reset }\n          >\n            <path d={icon_close} />\n          </svg> : <span>&#6662;</span>}\n      </button>\n      {!props.view.checkedOrderBrand[props.idx] ? (\n        <div className=\"errorMassageInput\">\n          {'Необоходимо выбрать из списка'}\n        </div>\n      ) : null}\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfBrand\">\n          {props.equipment_brands.map((brand) => {\n              return  (\n                <div\n                  key={brand.id}\n                  className=\"rowGropList\"\n                  onClick={() => setBrand(props.idx, brand)}\n                >\n                  {brand.title}\n                </div>\n              ) \n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                    props.createEquipmentBrand(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_brand')\n                    // props.addEquipmentBrand()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить бренд\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  equipment_brands: state.data.equipment_brands,\n  order: state.order,\n  view: state.view,\n  book: state.book\n})\n\nconst mapDispatchToProps = {\n  createEquipmentBrand,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addEquipmentBrand,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../Redux/actions'\nimport { createEquipmentType, addEquipmentType, changeBookForm } from '../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../data/icons'\n\nconst SetOrderGroupe = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    props.addEquipmentType()\n  }, [props.book.filter_type])\n\n  const edit = props.order.edit\n  // const types = edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good\n  const types = useMemo(() => edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good, [props.order.kindof_good, props.order.equipments[props.idx].kindof_good])\n  const seted = !!Object.values(types).length \n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n       !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n       ) {\n       if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS( {}, 'kindof_good' )\n      props.changeOrderFormS( {}, 'brand' )\n      props.changeOrderFormS( {}, 'subtype' )\n      props.changeOrderFormS( {}, 'model' ) \n    } else {\n      props.resetEquipment(props.idx, 'kindof_good')\n      props.resetEquipment(props.idx, 'brand')\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_type')\n  }\n\n\n  const setOrderType = (idx, equipment) => {\n    edit ? props.changeOrderFormS( equipment, 'kindof_good' ) : props.setOrderEquipment(idx, 'kindof_good', equipment)\n    props.changeBookForm(equipment, 'equipment_type')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_type')\n  }\n\n   return (\n    <>\n    \n      <button \n        className={false ? 'optionsEquipmentChoosed' : 'optionsFilterText'}\n        id='optionsOrderTextOfGroup'\n        onClick={() => setVisibleList(true)}\n        disabled={seted}\n        style={!props.view.checkedOrderKindofGood[props.idx] ? {borderColor: 'red'} : null}\n      > \n        <input \n          className={false ? 'optionEquipmentInputChoosed' : 'optionFilterInput'}\n          onChange={event => props.changeBookForm(event.target.value, 'filter_type')}\n          placeholder='Выбирете группу'\n          value={seted ? types.title : props.book.filter_type}\n          disabled={seted}\n        />\n        {seted ?\n        <svg \n          className=\"icon-close\"  \n          viewBox=\"0 0 22 22\"\n          onClick={ reset }\n        >\n          <path d={icon_close}/>\n        </svg> :\n        <span>&#6662;</span> }\n      </button>\n      {!props.view.checkedOrderKindofGood[props.idx] ? <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n      {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n        {props.equipment_types.map(equipment => {\n      \n        return (\n          <div\n            key={equipment.id} \n            className='rowGropList'\n            onClick={() => setOrderType(props.idx, equipment) }\n          >\n            {equipment.title}\n          </div> \n        )})}\n        <div className='btmsts'>\n        {visibleBotton ? \n        <input \n          className='optionFilterInput'\n          autoFocus\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') { \n              props.createEquipmentType(event.target.value)\n              props.changeBookForm(event.target.value, 'filter_type')\n              // props.addEquipmentType()\n              setVisisbleBotton(false)\n              \n            } \n          }}\n          placeholder = 'Введите и нажмиете Enter' \n        /> :\n        <div \n          className='btnstsTitle'\n          onClick={() => setVisisbleBotton(true)}\n        >\n          Добавить тип\n        </div>}\n        </div>\n\n      </div> : null}\n      </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  equipment_types: state.data.equipment_types,\n  order: state.order,\n  view: state.view,\n  book: state.book\n})\n\nconst mapDispatchToProps = {\n  createEquipmentType,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addEquipmentType,\n  changeBookForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, changeOrderFormS } from '../../../Redux/actions'\nimport { createEquipmentModel, addEquipmentModel, changeBookForm } from '../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../data/icons'\n\nconst SetOrderModel = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n  }, [props.book.equipment_subtype, props.book.filter_model])\n\n  const edit = props.order.edit\n\n  const model = edit ? props.order.model: props.order.equipments[props.idx].model\n  const disabled = !Object.values(props.book.equipment_subtype).length\n  const seted = !!Object.values(model).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const setModel = (idx, model) => {\n    edit ? props.changeOrderFormS(model, 'model') : props.setOrderEquipment(idx, 'model', model)\n    props.changeBookForm(model, 'equipment_model')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_model')\n  }\n\n  const reset = () => {\n    edit ? props.changeOrderFormS({}, 'model') : props.resetEquipment(props.idx, 'model')\n    props.changeBookForm({}, 'equipment_model')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfModel\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={ event => props.changeBookForm(event.target.value, 'filter_model')}\n          placeholder=\"Выбирете модель\"\n          value={seted ? model.title : props.book.filter_model}\n          disabled={disabled || seted}\n        />\n        {seted ? (\n          <svg\n            className=\"icon-close\"\n            viewBox=\"0 0 22 22\"\n            onClick={ reset }\n          >\n            <path d={icon_close} />\n          </svg>\n        ) : (\n          <span>&#6662;</span>\n        )}\n      </button>\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfModel\">\n          {props.equipment_models.map((model) => {\n              return (\n                <div\n                  key={model.id}\n                  className=\"rowGropList\"\n                  onClick={() => setModel(props.idx, model) }\n                >\n                  {model.title}\n                </div>\n              ) \n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={(event) => {\n                  if (event.key === 'Enter') {\n                    props.createEquipmentModel(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_model')\n                    // props.addEquipmentModel()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить модель\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  equipment_models: state.data.equipment_models,\n  order: state.order,\n  book: state.book\n})\n\nconst mapDispatchToProps = {\n  createEquipmentModel,\n  setOrderEquipment,\n  resetEquipment,\n  changeOrderFormS,\n  addEquipmentModel,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS } from '../../../Redux/actions'\nimport { cteateEquipmentSubtype, changeBookForm, addEquipmentSubtype } from '../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../data/icons'\n\nconst SetOrderSubtype = (props) => {\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n  }, [props.book.equipment_brand, props.book.filter_subtype])\n\n  const edit = props.order.edit\n  const subtype = edit ? props.order.subtype : props.order.equipments[props.idx].subtype\n  const disabled = !Object.values(props.book.equipment_brand).length\n  const seted = !!Object.values(subtype).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS({}, 'subtype')\n      props.changeOrderFormS({}, 'model')\n    } else {\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_subtype')\n\n  }\n\n  const setSubtype = (idx, subtype) => {\n    edit ? props.changeOrderFormS(subtype, 'subtype') :props.setOrderEquipment(idx, 'subtype', subtype)\n    props.changeBookForm(subtype, 'equipment_subtype')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.setVisibleListFlag('checkedOrderSubtype', props.idx, true)\n    props.changeBookForm('', 'filter_subtype')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfSubtype\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n        style={ !props.view.checkedOrderSubtype[props.idx] ? { borderColor: 'red' } : null}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={event => props.changeBookForm(event.target.value, 'filter_subtype')}\n          placeholder=\"Выбирете модуль / серию\"\n          value={seted ? subtype.title : props.book.filter_subtype}\n          disabled={disabled || seted}\n        />\n        {seted ? \n          <svg className=\"icon-close\" viewBox=\"0 0 22 22\" onClick={reset}>\n            <path d={icon_close} />\n          </svg> : <span>&#6662;</span>\n        }\n      </button>\n      {!props.view.checkedOrderSubtype[props.idx] ?  <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n          {props.equipment_subtypes.map((subtype) => {\n              return (\n                <div\n                  key={subtype.id}\n                  className=\"rowGropList\"\n                  onClick={() => setSubtype(props.idx, subtype)}\n                >\n                  {subtype.title}\n                </div>\n              )\n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={(event) => {\n                  if (event.key === 'Enter') {\n                    props.cteateEquipmentSubtype(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_subtype')\n                    // props.addEquipmentSubtype()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить модуль / серию\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  equipment_subtypes: state.data.equipment_subtypes,\n  order: state.order,\n  view: state.view,\n  book: state.book\n})\n\nconst mapDispatchToProps = {\n  cteateEquipmentSubtype,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  changeBookForm,\n  addEquipmentSubtype\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n} from '../../../Redux/actions'\nimport { icon_trush } from '../../../data/icons'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\nimport { sortedIndex } from 'lodash'\n\nconst ChooseEquipment = (props) => {\n  return (\n    <div>\n      <div className=\"formRow mt15\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle\">Изделиe и неисправность</div>\n      </div>\n      {props.order.equipments.map((equipment, idx) => {\n        return (\n          <div className=\"orderDevice\" key={idx}>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Тип устройства<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderGroup idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Бренд<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderBrand idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Модуль / Серия<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderSubtype idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Модель</div>\n              <div className=\"blockImput\">\n                <SetOrderModel idx={idx} />\n              </div>\n            </div>\n            <LabelInputOrder\n              idx={idx}\n              className=\"formRow\"\n              title=\"Неисправность\"\n              name=\"malfunction\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'malfunction', event.target.value)\n              }\n              value={props.order.equipments[idx].malfunction}\n              checkedFlag=\"inputMalfunctionChecked\"\n              checked={props.view.inputMalfunctionChecked[idx]}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Комплектация\"\n              name=\"packagelist\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'packagelist', event.target.value)\n              }\n              value={props.order.equipments[idx].packagelist}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Внешинй вид\"\n              name=\"appearance\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'appearance', event.target.value)\n              }\n              value={props.order.equipments[idx].appearance}\n            />\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Срочно</div>\n              <div className=\"blockImput\">\n                <div className=\"checkbox pd-tb-5 al-itm-fs\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={(event) =>\n                      props.changeOrderForm(idx, 'urgent', event.target.checked)\n                    }\n                    checked={props.order.equipments[idx].urgent}\n                  />\n                  <label></label>\n                  <div\n                    className=\"whiteButton simbolBotton pz-r320\"\n                    onClick={() => props.deleteDevice(idx)}\n                  >\n                    <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                      <path d={icon_trush} />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n\n      <div className=\"formRow jc-c\">\n        <div\n          className=\"fs14 addPhone\"\n          onClick={() => props.addAnotherEquipment()}\n        >\n          + Устройство\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseEquipment)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS } from '../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n  return (\n    <div>\n\n      <div className='formRow mt15'>\n        <div className='optionsTitle'></div>\n        <div className='orderFormTitle'>Изделиe и неисправность</div>\n      </div>\n\n          <div className='orderDevice'>\n            \n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Тип устройства<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderGroup idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Бренд<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderBrand idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Модуль / Серия<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderSubtype idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>Модель</div>\n              <div className='blockImput'>\n                <SetOrderModel idx={0} />\n              </div>\n            </div>\n\n            <LabelInputOrder\n              idx={23}\n              className='formRow'\n              title='Неисправность'\n              name='malfunction'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'malfunction') }\n              value={props.order.malfunction}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Комплектация'\n              name='packagelist'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'packagelist')}\n              value={props.order.packagelist}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Внешинй вид'\n              name='appearance'\n              onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n              value={props.order.appearance}\n            />\n            <div className='formRow'>\n              <div className='optionsTitle'>Срочно</div>\n              <div className='blockImput'>\n                <div className='checkbox pd-tb-5 al-itm-fs'>\n                  <input\n                    type='checkbox'\n                    onChange={(event) =>\n                      props.changeOrderFormS('urgent', event.target.checked)\n                    }\n                    checked={props.order.urgent}\n                  />\n                  <label></label>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, { useState, useEffect } from 'react'\n\n\nimport { showDate } from './utils'\n\nimport Icon from './Icon'\nimport { icon_calendar } from '../../data/icons'\n\nconst ChooseDate = (props) => {\n\n   const [current_date, setCurrent_day] = useState(new Date) \n   const [visibleListMonth, setVisibleListMonth] = useState(false)\n   const [visibleInputYear, setVisibleInputYear] = useState(false)\n   const [visibleCalendar, setVisibleCalendar] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`monthList`) ) {\n         if (visibleListMonth) {\n            setVisibleListMonth(false)\n      }}\n      if (!event.path.map(el => el.id).includes(`calendar`) ) {\n         if (visibleCalendar) {\n            setVisibleCalendar(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n   const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n   let first = new Date(current_date)\n   // first.setHours(0, 0, 0, 0)\n   first.setDate(1)\n   first.setTime(first.getTime() - (first.getDay() || 7)*24*60*60*1000)\n   \n\n   let current_days = []\n   for (let i=0; i<42; i++) {\n      current_days[i] = new Date(first.getTime() + 24*60*60*1000)\n      first.setTime(first.getTime() + 24*60*60*1000)\n   }\n\n   const compareDates = (date1, date2) => {\n      return   date1.getDate() === date2.getDate() && \n               date1.getMonth() === date2.getMonth() && \n               date1.getFullYear() === date2.getFullYear()\n   }\n\n   const handleInputYear = (value) => {\n      let out = value.replace(/[^0-9]/g, '')\n      if (value > 9999) out = 9999\n      if (value < 0) out = 0\n      setCurrent_day(new Date(current_date.setFullYear(out)))\n   }\n\n   return (\n      <div>\n         <div \n            className='dateContaner'\n            onClick={() => setVisibleCalendar(true)}\n         >\n            <Icon \n               className='icon-s2 mlr5'\n               icon={icon_calendar}\n               color='gray'\n            />\n            <div>{showDate(props.current_date/1000)}</div>\n         </div>\n\n         {visibleCalendar && !props.disabled ? \n         <div className='calendar' id='calendar'>\n\n            <div className='calendarNavi'>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() - 1)))}\n               >\n                  {'<'}\n               </div>\n\n               <div className='row'>\n                  <div \n                     className='currMonth'\n                     onClick={() => setVisibleListMonth(!visibleListMonth)}\n                  >\n                     <div>{months[current_date.getMonth()]}</div><div className='gu'>&#6662;</div>\n                  </div>\n\n                  {visibleInputYear ? \n                  <input\n                     className='optionFilterInput w30'\n                     autoFocus\n                     onChange={event => handleInputYear(event.target.value)}\n                     value={current_date.getFullYear()}\n                     onBlur={() => setVisibleInputYear(false)}\n                  /> :\n                  <div \n                     className='pd5'\n                     onDoubleClick={() => setVisibleInputYear(true)}\n                  >\n                     {current_date.getFullYear()}\n                  </div>}\n                  <div className='nextY'>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() + 1)))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() - 1)))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() + 1)))}\n               >\n                  {'>'}\n               </div>\n            </div>\n           { visibleListMonth ?\n           <div className='monthList' id='monthList'>\n               {months.map((month, idx) => (\n                  <div \n                     key={idx}\n                     className='month'\n                     onClick={() => {\n                        setCurrent_day(new Date(current_date.setMonth(idx)))\n                        setVisibleListMonth(!visibleListMonth)\n                     }}\n                  >\n                     {month}\n                  </div>\n                     ))}\n            </div> : null}\n\n            <div className='row'>\n               {weekDays.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className='calendarWeekDay'\n                  >\n                     {day}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calendarDays'>\n               {current_days.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className={`calendarDay \n                        ${compareDates(new Date(props.current_date), day) ? 'settedDay' : null}\n                     `}\n                     style={{\n                        color: day.getMonth() === current_date.getMonth() ? null : '#aaaaaa'\n                     }}\n                     onClick={() => {\n                        props.func(day)\n                        setCurrent_day(new Date(day))\n                     }}\n                  >\n                     {day.getDate()}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calandarTime'>\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                  <div className='ssm'>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>:\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                  <div className='ssm'>\n                  <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div> : null }\n\n      </div>\n   )\n}\n\n export default ChooseDate","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../Redux/actions'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ChooseEquipment from './ChooseEquipment'\nimport LabelInputOrder from './LabelInputOrder'\nimport ru from 'date-fns/locale/ru'\nimport DatePicker, { registerLocale } from 'react-datepicker'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../general/ChooseDate'\n\nregisterLocale('ru', ru)\n\nconst TypeForm1 = (props) => {\n  // useEffect(() => {\n  //   if (!props.order.edit) {\n  //     props.changeOrderFormS(parseInt(Date.now() / 1000) + 4 * 24 * 3600, 'estimated_done_at')\n  //   }\n  // }, [])\n\n  return (\n    <div>\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Рекламная компания</div>\n        <div className=\"blockImput\">\n          <ChooseOfList\n            id={14}\n            list={props.ad_campaign}\n            setElement={props.changeOrderFormS}\n            field='ad_campaign_id'\n            current_id={props.order.ad_campaign_id}\n            width={'250px'}\n          />\n        </div>\n      </div>\n\n      {props.order.edit ? <ChooseSingleEquipment/> : <ChooseEquipment/>}\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n      </div>\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Заметки приемщика</div>\n        <div className=\"blockImput mh\">\n          <textarea\n            className=\"textInput\"\n            name=\"manager_notes\"\n            onChange={(event) =>\n              props.changeOrderFormS(event.target.value, 'manager_notes')\n            }\n            value={props.order.manager_notes}\n          />\n        </div>\n      </div>\n\n      <LabelInputOrder\n        className=\"formRow\"\n        title=\"Ориетнировачная стоимость\"\n        name=\"estimated_cost\"\n        onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n        value={props.order.estimated_cost}\n      />\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Дата готовности</div>\n        <div className=\"blockImput\">\n          <ChooseDate\n              func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n              current_date={props.order.estimated_done_at * 1000}\n              disabled={props.order.status.group > 3}\n          />\n          {/* {props.order.estimated_done_at ?\n            <DatePicker\n              selected={props.order.estimated_done_at * 1000}\n              onChange={(date) =>\n                props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')\n              }\n              // startDate={Date.now() + new Date(4 * 24 * 60 * 60 * 1000)}\n              className=\"optionFilterInputDate\"\n              dateFormat=\"dd.MM.yyyy HH:mm\"\n              locale={'ru'}\n              showTimeSelect\n          /> : null} */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  ad_campaign: state.data.ad_campaign,\n  order: state.order,\n})\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n         <SetTypeOrder />\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeOperationForm( value, field ) {\n   return {\n     type: 'CHANGE_OPERATION_FORM',\n     field,\n     value\n   }\n }\n\nexport function editOperation(operation) {\n   return {\n     type: 'EDIT_OPERATION',\n     operation\n   }\n }\n \n export function resetOperation() {\n   return {\n     type: 'RESET_OPERATION'\n   }\n }\n \n \n export function selectedOperation( value, field ) {\n   return {\n     type: 'SELECTED_SERVICE',\n     field,\n     value\n   }\n }\n\nexport function createOperation(service) {\n\n   const state = store.getState()\n \n   const price = state.order.client.discount_service_type ? (\n     state.data.service_prices.find(price => \n       price.service_id === service.id && \n       price.discount_margin_id === state.order.client.discount_service_margin_id\n     )) : ( service.price )\n\n   const discount_value = state.order.client.discount_service_type ? \n   price - service.price : \n   service.price * state.order.client.discount_services / 100\n \n   const request_config = getRequestConfig({\n     amount: 1,\n     cost: service.cost,\n     discount_value: discount_value, \n     engineer_id: state.order.engineer_id,\n     price: price,\n     total: price - discount_value,\n     title: service.title,\n     comment: '',\n     warranty_period: service.warranty_period,\n     order_id: state.order.edit,\n     dict_id: service.id,\n\n     earnings_percent: service.earnings_percent,\n     earnings_summ: service.earnings_summ,\n     order_type_id: state.order.order_type_id\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/operations', request_config)\n     .catch(() => bad_request('Запрос на создание операции не выполнен'))\n \n     fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n     .then(response =>  response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'EDIT_ORDER',\n           order: data.data[0]\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос заказов не выполнен'))\n      \n   }\n }\n\n \n export function createCustomOperation() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n      title: state.operation.title,\n      price: state.operation.price,\n      amount: state.operation.amount,\n      cost: state.operation.cost,\n      discount_value: state.operation.discount_value, \n      engineer_id: state.operation.engineer_id,\n      total: state.operation.total,\n      comment: state.operation.comment,\n      warranty_period: state.operation.warranty_period,\n      order_id: state.order.edit,\n      dict_id: null,\n\n      order_type_id: state.order.order_type_id\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/operations', request_config)\n     .catch(() => bad_request('Запрос на создание операции не выполнен'))\n \n     fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n     .then(response =>  response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'EDIT_ORDER',\n           order: data.data[0]\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос заказов не выполнен'))\n      \n   }\n }\n\n \n export function saveOperation() {\n\n   const state = store.getState()\n \n   let request_config = getRequestConfig({\n      id: state.operation.edit,\n      title: state.operation.title,\n      price: state.operation.price,\n      amount: state.operation.amount,\n      cost: state.operation.cost,\n      discount_value: state.operation.discount_value, \n      engineer_id: state.operation.engineer_id,\n      total: state.operation.total,\n      comment: state.operation.comment,\n      warranty_period: state.operation.warranty_period,\n      order_id: state.order.edit\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/operations', request_config)\n     .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n \n     fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n     .then(response =>  response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'EDIT_ORDER',\n           order: data.data[0]\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос заказов не выполнен'))\n      \n   }\n }\n\n export function deleteOperation(flag) {\n\n   const state = store.getState()\n \n   let request_config = getRequestConfig({\n      id: state.operation.edit,\n      deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/operations', request_config)\n     .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n \n     fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n     .then(response =>  response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'EDIT_ORDER',\n           order: data.data[0]\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос заказов не выполнен'))\n      \n   }\n }","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../Redux/actions/operationActions'\n\nimport LableInput from '../../general/LableInput'\nimport LableArea from '../../general/LableArea'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ChooseBotton from '../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusOperationEditor', false)\n      props.resetOperation()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            {props.operation.edit ? null :\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               redStar={true}\n            />\n            }\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React, { useEffect, useState, useMemo} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {  createOperation } from '../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n   const [listVisible, setlistVisible] = useState(false)\n   const [filterWorks, setFileterWorks] = useState('')\n\n   const disabled = props.status_group > 3\n\n   const clickHandel1 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listSetWorks') &&\n         !event.path.map(el => el.id).includes('setWorks')\n         ) {\n         if (listVisible) {\n            setlistVisible(false)\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel1)\n      return () => {\n        window.removeEventListener('click', clickHandel1)\n      }\n    })\n\n   const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n   const handelCreateOperation = (service) => {\n      props.createOperation(service)\n      setlistVisible(false)\n   }\n\n   return (\n      <div className='row'>\n\n         <div className = 'mt15 w400'>\n            <div className='lableImput'>Выполненная работа</div>\n\n            <div className='blockImput'>\n               <div \n                  id='setWorks'\n                  className='orderInputBox'\n                  onClick={() => setlistVisible(true)}\n               >\n                  <input\n                     className='optionFilterInput'\n                     onChange={event => setFileterWorks(event.target.value)}\n                     velue={filterWorks}\n                     disabled={disabled}\n                  />\n               </div>\n\n               {listVisible && !disabled ? \n               <div className='listFilter' id='listSetWorks'>\n               {servises.map(service => (\n                  <div \n                     className='rowGropList' \n                     key={service.id}\n                     onClick={() => handelCreateOperation(service)}\n                  >\n                     <div className='fc-gr'>{service.title}</div>\n                     <div className='fc-gr'>{service.price} руб.</div>\n                  </div>\n               ))}\n               <div className='btmsts'>\n                  <div \n                     className='btnstsTitle'\n                     onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                  >\n                     Добавить работу\n                  </div>\n               </div>\n               </div> : null}\n\n            </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {/* <div className = 'formRow'>\n\n               <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n               <div className='blockImput'>\n\n                  <div \n                     id='orderInputBoxOfOrderPhone'\n                     className='orderInputBox'\n                     onClick={() => props.changeClienListOrderPhone()}\n                  >\n                     <InputMask \n                        mask=\"+7(999) 999-99-99\"\n                        className='optionFilterInput'\n                        onChange={event => props.changePhoneClientFilter(event.target.value)}\n                        value={props.phone}\n                     />\n                     <div \n                     className='simbolButton'\n                     onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                     >\n                        +\n                     </div>\n                     <div className='simbolButton'>&#6662;</div> \n                  </div>\n\n                 \n\n                  {props.view.statusClientListOrderPhone ? \n                  <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                  {props.clientShow.map(client => (\n                     <div \n                        className='rowGropList' \n                        key={client.id}\n                        onClick={() => props.setClientId(client)}\n                     >\n                        <div>{client.name}</div>\n                        <div className='orderDate'>\n                           {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                        </div>\n                     </div>\n                  ))}\n                  </div> : null}\n\n               </div>\n               \n            </div> */}\n      \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dict_service: state.data.dict_service,\n   statusOperationEditor: state.view.statusOperationEditor,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   createOperation,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst TableWorksMaterials = (props) => {\n\n   let price = 0\n   let discount = 0\n   props.order.operations.filter(operation => !operation.deleted).forEach(operation => {\n      price += operation.total\n      discount += operation.discount_value\n   })\n   props.order.parts.filter(part => !part.deleted).forEach(part => {\n      price += part.price\n      discount += part.discount_value\n   })\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n\n   useEffect(() => {\n      props.changeOrderFormS(price, 'price')\n   }, [])\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.total / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => console.log('edit part') }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.total / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => console.log('edit parts')}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => console.log('delete parts')}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{discount}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.data.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { changeOrderFormS } from '../../../Redux/actions'\nimport { cells } from '../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { changeOrderFormS } from '../../../Redux/actions'\nimport { changeOperationForm } from '../../../Redux/actions/operationActions'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && list_ingineers.some(employee => employee.id === props.current_engineer_id) ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={props.current_engineer_id}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","import React from 'react'\n\nconst Button = (props) => {\n   return props.unvisible ? (<div/>) : (\n      <button\n         className={props.unvisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.unvisible || props.disabled}\n      >\n         {props.title}\n      </button>\n   )\n}\n\n export default Button\n\n \n// <Button\n   // className='className'\n   // title='title'\n   // onClick={() => console.log('click')}\n   // unvisible={false}\n   // disabled={false}\n// /> ","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../general/utils'\nimport { icon_warning } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst TableOrderPaymants = (props) => {\n\n   let sum = 0\n   props.order.payments.filter(payment => !payment.deleted).forEach(payment => {\n      sum += payment.income\n      sum += payment.outcome\n   })\n\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction == 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{sum} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Клиент должен нам:</td>\n                  <td className='tae'>{props.order.price - sum} руб.</td>\n               </tr>\n            </tbody>\n         </table>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPaymants)","\nimport React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeNameClientFilter, setVisibleFlag, changePaymentForm, editCurrentClient } from '../../Redux/actions'\nimport { showPhone } from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\n\nconst SetClientByName = (props) => {\n\n   const [showList, setShowList] = useState(false)\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n         !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n         ) {\n            setShowList(false)\n      }\n    }\n\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n   return (\n      <div className='w400 h52'>\n         \n         <div className='lableImput mt15'>Имя клиента</div>\n\n         <div className='blockImput'>\n            <div \n               id='clientInputBoxOfPayments'\n               className='orderInputBox'\n               onClick={() => setShowList(true)}\n            >\n               <input\n                  className='optionFilterInput'\n                  onChange={event => props.changeNameClientFilter(event.target.value)}\n               />\n               <div \n               className='simbolButton'\n               onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n               >\n                  +\n               </div>\n               <div className='simbolButton'>&#6662;</div> \n            </div>\n\n            {showList ? \n            <div className='listFilter' id='listClientsOfOfPayments'>\n            {props.clientShow.map(client => (\n               <div \n                  className='rowGropList' \n                  key={client.id}\n                  onClick={() => {\n                     setShowList(false)\n                     props.editCurrentClient(client)\n                     props.changePaymentForm(client.id, 'client_id')\n                  }}\n               >\n                  <div>{client.name}</div>\n                  <div className='orderDate'>\n                     {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                  </div>\n               </div>\n            ))}\n            </div> : null}\n\n         </div>\n         \n\n\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   clientShow: state.data.clientShow,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   setVisibleFlag,\n   changePaymentForm,\n   editCurrentClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePaymentForm, setVisibleFlag } from '../../Redux/actions'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payment.direction === 2 ? 'income' : 'outcome')}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.data.cashboxes\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { setVisibleFlag, changePaymentForm, addClients, addItemPayments, addPaymentTag, deletePaymentTag, createPayment, resetPayments } from '../../Redux/actions'\nimport { check0_999 } from '../general/utils';\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\n\nregisterLocale('ru', ru)\n\nconst PaymentsEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow')) {\n      // props.setVisibleFlag('statusPaymentsEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n      props.addClients()\n   }, [props.clientFilter])\n\n  useEffect(() => {\n    props.addItemPayments()\n    props.changePaymentForm(props.user_id, 'employee_id')\n    props.changePaymentForm(props.current_cashbox.id, 'cashbox_id')\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      (props.payment.income || props.payment.outcome) &&\n      ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction))  && \n      props.payment.description &&\n      (props.payment.cashflow_category || !props.payment.direction) &&\n      props.payment.employee_id\n      ) {\n      props.createPayment()\n    } else {\n      if (!(props.payment.income || props.payment.outcome)) { props.setVisibleFlag('inputPaymentSumChecked', false)}\n      if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction)) {props.setVisibleFlag('inputPaymentCashboxChecked', false) }\n      if (!props.payment.description) {props.setVisibleFlag('inputPaymentDescChecked', false) }\n      if (!props.payment.cashflow_category) {props.setVisibleFlag('inputPaymentCashflowChecked', false) }\n      if (!props.payment.employee_id) {props.setVisibleFlag('inputPaymentEmployeeChecked', false) }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      check0_999(props.payment.sum) &&\n      props.payment.cashbox_id\n      ) {\n      console.log('all is good')\n    } else {\n      if (check0_999(props.payment.sum)) { props.setVisibleFlag('inputPaymentSumChecked', false)}\n      if (!props.payment.cashbox_id) {props.setVisibleFlag('inputPaymentCashboxChecked', false) }\n    }\n  }\n\n  const [chooseData, setChooseData] = useState(false)\n  const [chooseForm, setChooseForm] = useState(props.current_cashbox.type)\n\n  const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n  const cashboxes = props.cashboxes.filter(cashbox => \n   cashbox.type === chooseForm &&\n   (props.payment.direction || cashbox.id !== props.payment.cashbox_id) &&\n   !cashbox.deleted &&\n   (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n   )\n\n  return (\n      <div className=\"rightBlock\">\n         <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n         <div className=\"createNewTitle\">\n            {title[props.payment.direction]}\n         </div>\n\n         <div className='contentEditor'>\n           \n            <div className='row al-itm-fe'>\n               <ChooseBotton\n                  className='mt15 mr-rg-20'\n                  title='Дата и время'\n                  name={['Текущее', 'Заданное']}\n                  func1 = {() => {\n                    setChooseData(false)\n                    props.changePaymentForm( 0, 'custom_created_at')\n                  }}\n                  func2 = {() => setChooseData(true)}\n                  checked = { true }\n                  disabled={!props.permissions.includes('backdating')}\n               />\n               {chooseData ? \n               <DatePicker \n                  selected={props.payment.custom_created_at ? new Date(props.payment.custom_created_at * 1000) : Date.now()}\n                  onChange={(date) => {\n                     props.changePaymentForm( date / 1000, 'custom_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat='dd.MM.yyyy HH:mm'\n                  locale={'ru'}\n                  maxDate={ Date.now() }\n                  // startDate={Date.now()}\n                  showTimeSelect\n               /> : null }\n            </div> \n\n            {props.payment.direction ? (props.payment.client_id ? \n            <ClientCard \n                  edit={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                  close={() => props.changePaymentForm( 0, 'client_id')}\n            /> : <SetClientByName/> ): null}\n            <Receipt/>\n\n            <div className='row mt15 al-itm-fs'>\n               <ChooseBotton\n                  className=''\n                  title='Форма оплаты'\n                  name={['Нал.', 'Безнал.']}\n                  func1 = {() => {\n                     props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                     setChooseForm(0)\n                  }}\n                  func2 = {() => {\n                     props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                     setChooseForm(1)\n                  }}\n                  checked = { !props.current_cashbox.type }\n               />\n               <ChooseOfList\n                  id={20}\n                  title='Касса'\n                  className='ml10 h52'\n                  list={ cashboxes } \n                  field={props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'}\n                  setElement={props.changePaymentForm}\n                  current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                  width={'250px'}\n                  checkedFlag='inputPaymentCashboxChecked'\n                  checked={props.view.inputPaymentCashboxChecked}\n                  disabled={props.payment.deleted}\n               />\n            </div>\n            <LableArea\n               className='mt15'\n               title='Коментарий'\n               onChange={event => props.changePaymentForm(event.target.value, 'description')}\n               value={props.payment.description}\n               checkedFlag='inputPaymentDescChecked'\n               checked={props.view.inputPaymentDescChecked}\n               redStar={ true }\n               disabled={props.payment.deleted}\n            />      \n\n            {props.payment.direction ?\n            <ChooseOfList\n               id={21}\n               title='Статья'\n               className='mt15 h52'\n               list={ props.item_payments.filter(item => item.direction === props.payment.direction) } \n               field='cashflow_category'\n               setElement={props.changePaymentForm}\n               current_id={props.payment.cashflow_category}\n               width={'250px'}\n               checkedFlag='inputPaymentCashflowChecked'\n               checked={props.view.inputPaymentCashflowChecked}\n               disabled={props.payment.deleted}\n            /> : null}\n            <ChooseOfList\n              id={22}\n              title='Кассир'\n              className='mt15 h52'\n              list={ props.employees.filter(employee => !employee.deleted) } \n              field='employee_id'\n              setElement={props.changePaymentForm}\n              current_id={props.payment.employee_id}\n              width={'250px'}\n              employee={ true }\n              checkedFlag='inputPaymentEmployeeChecked'\n              checked={props.view.inputPaymentEmployeeChecked}\n              disabled={!props.permissions.includes('choose_emploees')}\n            />\n            <AddTags\n              className='mt15'\n              tags={ props.payment.tags }\n              addTag={ props.addPaymentTag }\n              daleteTag={ props.deletePaymentTag }\n            />\n            \n      </div>\n       \n\n        <BottomButtons\n          edit={props.payment.edit}\n          create={ hangleCreate }\n          save={ hangleSave }\n          delete={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null }\n          recover={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null }\n          close={() => {\n            props.setVisibleFlag('statusPaymentsEditor', false)\n            props.resetPayments()\n          }}\n          deleted={props.payment.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view, \n  payment: state.payment,\n  permissions: state.data.user.role.permissions,\n  clientFilter: state.filter.clientFilter,\n  cashboxes: state.data.cashboxes,\n  current_branch_id: state.data.current_branch.id,\n  item_payments: state.data.item_payments,\n  employees: state.data.employees,\n  user_id: state.data.user.id,\n  current_cashbox: state.cashbox.current_cashbox\n})\n\nconst mapDispatchToProps = {\n  changePaymentForm,\n  setVisibleFlag,\n  addClients,\n  addItemPayments,\n  addPaymentTag,\n  deletePaymentTag,\n  createPayment,\n  resetPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changePaymentForm, addItemPayments, editCurrentClient, addCashboxes } from '../../../Redux/actions'\nimport { changeOrderFormS } from '../../../Redux/actions'\nimport Button from '../../general/Button'\nimport TableOrderPaymants from './TableOrderPaymants'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst OrderPayments = (props) => {\n\n   useEffect(() => {\n      props.addItemPayments()\n      props.addCashboxes()\n   }, [])\n\n   const handelIncome = () => {\n      props.changePaymentForm(2, 'direction')\n      props.changePaymentForm(props.order.client.id, 'client_id')\n      // props.changePaymentForm(props.order.client, 'client')\n      props.editCurrentClient(props.order.client)\n      props.changePaymentForm(`Оплата по заказу № ${props.order.id_label}`, 'description')\n      props.changePaymentForm(2, 'cashflow_category')\n      props.changePaymentForm(props.current_user_id, 'employee_id')\n      props.changePaymentForm(props.order.edit, 'order_id')\n      props.setVisibleFlag('statusPaymentsEditor', true)\n   }\n\n   const handelOutcome = () => {\n      props.changePaymentForm(1, 'direction')\n      props.changePaymentForm(props.order.client.id, 'client_id')\n      // props.changePaymentForm(props.order.client, 'client')\n      props.editCurrentClient(props.order.client)\n      props.changePaymentForm(`Выплата по заказу № ${props.order.id_label}`, 'description')\n      props.changePaymentForm(8, 'cashflow_category')\n      props.changePaymentForm(props.current_user_id, 'employee_id')\n      props.changePaymentForm(props.order.edit, 'order_id')\n      props.setVisibleFlag('statusPaymentsEditor', true)\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handelIncome }\n               unvisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handelOutcome }\n               unvisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPaymants/>\n          {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   setVisibleFlag,\n   changePaymentForm,\n   addItemPayments,\n   editCurrentClient,\n   addCashboxes\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addDictService\n} from '../../../Redux/actions'\nimport { createOrder, resetOrder, saveOrder, addOrders } from '../../../Redux/actions/orderActions'\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './OrderInfo'\nimport OrderWorksMaterials from './OrderWorksMaterials'\nimport OrderPayments from './OrderPayments'\n\nconst OrderEditor = (props) => {\n\n  useEffect(() => {\n    props.addClients()\n  }, [props.clientFilter])\n\n  useEffect(() => {\n    props.addDiscountMargin()\n    props.addDictService()\n  }, [])\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusOrderEditor', false)\n    props.resetOrder()\n    props.setVisibleFlag('checkedOrderClient', false)\n    props.setVisibleListFlag('checkedOrderKindofGood', 0, true)\n    props.setVisibleListFlag('checkedOrderBrand', 0, true)\n    props.setVisibleListFlag('checkedOrderSubtype', 0, true)\n    props.addOrders()\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewOrder')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  \n\n  const handleCreate = () => {\n    if (\n      Object.values(props.order.client).length &&\n      props.order.equipments.every(\n        (equipment) =>\n          Object.values(equipment.kindof_good).length &&\n          Object.values(equipment.brand).length &&\n          Object.values(equipment.subtype).length &&\n          equipment.malfunction\n      )\n    ) {\n      props.createOrder()\n    } else {\n      if (!Object.values(props.order.client).length) {\n        props.setVisibleFlag('checkedOrderClient', true)\n      }\n      props.order.equipments.forEach((equipment, idx) => {\n        if (!Object.values(equipment.kindof_good).length) {\n          props.setVisibleListFlag('checkedOrderKindofGood', idx, false)\n        }\n        if (!Object.values(equipment.brand).length) {\n          props.setVisibleListFlag('checkedOrderBrand', idx, false)\n        }\n        if (!Object.values(equipment.subtype).length) {\n          props.setVisibleListFlag('checkedOrderSubtype', idx, false)\n        }\n        if (!equipment.malfunction) {\n          props.setVisibleListFlag('inputMalfunctionChecked', idx, false)\n        }\n      })\n    }\n  }\n\n  const handleSave = () => {\n    if (\n      Object.values(props.order.client).length &&\n      Object.values(props.order.kindof_good).length &&\n      Object.values(props.order.brand).length &&\n      Object.values(props.order.subtype).length\n      \n    ) {\n      props.saveOrder()\n    } else {\n      if (!Object.values(props.order.client).length) props.setVisibleFlag('checkedOrderClient', true)\n      if (!Object.values(props.order.kindof_good).length) props.setVisibleListFlag('checkedOrderKindofGood', 0, false)\n      if (!Object.values(props.order.brand).length) props.setVisibleListFlag('checkedOrderBrand', 0, false)\n      if (!Object.values(props.order.subtype).length) props.setVisibleListFlag('checkedOrderSubtype', 0, false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n        <div className=\"cteateNewOrderContent\">\n          \n          <div className=\"createOrderForm\">\n\n            <TitleOrderEditor/>\n            {props.order.edit ?\n              <div>\n                <Tabs\n                  list={ ['Информация о заказе', 'Работы и материалы', 'Платежи'] }\n                  func={props.changeOrderFormS}\n                  tab={props.order.tabs}\n                />\n                  {props.order.tabs === 0 ? <OrderInfo/> : null}\n                  {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                  {props.order.tabs === 2 ? <OrderPayments/> : null}\n                </div> : <OrderInfo/> }\n          </div>\n\n          <div className=\"orderHistory\">\n          <div className = 'tempPage'>\n            <div className = 'tempContainer'>\n                <h1 className = 'tempTitle'>История</h1>\n                <p className = 'tempDescription'>Страница на стадии разработки</p>\n            </div>\n          </div>\n          </div>\n        </div>\n\n        <div className=\"boxOrderButtons\">\n          <BottomButtons\n            edit={ props.order.edit }\n            create={ handleCreate }\n            save={ handleSave }\n            // delete={() => props.deleteClient(props.client.edit)}\n            close={ handleClose }\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  clientFilter: state.filter.clientFilter,\n  order: state.order\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  createOrder,\n  changeOrderFormS,\n  resetOrder,\n  addDictService,\n  saveOrder,\n  addOrders\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport { addOrders,editOrder } from '../../Redux/actions/orderActions'\nimport { initStatusMenuVisibleAction, setVisibleFlag } from '../../Redux/actions'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\n\n// const optionsShowDate = {\n//   year: 'numeric',\n//   month: 'long',\n//   day: 'numeric',\n//   hour: 'numeric',\n//   minute: 'numeric',\n//   // second: 'numeric'\n// }\n\n\nfunction TableOrders(props) {\n\n  \n\n  useEffect(() => {\n    let statusVis = {}\n    props.ordersShow.forEach((order) => {\n    statusVis[order.id] = false\n    })\n    props.initStatusMenuVisible(statusVis)\n  }, [props.ordersShow])\n  \n   \n\n  if (props.user.table_headers && props.employees) {\n    return (\n      <div className=\"tableOrders\">\n        <table className=\"tableOrders\">\n          <thead className=\"tableThead\">\n            <tr>\n              {Object.values(props.user.table_headers).map((header) => (\n                <TableHeader data={header} key={header.id}/>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {props.ordersShow.map((order) => (\n              <tr \n                key={order.id} \n                className=\"orderTableRows\"\n                onDoubleClick={ () => {\n                  props.setVisibleFlag('statusOrderEditor', true)\n                  props.editOrder(order)\n                }}\n              >\n                <Lable data = {order}/>\n                <Create data = {order}/>\n                <EstimatedDone data = {order}/>\n                <Status data = {order}/>\n                <Equipment data = {order}/>\n                {/* <KindOfGood data = {order}/> */}\n                <Brand data = {order}/>\n                <Malfunction data = {order}/>\n                <Engineer data = {order}/>\n                {props.permissions.includes('see_client') ? <Client data = {order}/> : <div/>}\n                <Price data = {order}/>\n                <EngineerNotes data = {order}/>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {props.statusOrderEditor ? <OrderEditor/> : null}\n      </div>\n    )\n  } else {\n    return <Loader />\n  }\n}\n\nconst mapStateToProps = state => ({\n  ordersShow: state.data.ordersShow,\n  employees: state.data.employees, \n  user: state.data.user,\n  mainFilter: state.filter.mainFilter,\n  statusOrderEditor: state.view.statusOrderEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addOrders,\n  initStatusMenuVisible: initStatusMenuVisibleAction,\n  setVisibleFlag,\n  editOrder\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { appCustomFilter } from '../../Redux/actions'\n\nconst CustomFilter = (props) => {\n   return (\n    <div \n    className='customFilter'\n    onClick={() => props.appCustomFilter(props.data.filters, props.data.id)}\n    style={{backgroundColor: props.customFilters.find(filter => filter.id === props.data.id).active ? '#eeeeef' : 'white'}}\n    >\n       <div className='titleCustumFilter'>\n         {props.data.title}\n       </div>\n    </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n  customFilters: state.filter.customFilters\n   })\n  \nconst mapDispatchToProps = {\n  appCustomFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBrandListFilter, changeBrandMainFilter } from '../../../Redux/actions'\n\nconst SetBrand = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfBrand') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfBrand')\n       ) {\n       if (props.brandListFilter) {\n        props.changeBrandListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const listOfBrand = (tempFilter, equipment) => {\n\n    if (equipment.map(equipment => equipment.title).includes(tempFilter.kindof_good)) {\n      \n      return (\n        equipment.find(equipment => equipment.title === tempFilter.kindof_good).equipment_brand.map(brand => {\n\n       return (\n        brand.title.toLowerCase().includes(props.tempFilter.brand.toLowerCase()) ? \n        <div key={brand.id}\n        className='rowGropList'\n        onClick={() => {\n          props.changeBrandMainFilter(brand.title)\n          props.changeBrandListFilter()\n        }}\n        >\n          {brand.title}\n        </div> : null\n      )})\n      \n    )\n  } else {\n    let list_brand = []\n    props.equipment.forEach(equip => {\n      list_brand = list_brand.concat(equip.equipment_brand)\n    } )\n    list_brand = list_brand.map(brand => brand.title)\n    list_brand = [...new Set(list_brand)]  \n\n    return (\n      list_brand.map((brand, idx) => {\n          return (\n            brand.toLowerCase().includes(props.tempFilter.brand.toLowerCase()) ? \n        <div \n        key={idx}\n        className='rowGropList'\n        onClick={() => {\n          props.changeBrandMainFilter(brand)\n          props.changeBrandListFilter()\n        }}\n        >\n          {brand}\n        </div> : null\n          )}))}}\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Бренд</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfBrand'\n    onClick={() => props.changeBrandListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => props.changeBrandMainFilter(event.target.value)}\n      placeholder='Выбирете бренд'\n      value={props.tempFilter.brand}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.brandListFilter ? <div className='listFilter' id='listFilterOfBrand'>\n      {listOfBrand(props.tempFilter, props.equipment)}\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  brandListFilter: state.view.brandListFilter,\n  equipment: state.data.equipment,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeBrandListFilter,\n  changeBrandMainFilter,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetBrand)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeClientListFilter, changeClientMainFilter, changeNameClientFilter } from '../../../Redux/actions'\n\nconst SetClient = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfClient') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfClient')\n       ) {\n       if (props.clientListFilter) {\n        props.changeClientListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Клиент</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfClient'\n    onClick={() => props.changeClientListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => {\n        props.changeClientMainFilter(event.target.value)\n        props.changeNameClientFilter(event.target.value)\n      }}\n      placeholder='Выбирете клиента'\n      value={props.tempFilter.client_name}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.clientListFilter ? <div className='listFilter' id='listFilterOfClient'>\n      {props.clientShow.map(client => {\n       return (\n        client.name.toLowerCase().includes(props.tempFilter.client_name.toLowerCase()) ? \n        <div \n        key={client.id}\n        className='rowGropList'\n        onClick={() => {\n          props.changeClientMainFilter(client.name)\n          props.changeClientListFilter()\n        }}\n        >\n          {client.name}\n        </div> : null\n      )})}\n\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  clientListFilter: state.view.clientListFilter,\n  clientShow: state.data.clientShow,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeClientListFilter,\n  changeClientMainFilter,\n  changeNameClientFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { changeCreateAtMainFilter } from '../../../Redux/actions'\n\nregisterLocale('ru', ru)\n\nconst SetDataCreate = (props) => {\n\n \n   return (\n    <>\n    <div className='optionsFilterTitle'>Заказ создан</div>\n    <DatePicker \n      selectsRange={true}\n      startDate={props.created_at[0] ? new Date(props.created_at[0]) : null}\n      endDate={props.created_at[1] ? new Date(props.created_at[1]) : null}\n      onChange={(update) => {\n        props.changeCreateAtMainFilter(update.map(day =>  day ? day.getTime() : null))\n      }}\n      isClearable={true}\n      placeholderText='Выбирите дату'\n      className=\"optionFilterInputDate\"\n      dateFormat=\"dd.MM.yyyy\"\n      locale={'ru'}\n      maxDate={ Date.now() }\n    />\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  created_at: state.filter.tempFilter.created_at\n   })\n\nconst mapDispatchToProps = {\n  changeCreateAtMainFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetDataCreate)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeEngineerListFilter, changeCheckEngineer, setAllEngineerTrue, setAllEngineerFalse } from '../../../Redux/actions'\n\nconst SetEngineer = (props) => {\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfEngineer') &&\n         !event.path.map(el => el.id).includes('optionsFilterButtonOfEngineer')\n         ) {\n         if (props.engineerListFilter) {\n          props.changeEngineerListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n\n   const chooseWord = (count) => {\n\n      if (count === props.employees.length) {\n        return 'Любой'\n      }\n  \n      if (count === 0) {\n         return 'Выбирете инженера'\n      }\n  \n      if (count > 10 &&  count < 20) {\n         return `${count} инженеров`\n      }\n  \n      if (count % 10  === 1 ) {\n         return `${count} инженер`\n      }\n  \n      if (count % 10  > 1 && count % 10  < 5) {\n         return `${count} инженера`\n      }\n      return `${count} инженеров`\n   }\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Инженер</div>\n    <div \n    className='optionsFilterButton' \n    id='optionsFilterButtonOfEngineer' \n    onClick={() => props.changeEngineerListFilter()}\n    > \n      <span>{chooseWord(props.tempFilter.engineer_id.length)}</span>  \n      <span>&#6662;</span> \n    </div>\n    {props.engineerListFilter ? <div className='listFilter' id='listFilterOfEngineer'>\n\n        {props.employees.map(employee => {\n          \n          if (!employee.deleted) {\n            return (\n              <div className='statusListTitle2' key={employee.id}>\n                  <input \n                  className = 'chackboxListStatus' \n                  type = 'checkbox'\n                  onChange = {() => props.changeCheckEngineer(employee.id)}\n                  checked = {props.tempFilter.engineer_id.includes(employee.id)}\n                  />\n                  <div className='listFilterMenu'>{`${employee.first_name} ${employee.last_name}`}</div>\n              </div>\n          )}\n          return null\n        })}\n         \n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllEngineerTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllEngineerFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n   tempFilter: state.filter.tempFilter,\n   engineerListFilter: state.view.engineerListFilter,\n   employees: state.data.employees\n   })\n\nconst mapDispatchToProps = {\n  changeEngineerListFilter,\n  changeCheckEngineer,\n  setAllEngineerTrue,\n  setAllEngineerFalse\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetEngineer)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeGroupListFilter, changeGroupMainFilter } from '../../../Redux/actions'\n\nconst SetGroupe = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfGroup') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfGroup')\n       ) {\n       if (props.groupListFilter) {\n        props.changeGroupListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Группа</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfGroup'\n    onClick={() => props.changeGroupListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => props.changeGroupMainFilter(event.target.value)}\n      placeholder='Выбирете группу'\n      value={props.tempFilter.kindof_good}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.groupListFilter ? <div className='listFilter' id='listFilterOfGroup'>\n      {props.equipment.map(equipment => {\n     \n       return (\n        equipment.title.toLowerCase().includes(props.tempFilter.kindof_good.toLowerCase()) ? \n        <div\n        key={equipment.id} \n        className='rowGropList'\n        onClick={() => {\n          props.changeGroupMainFilter(equipment.title)\n          props.changeGroupListFilter()\n        }}\n        >\n          {equipment.title}\n        </div> : null\n      )})}\n\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  groupListFilter: state.view.groupListFilter,\n  equipment: state.data.equipment,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeGroupListFilter,\n  changeGroupMainFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetGroupe)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeManagerListFilter, changeCheckManager, setAllManagerTrue, setAllManagerFalse } from '../../../Redux/actions'\n\nconst SetManager = (props) => {\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfManager') &&\n         !event.path.map(el => el.id).includes('optionsFilterButtonOfManager')\n         ) {\n         if (props.managerListFilter) {\n          props.changeManagerListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n\n   const chooseWord = (count) => {\n\n      if (count === props.employees.length) {\n        return 'Любой'\n      }\n  \n      if (count === 0) {\n         return 'Выбирете менеджера'\n      }\n  \n      if (count > 10 &&  count < 20) {\n         return `${count} менеджеров`\n      }\n  \n      if (count % 10  === 1 ) {\n         return `${count} менеджер`\n      }\n  \n      if (count % 10  > 1 && count % 10  < 5) {\n         return `${count} менеджера`\n      }\n      return `${count} менеджеров`\n   }\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Менеджер</div>\n    <div \n    className='optionsFilterButton' \n    id='optionsFilterButtonOfManager' \n    onClick={() => props.changeManagerListFilter()}\n    > \n      <span>{chooseWord(props.tempFilter.manager_id.length)}</span>  \n      <span>&#6662;</span> \n    </div>\n    {props.managerListFilter ? <div className='listFilter' id='listFilterOfManager'>\n\n        {props.employees.map(employee => {\n          \n          if (!employee.deleted) {\n            return (\n              <div className='statusListTitle2' key={employee.id}>\n                  <input \n                  className = 'chackboxListStatus' \n                  type = 'checkbox'\n                  onChange = {() => props.changeCheckManager(employee.id)}\n                  checked = {props.tempFilter.manager_id.includes(employee.id)}\n                  />\n                  <div className='listFilterMenu'>{`${employee.first_name} ${employee.last_name}`}</div>\n              </div>\n          )}\n          return null\n        })}\n         \n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllManagerTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllManagerFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n   tempFilter: state.filter.tempFilter,\n   managerListFilter: state.view.managerListFilter,\n   employees: state.data.employees\n   })\n\nconst mapDispatchToProps = {\n  changeManagerListFilter,\n  changeCheckManager,\n  setAllManagerTrue,\n  setAllManagerFalse\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetManager)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSubtypeListFilter, changeSubtypeMainFilter } from '../../../Redux/actions'\n\nconst SetSubtype = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfSubtype') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfSubtype')\n       ) {\n       if (props.subtypeListFilter) {\n        props.changeSubtypeListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const listOfSubtype = (tempFilter, equipment) => {\n  \n    if (\n      equipment.map(equipment => equipment.title).includes(tempFilter.kindof_good) && \n      equipment.find(equip => equip.title == tempFilter.kindof_good).equipment_brand.map(brand => brand.title).includes(tempFilter.brand)\n    ) {\n      \n      return (\n        equipment.find(equipment => equipment.title === tempFilter.kindof_good)\n        .equipment_brand.find(brand => brand.title == tempFilter.brand).equipment_subtype.map(subtype => {\n\n       return (\n        subtype.title.toLowerCase().includes(props.tempFilter.subtype.toLowerCase()) ? \n        <div \n        key={subtype.id}\n        className='rowGropList'\n        onClick={() => {\n          props.changeSubtypeMainFilter(subtype.title)\n          props.changeSubtypeListFilter()\n        }}\n        >\n          {subtype.title}\n        </div> : null\n      )})\n      \n    )\n  } else {\n    let list_subtype = []\n    props.equipment.forEach(equip => {\n      equip.equipment_brand.forEach(brand => {\n        list_subtype = list_subtype.concat(brand.equipment_subtype)\n      })\n    })\n    list_subtype = list_subtype.map(subtype => subtype.title)\n    list_subtype = [...new Set(list_subtype)]  \n\n    return (\n      list_subtype.map((subtype, idx) => {\n          return (\n            subtype.toLowerCase().includes(props.tempFilter.subtype.toLowerCase()) ? \n        <div\n        key={idx} \n        className='rowGropList'\n        onClick={() => {\n          props.changeSubtypeMainFilter(subtype)\n          props.changeSubtypeListFilter()\n        }}\n        >\n          {subtype}\n        </div> : null\n          )}))}}\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Модуль</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfSubtype'\n    onClick={() => props.changeSubtypeListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => props.changeSubtypeMainFilter(event.target.value)}\n      placeholder='Выбирете тип модуля'\n      value={props.tempFilter.subtype}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.subtypeListFilter ? <div className='listFilter' id='listFilterOfSubtype'>\n      {listOfSubtype(props.tempFilter, props.equipment)}\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  subtypeListFilter: state.view.subtypeListFilter,\n  equipment: state.data.equipment,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeSubtypeListFilter,\n  changeSubtypeMainFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetSubtype)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStausListFilter, changeCheckStatus, setAllStatusFalse, setAllStatusTrue } from '../../../Redux/actions'\n\n\n\n\n\nconst SetStatus = (props) => {\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('stausListFilter') &&\n         !event.path.map(el => el.id).includes('optionsFilterButtonOfStatus')\n         ) {\n         if (props.stausListFilter) {\n          props.changeStausListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n\n  const chooseWord = (count_status) => {\n\n      if (count_status === props.status.length) {\n         return 'Любой'\n      }\n\n      if (count_status === 0) {\n         return 'Выбирете статус'\n      }\n\n      if (count_status > 10 &&  count_status < 20) {\n         return `${count_status} статусов`\n      }\n\n      if (count_status % 10  === 1 ) {\n         return `${count_status} статус`\n      }\n\n      if (count_status % 10  > 1 && count_status % 10  < 5) {\n         return `${count_status} статусa`\n      }\n      return `${count_status} статусов`\n  }\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Статус</div>\n    <div \n    className='optionsFilterButton' \n    id='optionsFilterButtonOfStatus'\n    onClick = {() => props.changeStausListFilter()}\n    > \n      <span>\n         {chooseWord(props.tempFilter.status_id.length)}\n      </span>  \n      <span>&#6662;</span> \n    </div>\n    {props.stausListFilter ? <div className='stausListFilter' id='stausListFilter'>\n       {props.status_group.map(group => {\n          return (\n             <div key={group.id}>\n\n             {group.status.length ? <div className='statusListTitle' >\n             \n                {group.name}\n                </div> : null}\n\n             {group.status.map(status => {\n                return (\n                  <div className='statusListTitle2' key={status.id + group.id * 100}>\n                     <input \n                     className = 'chackboxListStatus' \n                     type = 'checkbox'\n                     name = {status.id}\n                     onChange = {() => props.changeCheckStatus(status.id)}\n                     checked = {props.tempFilter.status_id.includes(status.id)}\n                     />\n                     <div className='statusListRow' style = {{backgroundColor: status.color}}> {status.name}</div>\n                  </div>\n                )\n             })}\n          </div>\n          )\n       })}\n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllStatusTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllStatusFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n   tempFilter: state.filter.tempFilter,\n   status: state.data.status,\n   status_group: state.data.status_group,\n   stausListFilter: state.view.stausListFilter\n   })\n\nconst mapDispatchToProps = {\n   changeStausListFilter,\n   changeCheckStatus,\n   setAllStatusFalse,\n   setAllStatusTrue\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetStatus)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeTypeListFilter, changeCheckType, setAllTypeTrue, setAllTypeFalse } from '../../../Redux/actions'\n\nconst SetTypeOrders = (props) => {\n\n   const clickHandel = (event) => {\n\n      if ( \n          !event.path.map(el => el.id).includes('listFilterOfType') && \n          !event.path.map(el => el.id).includes('optionsFilterButtonOfType')\n      ) {\n         if (props.typeListFilter) {\n          props.changeTypeListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n\n  const chooseWord = (count) => {\n\n    if (count === props.order_type.length) {\n      return 'Любой'\n    }\n\n    if (count === 0) {\n       return 'Выбирете тип'\n    }\n\n    if (count > 10 &&  count < 20) {\n       return `${count} типов`\n    }\n\n    if (count % 10  === 1 ) {\n       return `${count} тип`\n    }\n\n    if (count % 10  > 1 && count % 10  < 5) {\n       return `${count} типа`\n    }\n    return `${count} типов`\n}\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Тип заказа</div>\n    <div \n    className='optionsFilterButton'\n    id='optionsFilterButtonOfType'\n    onClick={() => props.changeTypeListFilter()}\n    > \n      <span>{chooseWord(props.tempFilter.order_type_id.length)}</span>  \n      <span>&#6662;</span> \n    </div>\n    {props.typeListFilter ? <div className='listFilter' id='listFilterOfType'>\n\n        {props.order_type.map(type => {\n          return (\n            <div className='statusListTitle2' key={type.id}>\n                <input \n                className = 'chackboxListStatus' \n                type = 'checkbox'\n                name = {type.id}\n                onChange = {event => props.changeCheckType(event.target.name)}\n                checked = {props.tempFilter.order_type_id.includes(type.id)}\n                />\n                <div className='listFilterMenu'>{type.name}</div>\n            </div>\n          )\n        })}\n         \n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllTypeTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllTypeFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  typeListFilter: state.view.typeListFilter,\n  order_type: state.data.order_type,\n  tempFilter: state.filter.tempFilter\n})\n\n\nconst mapDispatchToProps = {\n  changeTypeListFilter,\n  changeCheckType,\n  setAllTypeTrue,\n  setAllTypeFalse\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrders)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusCreateNewFilter,\n  changeTitleCreate,\n  changeGeneraleCreate,\n  addCustomFilter,\n} from '../../Redux/actions'\n\nconst CreateNewFilter = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewFilterWiondow')) {\n      props.changeStatusCreateNewFilter()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewFilterWiondow\">\n        <div className=\"createNewTitle\">Новый фильтр</div>\n        <div className=\"lableImput\">\n          Название филтьтра <span className=\"redStar\">*</span>\n        </div>\n        <input\n          className=\"textInput\"\n          onChange={(event) => props.changeTitleCreate(event.target.value)}\n          value={props.title_create}\n        />\n        <div className=\"checkboxRow\">\n          <input\n            type=\"checkbox\"\n            className=\"chackboxListStatus\"\n            onChange={() => props.changeGeneraleCreate()}\n            value={props.generale_create}\n          />\n          <div className=\"lableImput\">Общий фильтр</div>\n        </div>\n        <div className=\"buttons mt15\">\n          <div\n            className=\"blueButton\"\n            onClick={() => {\n              props.addCustomFilter()\n              props.changeStatusCreateNewFilter()\n            }}\n          >\n            Cохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.changeStatusCreateNewFilter()}\n          >\n            Отменить\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  generale_create: state.filter.generale_create,\n  title_create: state.filter.title_create,\n})\n\nconst mapDispatchToProps = {\n  changeStatusCreateNewFilter,\n  changeTitleCreate,\n  changeGeneraleCreate,\n  addCustomFilter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNewFilter)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  addClients,\n  appFilter,\n  resetFilter,\n  changeStatusCreateNewFilter,\n  saveCustomFilter,\n  removeFilter,\n} from '../../../Redux/actions'\n\nimport SetBrand from './SetBrand'\nimport SetClient from './SetClient'\nimport SetDataCreate from './SetDataCreate'\nimport SetEngeneer from './SetEngeneer'\nimport SetGroup from './SetGroup'\nimport SetManager from './SetManager'\nimport SetSubtype from './SetSubtype'\nimport SetStatus from './SetStatus'\nimport SetTypeOrders from './SetTypeOrders'\nimport CreateNewFilter from '../CreateNewFilter'\n\nimport { icon_trush } from '../../../data/icons'\n\nconst SetFilter = (props) => {\n  useEffect(() => {\n    props.addClients()\n  }, [props.clientFilter])\n\n  return (\n    <div className=\"setCustomFilter\">\n      <div className=\"filterOptions\">\n        <div className=\"setCustomFilterRow\">\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetStatus />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetGroup />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetClient />\n          </div>\n        </div>\n        <div className=\"setCustomFilterRow\">\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetTypeOrders />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetBrand />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetManager />{' '}\n          </div>\n        </div>\n        <div className=\"setCustomFilterRow\">\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetDataCreate />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetSubtype />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {props.user.role.orders_visibility ? (\n              <SetEngeneer />\n            ) : (\n              <>\n                <div className=\"optionsFilterTitle\">Инженер</div>\n                <div className=\"optionsFilterButton curNone\">\n                  <span>{`${props.user.last_name} ${props.user.first_name}`}</span>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"buttons fs14 mt15\">\n        <div className=\"blueButton\" onClick={() => props.appFilter()}>\n          Применить\n        </div>\n        {props.customFilters.map((filter) => filter.active).includes(true) ? (\n          <>\n            <div\n              className=\"whiteButton\"\n              onClick={() => props.saveCustomFilter()}\n            >\n              Сохранить фильтр\n            </div>\n            <div\n              className=\"whiteButton simbolBotton\"\n              onClick={() => props.removeFilter()}\n            >\n              <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                <path d={icon_trush} />\n              </svg>\n            </div>\n          </>\n        ) : (\n          <div\n            className=\"whiteButton\"\n            onClick={() => props.changeStatusCreateNewFilter()}\n          >\n            Создать фильтр\n          </div>\n        )}\n        <div className=\"whiteButton\" onClick={() => props.resetFilter()}>\n          <span className=\"blackCross\">✖</span>Сбросить параметы\n        </div>\n      </div>\n      {props.statusCreateNewFilter ? <CreateNewFilter /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  clientFilter: state.filter.clientFilter,\n  statusCreateNewFilter: state.view.statusCreateNewFilter,\n  customFilters: state.filter.customFilters,\n  user: state.data.user,\n})\n\nconst mapDispatchToProps = {\n  addClients,\n  appFilter,\n  resetFilter,\n  changeStatusCreateNewFilter,\n  saveCustomFilter,\n  removeFilter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport { changeSetStatusFilter, setVisibleFlag, changeOrderFormS } from '../../Redux/actions'\nimport OrderEditor from './newOrder/OrderEditor'\nimport { icon_table } from '../../data/icons'\n\nconst CustomPanel = (props) => {\n\n   const newOrder = () => {\n      // if (!props.edit) {\n      //    props.changeOrderFormS(parseInt(Date.now() / 1000) + 4 * 24 * 3600, 'estimated_done_at')\n      //  }\n      props.changeOrderFormS(props.user.id, 'manager_id')\n      props.setVisibleFlag('statusOrderEditor', true)\n   }\n\n   return (\n      <div className='mainCustomPanel'>\n         <div className='customPanel'>\n            <div \n               className='greenButton h27'\n               style={props.permissions.includes('create_orders') ?  null : {display: 'none'}}\n               onClick = { newOrder }>\n                  + Заказ \n            </div>\n            \n            <div className='customFilters'>\n               <div \n               className='customFilter'\n               onClick = { ()=> props.changeSetStatusFilter() }>\n                  <div className='cl11'>\n                  <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                     <path d=\"M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z\"></path>\n                  </svg>\n               </div> Фильтр\n               </div>\n               {props.customFilters.map(filter => {\n                  return (\n                  <CustomFilter data = {filter} key = {filter.id}/>\n                  )\n               })}\n            </div>\n            <div \n               className='chooseFieldButton'\n               onClick = {()=> console.log('ckick on \"set table\"')}\n            >\n               <div className='cl11'>\n                  <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                     <path d={icon_table}></path>\n                  </svg>\n               </div>\n               <div className='cl12'>\n                  <span className=\"fieldSeparate\">&#6662;</span>\n               </div>   \n            </div>\n         </div>\n         \n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   customFilters: state.filter.customFilters,\n   statusSetCustomFilter: state.view.statusSetCustomFilter,\n   permissions: state.data.user.role.permissions,\n   statusOrderEditor: state.view.statusOrderEditor,\n   user: state.data.user,\n   edit: state.order.edit\n   })\n\nconst mapDispatchToProps = {\n   changeSetStatusFilter,\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, { useState, useEffect, useRef } from 'react'\nimport _, { add } from 'lodash'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport { addOrders } from '../../Redux/actions/orderActions'\nimport { changePageAction, addBaggesAction, addStatusGroupAction, addCustomFilters, addAdCampaign, addEquipment } from '../../Redux/actions'\nimport CustomPanel from './CustomPanel'\n\nfunction Orders(props) {\n\n\n// Загружаем заказы\nuseEffect(() => {\n  props.addStatusGroup()\n  props.addCustomFilters()\n  props.addAdCampaign()\n  // props.addEquipment()\n}, [])\n\n\n  \nconst pageChangeHandler = (page) => {\n  const curent_page = page.selected ? page.selected : 0\n  props.changePage(curent_page)\n}\n  useEffect(()=>{\n    props.addOrders()\n    props. addBagges()\n  }, [props.mainFilter])\n\n  return (\n    <div className=\"pageContent\">\n        <Header oderSearch={''} />\n        <Filters />\n        <CustomPanel/>\n        {props.ordersShow ? <TableOrders/> : <Loader/>}\n        <div className=\"tableAllPage\">\n          <ReactPaginate\n            pageCount={ props.count % 50 > 0 ? ( props.count / 50 ) :  props.count / 50 - 1} \n            marginPagesDisplayed={2}\n            pageRangeDisplayed={5}\n            onPageChange={pageChangeHandler}\n            forcePage={ props.mainFilter.page }\n            previousLabel={'<'}\n            nextLabel={'>'}\n            breakLabel={'...'}\n            breakClassName={'pages-pagination'}\n            containerClassName={'pagination'}\n            pageClassName={'pages-pagination'}\n            activeClassName={'active'}\n            nextClassName={'pages-pagination'}\n            previousClassName={'pages-pagination'}\n          />\n            <div className=\"tablePageCount\">\n              Всего - { props.count }\n            </div>\n        </div>\n        {props.statusOrderEditor ? <OrderEditor/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   mainFilter: state.filter.mainFilter,\n   count: state.filter.count,\n   ordersShow: state.data.ordersShow\n})\n\nconst mapDispatchToProps = {\n  addOrders,\n  changePage: changePageAction,\n  addBagges: addBaggesAction,\n  addStatusGroup: addStatusGroupAction,\n  addCustomFilters,\n  addAdCampaign,\n  addEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n  // addTodo: todo => ref('todos').push(todo)\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n  \n\n\n  const handleOnCkick = () => {\n \n    fetchOrders()\n  }\n\n  async function fetchOrders() {\n    try {\n      const request_config = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n          // 'Accept': '*/*'\n        },\n        body: JSON.stringify({\"page\": 0})\n      }\n      const response = await fetch(\"http://192.168.1.48:5005/get_orders\", request_config)\n      const data = await response.json()\n      console.log(`fetchOrder - success: ${data['success']}`,)\n      console.log(data)\n    } catch(error){\n        console.log(error)\n    }\n  }\n\n\n\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n        <button onClick={handleOnCkick} className=\"dataDownload\">\n          Загрузить заказ\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n  // addTodo: todo => ref('todos').push(todo)\n})\n\nexport default connect(mapStateToProps)(Shops)\n","\nimport React from 'react'\n\n\nconst Checkbox = (props) => {\n\n   return (\n      props.unvisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.disabled ? null : props.onChange}\n            checked={props.checked}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// unvisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icone_sphere, icone_setting } from '../../../data/icons'\nimport { activeCashbox, editCashbox, setVisibleFlag, changePaymentForm, changeCashboxForm } from '../../../Redux/actions'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\n\nconst Cashbox = (props) => {\n\n   const activ = (id) => {\n      return id === props.activ_cashbox_id\n   }\n\n   const edit = props.user.role.permissions.includes('edit_cash')\n\n   const income = props.user.role.permissions.includes('make_income') &&\n                  activ(props.cashbox.id) && \n                  (props.cashbox.employees[props.user.id].like_cashbox ? \n                  props.cashbox.permissions.includes('incoming') :\n                  props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n   const outcome = props.user.role.permissions.includes('make_expenditure') &&\n                   activ(props.cashbox.id) && \n                   (props.cashbox.employees[props.user.id].like_cashbox ? \n                   props.cashbox.permissions.includes('outcoming') :\n                   props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n   const move = props.user.role.permissions.includes('move_money') &&\n                activ(props.cashbox.id) && \n                (props.cashbox.employees[props.user.id].like_cashbox ? \n                props.cashbox.permissions.includes('outcoming_move') :\n                props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n   const showBalance = props.user.role.permissions.includes('see_remains') &&\n                       (props.cashbox.employees[props.user.id].like_cashbox ? \n                       props.cashbox.permissions.includes('show_cashbox_remains') :\n                       props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n   function handleEdit () {\n      props.editCashbox(props.cashbox)\n      props.setVisibleFlag('statusCashboxEditor', true)\n   }\n\n\n   return (\n      <div \n         className = {`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted  ? 'bcg' : 'cgr'}`}\n         onClick={() => props.changeCashboxForm(props.cashbox, 'current_cashbox')}\n      >\n         <div className='icons'>\n               <div><Icon className='smalIcon' icon={icone_sphere} color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n               <div\n                  onClick={edit ? handleEdit : null}\n               >\n                  <Icon className='smalIcon curP' icon={icone_setting} color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n               </div>\n         </div>\n         <div>{props.cashbox.title.toUpperCase()}</div>\n         {showBalance ? \n         <div className='cacsboxBalance'>{`${parseFloat(props.cashbox.balance).toFixed(2)} руб.`}</div> : null}\n         <div className='row jc-c'>\n            <Button\n               title='+ Приход'\n               className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n               onClick={() => {\n                  props.changePaymentForm(2, 'direction')\n                  props.setVisibleFlag('statusPaymentsEditor', true)\n               }}\n               disabled={props.cashbox.deleted}\n               unvisible={!income}\n            />\n            <Button\n               title='- Расход'\n               className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n               onClick={() => {\n                  props.changePaymentForm(1, 'direction')\n                  props.setVisibleFlag('statusPaymentsEditor', true)\n               }}\n               disabled={props.cashbox.deleted}\n               unvisible={!outcome}\n            /> \n         </div>\n         <Button\n            title='Перемещение'\n            className='whiteButton'\n            onClick={() => {\n               props.changePaymentForm(0, 'direction')\n               props.changePaymentForm(props.cashbox.id, 'cashbox_id')\n               props.setVisibleFlag('statusPaymentsEditor', true)\n            }}\n            disabled={props.cashbox.deleted}\n            unvisible={!move}\n         /> \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   user: state.data.user,\n   activ_cashbox_id: state.cashbox.current_cashbox.id\n})\n\nconst mapDispatchToProps = {\n   activeCashbox,\n   editCashbox,\n   setVisibleFlag,\n   changePaymentForm,\n   changeCashboxForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeEmployeeSelected, changeCashboxPermissions } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted && perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted && perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted && perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted && perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted && perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted && perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeEmployeeSelected,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEmoloyee, changeCashboxForm, changeCashboxPermissions } from '../../../Redux/actions'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.filter(employee => !employee.deleted).map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => {\n                        props.changeCashboxForm(employee.id, 'permissions_employee')\n                        props.editEmoloyee(employee)\n                        props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n                     }}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => {\n                              props.changeCashboxForm(employee.id, 'permissions_employee')\n                              props.changeCashboxPermissions(event.target.checked, 'available')\n                           }}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     ( props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') : \n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmoloyee,\n   changeCashboxForm,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../general/LableInput'\n\nimport { changeCashboxForm, chooseCashboxSelected } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={(event) => props.changeCashboxForm(event.target.value, 'title')}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxForm(true, 'isGlobal')}\n            func2 = {() => props.changeCashboxForm(false, 'isGlobal')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxForm(event.target.checked, 'isVirtual')} \n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxForm(0, 'type')}\n            func2={() => props.changeCashboxForm(1, 'type')}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxForm,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm, setVisibleFlag, createCashbox, seveEditCashbox, deleteCashbox } from '../../../Redux/actions'\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n      props.setVisibleFlag('statusCashboxEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   useEffect(() => {\n     if (!props.cashbox.edit) {\n      let list_per = {}\n      props.employees.filter(employee => !employee.deleted).forEach(employee => {\n         list_per[employee.id] = {}\n         list_per[employee.id].available = true\n         list_per[employee.id].like_cashbox = true\n         list_per[employee.id].permissions = ['show_cashbox_remains', 'show_cash_flow', 'incoming', 'incoming_move', 'outcoming', 'outcoming_move']\n      })\n      props.changeCashboxForm(list_per, 'employees')\n    }\n   }, [])\n\n  const hangleCreate = () => {\n    if (props.cashbox.title) {\n      props.createCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (props.cashbox.title) {\n      props.seveEditCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n        </div>\n\n        <Tabs\n          list={['Общие', 'Доcтуп']}\n          func={props.changeCashboxForm}\n          tab={props.cashbox.tabs_editor}\n          tab_field=\"tabs_editor\"\n        />\n\n        {props.cashbox.tabs_editor === 0 ? <DataCashbox /> : null}\n        {props.cashbox.tabs_editor === 1 ? <CashboxAccess /> : null}\n\n        <BottomButtons\n          edit={props.cashbox.edit}\n          create={ hangleCreate }\n          save={ hangleSave }\n          delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null }\n          recover={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null }\n          close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n          deleted={props.cashbox.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  cashbox: state.cashbox,\n  employees: state.data.employees,\n  view: state.view,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm,\n  setVisibleFlag,\n  createCashbox,\n  seveEditCashbox,\n  deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, setPayment } from '../../Redux/actions'\nimport { icon_file_text, icon_warning } from '../../data/icons'\nimport Icon from '../general/Icon'\nimport { showDate } from '../general/utils'\n\nconst TablePayments = (props) => {\n\n   const showBalance = props.user.role.permissions.includes('see_remains') \n                     //   (props.current_cashbox.employees[props.user.id].like_cashbox ? \n                     //   props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                     //   props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains')) \n\n   return (\n      <table className = 'mt15'>\n         <thead>\n            <tr className=''>\n               <th className='w150'>Создан</th>\n               <th>Описание</th>\n               <th className='w91'>Приход, руб.</th>\n               <th className='w91'>Расход, руб.</th>\n               {showBalance ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n         </thead>\n         <tbody>\n            {props.payments.filter(payment => props.showDeleted || !payment.deleted ).map(payment => (\n               <tr \n                  key={payment.id}\n                  className={payment.deleted ? 'rowDeleted redBorder' : null}\n                  onDoubleClick={() => {\n                     props.setPayment(payment)\n                     props.setVisibleFlag('statusPaymentsCard', true)\n                  }}\n               >\n                  <td>\n                     <div>{payment.employee.name}</div>\n                     <div className='row'>\n                        <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                        {payment.created_at !== payment.custom_created_at ?\n                           <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                           <Icon \n                              className='icon-s2 ml5'\n                              icon={icon_warning} \n                              color='red' \n                           /> \n                        </div> : null}\n                     </div>\n                  </td>\n                  <td>\n                     <div>{payment.description}</div>\n                     {payment.direction ? \n                     <div className='row'>\n                        <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                        <div className='tac ml5 cgr'>{payment.cashflow_category}</div> \n                     </div> : null }\n                  </td>\n                  <td className={payment.income ? 'greenFont tac': 'tac'}>{payment.income}</td>\n                  <td className={payment.outcome ? 'redFont tac': 'tac'}>{payment.outcome}</td>\n                  {showBalance ? <td className='tac'>{parseFloat(payment.deposit).toFixed(2)}</td> : null }\n               </tr> \n            ))}\n         </tbody>\n         \n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payments: state.data.payments,\n   employees: state.data.employees,\n   user: state.data.user,\n   current_cashbox: state.cashbox.current_cashbox\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   setPayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { changePaymentForm, addPayments } from '../../Redux/actions';\nimport { icon_stats_docs } from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\n\nregisterLocale('ru', ru)\n\nconst ManeyMovement = (props) => {\n\n   useEffect(() => {\n      if (props.current_cashbox) { props.addPayments() }\n   }, [props.current_cashbox])\n\n   const [showDeleted, setShowDeleted] = useState(false)\n   \n   return (\n      <div className = 'ml30 w100'>\n\n         <div className='row'>\n            <Icon icon={icon_stats_docs}/>\n            <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n         </div>\n\n         <div className='row'>\n            {props.permissions.includes('see_moving_money_all_time') ? <>\n            <div className='w250'>\n               <DatePicker \n                  selectsRange={true}\n                  startDate={props.filter_created_at[0] ? new Date(props.filter_created_at[0] * 1000) : null}\n                  endDate={props.filter_created_at[1] ? new Date(props.filter_created_at[1] * 1000) : null}\n                  onChange={(update) => {\n                     props.changePaymentForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat=\"dd.MM.yyyy\"\n                  locale={'ru'}\n                  maxDate={ Date.now() }\n               />\n            </div>\n\n            <button \n               className='blueButton'\n               onClick={() => props.addPayments()}\n            >\n               Применить\n            </button>\n            </> : null}\n\n            {props.permissions.includes('see_delete_payments') ? \n            <Checkbox\n               label='Показать удаленные'\n               onChange={event => setShowDeleted(event.target.checked)}\n               value={showDeleted}\n            /> : null}\n         </div>\n\n         <TablePayments showDeleted = { showDeleted }/>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_cashbox: state.cashbox.current_cashbox,\n   filter_created_at: state.payment.filter_created_at,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, resetPayments, deletePayment } from '../../Redux/actions'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.data.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag, addCashboxes, changeCashboxForm, addPayments } from '../../../Redux/actions'\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addCashboxes()\n   },[])\n\n   const cashboxes = props.cashboxes.filter(cashbox => \n      (!cashbox.deleted || showDeleted) && \n      cashbox.employees[props.user.id].available &&\n      (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n      )\n   \n   \n   // useEffect(() => {\n   //    props.changeCashboxForm(cashboxes[0], 'current_cashbox')\n   // },[])\n\n   return (\n      <div className = 'contentTab'>\n\n         <div className = 'row al-itm-bl'>\n            <div className='cashboxes'>\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  checked={showDeleted}\n               />\n               {cashboxes.map(cashbox => {\n               return (\n                  <Cashbox\n                     key={cashbox.id}\n                     cashbox={cashbox}\n                     active={cashbox.active}\n                  />\n               )})}\n               \n               {props.user.role.permissions.includes('edit_cash') ?\n               <div \n                  className='whiteButton'\n                  onClick={() => props.setVisibleFlag('statusCashboxEditor', true)}\n               >\n                     + Добавить кассу\n               </div> : null}\n\n            </div>\n            {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null }\n           \n         </div>\n         {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n         {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n         {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view,\n   cashboxes: state.data.cashboxes,\n   user: state.data.user,\n   current_branch: state.data.current_branch,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   addCashboxes,\n   changeCashboxForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport { currentMonth } from '../../components/general/utils'\n\n\nexport function changePayrollForm( value, field ) {\n   return {\n     type: 'CHANGE_PAYROLL_FORM',\n     field,\n     value\n   }\n }\n\nexport function editPayroll(payroll) {\n   return {\n     type: 'EDIT_PAYROLL',\n     payroll\n   }\n }\n \n export function resetPayroll() {\n   return {\n     type: 'RESET_PAYROLL'\n   }\n }\n \n \n export function selectedPayroll( value, field ) {\n   return {\n     type: 'SELECTED_PAYROLL',\n     field,\n     value\n   }\n }\n\nexport function addPayrolls() {\n\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n \n   return dispatch => {\n \n     fetch(state.data.url_server + '/get_payrolls', request_config)\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrolls',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос начислений не выполнен'))\n   }\n }\n\n export function addMonthBalance() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n   custom_created_at: currentMonth(),\n   employee_id: state.payroll.setted_employee\n })\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_payroll_sum', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_PAYROLL_FORM',\n          field: 'month_balance',\n          value: data.sum,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос баланса не выполнен'))\n  }\n}\n\nexport function createPayroll() {\n\n  const state = store.getState()\n\n  const request_config1 = getRequestConfig({\n    description: state.payroll.description,      \n    income: state.payroll.income,\n    outcome: -state.payroll.outcome,\n    direction: state.payroll.direction,\n    deleted: state.payroll.deleted,\n    reimburse: state.payroll.reimburse,\n    created_at: state.payroll.created_at,\n    custom_created_at: state.payroll.custom_created_at,\n    relation_type: state.payroll.relation_type,\n    relation_id: state.payroll.relation_id,\n    employee_id: state.payroll.employee_id,\n    order_id: state.payroll.order_id\n  })\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    fetch(state.data.url_server + '/get_payrolls', request_config2)\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payrolls',\n          data: data.data,\n        })\n        dispatch({\n          type: 'RESET_PAYROLL',\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPayrollEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}\n\nexport function deletePayroll(flag) {\n\n  const state = store.getState()\n\n  let request_config1 = getRequestConfig({\n    id: state.payroll.edit,      \n    deleted: flag\n  })\n  request_config1.method = 'PUT'\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    fetch(state.data.url_server + '/get_payrolls', request_config2)\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payrolls',\n          data: data.data,\n        })\n        dispatch({\n          type: 'RESET_PAYROLL',\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPayrollEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { editPayroll } from '../../../Redux/actions/payrollActions'\n\nimport { showDate } from '../../general/utils'\n\nconst TablePayrolls = (props) => {\n\n   const [incomeSum, setIncomeSum] = useState(0)\n   const [outcomeSum, setOutcomeSum] = useState(0)\n\n   const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n   const editPayroll = (payroll) => {\n      props.editPayroll(payroll)\n      props.setVisibleFlag('statusPayrollEditor', true)\n   }\n\n   const payrolls = props.payrolls.filter(payroll => props.showDeleted || !payroll.deleted)\n\n   \n   useEffect(() => {\n      let income_sum = 0\n      let outcome_sum = 0\n      props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n         income_sum += payroll.income\n         outcome_sum += payroll.outcome\n      })\n      setIncomeSum(income_sum)\n      setOutcomeSum(outcome_sum)\n   }, [props.payrolls])\n   \n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w130'>Дата</th>\n               <th>Описание</th>\n               <th className='w91'>Приход, руб.</th>\n               <th className='w91'>Расход, руб.</th>\n               <th className='w91'>Баланс, руб.</th>\n            </tr>\n         </thead>\n         <tbody>\n            {payrolls.map(payroll => (\n               <tr \n                  key={payroll.id}\n                  className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                  onDoubleClick={() => editPayroll(payroll)}\n               >\n                  <td className='pd-lr-5'>\n                     <div>\n                        <div>{type_payrolls[payroll.relation_type]}</div>\n                        <div className='cgr'>{showDate(payroll.created_at)}</div>\n                     </div>\n                  </td>\n                  <td className='pd-lr-5'>{payroll.description}</td>\n                  <td className={payroll.income ? 'greenFont tac': 'tac'}>{payroll.income}</td>\n                  <td className={payroll.outcome ? 'redFont tac': 'tac'}>{payroll.outcome}</td>\n                  <td className='tac'>{payroll.deposit}</td>\n               </tr>\n            ))}\n            <tr>\n               <td colSpan='2'>Всего - {payrolls.length}</td>\n               <td className='txtb tac'>{incomeSum} руб.</td>\n               <td className='txtb tac'>{outcomeSum} руб.</td>\n               <td></td>\n            </tr>\n         </tbody>\n      </table>\n\n   )\n}\n\nconst mapStateToProps = state => ({\n   payrolls: state.data.payrolls\n   })\n\nconst mapDispatchToProps = {\n   editPayroll,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { changePayrollForm } from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\n\nregisterLocale('ru', ru)\n\nconst PayrollForm = (props) => {\n\n   const [chooseData, setChooseData] = useState(false)\n\n   return (\n      <div className=''>\n         <div className='row al-itm-fe'>\n               <ChooseBotton\n                  className='mt15 mr-rg-20'\n                  title='Дата и время'\n                  name={['Текущее', 'Заданное']}\n                  func1 = {() => {\n                    setChooseData(false)\n                    props.changePayrollForm( null, 'custom_created_at')\n                  }}\n                  func2 = {() => setChooseData(true)}\n                  checked = { true }\n                  // disabled={!props.permissions.includes('backdating')}\n               />\n               {chooseData ? \n               <DatePicker \n                  selected={props.payroll.custom_created_at ? new Date(props.payroll.custom_created_at * 1000) : Date.now()}\n                  onChange={(date) => {\n                     props.changePayrollForm( date / 1000, 'custom_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat='dd.MM.yyyy HH:mm'\n                  locale={'ru'}\n                  maxDate={ Date.now() }\n                  // startDate={Date.now()}\n                  showTimeSelect\n               /> : null }\n            </div> \n            <LableInput\n               className='mt15'\n               width='70px'\n               title='Сумма'\n               onChange={event => props.changePayrollForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payroll.direction === 2 ? 'income' : 'outcome')}\n               value={props.payroll.outcome ?  props.payroll.outcome : props.payroll.income}\n               unit='руб.'\n               checkedFlag='inputPayrollSumChecked'\n               checked={props.view.inputPayrollSumChecked}\n               disabled={props.payroll.deleted}\n               redStar={ true }\n            />\n            <ChooseOfList\n               id='employeePayroll'\n               title='Сотрудник'\n               className='mt15'\n               list={props.employees}\n               field='employee_id'\n               setElement={props.changePayrollForm}\n               current_id={props.payroll.employee_id}\n               width={'250px'}\n               employee={true}\n               checkedFlag='inputPayrollEmployeeChecked'\n               checked={props.view.inputPayrollEmployeeChecked}\n               disabled={props.payroll.deleted}\n               // unvisible={false}\n            />\n            <LableArea\n               className='mt15'\n               title='Коментарий'\n               onChange={event => props.changePayrollForm(event.target.value, 'description')}\n               value={props.payroll.description}\n               checkedFlag='inputPayrollDescChecked'\n               checked={props.view.inputPayrollDescChecked}\n               redStar={ true }\n               disabled={props.payroll.deleted}\n            />      \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view, \n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.data.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { resetPayroll, changePayrollForm, createPayroll, deletePayroll } from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\n\nconst PaypolleEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusPayrollEditor', false)\n      props.setVisibleFlag('inputPayrollDescChecked', true )\n      props.setVisibleFlag('inputPayrollEmployeeChecked', true )\n      props.resetPayroll()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      props.changePayrollForm(props.payroll.setted_employee, 'employee_id')\n   }, [])\n\n \n\n   const hangleCreate = () => {\n      if (\n         (props.payroll.income || props.payroll.outcome) &&\n         props.payroll.employee_id  && \n         props.payroll.description\n         ) {\n         props.createPayroll()\n      } else {\n         if (!(props.payroll.income || props.payroll.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n         if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n         if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n      }\n   }\n\n  const hangleSave = () => {\n   if (\n      (props.payrolle.income || props.payrolle.outcome) &&\n      props.payroll.employee_id  && \n      props.payroll.description\n      ) {\n      // props.createPayment()\n   } else {\n      if (!(props.payrolle.income || props.payrolle.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n      if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n      if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n   }\n  }\n\n  \n\n  const title = ['', 'Взыскание', 'Премия']\n\n  const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n  return (\n      <div className=\"rightBlock\">\n         <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n         <div className=\"createNewTitle\">\n            {props.payroll.edit ? type_payrolls[props.payroll.relation_type] :(title[props.payroll.direction])}\n         </div>\n\n         <div className='contentEditor'>\n           \n           {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n         </div>\n       \n        <BottomButtons\n            edit={props.payroll.edit}\n            create={ hangleCreate }\n            // save={ hangleSave }\n            delete={ props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null }\n            recover={ props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null }\n            close={ handleClose }\n            deleted={props.payroll.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view, \n  payroll: state.payroll,\n  permissions: state.data.user.role.permissions,\n  employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   setVisibleFlag,\n   resetPayroll,\n   createPayroll,\n   deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","\nimport React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { addEmployees, setVisibleFlag } from '../../../Redux/actions';\nimport { changePayrollForm, addPayrolls, addMonthBalance } from '../../../Redux/actions/payrollActions'\nimport { showName } from '../../general/utils'\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\n\nregisterLocale('ru', ru)\n\n\nconst EmployeeSalary = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addMonthBalance()\n      props.addEmployees()\n   }, [props.payroll.setted_employee])\n\n   const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n   const handleIncome = () => {\n      props.changePayrollForm(2, 'direction')\n      props.changePayrollForm(9, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n\n   const handleOutcome = () => {\n      props.changePayrollForm(1, 'direction')\n      props.changePayrollForm(10, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n   \n\n   return (\n      <div className = ''>\n         <div className='createNewTitle fsz20 mt0'>\n            {showName(current_employee)}\n         </div>\n         <div className='txtb'>\n            <span>Начисленно в текущем месяце: </span>\n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{props.payroll.month_balance}</span> руб.\n            </div>\n         <div className='txtb'>\n            <span>Баланс:</span> \n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{current_employee.balance}</span> руб.\n            </div>\n\n         <div className='row mt15 jc-sb'>\n           <div className='row'>\n               <div className='w250'>\n                  <DatePicker \n                     selectsRange={true}\n                     startDate={props.payroll.filter_created_at[0] ? new Date(props.payroll.filter_created_at[0] * 1000) : null}\n                     endDate={props.payroll.filter_created_at[1] ? new Date(props.payroll.filter_created_at[1] * 1000) : null}\n                     onChange={(update) => {\n                        props.changePayrollForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                     }}\n                     isClearable={true}\n                     placeholderText='Выбирите дату'\n                     className=\"optionFilterInputDate\"\n                     dateFormat=\"dd.MM.yyyy\"\n                     locale={'ru'}\n                     maxDate={ Date.now() + 84600000 }\n                  />\n               </div>\n               <Button\n                  className='blueButton'\n                  title='Применить'\n                  onClick={() => props.addPayrolls()}\n               />\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  value={showDeleted}\n                  unvisible={!props.permissions.includes('see_seleted_payrolls')}\n               />\n            </div>\n            <div className='row'>\n               <Button\n                  className='greenButton'\n                  title='+ Премия'\n                  onClick={ handleIncome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n               <Button\n                  className='greenButton bcr m10'\n                  title='- Взыскание'\n                  onClick={ handleOutcome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n            </div>\n         </div>\n         {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n         <TablePayrolls showDeleted={showDeleted}/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   statusPayrollEditor: state.view.statusPayrollEditor\n   })\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   addPayrolls,\n   addMonthBalance,\n   addEmployees,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showName } from '../../general/utils'\nimport { changePayrollForm } from '../../../Redux/actions/payrollActions'\n\n\nconst TableSalaryEmployees = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Сотрудник</th>\n               <th>Баланс</th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.employees.map(employee => (\n               <tr \n                  key={employee.id}\n                  onClick={() => props.changePayrollForm(employee.id, 'setted_employee')}\n                  style={employee.id === props.payroll.setted_employee ? { backgroundColor: '#cae1f5'} : null}\n               >\n                  <td>{showName(employee)}</td>\n                  <td>{employee.balance}</td>\n               </tr>\n            ))}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   payroll: state.payroll\n   })\n\nconst mapDispatchToProps = {\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollForm } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollForm(props.user_id, 'setted_employee')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm  } from '../../Redux/actions'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\n\nconst Payments = (props) => {\n\n  useEffect(() => {\n \n  }, [])\n\n\n  return (\n    <div className='pageContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Финансы</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ ['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты'] }\n        func={props.changeCashboxForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <Cashboxes/>: null}\n         {props.tabs === 1 ? null : null}\n         {props.tabs === 2 ? null : null}\n         {props.tabs === 3 ? <Salaries/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.cashbox.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Wherehouse = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет склад</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n  // addTodo: todo => ref('todos').push(todo)\n})\n\nexport default connect(mapStateToProps)(Wherehouse)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clients = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут клиенты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  //   dataSidebarRows: 'dataSidebarRows',\n    // addTodo: todo => ref('todos').push(todo)\n  })\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n  // addTodo: todo => ref('todos').push(todo)\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusSettingRow } from '../../Redux/actions'\n\n\nfunction SettingRow(props) {\n  return (\n    <Link \n    className=\"settingRow\" \n    to={props.row.url}\n    style={{\n       backgroundColor: props.settingMenu.find(row => row.id === props.row.id).active ? '#939699' : '#53585c',\n       color: props.settingMenu.find(row => row.id === props.row.id).active ? '#fff' : null\n      }}\n    onClick={() => props.changeStatusSettingRow(props.row.id)}\n    >\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n   settingMenu: state.data.settingMenu\n})\n\nconst mapDispatchToProps = {\n   changeStatusSettingRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={21}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  unvisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\nimport InputMask from 'react-input-mask'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport { changeEmployeEditorForm, changeEmployeeEditorRoleOptions, setRoleEmployeeEdetor } from '../../../../Redux/actions'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'first_name')}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'last_name') }\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'email')}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'login') }\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? (\n        <div className=\"errorMassageInput\">Такой Login уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'password')}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Телефон</div>\n      <InputMask\n        mask=\"+7(999) 999-99-99\"\n        className={`textInput w250 ${props.employee.deleted ? 'ds' : null}`}\n        onChange={(event) =>\n          props.changeEmployeEditorForm(event.target.value, 'phone')\n        }\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'inn')}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'doc_name')}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={(event) =>\n          props.changeEmployeEditorForm(event.target.value, 'notes')\n        }\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={(event) => props.changeEmployeEditorForm(event.target.value, 'post')}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        field=\"role_id\"\n        setElement={props.changeEmployeEditorForm}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeEditorForm,\n  changeEmployeeEditorRoleOptions,\n  setRoleEmployeeEdetor,\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee\n} from '../../../../Redux/actions'\nimport { addPayrules } from '../../../../Redux/actions/payrulleAction'\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst EmploeeyEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusEmployeeEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n    props.addPayrules()\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login &&\n      props.employee.password &&\n      props.employee.role_id !== 0\n    ) {\n      props.createEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n      if (!props.employee.password) {\n        props.setVisibleFlag('inputEmployeePasswordChecked', false)\n      }\n      if (props.employee.role_id === 0) {\n        props.setVisibleFlag('inputEmployeeRoleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login\n    ) {\n      props.seveEditEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit\n            ? `${props.employee.last_name} ${props.employee.first_name}`\n            : 'Новый сотрудник'}\n        </div>\n\n        <div className=\"tabs\">\n          <div\n            className={props.tabs === 1 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(1)}\n          >\n            Общие\n          </div>\n          <div\n            className={props.tabs === 2 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(2)}\n          >\n            Доступ\n          </div>\n        </div>\n\n        {props.tabs === 1 ? <EditEmployeeGenerally /> : null}\n        {props.tabs === 2 ? <EditEmployeePermission /> : null}\n\n        <BottomButtons\n          edit={props.edit}\n          create={hangleCreate}\n          save={hangleSave}\n          delete={() => props.deleteEmployee(true)}\n          recover={ props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n          close={() => props.setVisibleFlag('statusEmployeeEditor', false)}\n          deleted={props.employee.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tabs: state.employee.tabs,\n  edit: state.employee.edit,\n  employee: state.employee,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee,\n  addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n         ref={mainCheckbox}\n         type='checkbox' \n         onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editEmoloyee, setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmoloyee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n   editEmoloyee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addDiscountMargin, addRoles, changeShowDeleted, resetEmoloyee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\n\nconst SettingEmployees = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n    props.addRoles()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n      <div className='Header'>\n        <span className='headerTitle'>Сотрудники</span>\n      </div>\n        <div className='settingPageBody'>\n\n        {props.permission.includes('setting_roles') ?\n          <>\n          <h3>Роли</h3>\n        <p>Роль — это список прав и возможностей сотрудника.</p>\n\n        <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n        > \n          + Роль\n        </div>\n        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n        <TableRoles/>\n        </> : null}\n\n        <h3>Сотрудники</h3>\n        <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n        <div className='buttons'>\n            <div \n            className='greenButton'\n            onClick={() => {\n              props.resetEmoloyee()\n              props.setVisibleFlag('statusEmployeeEditor', true)\n            }}\n            >\n              + Сотрудник\n            </div>\n            {props.permission.includes('setting_see_employees') ?\n              <Checkbox\n                label='Показать удаленных'\n                onChange={() => props.changeShowDeleted()}\n                checked={props.showDeleted}\n            /> : null}\n        </div>\n\n        {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n        <TableEmployees/>\n\n       \n\n      </div>\n    </div>\n    \n  )\n}\n\nconst mapStateToProps = state => ({\n  statusCreateNewRole: state.view.statusCreateNewRole,\n  statusEmployeeEditor: state.view.statusEmployeeEditor,\n  showDeleted: state.employee.showDeleted,\n  permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addDiscountMargin,\n  addRoles,\n  changeShowDeleted,\n  resetEmoloyee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeShedule } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n  const weekdays = [\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n    'Воскрсение',\n  ]\n\n  return (\n    <div className=\"schedule mr-rg-20\">\n      <div className=\"lableImput mt15\">График работы локации</div>\n      {props.branch.schedule.map((day, idx) => {\n        return (\n          <div className=\"row mt15\" key={idx}>\n            <Checkbox\n              className=\"w150\"\n              onChange={(event) =>\n                props.changeShedule(idx, 'work_day', event.target.checked)\n              }\n              checked={day.work_day}\n              label={weekdays[idx]}\n              disabled={props.branch.deleted}\n            />\n\n            {props.branch.schedule[idx].work_day ? (\n              <div className=\"row\">\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'start_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.start_time}\n                />\n                <div className=\"w30 tac\">&#8212;</div>\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'end_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.end_time}\n                />\n              </div>\n            ) : null}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n  changeShedule,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeBranchForm } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\nimport {\n  icon_location,\n  icon_map_location,\n  icon_wrench,\n  icon_hammer,\n  icon_radio,\n  icon_git,\n  icon_svg,\n} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchForm('color', color)\n                        props.changeBranchForm('icon', icon)\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setBranchEmployee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\n\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.filter(employee => !employee.deleted).map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport InputMask from 'react-input-mask'\n\nimport {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n} from '../../../../Redux/actions'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n      props.setVisibleFlag('statusBranchEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateBranch = () => {\n    if (\n      props.branch.name &&\n      props.branch.orders_prefix &&\n      props.branch.documents_prefix\n    ) {\n      props.createBranch()\n    } else {\n      if (!props.branch.name) {\n        props.setVisibleFlag('inputBranchNameChecked', false)\n      }\n      if (!props.branch.orders_prefix) {\n        props.setVisibleFlag('inputBranchPrefixChecked', false)\n      }\n      if (!props.branch.documents_prefix) {\n        props.setVisibleFlag('inputBranchPrefixDocChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.branch.edit ? props.branch.name : ' Новая локация'}\n        </div>\n\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Название\"\n          onChange={(event) => props.changeBranchForm('name', event.target.value)}\n          value={props.branch.name}\n          checkedFlag=\"inputBranchNameChecked\"\n          checked={props.view.inputBranchNameChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Адрес\"\n          onChange={(event) => props.changeBranchForm('address', event.target.value)}\n          value={props.branch.address}\n          disabled={props.branch.deleted}\n        />\n        <div className=\"lableImput mt15\">Телефон</div>\n        <InputMask\n          mask=\"+7(999) 999-99-99\"\n          className=\"textInput w250 \"\n          onChange={(event) =>\n            props.changeBranchForm(\n              'phone',\n              event.target.value.replace(/[^0-9]/g, '')\n            )\n          }\n          value={props.branch.phone}\n          disabled={props.branch.deleted}\n        />\n        <Schedule />\n        <ChooseIcon />\n        <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n        <ChooseOfList\n          id={18}\n          list={props.order_type}\n          field=\"orders_type_id\"\n          setElement={props.changeBranchForm}\n          current_id={props.branch.orders_type_id}\n          width={'250px'}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера заказа\"\n          onChange={(event) => props.changeBranchForm('orders_prefix', event.target.value)}\n          value={props.branch.orders_prefix}\n          checkedFlag=\"inputBranchPrefixChecked\"\n          checked={props.view.inputBranchPrefixChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.orders_prefix}-${\n            props.counters.find((count) => count.id === 1).count\n          }`}\n        </p>\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера документов\"\n          onChange={(event) => props.changeBranchForm('documents_prefix', event.target.value)}\n          value={props.branch.documents_prefix}\n          checkedFlag=\"inputBranchPrefixDocChecked\"\n          checked={props.view.inputBranchPrefixDocChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.documents_prefix}-${\n            props.counters.find((count) => count.id === 2).count\n          }`}\n        </p>\n        <ChooseEmployees />\n\n        <BottomButtons\n          edit={props.branch.edit}\n          create={handleCreateBranch}\n          save={() => props.saveBranch()}\n          recover={\n            props.permissions.includes('setting_recover_branch')\n              ? () => props.deleteBranch(false)\n              : null\n          }\n          delete={() => props.deleteBranch(true)}\n          close={() => props.setVisibleFlag('statusBranchEditor', false)}\n          deleted={props.branch.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  view: state.view,\n  order_type: state.data.order_type,\n  counters: state.data.counters,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editBranch } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\n\nconst TableBranches = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th></th>\n               <th>Название локации</th>\n               <th>Адрес</th>\n               <th>Телефон</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.branches.filter(branch => props.showDeleted || !branch.deleted).map(branch =>{\n            return (\n               <tr \n                  key={branch.id}\n                  className={branch.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => props.editBranch(branch)} \n               >\n                  <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                  <td>{branch.name}</td>\n                  <td>{branch.address}</td>\n                  <td>{showPhone(branch.phone)}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   branches: state.data.branches,\n   showDeleted: state.branch.showDeleted\n   })\n\nconst mapDispatchToProps = {\n   editBranch\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addCounters, changeBranchForm } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n  useEffect(() => {\n    props.addCounters()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n          <span className='headerTitle'>Локации</span>\n        </div>\n\n        <div className='settingPageBody'>\n        <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n        <div className='row'>\n          <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusBranchEditor', true)}\n          > \n            + Добавить локацию\n          </div>\n          {props.permissions.includes('setting_see_branch') ? <Checkbox\n            className='ml10'\n            label='Показать удаленные'\n            onChange={event => props.changeBranchForm('showDeleted', event.target.checked)}\n            checked={props.showDeleted}\n          /> : null}\n        </div>\n\n        <TableBranches/>\n\n        {props.statusBranchEditor ? <BranchEditor/> : null}\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusBranchEditor: state.view.statusBranchEditor,\n  showDeleted: state.branch.showDeleted,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addCounters,\n  changeBranchForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingWherehouse = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки складов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n  // addTodo: todo => ref('todos').push(todo)\n})\n\nexport default connect(mapStateToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingAlerts = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки оповещений</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingAlerts)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport { icon_table } from '../../data/icons'\n\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         className={`tableFields ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1 h24'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                  <path d={icon_table}></path>\n               </svg>\n            </div>\n            <div className='cl12'>\n               <span className=\"fieldSeparate\">&#6662;</span>\n            </div>   \n         </div>\n\n         {listVisible ?\n            <div \n               className='listOptions'\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          unvisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","\nimport React from 'react'\n\nconst AddPicture = (props) => {\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div class={props.img ? 'showPicture' : 'addPicture'}>\n               <label class=\"label\">\n                 {props.img ? <img src={ props.img } className='showPicture'/> :\n                 <i class=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     name={props.name}\n                     onChange={props.onChange}\n                     value={props.value}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\n\nconst ChooseOfListMany = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n\n   const showWord = (len) => {\n      switch (len){\n\n         case 0: {\n            return 'Ничего не выбрано'\n         }\n\n         case props.list.length: {\n            return 'Все'\n         }\n\n         default:\n            return `Выбрано ${len}`\n      }\n   }\n \n\n   return (\n      <div \n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n         className={props.className}\n      >\n         <div className='lableImput'>{props.title}</div>\n         <div \n            className='optionsButton' \n            onClick={() => setListVisible(!listVisible)}\n         >\n            <span>\n               {showWord(props.checked_list.length)}\n            </span>\n            <span>&#6662;</span>\n         </div>\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id))}\n                        disabled={props.disabled}\n                     />\n                     <label>{props.mainLable}</label>\n                  </div>\n                  \n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                     onChange={() => props.func([element.id])}\n                     checked={props.checked_list.includes(element.id)}\n                     disabled={props.disabled}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine copy.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon) => (\n            <img\n              className=\"icon_equipment\"\n              src={`/icon_equipments/${icon}`}\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? '' : `/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? props.icon : '/icon_equipments/nothing.svg'}\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  chooseEquipmentBranches,\n  createBookEquipment,\n  seveEditEquipment,\n  deleteEquipment,\n} from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\n\nconst EquipmentEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      props.setVisibleFlag('statusEquipmentEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(\n    props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookEquipment()\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n      props.seveEditEquipment()\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              img={props.book.url}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={handleCreateEquipment}\n          save={handleSaveEquipment}\n          delete={() => props.deleteEquipment(true)}\n          recover={\n            props.permissions.includes('setting_recover_equipment')\n              ? () => props.deleteEquipment(false)\n              : null\n          }\n          close={() => props.setVisibleFlag('statusEquipmentEditor', false)}\n          deleted={props.book.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  createBookEquipment,\n  seveEditEquipment,\n  deleteEquipment,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEquipment, resetBookEquipment,} from '../../../../Redux/actions'\nimport { changeBookForm, addEquipmentType, addEquipmentBrand } from '../../../../Redux/actions/bookActions'\nimport { addEquipmentSubtype, addEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n  const [showDeleted, setShowDeteled] = useState(false)\n\n\n  useEffect(() => {\n    props.changeBookForm('', 'filter_type')\n    props.changeBookForm('', 'filter_brand')\n    props.changeBookForm('', 'filter_subtype')\n    props.changeBookForm('', 'filter_model')\n  }, [])\n\n  useEffect(() => {\n    props.addEquipmentType()\n  }, [props.book.filter_type, props.book.page_type])\n\n  useEffect(() => {\n    props.addEquipmentBrand()\n  }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand])\n\n  useEffect(() => {\n    props.addEquipmentSubtype()\n  }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype])\n\n  useEffect(() => {\n    props.addEquipmentModel()\n  }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model])\n\n  const addType = () => {\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(0, 'type')\n    props.resetBookEquipment()\n    props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n  }\n\n  const addBrand = () => {\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(1, 'type')\n    props.resetBookEquipment()\n    props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    props.changeBookForm(props.equipment_types, 'choose_list')\n    props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n  }\n\n  const addSubtype = () => {\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(2, 'type')\n    props.resetBookEquipment()\n    props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    props.changeBookForm(props.equipment_brands, 'choose_list')\n    props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n  }\n\n  const addModel = () => {\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(3, 'type')\n    props.resetBookEquipment()\n    props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    props.changeBookForm(props.equipment_subtypes, 'choose_list')\n    props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n  }\n \n  const chooseType = (equipment) => {\n    props.changeBookForm(equipment, 'equipment_type')\n    props.changeBookForm({}, 'equipment_brand')\n    props.changeBookForm({}, 'equipment_subtype')\n    props.changeBookForm({}, 'equipment_model')\n  }\n\n  const chooseBrand = (brand) => {\n    props.changeBookForm(brand, 'equipment_brand')\n    props.changeBookForm(0, 'equipment_subtype')\n    props.changeBookForm(0, 'equipment_model')\n  }\n\n  const chooseSubtype = (subtype) => {\n    props.changeBookForm(subtype, 'equipment_subtype')\n    props.changeBookForm(0, 'equipment_model')\n  }\n\n  const chooseModel = (model) => {\n    props.changeBookForm(model, 'equipment_model')\n  }\n\n  const editType = (equipment) => {\n    props.editEquipment(equipment)\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(0, 'type')\n  }\n\n  const editBrand = (brand) => {\n    props.editEquipment(brand)\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(0, 'equipment_brand')\n    props.changeBookForm(1, 'type')\n    props.changeBookForm(props.equipment_types, 'choose_list')\n    props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n  }\n  \n  const editSubtype = (subtype) => {\n    props.editEquipment(subtype)\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(0, 'equipment_subtype')\n    props.changeBookForm(2, 'type')\n    props.changeBookForm(props.equipment_brands, 'choose_list')\n    props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n  }\n\n  const editModel = (model) => {\n    props.editEquipment(model)\n    props.setVisibleFlag('statusEquipmentEditor', true)\n    props.changeBookForm(0, 'equipment_model')\n    props.changeBookForm(3, 'type')\n    props.changeBookForm(props.equipment_subtypes, 'choose_list')\n    props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n  }\n\n  const searchType = (value) => {\n    props.changeBookForm(1, 'page_type')\n    props.changeBookForm(value, 'filter_type')\n  }\n\n  const searchBrand = (value) => {\n    props.changeBookForm(1, 'page_brand')\n    props.changeBookForm(value, 'filter_brand')\n  }\n\n  const searchSubtype = (value) => {\n    props.changeBookForm(1, 'page_subtype')\n    props.changeBookForm(value, 'filter_subtype')\n  }\n\n  const searchModel = (value) => {\n    props.changeBookForm(1, 'page_model')\n    props.changeBookForm(value, 'filter_model')\n  }\n\n  const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n  const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n  const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n  return (\n    <div className=\"contentTab\">\n      <h4 className=\"mt15\">Изделия</h4>\n      <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n      \n      {props.permissions.includes('setting_see_equipment') ? \n      <Checkbox\n        className=\"mt15\"\n        label=\"Показать удаленные\"\n        onChange={(event) => setShowDeteled(event.target.checked)}\n        checked={showDeleted}\n      /> : null}\n\n      <div className=\"bookEquipment mt15\">\n        <div className=\"columnEquipment\">\n          <Button\n            className='whiteButton mwmc'\n            title='+ Группа'\n            onClick={ addType }\n          />\n          <div className=\"thead\">Группа</div>\n          <SearchInput\n             onChange={event => searchType(event.target.value)}\n             value={props.book.filter_type}\n          />\n          <div className=\"tbody\">\n            {props.equipment_types.filter(equipment => showDeleted || !equipment.deleted).map(equipment => (\n                <div\n                  key={equipment.id}\n                  className={`row tr \n                     ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                     ${equipment.deleted ? 'rowDeleted' : null}\n                  `}\n                  onClick={() => chooseType(equipment)}\n                  onDoubleClick={() => editType(equipment)}\n                >\n                  <img src={equipment.icon} className=\"icon_equipment\" />\n                  <div className=\"td\">{equipment.title}</div>\n                </div>\n              ))}\n          </div>\n          <Paginate\n            allItems={props.equipment_type_count}\n            onPage={50}\n            count={2}\n            count_start_end={0}\n            navigation={true}\n            func={page => props.changeBookForm(page, 'page_type')}\n          />\n          <div className=\"tr\">Всего - {props.equipment_type_count}</div>\n        </div>\n\n        <div className=\"columnEquipment\">\n          <Button\n            className='whiteButton mwmc'\n            title='+ Бренд'\n            onClick={isTypeChoosed ? addBrand : null}\n          />  \n          <div className=\"thead\">Бренд</div>\n          <SearchInput\n             onChange={event => searchBrand(event.target.value)}\n             value={props.book.filter_brand}\n          />\n          <div className=\"tbody\">\n            {isTypeChoosed ? (\n              props.equipment_brands.filter(brand => showDeleted || !brand.deleted).map(brand => (\n                <div\n                  key={brand.id}\n                  className={`row tr \n                     ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                     ${brand.deleted ? 'rowDeleted' : null}\n                  `}\n                  onClick={() => chooseBrand(brand)}\n                  onDoubleClick={() => editBrand(brand)}\n                >\n                  <div className=\"td\">{brand.title}</div>\n                </div>\n              ))\n            ) : (\n              <div className=\"clPage\">\n                <div className=\"tempContainer\">Выберете группу</div>\n              </div>\n            )}\n          </div>\n          <Paginate\n            allItems={isTypeChoosed ? props.equipment_brand_count : 0}\n            onPage={50}\n            count={2}\n            count_start_end={0}\n            navigation={true}\n            func={page => props.changeBookForm(page, 'page_brand')}\n          />\n          <div className=\"tr\">Всего - {isTypeChoosed ? props.equipment_brand_count : 0}</div>\n        </div>\n\n        <div className=\"columnEquipment\">\n          <Button\n            className='whiteButton mwmc'\n            title='+ Модуль / Серия'\n            onClick={isBrandChoosed ?  addSubtype : null}\n          />\n          <div className=\"thead\">Модуль / Серия</div>\n          <SearchInput\n             onChange={event => searchSubtype(event.target.value)}\n             value={props.book.filter_subtype}\n          />\n          <div className=\"tbody\">\n            {isBrandChoosed ? (\n              props.equipment_subtypes.filter(subtype => showDeleted || !subtype.deleted).map(subtype => (\n                <div\n                  key={subtype.id}\n                  className={`row tr \n                     ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                     ${subtype.deleted ? 'rowDeleted' : null}\n                  `}\n                  onClick={() => chooseSubtype(subtype)}\n                  onDoubleClick={() => editSubtype(subtype)}\n                >\n                   <img src={subtype.url} className='miniImg'/>\n                  <div className=\"td\">{subtype.title}</div>\n                  {/* <span>></span> */}\n                </div>\n              ))\n            ) : (\n              <div className=\"clPage\">\n                <div className=\"tempContainer\">Выберете бренд</div>\n              </div>\n            )}\n          </div>\n          <Paginate\n            allItems={isBrandChoosed ? props.equipment_subtype_count : 0}\n            onPage={50}\n            count={2}\n            count_start_end={0}\n            navigation={true}\n            func={page => props.changeBookForm(page, 'page_subtype')}\n          />\n          <div className=\"tr\">Всего - {isBrandChoosed ? props.equipment_subtype_count : 0}</div>\n        </div>\n\n        <div className=\"columnEquipment\">\n          <Button\n            className='whiteButton mwmc'\n            title='+ Модель'\n            onClick={isSubtypeChoosed ? addModel : null}\n          />\n          <div className=\"thead\">Модель</div>\n          <SearchInput\n             onChange={event => searchModel(event.target.value)}\n             value={props.book.filter_model}\n          />\n          <div className=\"tbody\">\n            {isSubtypeChoosed ? (\n              props.equipment_models.filter(model => showDeleted || !model.deleted).map((model) => (\n                <div\n                  key={model.id}\n                  className={`row tr \n                     ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                     ${model.deleted ? 'rowDeleted' : null}\n                  `}\n                  onClick={() => chooseModel(model)}\n                  onDoubleClick={() => editModel(model)}\n                >\n                  <div className=\"td\">{model.title}</div>\n                  {/* <span>></span> */}\n                </div>\n              ))\n            ) : (\n              <div className=\"clPage\">\n                <div className=\"tempContainer\">Выберете модуль / серию</div>\n              </div>\n            )}\n          </div>\n          <Paginate\n            allItems={isSubtypeChoosed ? props.equipment_models_count : 0}\n            onPage={50}\n            count={2}\n            count_start_end={0}\n            navigation={true}\n            func={page => props.changeBookForm(page, 'page_model')}\n          />\n          <div className=\"tr\">Всего - {isSubtypeChoosed ? props.equipment_models_count : 0}</div>\n        </div>\n      </div>\n\n      {props.statusEquipmentEditor ? <EquipmentEditor /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  equipment_types: state.data.equipment_types,\n  equipment_type_count: state.data.equipment_type_count,\n  equipment_brands: state.data.equipment_brands,\n  equipment_brand_count: state.data.equipment_brand_count,\n  equipment_subtypes: state.data.equipment_subtypes,\n  equipment_subtype_count: state.data.equipment_subtype_count,\n  equipment_models: state.data.equipment_models,\n  equipment_models_count: state.data.equipment_models_count,\n  book: state.book,\n  statusEquipmentEditor: state.view.statusEquipmentEditor,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n  setVisibleFlag,\n  editEquipment,\n  resetBookEquipment,\n  addEquipmentType,\n  addEquipmentBrand,\n  addEquipmentSubtype,\n  addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, resetBookEquipment, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, resetBookEquipment, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, resetBookEquipment, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n  useEffect(() => {\n    props.addEquipment()\n    props.addDictMalfunction()\n    props.addDictPackagelist()\n    props.addItemPayments()\n  }, [])\n\n  const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Справочники</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ tabs_list }\n        func={props.changeBookForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <BookEquipment/> : null}\n         {props.tabs === 1 ? <MalfunctionBooks/> : null}\n         {props.tabs === 2 ? <PackagelistBook/> : null}\n         {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n  addEquipment,\n  addDictMalfunction,\n  addDictPackagelist,\n  addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/SettingAlerts'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n      {/* <div className='settingContent'> */}\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n          {/* </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n  // addTodo: todo => ref('todos').push(todo)\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\n\nimport { addMainData, addEmployees, addStatus, addData } from '../Redux/actions';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\n\n\n\n\nfunction Main(props) {\n\n    // Загружаем строки меню в State\n    useEffect(() => {\n        props.addMainData()\n        props.addEmployees()\n        props.addStatus()\n    }, [])\n    useEffect(() => {\n        props.addData(props.branches.filter(branch => branch.employees.includes(props.user_id))[0], 'current_branch')\n    }, [props.branches])\n\n\n    \n    return (\n        <div>\n            <Sidebar/>\n            <div className = 'contentMain'>\n                <Switch>\n                    <Route path = '/tasks' component = {TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path = '/orders' component = {Orders}/>\n                    <Route path = '/shops' component = {Shops}/>\n                    <Route path = '/payments' component = {Payments}/>\n                    <Route path = '/wherehouse' component = {Wherehouse}/>\n                    <Route path = '/clients' component = {Clients}/>\n                    <Route path = '/analytics' component = {Analytics}/>\n                    <Route path = '/reports' component = {Reports}/>\n                    <Route path = '/telephony' component = {Telephony}/>\n                    <Route path = '/settings' component = {Settings}/>\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.data.branches\n})\n\n  const mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { loginAction, loguotAction, addUserAction, log_in } from '../Redux/actions'\n\nfunction Login(props) {\n\n  const [errorMessage, setErrorMessage] = useState('')\n\n  // useEffect(() => {\n\n  // }, [])\n\n  const handleClick = ({target: {form}}) => {\n     props.log_in(form.login.value, form.password.value)\n  }\n\n\n  const history = useHistory()\n\n  return (\n    <div className=\"mainLoginContaner\">\n      <div className=\"loginContanier\">\n        <h2>Войдите в аккаунт</h2>\n        {errorMessage ? (\n          <span className=\"errorMessageLogin\">{errorMessage}</span>\n        ) : null}\n        <form id=\"loginForm\">\n          <div>\n            <label className=\"loginFormLable\">Логин или Email</label>\n            <input className=\"loginFormInput\" type=\"text\" id=\"login\" />\n          </div>\n          <div>\n            <label className=\"loginFormLable\">Пароль</label>\n            <input className=\"loginFormInput\" type=\"password\" id=\"password\" />\n          </div>\n          <div>\n            <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n              Авторизоваться\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  serverUrl: state.data.url_server\n})\n\nconst mapDispatchToProps = {\n    // explicitly forwarding arguments\n    login: loginAction,\n    loguot: loguotAction,\n    addUser: addUserAction,\n    log_in\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)\n","import React  from \"react\";\nimport Main from './components/Main'\nimport { connect } from \"react-redux\";\n\n\nimport Login from './components/Login'\n\n\nfunction App(props) {\n\n  if (props.token) {\n    return (<Main/>)\n  }\n  return (<Login/>)\n  \n}\n\nconst mapStateToProps = state => ({\n  token: state.data.token,\n})\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}