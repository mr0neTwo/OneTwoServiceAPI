{"version":3,"sources":["data/permissions.js","Redux/reducers/dataReducer.js","data/dataSidebarRows.js","data/dataSettingRows.js","Redux/reducers/visualReducer.js","Redux/reducers/filterReduser.js","Redux/reducers/roleReducer.js","Redux/reducers/employeeReducer.js","Redux/reducers/orderReducer.js","Redux/reducers/clientReducer.js","Redux/reducers/maindataReducer.js","data/icons.js","Redux/reducers/branchReducer.js","Redux/reducers/bookReducer.js","Redux/reducers/cashboxReducer.js","Redux/reducers/paymentReducer.js","Redux/reducers/salaryRuleReducer.js","Redux/reducers/priceReducer.js","Redux/reducers/dictServiceReducer.js","Redux/reducers/operationReducer.js","Redux/reducers/payrollReducer.js","Redux/reducers/wherehouseReducer.js","data/tableHeaders.js","Redux/reducers/partReducer.js","Redux/reducers/orderPartReducer.js","Redux/reducers/notTemplateReducer.js","Redux/reducers/notEventReducer.js","Redux/rootReducer.js","Redux/store.js","Redux/actions.js","components/sidebar/MenuRow.js","components/sidebar/MenuGroup.js","components/sidebar/LogoUser.js","components/general/Icon.js","components/sidebar/ChooseBranch.js","components/sidebar/Sidebar.js","components/orders/Header.js","components/orders/MainFilter.js","components/orders/Filters.js","Redux/actions/actionUtils.js","Redux/actions/orderActions.js","Redux/actions/bookActions.js","components/Loader/Loader.js","components/orders/cell/Create.js","components/orders/cell/Lable.js","components/orders/cell/EstimatedDone.js","components/orders/TableHeader.js","Redux/actions/paymentAction.js","components/orders/StatusListGroup.js","components/orders/StatusList.js","components/orders/cell/Status.js","components/orders/cell/Brand.js","components/orders/cell/KindOfGood.js","components/orders/cell/Malfunction.js","components/orders/cell/Engineer.js","components/general/utils.js","components/orders/cell/Client.js","components/orders/cell/Price.js","components/orders/cell/EngineerNotes.js","components/orders/cell/Equipment.js","components/general/BottomButtons.js","components/general/ChooseBotton.js","Redux/actions/clientAction.js","components/Clients/ClientEditor/ClientBalans.js","components/Clients/ClientEditor/ClientCalls.js","components/general/AddTags.js","components/general/ChooseOfList.js","components/general/LableInput.js","components/general/LableArea.js","components/Clients/ClientEditor/ClientAnotherInfo.js","components/Clients/ClientEditor/PhoneTitle.js","components/Clients/ClientEditor/AddPhones.js","components/Clients/ClientEditor/ClientJuridicalInfo.js","components/Clients/ClientEditor/ClientGenerallyInfo.js","components/Clients/ClientEditor/TopCheckboxes.js","components/Clients/ClientEditor/ClientInfo.js","components/Clients/ClientEditor/ClientLeads.js","components/Clients/ClientEditor/ClientOrder.js","components/Clients/ClientEditor/ClientPayments.js","components/Clients/ClientEditor/ClientSMS.js","components/Clients/ClientEditor/ClientTask.js","components/general/Tabs.js","components/Clients/ClientEditor/ClientEditor.js","components/Payments/SetClientByName.js","components/Clients/ClientCard.js","components/Payments/Receipt.js","components/Payments/PaymentsEditor.js","components/orders/newOrder/TitleOrderEditor.js","components/orders/newOrder/info/AssingEmployee.js","components/orders/newOrder/info/ClientCard.js","components/orders/newOrder/info/SetClient.js","components/orders/newOrder/info/SetTypeOrder.js","components/orders/newOrder/info/LabelInputOrder.js","components/orders/newOrder/info/SetOrderBrand.js","components/orders/newOrder/info/SetOrderGroup.js","components/orders/newOrder/info/SetOrderModel.js","components/orders/newOrder/info/Subtype.js","components/orders/newOrder/info/SetOrderSubtype.js","components/orders/newOrder/info/ChooseEquipment.js","components/orders/newOrder/info/ChooseSingleEquipment.js","components/general/ChooseDate.js","components/orders/newOrder/info/TypeForm1.js","components/orders/newOrder/info/OrderInfo.js","Redux/actions/operationActions.js","components/orders/newOrder/work_matireal/OperationEditor.js","components/general/Button.js","Redux/actions/orderPartAction.js","components/orders/newOrder/work_matireal/OrderPartEditor.js","components/orders/newOrder/work_matireal/SetWorkMatireals.js","components/orders/newOrder/work_matireal/TableWorksMaterials.js","data/cells.js","components/orders/newOrder/work_matireal/CellEditor.js","components/orders/newOrder/work_matireal/SetCell.js","components/orders/newOrder/work_matireal/OrderWorksMaterials.js","components/Payments/cashboxes/Clause.js","components/Payments/PaymentCard.js","components/orders/newOrder/payments/TableOrderPaymants.js","components/orders/newOrder/payments/OrderPayments.js","components/general/Checkbox.js","components/orders/OrderPrint.js","components/orders/OrderHistory.js","components/orders/newOrder/OrderEditor.js","components/orders/Sticker.js","components/orders/StikerToPrint.js","components/orders/TableOrdrers.js","components/orders/CustomFilter.js","components/orders/setCustomFilter/SetBrand.js","components/orders/setCustomFilter/SetClient.js","components/orders/setCustomFilter/SetDataCreate.js","components/orders/setCustomFilter/SetEngeneer.js","components/orders/setCustomFilter/SetGroup.js","components/orders/setCustomFilter/SetManager.js","components/orders/setCustomFilter/SetSubtype.js","components/orders/setCustomFilter/SetStatus.js","components/orders/setCustomFilter/SetTypeOrders.js","components/orders/CreateNewFilter.js","components/orders/setCustomFilter/SetFilter.js","components/orders/CustomPanel.js","components/orders/Orders.js","components/TaskManager/TaskManager.js","components/Leads/Leads.js","components/Shops/Shops.js","components/Payments/cashboxes/Cashbox.js","components/general/WarningOrange.js","components/Payments/cashboxes/CashboxEmployeeEditor.js","components/Payments/cashboxes/CashboxAccess.js","components/Payments/cashboxes/DataCashbox.js","components/Payments/cashboxes/CashboxEditor.js","components/Payments/TablePayments.js","components/Payments/ManeyMovement.js","components/Payments/cashboxes/Cashboxes.js","Redux/actions/payrollActions.js","components/Payments/salaries/TablePayrolls.js","components/Payments/salaries/PayrollForm.js","components/Payments/salaries/PayrollReceipt.js","components/Payments/salaries/PaypolleEditor.js","components/Payments/salaries/EmployeeSalary.js","components/Payments/salaries/TableSalaryEmployees.js","components/Payments/salaries/Salaries.js","components/Payments/Payments.js","Redux/actions/warehouseAction.js","Redux/actions/partAction.js","components/Wherehouse/WarehouseParts/SelectCategory.js","components/Wherehouse/WarehouseParts/ChooseCategory.js","components/Wherehouse/WarehouseParts/WarehouseCategoryEditor.js","components/Wherehouse/WarehouseParts/WarehouseCategory.js","components/Wherehouse/WarehouseParts/CategoryTable.js","components/general/AddPicture.js","components/Wherehouse/WarehouseParts/Property.js","components/Wherehouse/WarehouseParts/Specifications.js","components/general/AddDocument.js","components/Wherehouse/WarehouseParts/PartEditor.js","components/Wherehouse/WarehouseParts/PartTable.js","components/general/TableFields.js","components/Wherehouse/WarehouseParts/WarehouseParts.js","components/Wherehouse/WarehouseRegistration/WarehouseRegistration.js","components/Wherehouse/WarehouseWriteOf/WarehouseWriteOf.js","components/Wherehouse/WarehouseMoves/WarehouseMoves.js","components/Wherehouse/WarehouseInventories/WarehouseInventories.js","components/Wherehouse/WarehouseRemains/WarehouseRemains.js","components/Wherehouse/WarehouseBacks/WarehouseBacks.js","components/Wherehouse/Wherehouse.js","components/Clients/Clients.js","components/Analytics/Analytics.js","components/Reports/Reports.js","components/Telephony/Telephony.js","components/Settings/settingRow.js","components/Settings/SettingGroup.js","components/Settings/SettingMenu.js","components/Settings/SettingPages/Generally/MainData.js","components/Settings/SettingPages/Generally/Generally.js","components/Settings/SettingPages/Employees/SalaryRuleEditor.js","Redux/actions/payrulleAction.js","components/Settings/SettingPages/Employees/SalaryRule.js","components/Settings/SettingPages/Employees/EditEmployeeGenerally.js","components/Settings/SettingPages/Employees/EditEmployeePermission.js","components/Settings/SettingPages/Employees/EmploeeyEditor.js","components/Settings/SettingPages/Employees/PermissionsCheckbox.js","components/Settings/SettingPages/Employees/PermissionsGroup.js","components/Settings/SettingPages/Employees/ChooseAvailableStatuses.js","components/Settings/SettingPages/Employees/ChooseButton.js","components/Settings/SettingPages/Employees/CooseAvailablePrices.js","components/Settings/SettingPages/Employees/RoleEditor.js","components/Settings/SettingPages/Employees/TableEmployees.js","components/Settings/SettingPages/Employees/TableRoles.js","components/Settings/SettingPages/Employees/SettingEmployees.js","components/Settings/SettingPages/Branches/Schedule.js","components/Settings/SettingPages/Branches/ChooseIcon.js","components/Settings/SettingPages/Branches/ChooseEmployees.js","components/Settings/SettingPages/Branches/BranchEditor.js","components/Settings/SettingPages/Branches/TableBranches.js","components/Settings/SettingPages/Branches/SettingBranches.js","components/Settings/SettingPages/Wherehouse/TableWherehouse.js","components/Settings/SettingPages/Wherehouse/WarehouseInfo.js","components/Settings/SettingPages/Wherehouse/WarehouseEmployeeEditor.js","components/Settings/SettingPages/Wherehouse/WarehouseAccess.js","components/Settings/SettingPages/Wherehouse/WarehouseEditor.js","components/Settings/SettingPages/Wherehouse/SettingWherehouse.js","components/Settings/SettingPages/SettingStatus.js","components/Settings/SettingPages/SettingTags.js","Redux/actions/notEventAction.js","components/Settings/SettingPages/Notification/ChooseStatusesGruoup.js","components/Settings/SettingPages/Notification/ChooseStatuses.js","data/events.js","components/Settings/SettingPages/Notification/NotEventEditor.js","components/Settings/SettingPages/Notification/EventTable.js","components/Settings/SettingPages/Notification/OrderNotification.js","Redux/actions/notTemplateAction.js","data/varNames.js","components/Settings/SettingPages/Notification/BoxVariable.js","components/Settings/SettingPages/Notification/NotTemplateEditor.js","components/Settings/SettingPages/Notification/TemplateTable.js","components/Settings/SettingPages/Notification/NotificationTemplate.js","components/Settings/SettingPages/Notification/SettingNotification.js","components/Settings/SettingPages/ServicePrices/GroupServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServiceEditor.js","components/Settings/SettingPages/ServicePrices/ServicePrice.js","components/Settings/SettingPages/ServicePrices/SettingServicePrices.js","components/general/ChooseOfListMany.js","components/Settings/SettingPages/Books/CooseIcon.js","components/Settings/SettingPages/Books/JoinEquipmets.js","components/Settings/SettingPages/Books/EquipmentEditor.js","components/general/Paginate.js","components/general/SearchInput.js","components/Settings/SettingPages/Books/BookEquipment.js","components/Settings/SettingPages/Books/DictTable.js","components/Settings/SettingPages/Books/ElementEditor.js","components/Settings/SettingPages/Books/MalfunctionBooks.js","components/Settings/SettingPages/Books/PackagelistBook.js","components/Settings/SettingPages/Books/ItemPayments.js","components/Settings/SettingPages/Books/SettingBooks.js","components/Settings/SettingPages/SettingTemplates.js","components/Settings/SettingPages/Margin/TablePrice.js","components/Settings/SettingPages/Margin/PriceEditor.js","components/Settings/SettingPages/Margin/SettingMargin.js","components/Settings/SettingPages/SettingMarkening.js","components/Settings/Settings.js","components/Main.js","components/Login.js","App.js","index.js"],"names":["task","value","description","leads","orders","sales","finance","warehouse","clients","analytic","reports","setting","permission","permission_cahsbox","permission_warehouse","initialState","ordersShow","count","clientShow","count_clients","menuRows","id","title","image","url","group_name","active","permission_keys","map","per","settingMenu","permission_key","payments","employees","user","JSON","parse","sessionStorage","getItem","status","status_group","badges","order_type","equipment","discount_margin","roles","ad_campaign","generally_info","branches","cashboxes","payrules","payrolls","group_dict_service","dict_service","service_prices","counters","dictMalfunction","count_malfunction","dictPackagelist","count_packagelist","item_payments","count_item_payments","current_branch","token","login_status","error_message","url_server","process","statusMenuVisible","statusSetCustomFilter","stausListFilter","typeListFilter","managerListFilter","engineerListFilter","groupListFilter","brandListFilter","subtypeListFilter","clientListFilter","statusCreateNewFilter","statusCreateNewRole","statusEmployeeEditor","employeeEditorRoleOptions","statusOrderEditor","statusCreateNewClient","statusAdCampaignClient","checkedOrderClient","statusBranchEditor","statusChooseIcon","statusEquipmentEditor","statusElementEditor","statusCashboxEditor","statusCashboxEmployeeEditor","statusPaymentsEditor","statusPaymentsCard","statusStatusList","statusSalaryEditor","statusPriceEditor","statusGroupServiceEditor","statusServiceEditor","statusOperationEditor","statusPayrollEditor","statusCellEditor","statusWarehouseEditor","statusWarehouseEmployeeEditor","statusWarehouseCategoryEditor","statusPartEditor","statusOrderPartEditor","statusOrderSticker","statusOrderLoader","checkOrderSticker","localStorage","statusNotTemplateEditor","statusNotEventEditor","inputClientNameChecked","inputClientPhoneChecked","inputClientDiscServChecked","inputClientDiscMatChecked","inputClientDiscGoodChecked","inputRoleTitleChecked","inputEmployeeNameChecked","inputEmployeeEmailChecked","inputEmployeeLoginChecked","inputEmployeePasswordChecked","inputEmployeeRoleChecked","inputMalfunctionChecked","checkedOrderKindofGood","checkedOrderBrand","checkedOrderSubtype","inputMaindataNameChecked","inputBranchNameChecked","inputBranchPrefixChecked","inputBranchPrefixDocChecked","inputBookTitleChecked","inputCashboxTitleChecked","inputPaymentDescChecked","inputPaymentCashflowChecked","inputPaymentCashboxChecked","inputPaymentEmployeeChecked","inputPaymentSumChecked","inputPriceTitleChecked","inputDictServiceChecked","inputServiceTitleChecked","inputServiceCategoryIdChacked","inputServicePriceChacked","inputOperationEngineerChacked","inputOperationTitleChacked","inputPayrollDescChecked","inputPayrollEmployeeChecked","inputPayrollSumChecked","inputSingleMalfunctionChecked","inputWarehouseTitleChecked","inputWCategoryTitleChecked","inputWPartTitleChecked","inputOrderPartTitleChacked","inputOrderPartEngineerChecked","inputNotTempTitleChecked","inputNotTempTempleChecked","inputNotEventEventChecked","inputNotEventTemplateChecked","errorSameMail","errorSameLogin","order_type_id","customFilters","mainFilter","sort","field_sort","page","tempFilter","status_id","engineer_id","manager_id","kindof_good","brand","subtype","model","client_name","created_at","clientFilter","name","phone","search_word","title_create","generale_create","edit","earnings_visibility","leads_visibility","orders_visibility","list_permissions","visible_statuses","settable_statuses","settable_discount_margin","tabs","showDeleted","role_title","first_name","last_name","email","notes","login","password","role_id","permissions","inn","doc_name","post","deleted","done_at","closed_at","assigned_at","duration","estimated_done_at","parseInt","Date","now","scheduled_for","warranty_date","status_deadline","ad_campaign_id","branch_id","client","closed_by_id","created_by_id","operations","parts","attachments","id_label","prefix","serial","malfunction","packagelist","appearance","engineer_notes","manager_notes","resume","cell","estimated_cost","missed_payments","discount_sum","payed","price","remaining","remaining_status","remaining_warranty","overdue","status_overdue","urgent","warranty_measures","equipments","juridical","supplier","conflicted","should_send_email","name_doc","address","number","notify","discount_code","discount_goods","discount_goods_margin_id","discount_materials","discount_materials_margin_id","discount_services","discount_service_margin_id","tags","ogrn","kpp","juridical_address","director","bank_name","settlement_account","corr_account","bic","discount_good_type","discount_materials_type","discount_service_type","phone_titles","statusPhoneList","statusAddTitle","logo","icon_trush","icon_close","icon_location","icon_warning","icon_clock","icon_table","icon_pencil","icon_right","icon_left","icon_down","color","icon","orders_type_id","orders_type_strategy","orders_prefix","documents_prefix","schedule","start_time","end_time","work_day","week_day","equipment_types","equipment_type_count","equipment_brands","equipment_brand_count","equipment_subtypes","equipment_subtype_count","equipment_models","equipment_models_count","equipment_type","equipment_brand","equipment_subtype","equipment_model","parent_id","img","direction","type","choose_list","page_malfunction","selected_malfunction","page_packagelist","selected_packagelist","page_item_payments","selected_item_payments","filter_type","filter_brand","filter_subtype","filter_model","page_type","page_brand","page_subtype","page_model","list_for_join","tabs_editor","balance","isGlobal","isVirtual","permissions_employee","current_cashbox","sum","cashflow_category","deposit","income","outcome","can_print_fiscal","is_fiscal","custom_created_at","relation_id","cashbox_id","client_id","employee_id","order_id","target_cashbox_id","cashbox","employee","order","filter_created_at","Math","round","filter_tags","current_type","context","type_rule","method","coefficient","count_coeff","cost","coef","fix_salary","check_status","list_type_rule","statuses","margin","margin_type","list_type_margin","group_edit","group_title","group_deleted","warranty","warranty_value","code","earnings_percent","earnings_summ","category_id","seted_categiry","fields","field","chosed_fields","Array","fill","e","i","concat","amount","discount_value","total","comment","percent","discount","warranty_period","dict_id","reimburse","relation_type","setted_employee","month_balance","warehouses","warehouses_categories","img_url","branch","categories","title_category","parent_category_id","category_deleted","current_category","current_parent_category","part_table_headers","count_parts","marking","article","barcode","image_url","doc_url","specifications","warehouse_category_id","warehouse_category","doc","choosed_headers","header","templates","template","events","event","target_audience","notification_type","notification_template_id","template_title","filter_target_audience","rootReducer","combineReducers","data","state","action","rows","row","a","b","view","id_order","list","idx","splice","checked_list_malfunction","checked_list_kindof_good","checked_list_brand","checked_list_subtype","filter","filters","word","toString","search","includes","Number","manager","engineer","replace","range","Object","assign","date","find","filter_new","role","every","val","bool","console","log","tab","equipments_list","phones","statusPhones","statusTitle","tag","tags_list","maindata","list_schedule","book","payment","salaryRule","list_count_coeff","salary_rule","dictService","group","service","new_data","saveToApp","setItem","stringify","operation","payroll","warehouse_id","part","orderPart","order_part","notTemplate","notEvent","template_id","store","createStore","compose","applyMiddleware","thunk","getRequestConfig","body","getState","headers","Accept","bad_request","massage","clear","warn","changeStatusMenuVisible","changeNameClientFilter","changeStatusCreateNewFilter","changePermissions","editEmoloyee","setClietnCheckbox","setVisibleFlag","setVisibleListFlag","resetEquipment","setOrderEquipment","changeOrderForm","addAnotherEquipment","deleteDevice","changeOrderFormS","changeBranchForm","changeCashboxForm","changeCashboxPermissions","addData","editCurrentClient","setPayment","changePriceForm","changeDictServiceForm","addClients","dispatch","fetch","then","response","json","success","catch","editClient","addEmployees","refreshDataOrder","request_config","addEquipment","addDiscountMargin","addDictMalfunction","deleteBookElements","url_list","field_list","del_ids","addDictPackagelist","addItemPayments","addCashboxes","available","addDictService","mapDispatchToProps","changeStatusMenuRow","connect","props","className","to","style","backgroundColor","borderLeftColor","onClick","fillRule","clipRule","d","MenuGroup","LogoUser","src","alt","Icon","viewBox","user_id","useState","menuVisibel","setMenuVisibel","generally_menu","some","key","report_menu","setting_menu","length","changeFilter","setSearch","placeholder","onChange","target","onKeyPressCapture","preventDefault","handleSearch","activeBadge","badge","addOrders","changeStatus","request_config1","request_config2","changeBookForm","resetBookEquipment","chooseBookSelected","addEquipmentType","addEquipmentBrand","equipment_type_id","addEquipmentSubtype","equipment_brand_id","addEquipmentModel","equipment_subtype_id","Loader","getEmploeeName","toLocaleString","year","month","day","hour","minute","datestamp","statusGroop","deltaMinut","abs","deltaHour","deltaDay","getDateEstimated","changeSort","minWidth","width","changePaymentForm","resetPayments","addPayments","current_user_id","groupName","groupIdx","handleClick","clichHandel","path","el","useEffect","window","addEventListener","removeEventListener","optionsShowDate","showPhone","slice","check0_100","isNaN","showName","showDate","currentMonth","today","start_date","setDate","setHours","valueOfPhoneInput","BottomButtons","buttomCreate","create","buttomSave","save","buttomClose","close","buttomDelete","delete","buttomRecover","recover","ChooseBotton","checked","stateButton","setStateButton","unvisible","disabled","func1","func2","changeClientForm","AddTags","inputValue","setInputValue","daleteTag","onKeyPress","addTag","handelPresEnter","listVisible","setListVisible","clickHandel","current","element","current_id","noChoosed","checkedFlag","borderColor","errorMassage","setElement","handleClickChecked","redStar","unit","inputClassName","isPhone","out","onBlur","addClientTag","deleteClientTag","changeStatusPhoneList","setPhoneTitle","changeStatusAddTitle","autoFocus","changeClientEditorPhone","addPhoneCounter","deleteCountNumber","setPhoneNotify","addVisibleFlag","deleteVisibleFlag","handleChange","changeClientEditorForm","changeStatusAdCampaignClient","setAdCampaignClient","ClientInfo","Tabs","func","tab_field","resetDataClient","createNewClient","saveChangeClient","deleteClient","flag","ph","forEach","showList","setShowList","disc","parseFloat","registerLocale","ru","addPaymentTag","deletePaymentTag","createPayment","cashbox1","cashbox2","item","request_config_2","request_config3","request_config4","request_config5","request_config6","current_branch_id","order_edit","handleClose","chooseData","setChooseData","selected","isClearable","placeholderText","dateFormat","locale","maxDate","showTimeSelect","deleteCashbox","iconBr","iconB","iconC","list_managers","list_ingineers","changePhoneClientFilter","listClientsVisible","setListClientsVisible","listClientsPhoneVisible","setListClientsPhoneVisible","clickHandel1","clickHandel2","createEquipmentBrand","visibleList","setVisibleList","visibleBotton","setVisisbleBotton","values","seted","setBrand","createEquipmentType","types","useMemo","setOrderType","createEquipmentModel","setModel","showPictute","setShowPicture","onMouseOver","onMouseOut","cteateEquipmentSubtype","setSubtype","SetOrderGroup","ChooseDate","current_date","setCurrent_day","visibleListMonth","setVisibleListMonth","visibleInputYear","setVisibleInputYear","visibleCalendar","setVisibleCalendar","months","first","setTime","getTime","getDay","current_days","setMonth","getMonth","setFullYear","handleInputYear","getFullYear","onDoubleClick","date1","date2","getDate","getHours","getMinutes","setMinutes","changeOperationForm","resetOperation","deleteOperation","createCustomOperation","saveOperation","Button","resetOrderPart","deleteOrderPart","changeOrderPartForm","createCustomOrderPart","saveOrderPart","createOperation","service_id","discount_margin_id","getPrice","setlistVisible","filterWorks","setFileterWorks","servises","toLowerCase","velue","handelCreateOperation","editOperation","editOrderPart","editPart","colSpan","deletePart","cells","height","current_engineer_id","isExist","text","deletePayment","Checkbox","label","createOrder","resetOrder","saveOrder","Sticker","forwardRef","ref","stickerToPrintRef","useRef","printOSticker","useReactToPrint","content","onAfterPrint","display","initStatusMenuVisible","list_id","editOrder","statusVis","table_headers","handleEdit","appCustomFilter","changeBrandListFilter","changeBrandMainFilter","list_brand","equip","Set","listOfBrand","changeClientListFilter","changeClientMainFilter","changeCreateAtMainFilter","selectsRange","startDate","endDate","update","changeEngineerListFilter","changeCheckEngineer","setAllEngineerTrue","setAllEngineerFalse","changeGroupListFilter","changeGroupMainFilter","changeManagerListFilter","changeCheckManager","setAllManagerTrue","setAllManagerFalse","changeSubtypeListFilter","changeSubtypeMainFilter","list_subtype","listOfSubtype","changeStausListFilter","changeCheckStatus","setAllStatusFalse","setAllStatusTrue","count_status","changeTypeListFilter","changeCheckType","setAllTypeTrue","setAllTypeFalse","changeTitleCreate","changeGeneraleCreate","addCustomFilter","general","appFilter","resetFilter","saveCustomFilter","idActiveFilter","removeFilter","SetGroup","SetEngeneer","changeSetStatusFilter","changePage","addBagges","addStatusGroup","addCustomFilters","addAdCampaign","oderSearch","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","curent_page","forcePage","previousLabel","nextLabel","breakLabel","breakClassName","containerClassName","pageClassName","activeClassName","nextClassName","previousClassName","Leads","user_name","api_key","fetchOrders","activeCashbox","editCashbox","activ_cashbox_id","activ","like_cashbox","move","showBalance","toUpperCase","toFixed","WarningOrange","changeEmployeeSelected","perm","setPerm","chooseCashboxSelected","createCashbox","seveEditCashbox","list_per","setShowDeleted","changePayrollForm","addPayrolls","editPayroll","incomeSum","setIncomeSum","outcomeSum","setOutcomeSum","type_payrolls","income_sum","outcome_sum","resetPayroll","createPayroll","deletePayroll","addMonthBalance","current_employee","changeWarehouseForm","resetWarehouse","changeWarehousePermission","changePartForm","SelectCategory","category","choose","cat","catVisible","setCatVisible","mainCategory","handleChoose","createWarehouseCategory","saveWarehouseCategory","deleteWarehouseCategory","can_delete","can_recover","WarehouseCategory","choose_parent_category","parent_category","cats","editWarehouseCategory","AddPicture","accept","reader","FileReader","onload","result","readAsDataURL","files","changePartProperty","deletePartProperty","titleVisible","setTitleVisible","valueVisible","setValueVisible","addPartProperty","property","AddDocument","split","pop","fileName","setFileName","href","resetPart","createPart","savePart","file","table_heards","TableFields","mainCheckbox","checked_list","indeterminate","minHeight","addWarehouseCategories","addParts","choosePartSelected","changeStatusSettingRow","SettingGroup","changeMaindataForm","saveGenerallyInfo","changeSalaryRuleForm","addSalaryCountCoef","changeSalaryCoefForm","deleteSalaryCountCoef","createSalaryRule","rule","resetPayrule","saveSalaryRule","deleteSalaryRule","count_coef","editPayrule","payrule","SalaryRuleEditor","changeEmployeEditorForm","changeEmployeeEditorRoleOptions","setRoleEmployeeEdetor","changeEmployeeTabs","createEmployee","seveEditEmployee","deleteEmployee","addPayrules","changeVisibleStatuses","changeSettableStatuses","visibleChackbox","settableChackbox","cahngeOrdersVisibility","cahngeLeadsVisibility","cahngeEarningsVisibility","changeSettableMargin","priceChackbox","changeTitleCreateRole","createRole","seveEditRole","deleteRole","editRole","addRoles","changeShowDeleted","resetEmoloyee","changeShedule","weekdays","colors","icons","setBranchEmployee","employeeChackbox","createBranch","saveBranch","deleteBranch","editBranch","addCounters","editWarehouse","chooseWarehouseSelected","like_warehouse","createWarehouse","saveWarehouse","deleteWarehouse","addWarehouse","changeNotEventForm","current_statuses","current_list","labelClassName","type_group","eventsClients","resetNotEvent","createNotEvent","saveNotEvent","deleteNotEvent","selectedNotEvent","can_deleted","editNotEvent","ev","changeNotTemplateForm","listVarCompany","listVarClient","listVarOrder","listVarEmployee","listVarFinance","listVarDate","listVarAnother","BoxVariable","list_var","variable","resetNotTemplate","createNotTemplate","saveNotTemplate","deleteNotTemplate","vr","editNotTemplate","addNotTemplate","addNotEvent","resetGruopDictService","createGroupDictService","saveGroupDictService","deleteGroupDictService","resetService","createDictService","saveDictService","deleteDictService","createSaveServicePrice","margin_id","setFlag","setCost","handelChange","addGroupeService","editGroupDictService","selectedService","addServicePrices","editDictService","count_group","services","count_services","tableFields","tableMarginFields","tableMarginFieldsFiltered","editGroup","editService","ChooseOfListMany","len","showWord","mainLable","setIcons","listFilter","listPage","listEquipment","eq","chooseEquipmentBranches","seveEquipmentType","seveEquipmentBrand","seveEquipmentSubtype","seveEquipmentModel","equipment_model_id","deleteEquipmentType","deleteEquipmentBrand","deleteEquipmentSubtype","deleteEquipmentModel","createEType","createEbrand","createESubtype","createEModel","all","setAll","Paginate","setActive","pages","allItems","onPage","list_pages","choosePage","count_start_end","navigation","isShow","SearchInput","editEquipment","isTypeChoosed","isBrandChoosed","isSubtypeChoosed","chooseType","editType","chooseBrand","editBrand","chooseSubtype","editSubtype","chooseModel","editModel","addElement","selected_field","title2","createBookElement","editPrice","list_margin","createPrice","resetPrice","savePrice","deletePrice","showDeletedGood","setShowDeletedGood","showDeletedServ","setShowDeletedServ","withRouter","component","Generally","SettingEmployees","SettingBranches","SettingWherehouse","SettingStatus","SettingTags","SettingAlerts","SettingServicePrices","SettingBooks","SettingTemplates","SettingMargin","SettingMarkening","from","addStatus","addMainData","counts","TaskManager","Orders","Shops","Payments","Wherehouse","Clients","Analytics","Reports","Telephony","Settings","loguot","addUser","log_in","access_token","message","serverUrl","form","app","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"mQAkCaA,EAAO,CACjB,CACGC,MAAO,cACPC,YAAa,8HACd,CACCD,MAAO,UACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wMACd,CACCD,MAAO,gBACPC,YAAa,mPAINC,EAAQ,CAClB,CACGF,MAAO,YACPC,YAAa,8HACd,CACCD,MAAO,eACPC,YAAa,gJACd,CACCD,MAAO,aACPC,YAAa,wKACd,CACCD,MAAO,eACPC,YAAa,qIAINE,EAAS,CACnB,CACGH,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,oIACd,CACCD,MAAO,gBACPC,YAAa,kHACd,CACCD,MAAO,kBACPC,YAAa,gQACd,CACCD,MAAO,aACPC,YAAa,sLACd,CACCD,MAAO,YACPC,YAAa,4GACd,CACCD,MAAO,mBACPC,YAAa,2PACd,CACCD,MAAO,4BACPC,YAAa,qPACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,uBACPC,YAAa,4QACd,CACCD,MAAO,0BACPC,YAAa,kMACd,CACCD,MAAO,8BACPC,YAAa,gQACd,CACCD,MAAO,eACPC,YAAa,+PACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,uBACPC,YAAa,uMACd,CACCD,MAAO,oBACPC,YAAa,iMACd,CACCD,MAAO,2BACPC,YAAa,qSACd,CACCD,MAAO,mBACPC,YAAa,qIAING,EAAQ,CAClB,CACGJ,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,eACPC,YAAa,wHACd,CACCD,MAAO,eACPC,YAAa,8HACd,CACCD,MAAO,kBACPC,YAAa,2IAINI,EAAU,CACpB,CACGL,MAAO,cACPC,YAAa,kHACd,CACCD,MAAO,aACPC,YAAa,oIACd,CACCD,MAAO,mBACPC,YAAa,0IACd,CACCD,MAAO,aACPC,YAAa,oUACd,CACCD,MAAO,mBACPC,YAAa,uJACd,CACCD,MAAO,4BACPC,YAAa,qSACd,CACCD,MAAO,kBACPC,YAAa,oKACd,CACCD,MAAO,sBACPC,YAAa,qNACd,CACCD,MAAO,mBACPC,YAAa,oNACd,CACCD,MAAO,qBACPC,YAAa,mKACd,CACCD,MAAO,cACPC,YAAa,uLACd,CACCD,MAAO,YACPC,YAAa,0PACd,CACCD,MAAO,kBACPC,YAAa,uOACd,CACCD,MAAO,WACPC,YAAa,kCACd,CACCD,MAAO,sBACPC,YAAa,sJACd,CACCD,MAAO,gBACPC,YAAa,0IACd,CACCD,MAAO,gBACPC,YAAa,8HACd,CACCD,MAAO,cACPC,YAAa,2LACd,CACCD,MAAO,mBACPC,YAAa,yPACd,CACCD,MAAO,kBACPC,YAAa,2LACd,CACCD,MAAO,uBACPC,YAAa,wMACd,CACCD,MAAO,kBACPC,YAAa,uJACd,CACCD,MAAO,mBACPC,YAAa,wMAINK,EAAY,CACtB,CACGN,MAAO,0BACPC,YAAa,kHACd,CACCD,MAAO,0BACPC,YAAa,4JACd,CACCD,MAAO,6BACPC,YAAa,oIACd,CACCD,MAAO,2BACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oIACd,CACCD,MAAO,oBACPC,YAAa,0IACd,CACCD,MAAO,iBACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,gMACd,CACCD,MAAO,uBACPC,YAAa,wKACd,CACCD,MAAO,uBACPC,YAAa,4JACd,CACCD,MAAO,qBACPC,YAAa,oDACd,CACCD,MAAO,iBACPC,YAAa,sEACd,CACCD,MAAO,gBACPC,YAAa,sMACd,CACCD,MAAO,sBACPC,YAAa,qOACd,CACCD,MAAO,mBACPC,YAAa,8KACd,CACCD,MAAO,mBACPC,YAAa,kKACd,CACCD,MAAO,yBACPC,YAAa,kKACd,CACCD,MAAO,4BACPC,YAAa,0IACd,CACCD,MAAO,oBACPC,YAAa,oSACd,CACCD,MAAO,8BACPC,YAAa,2LACd,CACCD,MAAO,4BACPC,YAAa,mNACd,CACCD,MAAO,mCACPC,YAAa,gOACd,CACCD,MAAO,8BACPC,YAAa,+KACd,CACCD,MAAO,+BACPC,YAAa,+NACd,CACCD,MAAO,kBACPC,YAAa,6JACd,CACCD,MAAO,YACPC,YAAa,sJACd,CACCD,MAAO,mBACPC,YAAa,mKACd,CACCD,MAAO,eACPC,YAAa,kHACd,CACCD,MAAO,gBACPC,YAAa,kKACd,CACCD,MAAO,gCACPC,YAAa,iLAINM,EAAU,CACpB,CACGP,MAAO,oBACPC,YAAa,mKACd,CACCD,MAAO,YACPC,YAAa,0IACd,CACCD,MAAO,eACPC,YAAa,0IACd,CACCD,MAAO,qBACPC,YAAa,uJACd,CACCD,MAAO,sBACPC,YAAa,uMACd,CACCD,MAAO,cACPC,YAAa,4JACd,CACCD,MAAO,gBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,4GACd,CACCD,MAAO,uBACPC,YAAa,2QAINO,EAAW,CACrB,CACGR,MAAO,aACPC,YAAa,gEACd,CACCD,MAAO,WACPC,YAAa,iHACd,CACCD,MAAO,aACPC,YAAa,kHAINQ,EAAU,CACpB,CACGT,MAAO,eACPC,YAAa,6JACd,CACCD,MAAO,kBACPC,YAAa,kRACd,CACCD,MAAO,gBACPC,YAAa,gGACd,CACCD,MAAO,mBACPC,YAAa,iEACd,CACCD,MAAO,oBACPC,YAAa,gJACd,CACCD,MAAO,uBACPC,YAAa,sGACd,CACCD,MAAO,qBACPC,YAAa,gGACd,CACCD,MAAO,sBACPC,YAAa,+FACd,CACCD,MAAO,qBACPC,YAAa,yFACd,CACCD,MAAO,oBACPC,YAAa,oFACd,CACCD,MAAO,qBACPC,YAAa,2GACd,CACCD,MAAO,kBACPC,YAAa,wHACd,CACCD,MAAO,iBACPC,YAAa,4IACd,CACCD,MAAO,wBACPC,YAAa,yFACd,CACCD,MAAO,6BACPC,YAAa,gGACd,CACCD,MAAO,4BACPC,YAAa,sGACd,CACCD,MAAO,mBACPC,YAAa,2IACd,CACCD,MAAO,kBACPC,YAAa,gFACd,CACCD,MAAO,kBACPC,YAAa,oEACd,CACCD,MAAO,iBACPC,YAAa,yFACd,CACCD,MAAO,kBACPC,YAAa,qDACd,CACCD,MAAO,gBACPC,YAAa,mFACd,CACCD,MAAO,cACPC,YAAa,yCAINS,EAAU,CACpB,CACGV,MAAO,oBACPC,YAAa,kCACd,CACCD,MAAO,gBACPC,YAAa,4BACd,CACCD,MAAO,oBACPC,YAAa,gEACd,CACCD,MAAO,wBACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,uPACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,qBACPC,YAAa,yKACd,CACCD,MAAO,yBACPC,YAAa,+NACd,CACCD,MAAO,oBACPC,YAAa,wCACd,CACCD,MAAO,2BACPC,YAAa,8HACd,CACCD,MAAO,yBACPC,YAAa,gJACd,CACCD,MAAO,2BACPC,YAAa,kHACd,CACCD,MAAO,gCACPC,YAAa,mKACd,CACCD,MAAO,4BACPC,YAAa,8KACd,CACCD,MAAO,kBACPC,YAAa,yKACd,CACCD,MAAO,aACPC,YAAa,8HACd,CACCD,MAAO,mBACPC,YAAa,uRACd,CACCD,MAAO,iBACPC,YAAa,8CACd,CACCD,MAAO,eACPC,YAAa,4BACd,CACCD,MAAO,gBACPC,YAAa,gEACd,CACCD,MAAO,8BACPC,YAAa,iMACd,CACCD,MAAO,4BACPC,YAAa,yNACd,CACCD,MAAO,mCACPC,YAAa,sOACd,CACCD,MAAO,8BACPC,YAAa,qLACd,CACCD,MAAO,+BACPC,YAAa,qOACd,CACCD,MAAO,2BACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,8KACd,CACCD,MAAO,gCACPC,YAAa,2LACd,CACCD,MAAO,2BACPC,YAAa,0IACd,CACCD,MAAO,4BACPC,YAAa,0LACd,CACCD,MAAO,kBACPC,YAAa,yHACd,CACCD,MAAO,yBACPC,YAAa,0KACd,CACCD,MAAO,8BACPC,YAAa,+MACd,CACCD,MAAO,uBACPC,YAAa,sJACd,CACCD,MAAO,yBACPC,YAAa,wJACd,CACCD,MAAO,0BACPC,YAAa,wMACd,CACCD,MAAO,eACPC,YAAa,sEACd,CACCD,MAAO,wBACPC,YAAa,yKACd,CACCD,MAAO,4BACPC,YAAa,+NACd,CACCD,MAAO,yBACPC,YAAa,0IACd,CACCD,MAAO,mBACPC,YAAa,2GACd,CACCD,MAAO,gBACPC,YAAa,wEACd,CACCD,MAAO,uBACPC,YAAa,8JACd,CACCD,MAA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","file":"static/js/main.fced5ffb.chunk.js","sourcesContent":[" export const generally = [\n   {\n      value: 'to_lend', // не реализовано\n      description: 'Может проводить платежи в счёт долга клиента'\n   },{\n      value: 'see_purchase', // не реализовано\n      description: 'Может видеть закупочную цену товаров'\n   },{\n      value: 'handle_discount', // не реализовано\n      description: 'Может задавать скидки в документах'\n   },{\n      value: 'handle_type_discount', // не реализовано\n      description: 'Может указывать тип скидки'\n   },{\n      value: 'handle_cost_price', // не реализовано\n      description: 'Может задавать себестоимость в документах'\n   },{\n      value: 'see_profit', // не реализовано\n      description: 'Может видеть расчётную прибыль'\n   },{\n      value: 'in_list_managers', \n      description: 'Отображать сотрудника в списке менеджеров'\n   },{\n      value: 'in_list_engineers', \n      description: 'Отображать сотрудника в списке исполнителей'\n   },{\n      value: 'send_sms', // не реализовано\n      description: 'Может отправлять SMS'\n   },{\n      value: 'see_price', // не реализовано\n      description: 'Может видеть стоимость изделия'\n   }\n]\n\nexport const task = [\n   {\n      value: 'create_task', // не реализовано\n      description: 'Может создавать задачи'\n   },{\n      value: 'do_task', // не реализовано\n      description: 'Может быть исполнителем'\n   },{\n      value: 'see_all_task', // не реализовано\n      description: 'Может видеть задачи всех сотрудников'\n   },{\n      value: 'edit_all_task', // не реализовано\n      description: 'Может редактировать задачи всех сотрудников'\n   }\n]\n\nexport const leads = [\n   {\n      value: 'see_leads', // не реализовано\n      description: 'Может видеть обращения'\n   },{\n      value: 'create_leads', // не реализовано\n      description: 'Может создавать обращения'\n   },{\n      value: 'edit_leads', // не реализовано\n      description: 'Может редактировать обращения'\n   },{\n      value: 'delete_leads', // не реализовано\n      description: 'Может удалять обращения'\n   }\n]\n\nexport const orders = [\n   {\n      value: 'create_orders', \n      description: 'Может создавать заказы'\n   },{\n      value: 'move_orders', // не реализовано\n      description: 'Может перемещать заказы'\n   },{\n      value: 'delete_orders', // не реализовано\n      description: 'Может удалять заказы'\n   },{\n      value: 'assing_emploees', \n      description: 'Может назначать менеджера и исполнителя в заказ'\n   },{\n      value: 'see_client', \n      description: 'Может видеть информацию о клиенте'\n   },{\n      value: 'see_calls', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_info_orders', \n      description: 'Может редактировать поля «Информация о заказе»'\n   },{\n      value: 'edit_operations_materials', \n      description: 'Может редактировать поля «Работы и материалы»'\n   },{\n      value: 'add_service_list', // не реализовано\n      description: 'Может добавлять услуги из прейскуранта'\n   },{\n      value: 'add_servece_not_list', // не реализовано\n      description: 'Может добавлять услуги которых нет в прейскуранте'\n   },{\n      value: 'add_materials_warehouse', // не реализовано\n      description: 'Может добавлять материалы со склада'\n   },{\n      value: 'add_materials_not_warehouse', // не реализовано\n      description: 'Может добавлять материалы которых нет на складе'\n   },{\n      value: 'create_books', // не реализовано\n      description: 'Может создавать элементы в справочнике изделий'\n   },{\n      value: 'edit_service_price', // не реализовано\n      description: 'Может редактировать цену услуг'\n   },{\n      value: 'edit_materials_price', // не реализовано\n      description: 'Может редактировать цену материалов'\n   },{\n      value: 'edit_closed_order', // не реализовано\n      description: 'Может редактировать закрытый заказ'\n   },{\n      value: 'generally_custom_filters', // не реализовано\n      description: 'Может создавать, редактировать и удалять общие фильтры'\n   },{\n      value: 'cteate_equipment', // не реализовано\n      description: 'Может создавать изделия'\n   }\n]\n\nexport const sales = [\n   {\n      value: 'make_sales', // не реализовано\n      description: 'Может создавать продажи'\n   },{\n      value: 'delete_sales', // не реализовано\n      description: 'Может удалять продажи'\n   },{\n      value: 'sale_service', // не реализовано\n      description: 'Может продавать услуги'\n   },{\n      value: 'edit_sale_price', // не реализовано\n      description: 'Может редактировать цену'\n   }\n]\n\nexport const finance = [\n   {\n      value: 'make_income', \n      description: 'Может вносить деньги'\n   },{\n      value: 'move_money',\n      description: 'Может перемещать деньги'\n   },{\n      value: 'make_expenditure',\n      description: 'Может расходовать деньги'\n   },{\n      value: 'backdating',\n      description: 'Может вносить, перемещать и расходовать деньги задним числом'\n   },{\n      value: 'see_moving_money',\n      description: 'Может видеть движение денег'\n   },{\n      value: 'see_moving_money_all_time',\n      description: 'Может видеть движение денег за произвольный период дат'\n   },{\n      value: 'delete_payments', \n      description: 'Может удалять операции в кассе'\n   },{\n      value: 'see_delete_payments', \n      description: 'Может видеть удаленные операции в кассе'\n   },{\n      value: 'recover_payments', \n      description: 'Может восстанавливать операции в кассе'\n   },{\n      value: 'print_moving_money', // не реализовано\n      description: 'Может печатать движение денег'\n   },{\n      value: 'see_remains',\n      description: 'Может видеть остаток денег в кассе'\n   },{\n      value: 'edit_cash',\n      description: 'Может создавать, редактировать и удалять кассы'\n   },{\n      value: 'choose_emploees', \n      description: 'Может выбирать любого сотрудника из списка'\n   },{\n      value: 'invoices', // не реализовано\n      description: 'Счета'\n   },{\n      value: 'see_clients_balance', // не реализовано\n      description: 'Может видеть взаиморасчёты'\n   },{\n      value: 'create_refund', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'delete_refund', // не реализовано\n      description: 'Может удалять возвраты'\n   },{\n      value: 'edit_refund', // не реализовано\n      description: 'Может редактировать цену возврата'\n   },{\n      value: 'see_all_payrolls',\n      description: 'Может видеть начисления ЗП других сотрудников'\n   },{\n      value: 'create_payrolls', \n      description: 'Может добавлять перемию/взыскание'\n   },{\n      value: 'see_seleted_payrolls', \n      description: 'Может видеть удаленные начисления ЗП'\n   },{\n      value: 'delete_payrolls', \n      description: 'Может удалять начисления ЗП'\n   },{\n      value: 'recover_payrolls', \n      description: 'Может восстанавливать начисления ЗП'\n   }\n]\n\nexport const warehouse = [\n   {\n      value: 'see_remaining_warehouse', // не реализовано\n      description: 'Может видеть остатки'\n   },{\n      value: 'see_equipment_warehouse', // не реализовано\n      description: 'Может просматривать изделия'\n   },{\n      value: 'create_equipment_warehouse', // не реализовано\n      description: 'Может создавать изделия'\n   },{\n      value: 'edit_equipment_warehouse', // не реализовано\n      description: 'Может редактировать изделия'\n   },{\n      value: 'write_of_equipment', // не реализовано\n      description: 'Может списывать изделия'\n   },{\n      value: 'combine_equipment', // не реализовано\n      description: 'Может объединять изделия'\n   },{\n      value: 'move_equipment', // не реализовано\n      description: 'Может перемещать изделия'\n   },{\n      value: 'see_registrations', // не реализовано\n      description: 'Может просматривать оприходования'\n   },{\n      value: 'create_registrations', // не реализовано\n      description: 'Может создавать оприходования'\n   },{\n      value: 'delete_registrations', // не реализовано\n      description: 'Может удалять оприходования'\n   },{\n      value: 'write_of_warehouse', // не реализовано\n      description: 'Списание'\n   },{\n      value: 'move_warehouse', // не реализовано\n      description: 'Перемещения'\n   },{\n      value: 'see_inventory', // не реализовано\n      description: 'Может просматривать инвентаризации'\n   },{\n      value: 'see_inventory_total', // не реализовано\n      description: 'Может просматривать итоги инвентаризации'\n   },{\n      value: 'create_inventory', // не реализовано\n      description: 'Может создавать инвентаризации'\n   },{\n      value: 'delete_inventory', // не реализовано\n      description: 'Может удалять инвентаризации'\n   },{\n      value: 'see_refund_to_supplier', // не реализовано\n      description: 'Может просматривать возвраты'\n   },{\n      value: 'create_refund_to_supplier', // не реализовано\n      description: 'Может создавать возвраты'\n   },{\n      value: 'serial_accounting', // не реализовано\n      description: 'Может включать серийный учет для существующих товаров'\n   },{\n      value: 'create_warehouse_categories',\n      description: 'Может создавать категории товаров'\n   },{\n      value: 'edit_warehouse_categories',\n      description: 'Может редактировать категории товаров'\n   },{\n      value: 'see_deleted_warehouse_categories',\n      description: 'Может видеть удаленные категории товаров'\n   },{\n      value: 'delete_warehouse_categories',\n      description: 'Может удалять категории товаров'\n   },{\n      value: 'recover_warehouse_categories',\n      description: 'Может восстанавливать категории товаров'\n   },{\n      value: 'create_new_part',\n      description: 'Может создавать новые товары'\n   },{\n      value: 'edit_part', // не реализовано\n      description: 'Может редактировать товары'\n   },{\n      value: 'see_delete_parts',\n      description: 'Может видеть удаленные товары'\n   },{\n      value: 'delete_parts',\n      description: 'Может удалять товары'\n   },{\n      value: 'recover_parts',\n      description: 'Может восстанавливать товары'\n   },{\n      value: 'delete_operation_of_warehouse', // не реализовано\n      description: 'Может удалять операции на складе'\n   }\n]\n\nexport const clients = [\n   {\n      value: 'see_table_clients', // не реализовано\n      description: 'Может видеть таблицу клиентов'\n   },{\n      value: 'see_buyer', // не реализовано\n      description: 'Может видеть покупателей'\n   },{\n      value: 'see_supplier', // не реализовано\n      description: 'Может видеть поставщиков'\n   },{\n      value: 'see_client_balance', // не реализовано\n      description: 'Может видеть баланс клиента'\n   },{\n      value: 'edit_client_balance', // не реализовано\n      description: 'Может корректировать баланс клиента'\n   },{\n      value: 'edit_client', // не реализовано\n      description: 'Может редактировать клиента'\n   },{\n      value: 'delete_client',\n      description: 'Может удалять клиента'\n   },{\n      value: 'recover_client',\n      description: 'Может восстанаваливать клиента'\n   },{\n      value: 'see_client_call', // не реализовано\n      description: 'Может видеть звонки'\n   },{\n      value: 'edit_client_discount', // не реализовано\n      description: 'Может редактировать персональную скидку клиента'\n   }\n]\n\nexport const analytic = [\n   {\n      value: 'indicators', // не реализовано\n      description: 'Показатели'\n   },{\n      value: 'analytic', // не реализовано\n      description: 'Аналитический отчет'\n   },{\n      value: 'assortment', // не реализовано\n      description: 'Анализ ассортимента'\n   }\n]\n\nexport const reports = [\n   {\n      value: 'print_report', // не реализовано\n      description: 'Может печатать данные отчета'\n   },{\n      value: 'report_all_date', // не реализовано\n      description: 'Может формировать отчет за произвольный период дат'\n   },{\n      value: 'report_salary', // не реализовано\n      description: 'Отчет по зарплате'\n   },{\n      value: 'report_all_maney', // не реализовано\n      description: 'Всего денег'\n   },{\n      value: 'report_move_maney', // не реализовано\n      description: 'Движение денежных средств'\n   },{\n      value: 'report_income_orders', // не реализовано\n      description: 'Прибыль по заказам'\n   },{\n      value: 'report_income_sale', // не реализовано\n      description: 'Прибыль от продаж'\n   },{\n      value: 'report_create_order', // не реализовано\n      description: 'Созданные заказы'\n   },{\n      value: 'report_close_order', // не реализовано\n      description: 'Закрытые заказы'\n   },{\n      value: 'report_work_order', // не реализовано\n      description: 'Заказы в работе'\n   },{\n      value: 'report_ad_campaign', // не реализовано\n      description: 'Рекламные кампании'\n   },{\n      value: 'report_engineer', // не реализовано\n      description: 'Отчет по исполнителям'\n   },{\n      value: 'report_service', // не реализовано\n      description: 'Отчет по работам и услугам'\n   },{\n      value: 'report_turnover_goods', // не реализовано\n      description: 'Обороты товаров'\n   },{\n      value: 'report_remaining_warehouse', // не реализовано\n      description: 'Остатки на складе'\n   },{\n      value: 'report_write_of_warehouse', // не реализовано\n      description: 'Списания со склада'\n   },{\n      value: 'report_good_need', // не реализовано\n      description: 'Товары, требующие закупки'\n   },{\n      value: 'report_send_sms', // не реализовано\n      description: 'Отправленные SMS'\n   },{\n      value: 'report_last_sms', // не реализовано\n      description: 'Отложенные SMS'\n   },{\n      value: 'report_reviews', // не реализовано\n      description: 'Отзывы клиентов'\n   },{\n      value: 'report_to_email', // не реализовано\n      description: 'Отчет на email'\n   },{\n      value: 'history_login', // не реализовано\n      description: 'История входов'\n   },{\n      value: 'report_call', // не реализовано\n      description: 'Звонки'\n   }\n]\n\nexport const setting = [\n   {\n      value: 'setting_generally',\n      description: 'Общие'\n   },{\n      value: 'setting_roles',\n      description: 'Роли'\n   },{\n      value: 'setting_employees',\n      description: 'Сотрудники'\n   },{\n      value: 'setting_see_employees',\n      description: 'Может видеть удаленных сотрудников'\n   },{\n      value: 'setting_recover_employees',\n      description: 'Может восстанавливать удаленнвх сотрдуников'\n   },{\n      value: 'setting_branch',\n      description: 'Локации'\n   },{\n      value: 'setting_see_branch',\n      description: 'Может видеть удаленные локации'\n   },{\n      value: 'setting_recover_branch',\n      description: 'Может восстанавливать удаленные локации'\n   },{\n      value: 'setting_warehouse',\n      description: 'Склады'\n   },{\n      value: 'setting_create_warehouse',\n      description: 'Может создавать склады'\n   },{\n      value: 'setting_edit_warehouse',\n      description: 'Может редактировать слады'\n   },{\n      value: 'setting_delete_warehouse',\n      description: 'Может удалять склады'\n   },{\n      value: 'setting_see_deleted_warehouse',\n      description: 'Может видеть удаленные склады'\n   },{\n      value: 'setting_recover_warehouse',\n      description: 'Может востанавливать удаленные'\n   },{\n      value: 'see_setting_tax', // не реализовано\n      description: 'Может видеть настройки налогов'\n   },{\n      value: 'create_tax', // не реализовано\n      description: 'Может создавать налоги'\n   },{\n      value: 'create_tax_rules', // не реализовано\n      description: 'Может устанавливать налоговые правила для компании'\n   },{\n      value: 'setting_status',\n      description: 'Статусы'\n   },{\n      value: 'setting_tags',\n      description: 'Теги'\n   },{\n      value: 'setting_alert',\n      description: 'Оповещения'\n   },{\n      value: 'setting_create_not_template',\n      description: 'Может создавать шаблоны оповещения'\n   },{\n      value: 'setting_edit_not_template',\n      description: 'Может редактировать шаблоны оповещения'\n   },{\n      value: 'setting_see_deleted_not_template',\n      description: 'Может видеть удаленные шаблоны оповещения'\n   },{\n      value: 'setting_delete_not_template',\n      description: 'Может удалять шаблоны оповещения'\n   },{\n      value: 'setting_recover_not_template',\n      description: 'Может восстанавливать шаблоны оповещения'\n   },{\n      value: 'setting_create_not_event',\n      description: 'Может создавать оповещения'\n   },{\n      value: 'setting_edit_not_event',\n      description: 'Может редактировать оповещения'\n   },{\n      value: 'setting_see_deleted_not_event',\n      description: 'Может видеть удаленные оповещения'\n   },{\n      value: 'setting_delete_not_event',\n      description: 'Может удалять оповещения'\n   },{\n      value: 'setting_recover_not_event',\n      description: 'Может восстанавливать оповещения'\n   },{\n      value: 'setting_service',\n      description: 'Перечень работ и услуг'\n   },{\n      value: 'setting_create_service',\n      description: 'Может создавать работы и услуги'\n   },{\n      value: 'setting_see_deleted_service',\n      description: 'Может видеть удаленные работы и услуги'\n   },{\n      value: 'setting_edit_service',\n      description: 'Может редактировать услуги'\n   },{\n      value: 'setting_delete_service',\n      description: 'Может удалять работы и услги'\n   },{\n      value: 'setting_recover_service',\n      description: 'Может восстанавливать работы и услги'\n   },{\n      value: 'setting_book',\n      description: 'Справочники'\n   },{\n      value: 'setting_see_equipment',\n      description: 'Может видеть удаленные изделия'\n   },{\n      value: 'setting_recover_equipment',\n      description: 'Может восстанавливать удаленные изделия'\n   },{\n      value: 'setting_join_equipment',\n      description: 'Может объединять изделия'\n   },{\n      value: 'setting_template',\n      description: 'Шаблоны документов'\n   },{\n      value: 'setting_price',\n      description: 'Цены и скидки'\n   },{\n      value: 'setting_create_price',\n      description: 'Может добавлять цены и скидки'\n   },{\n      value: 'setting_edit_price',\n      description: 'Может редактировать цены и скидки'\n   },{\n      value: 'setting_price_show_deleted',\n      description: 'Может видеть удаленные наценки'\n   },{\n      value: 'setting_price_delete',\n      description: 'Может удалять наценки'\n   },{\n      value: 'setting_price_recover_deleted',\n      description: 'Может восстанавливать удаленные наценки'\n   },{\n      value: 'setting_marketing',\n      description: 'Маркетинг'\n   }\n]\n\nexport const permission = [\n   {\n      permission: generally,\n      description: 'Общие'\n   },{\n      permission: task,\n      description: 'Задачи'\n   },{\n      permission: leads,\n      description: 'Обращения'\n   },{\n      permission: orders,\n      description: 'Заказы'\n   },{\n      permission: sales,\n      description: 'Продажи'\n   },{\n      permission: finance,\n      description: 'Финансы'\n   },{\n      permission: warehouse,\n      description: 'Склад'\n   },{\n      permission: clients,\n      description: 'Клиенты'\n   },{\n      permission: analytic,\n      description: 'Аналитика'\n   },{\n      permission: reports,\n      description: 'Отчеты'\n   },{\n      permission: setting,\n      description: 'Настройки'\n   }\n]\n\nexport const permission_cahsbox = [\n   'show_cashbox_remains',\n   'show_cash_flow',\n   'incoming',\n   'incoming_move',\n   'outcoming',\n   'outcoming_move'\n]\n\nexport const permission_warehouse = [\n    'show_warehouse_remains',\n   'warehouse_registration',\n   'move_in',\n   'return_from_client',\n   'write_off',\n   'move_out',\n   'add_to_order',\n   'add_to_sale',\n   'return_to_supplier'\n]","import { data_setting_menu } from '../../data/dataSettingRows'\nimport { data_menu_rows } from '../../data/dataSidebarRows'\n\nconst initialState = {\n    ordersShow: [],\n    count: 0,\n    clientShow: [],\n    count_clients: 0,\n    menuRows: data_menu_rows,\n    settingMenu: data_setting_menu,\n    payments: [],\n\n    employees: [],\n    user: JSON.parse(sessionStorage.getItem('user')) || {},\n    status: [],\n    status_group: [],\n    badges: [],\n    order_type: [],\n    equipment: [],\n    discount_margin: [],\n    roles: [],\n    ad_campaign: [],\n    generally_info: {},\n    branches: [],\n    cashboxes: [],\n    payrules: [],\n    payrolls: [],\n    group_dict_service: [],\n    dict_service: [],\n    service_prices: [],\n\n    counters: [],\n    dictMalfunction: [],\n    count_malfunction: 0,\n    dictPackagelist: [],\n    count_packagelist: 0,\n    item_payments: [],\n    count_item_payments: 0,\n\n    current_branch: {},\n\n    token: sessionStorage.getItem('1xsndt') || '',\n    login_status: false,\n    error_message: '',\n    url_server: process.env.PUBLIC_URL\n    // url_server: 'http://192.168.1.48:80' // Домашний\n    // url_server: 'http://192.168.43.224:5005' // Мобильный\n    // url_server: 'http://172.16.6.218:5005' // КЕХУ\n    // url_server: 'http://192.168.1.49:80' // рабочий WiFI\n    // url_server: 'http://5.53.124.252:80'\n    // url_server: 'http://onetwonline.ru'\n  \n}\n\nexport const dataReducer = (state = initialState, action) => {\n\n\n  switch (action.type) {\n\n    case 'LOGIN': {\n      return {\n         ...state, \n         token: action.token\n        }}\n\n    case 'LOGUOT': {\n      return {\n         ...state, \n         token: '',\n         login_status: false \n        }}\n\n    case 'ADD_MENU_ROWS': {\n      return {\n         ...state, \n         menuRows: action.rows,\n        }}\n\n    case 'ADD_STATUS': {\n      return {\n         ...state, \n         status: action.status,\n        }}\n\n    case 'ADD_STATUS_GROUP': {\n      return {\n          ...state, \n          status_group: action.status_group,\n        }}\n    \n    case 'ADD_ORDERS_SHOW': {\n      return {\n         ...state, \n         ordersShow: action.ordersShow,\n         count: action.count\n        }}\n\n    case 'ADD_CLIENTS_SHOW': {\n      return {\n          ...state, \n          clientShow: action.clientShow,\n          count_clients: action.count\n        }}\n    \n    case 'ADD_EMPLOYEES': {\n      return {\n         ...state, \n         employees: action.employees,\n        }}\n\n    case 'ADD_USER': {\n      return {\n         ...state, \n         user: action.user,\n         login_status: true \n        }}\n\n    case 'ADD_BADGES': {\n      return {\n          ...state, \n          badges: action.badges\n      }}\n\n\n    case 'ADD_EQUIPMENT': {\n      return {\n        ...state,\n        equipment: action.equipment\n      }}\n\n    case 'CHANGE_STATUS_MENU_ROW': {\n      return {\n      ...state,\n      menuRows: state.menuRows.map(row => {\n        return {\n          ...row,\n          active: row.id === action.id\n        }})}} \n\n    \n    case 'ADD_SETTING_MENU': {\n    return {\n        ...state, \n        settingMenu: action.rows.sort((a, b) => a.id - b.id),\n      }}\n      \n    case 'CHANGE_STATUS_SETTING_ROW': {\n      return {\n        ...state,\n        settingMenu: state.settingMenu.map(row => {\n          return {\n            ...row,\n            active: row.id === action.id\n          }})}} \n\n\n\n    case 'ADD_ROLES': {\n      return {\n          ...state, \n          roles: action.roles,\n        }}\n\n    case 'ADD_AD_CAMPAIGN': {\n      return {\n          ...state, \n          ad_campaign: action.ad_campaign,\n        }\n      }\n\n        \n    case 'ADD_DATA': {\n      return {\n          ...state, \n          [action.field]: action.data,\n        }\n      }\n\n        case 'ACTIVE_CASHBOX': {\n          return {\n              ...state, \n              cashboxes: state.cashboxes.map(cashbox => {\n                cashbox.active = cashbox.id === action.id\n                return cashbox\n              }),\n            }\n          }\n\n    default:\n      return state\n  }\n}\n","import { task, leads, orders, sales, finance, warehouse, setting, clients, analytic, reports } from './permissions'\n\n\nexport const data_menu_rows = [\n{\n    id: 1,\n    title: 'Задачи',\n    image: 'task',\n    url: '/tasks',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: task.map(per => per.value)\n},{\n    id: 2,\n    title: 'Обращения',\n    image: 'M 3.527 6.987 a 0.5 0.5 0 0 0 -0.432 0.751 l 0.733 1.263 a 0.5 0.5 0 0 0 0.432 0.25 h 7.48 a 0.5 0.5 0 0 0 0.432 -0.25 l 0.733 -1.263 a 0.5 0.5 0 0 0 -0.432 -0.75 H 3.527 Z m 2.56 4.431 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.69 1.2 a 0.5 0.5 0 0 0 0.434 0.25 h 2.444 a 0.5 0.5 0 0 0 0.434 -0.25 l 0.69 -1.2 a 0.5 0.5 0 0 0 -0.433 -0.75 H 6.087 Z M 0.867 2.382 a 0.5 0.5 0 0 0 -0.433 0.75 l 0.83 1.437 a 0.5 0.5 0 0 0 0.433 0.25 h 12.606 a 0.5 0.5 0 0 0 0.433 -0.25 l 0.83 -1.437 a 0.5 0.5 0 0 0 -0.433 -0.75 H 0.867 Z',\n    url: '/leans',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: leads.map(per => per.value)\n},{\n    id: 3,\n    title: 'Заказы',\n    image: 'M 13.6 0 H 2.4 A 2.403 2.403 0 0 0 0 2.4 v 11.2 A 2.403 2.403 0 0 0 2.4 16 h 11.2 a 2.403 2.403 0 0 0 2.4 -2.4 V 2.4 A 2.403 2.403 0 0 0 13.6 0 Z M 2.4 1.6 h 11.2 a 0.801 0.801 0 0 1 0.8 0.8 v 7.2 h -1.972 a 1.598 1.598 0 0 0 -1.331 0.713 L 9.972 12 H 6.028 l -1.125 -1.688 A 1.598 1.598 0 0 0 3.572 9.6 H 1.6 V 2.4 a 0.8 0.8 0 0 1 0.8 -0.8 Z m 2.355 4.8 h 6.4 c 0.267 0 0.8 0.32 0.8 0.8 c 0 0.48 -0.533 0.8 -0.8 0.8 h -6.4 c -0.266 0 -0.8 -0.32 -0.8 -0.8 c 0 -0.48 0.534 -0.8 0.8 -0.8 Z m 6.4 -3.2 h -6.4 c -0.266 0 -0.8 0.32 -0.8 0.8 c 0 0.48 0.534 0.8 0.8 0.8 h 6.4 c 0.267 0 0.8 -0.32 0.8 -0.8 c 0 -0.48 -0.533 -0.8 -0.8 -0.8 Z',\n    url: '/orders',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: orders.map(per => per.value)\n},{\n    id: 4,\n    title: 'Продажи',\n    image: 'M 1.472 0 a 0.656 0.656 0 0 0 0 1.311 h 0.976 V 8.793 a 0.652 0.652 0 0 0 0 0.046 v 2.68 a 2.289 2.289 0 1 0 2.726 1.217 h 4.837 a 2.288 2.288 0 1 0 2.07 -1.312 H 3.76 V 9.473 h 9.952 c 0.327 0 0.603 -0.24 0.65 -0.563 l 0.816 -5.713 a 0.656 0.656 0 0 0 -0.603 -0.746 L 3.76 1.677 V 0.656 A 0.656 0.656 0 0 0 3.104 0 H 1.472 Z m 10.593 12.736 h 0.025 a 0.976 0.976 0 1 1 -0.025 0 Z m -8.97 0 h 0.024 a 0.976 0.976 0 1 1 -0.024 0 Z',\n    url: '/shops',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: sales.map(per => per.value)\n},{\n    id: 5,\n    title: 'Финансы',\n    image: 'M 3.555 1.348 a 8 8 0 1 1 8.89 13.304 a 8 8 0 0 1 -8.89 -13.304 Z m 3.203 4.683 a 0.727 0.727 0 0 1 0.515 -0.213 h 2.909 a 0.727 0.727 0 1 0 0 -1.454 H 8.727 v -0.728 a 0.727 0.727 0 1 0 -1.454 0 v 0.728 a 2.182 2.182 0 1 0 0 4.363 h 1.454 a 0.727 0.727 0 1 1 0 1.455 H 5.818 a 0.727 0.727 0 0 0 0 1.454 h 1.455 v 0.728 a 0.727 0.727 0 0 0 1.454 0 v -0.728 a 2.182 2.182 0 0 0 0 -4.363 H 7.273 a 0.727 0.727 0 0 1 -0.515 -1.242 Z',\n    url: '/payments',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: finance.map(per => per.value)\n},{\n    id: 6,\n    title: 'Склад',\n    image: 'M5.5 0a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1V1a1 1 0 00-1-1h-5zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H6.7zM1 9a1 1 0 00-1 1v5a1 1 0 001 1h5a1 1 0 001-1v-5a1 1 0 00-1-1H1zm1.2 1a.2.2 0 00-.2.2v1c0 .11.09.2.2.2h2.6a.2.2 0 00.2-.2v-1a.2.2 0 00-.2-.2H2.2zM9 10a1 1 0 011-1h5a1 1 0 011 1v5a1 1 0 01-1 1h-5a1 1 0 01-1-1v-5zm2 .2c0-.11.09-.2.2-.2h2.6c.11 0 .2.09.2.2v1a.2.2 0 01-.2.2h-2.6a.2.2 0 01-.2-.2v-1z',\n    url: '/wherehouse',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: warehouse.map(per => per.value)\n},{\n    id: 7,\n    title: 'Клиенты',\n    image: 'M14.4 6.4c0 1.323-1.077 2.4-2.4 2.4a2.403 2.403 0 01-2.4-2.4C9.6 5.077 10.677 4 12 4s2.4 1.077 2.4 2.4zM8.8 4c0 1.765-1.435 3.2-3.2 3.2A3.203 3.203 0 012.4 4C2.4 2.235 3.835.8 5.6.8 7.365.8 8.8 2.235 8.8 4zM12 9.6c-.897 0-1.753.3-2.448.837A5.583 5.583 0 005.6 8.8 5.607 5.607 0 000 14.4a.8.8 0 00.8.8h9.6a.8.8 0 00.8-.8h4a.8.8 0 00.8-.8c0-2.206-1.794-4-4-4z',\n    url: '/clients',\n    group_name: 'generally_menu',\n    active: false,\n    permission_keys: clients.map(per => per.value)\n},{\n    id: 8,\n    title: 'Аналитика',\n    image: 'M12.184.705a.889.889 0 00-1.311.06L6.879 5.556 3.953 4.094a.889.889 0 00-1.109.262L.178 7.91A.889.889 0 101.6 8.978l2.222-2.962 2.892 1.446a.889.889 0 001.08-.226l3.821-4.586 2.868 2.867A.889.889 0 0015.74 4.26L12.184.705zm-.678 5.074a.889.889 0 01.678.26l3.556 3.555c.166.166.26.392.26.628v4.445a.889.889 0 01-.889.889H.89a.889.889 0 01-.74-1.382L3.705 8.84a.889.889 0 011.137-.302l2.913 1.457L10.86 6.11a.889.889 0 01.645-.332z',\n    url: 'analytics',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: analytic.map(per => per.value)\n},{\n    id: 9,\n    title: 'Отчеты',\n    image: 'M0 2a2 2 0 012-2h2v5H0V2zm0 5v7a2 2 0 002 2h2V7H0zm6 0v9h8a2 2 0 002-2V7H6zm10-2V2a2 2 0 00-2-2H6v5h10z',\n    url: '/reports',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: reports.map(per => per.value)\n},{\n    id: 10,\n    title: 'Звонки',\n    image: 'M1.882 0h3.765L7.53 4.706 5.176 6.118a10.353 10.353 0 004.706 4.705l1.412-2.352L16 10.353v3.765A1.882 1.882 0 0114.118 16 15.059 15.059 0 010 1.882 1.882 1.882 0 011.882 0z',\n    url: '/telephony',\n    group_name: 'report_menu',\n    active: false,\n    permission_keys: ['report_call']\n},{\n    id: 11,\n    title: 'Настройки',\n    image: 'M15.456 6.04l-1.512-.504.712-1.424a.8.8 0 00-.152-.912L12.8 1.496a.8.8 0 00-.92-.152l-1.424.712L9.952.544A.8.8 0 009.2 0H6.8a.8.8 0 00-.76.544l-.504 1.512-1.424-.712a.8.8 0 00-.912.152L1.496 3.2a.8.8 0 00-.152.92l.712 1.424-1.512.504A.8.8 0 000 6.8v2.4a.8.8 0 00.544.76l1.512.504-.712 1.424a.8.8 0 00.152.912L3.2 14.504a.8.8 0 00.92.152l1.424-.712.504 1.512a.8.8 0 00.76.544h2.4a.8.8 0 00.76-.544l.504-1.512 1.424.712a.8.8 0 00.904-.152l1.704-1.704a.8.8 0 00.152-.92l-.712-1.424 1.512-.504A.8.8 0 0016 9.2V6.8a.8.8 0 00-.544-.76zM8 11a3 3 0 100-6 3 3 0 000 6z',\n    url: '/settings',\n    group_name: 'setting_menu',\n    active: false,\n    permission_keys: setting.map(per => per.value)\n}\n]\n\n\n","export const data_setting_menu = [\n   {\n   id: 1,\n   title: 'Общие',\n   url: '/settings/generally',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_generally'\n},{\n   id: 2,\n   title: 'Сотрудники',\n   url: '/settings/employees',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_employees'\n},{\n   id: 3,\n   title: 'Локации',\n   url: '/settings/branches',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_branch'\n},{\n   id: 4,\n   title: 'Склады',\n   url: '/settings/wherehouse',\n   group_name: 'generally_setting',\n   active: false,\n   permission_key: 'setting_warehouse'\n},{\n   id: 5,\n   title: 'Статусы',\n   url: '/settings/status',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_status'\n},{\n   id: 6,\n   title: 'Теги',\n   url: '/settings/tags',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_tags'\n},{\n   id: 7,\n   title: 'Оповещения',\n   url: '/settings/alerts',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_alert'\n},{\n   id: 8,\n   title: 'Перечнь работ и услуг',\n   url: '/settings/services_pricelist',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_service'\n},{\n   id: 9,\n   title: 'Справочники',\n   url: '/settings/books',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_book'\n},{\n   id: 10,\n   title: 'Шаблоны документов',\n   url: '/settings/document-templates',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_template'\n},{\n   id: 11,\n   title: 'Цены и скидки',\n   url: '/settings/prices',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_price'\n},{\n   id: 12,\n   title: 'Маркетинг',\n   url: '/settings/marketing',\n   group_name: 'app_setting',\n   active: false,\n   permission_key: 'setting_marketing'\n}\n]","const initialState = {\n   statusMenuVisible : {},\n   statusSetCustomFilter: false,\n   stausListFilter: false,\n   typeListFilter: false,\n   managerListFilter: false,\n   engineerListFilter: false,\n   groupListFilter: false,\n   brandListFilter: false,\n   subtypeListFilter: false,\n   clientListFilter: false,\n   statusCreateNewFilter: false,\n   statusCreateNewRole: false,\n   statusEmployeeEditor: false,\n   employeeEditorRoleOptions: false,\n   statusOrderEditor: false,\n   statusCreateNewClient: false,\n   statusAdCampaignClient: false,\n   checkedOrderClient: false,\n   statusBranchEditor: false,\n   statusChooseIcon: false,\n   statusEquipmentEditor: false,\n   statusElementEditor: false,\n   statusCashboxEditor: false,\n   statusCashboxEmployeeEditor: false,\n   statusPaymentsEditor: false,\n   statusPaymentsCard: false,\n   statusStatusList: false,\n   statusSalaryEditor: false,\n   statusPriceEditor: false,\n   statusGroupServiceEditor: false,\n   statusServiceEditor: false,\n   statusOperationEditor: false,\n   statusPayrollEditor: false,\n   statusCellEditor: false,\n   statusWarehouseEditor: false,\n   statusWarehouseEmployeeEditor: false,\n   statusWarehouseCategoryEditor: false,\n   statusPartEditor: false,\n   statusOrderPartEditor: false,\n   statusOrderSticker: false,\n   statusOrderLoader: false,\n   checkOrderSticker: localStorage.getItem('checkOrderSticker') === 'true',\n   statusNotTemplateEditor: false,\n   statusNotEventEditor: false,\n\n   inputClientNameChecked: true,\n   inputClientPhoneChecked: [true],\n   inputClientDiscServChecked: true,\n   inputClientDiscMatChecked: true,\n   inputClientDiscGoodChecked: true,\n   inputRoleTitleChecked: true,\n   inputEmployeeNameChecked: true,\n   inputEmployeeEmailChecked: true,\n   inputEmployeeLoginChecked: true,\n   inputEmployeePasswordChecked: true,\n   inputEmployeeRoleChecked: true,\n   inputMalfunctionChecked: [true],\n   checkedOrderKindofGood: [true],\n   checkedOrderBrand: [true],\n   checkedOrderSubtype: [true],\n   inputMaindataNameChecked: true,\n   inputBranchNameChecked: true,\n   inputBranchPrefixChecked: true,\n   inputBranchPrefixDocChecked: true,\n   inputBookTitleChecked: true,\n   inputCashboxTitleChecked: true,\n   inputPaymentDescChecked: true,\n   inputPaymentCashflowChecked: true,\n   inputPaymentCashboxChecked: true,\n   inputPaymentEmployeeChecked: true,\n   inputPaymentSumChecked: true,\n   inputPriceTitleChecked: true,\n   inputDictServiceChecked: true,\n   inputServiceTitleChecked: true,\n   inputServiceCategoryIdChacked:true,\n   inputServicePriceChacked:true,\n   inputOperationEngineerChacked: true,\n   inputOperationTitleChacked: true,\n   inputPayrollDescChecked: true,\n   inputPayrollEmployeeChecked: true,\n   inputPayrollSumChecked: true,\n   inputSingleMalfunctionChecked: true,\n   inputWarehouseTitleChecked: true,\n   inputWCategoryTitleChecked: true,\n   inputWPartTitleChecked: true,\n   inputOrderPartTitleChacked: true,\n   inputOrderPartEngineerChecked: true,\n   inputNotTempTitleChecked: true,\n   inputNotTempTempleChecked: true,\n   inputNotEventEventChecked: true,\n   inputNotEventTemplateChecked: true,\n\n   errorSameMail: false,\n   errorSameLogin: false\n}\n\n// todo: переписать ненужные функции\nexport const visualReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'INIT_STATUS_MENU_VISIBLE': {\n         return {\n            ...state, \n            statusMenuVisible: action.data,\n         }\n      }\n\n      case 'CANGE_STATUS_MENU_VISIBLE': {\n      return {\n         ...state, \n         statusMenuVisible: {...state.statusMenuVisible, [action.id_order]: !state.statusMenuVisible[action.id_order]},\n         }\n      }\n      \n      case 'CHANGE_STATUS_SET_STATUS_FILTER': {\n         return {\n            ...state, \n            statusSetCustomFilter: !state.statusSetCustomFilter,\n         }\n      }\n\n      case 'CHANGE_STATUS_LIST_FILTER': {\n         return {\n            ...state, \n            stausListFilter: !state.stausListFilter,\n         }\n      }\n      \n      case 'CHANGE_TYPE_LIST_FILTER': {\n         return {\n            ...state, \n            typeListFilter: !state.typeListFilter,\n         }\n      }\n\n      case 'CHANGE_MANAGER_LIST_FILTER': {\n         return {\n            ...state, \n            managerListFilter: !state.managerListFilter,\n         }\n      }\n\n      case 'CHANGE_ENGINEER_LIST_FILTER': {\n         return {\n            ...state, \n            engineerListFilter: !state.engineerListFilter,\n         }\n      }\n\n      case 'CHANGE_GROUP_LIST_FILTER': {\n         return {\n            ...state, \n            groupListFilter: !state.groupListFilter,\n         }\n      }\n\n      case 'CHANGE_BRAND_LIST_FILTER': {\n         return {\n            ...state, \n            brandListFilter: !state.brandListFilter,\n         }\n      }\n\n      case 'CHANGE_SUBTYPE_LIST_FILTER': {\n         return {\n            ...state, \n            subtypeListFilter: !state.subtypeListFilter,\n         }\n      }\n\n      case 'CHANGE_CLIENT_LIST_FILTER': {\n         return {\n            ...state, \n            clientListFilter: !state.clientListFilter,\n         }\n      }\n\n      case 'CHANGE_STATUS_CREATE_NEW_FILTER': {\n         return {\n            ...state, \n            statusCreateNewFilter: !state.statusCreateNewFilter,\n         }\n      }\n      \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            statusCreateNewRole: !state.statusCreateNewRole,\n         }\n      }\n\n\n      case 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n         }\n      }\n      \n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            employeeEditorRoleOptions: !state.employeeEditorRoleOptions,\n            inputEmployeeRoleChecked: true\n         }\n      }\n\n\n\n      case 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n      \n      case 'SET_AD_CANMPAIGN_CLIENT': {\n         return {\n            ...state, \n            statusAdCampaignClient: !state.statusAdCampaignClient,\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'SET_VISIBLE_LIST_FLAG': {\n\n         const list = state[action.field]\n\n         if (action.value === 'change') {\n            list[action.idx] = !list[action.idx] \n            return {\n               ...state, \n               [action.field]: list\n            }\n         } else {\n            list[action.idx] = action.value\n            return {\n               ...state,\n            [action.field]: list\n            }\n         }\n      }\n\n      case 'DELETE_FLAG': {\n         const list = state[action.field]\n         list.splice(action.idx, 1)\n         return {\n            ...state,\n            [action.field]: list\n         }\n      }\n\n      case 'ADD_FLAG': {\n         return {\n            ...state,\n            [action.field]: state[action.field].concat([true])\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state, \n            statusCreateNewClient: true\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         if (action.field === 'email')\n         return {\n            ...state, \n            errorSameMail: false\n         }\n         if (action.field === 'login')\n         return {\n            ...state, \n            errorSameLogin: false\n         }\n         return state\n      }\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n         return {\n            ...state, \n            inputMalfunctionChecked: state.inputMalfunctionChecked.concat([true]),\n            checkedOrderKindofGood: state.checkedOrderKindofGood.concat([true]),\n            checkedOrderBrand: state.checkedOrderBrand.concat([true]),\n            checkedOrderSubtype: state.checkedOrderSubtype.concat([true])\n         }\n      }\n\n      case 'DELETE_DEVICE': {\n\n         let checked_list_malfunction = state.inputMalfunctionChecked\n         checked_list_malfunction.splice(action.idx, 1)\n\n         let checked_list_kindof_good = state.checkedOrderKindofGood\n         checked_list_kindof_good.splice(action.idx, 1)\n\n         let checked_list_brand = state.checkedOrderBrand\n         checked_list_brand.splice(action.idx, 1)\n\n         let checked_list_subtype = state.checkedOrderSubtype\n         checked_list_subtype.splice(action.idx, 1)\n\n         return {\n            ...state, \n            inputMalfunctionChecked: checked_list_malfunction,\n            checkedOrderKindofGood: checked_list_kindof_good,\n            checkedOrderBrand: checked_list_brand,\n            checkedOrderSubtype: checked_list_subtype\n         }\n      }\n\n      \n      // case 'SET_ORDER_EQUIPMENT': {\n         \n      //    let checked_list = state[action.field]\n      //    checked_list[action.idx] = true\n\n      //    return {\n      //       ...state, \n      //       [action.field]: checked_list\n      //    }\n      // }\n\n      \n\n\n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n\n   status: [],\n   order_type_id: [],\n   employees: [],\n   customFilters: [],\n\n   mainFilter: {\n    sort: 'desc',\n    field_sort: 'id',\n    page: 0\n  },\n\n  tempFilter: {\n   status_id: [],\n   order_type_id: [],\n   engineer_id: [],\n   manager_id: [],\n   kindof_good: '',\n   brand: '',\n   subtype: '',\n   model: '',\n   client_name: '',\n   created_at: [null, null]\n },\n\n  clientFilter: {\n    page: 0,\n    name: '',\n    phone: '7'\n  },\n\n  search_word: '',\n\n  title_create: '',\n  generale_create: false\n}\n\nexport const filterReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'ADD_STATUS': {\n         return {\n            ...state, \n            status: action.status.map(status => status.id),\n           }}\n\n      case 'ADD_DATA': {\n         if (action.field === 'order_type') {\n            return {\n                  ...state, \n                  order_type_id: action.data.map(type => type.id)\n            }\n         } else {\n            return state\n         }\n      }\n\n      case 'ADD_EMPLOYEES': {\n         return {\n            ...state, \n            employees: action.employees.map(employee => employee.id),\n           }}\n      \n\n      case 'ADD_ORDERS_SHOW': {\n         return {\n            ...state, \n            count: action.count\n         }}\n\n      case 'CHANGE_PAGE': {\n         return {\n            ...state, \n            mainFilter: {\n              ...state.mainFilter, \n              page: action.page\n             }}}\n      \n      case 'CHANGE_SORT': {\n         return {\n            ...state, \n            mainFilter: {\n               ...state.mainFilter, \n               sort: action.field === state.mainFilter.field_sort ? (state.mainFilter.sort === 'asc' ? 'desc' : 'asc') : state.mainFilter.sort,\n               field_sort: action.field,\n               page: 0\n               }}}\n         \n      case 'ACTIVE_BADGE': {\n         return {\n               ...state, \n               search_word: '',\n               mainFilter: {\n                  ...action.filters,\n                  page: 0,\n                  sort: 'asc',\n                  field_sort: 'id'\n               },\n               customFilters: state.customFilters.map(filter => {\n                  return {\n                     ...filter,\n                     active: false\n                  }}),\n            }}\n\n\n      case 'CANGE_FILTER': {\n\n         const word = action.word.toString()\n\n            return {\n               ...state, \n               search_word: word, \n               mainFilter: {\n               ...state.mainFilter,\n               page: 0,\n               sort: 'asc',\n               field_sort: 'id',\n               search: word,\n               }}}\n\n         \n      case 'CHANGE_CHECK_STATUS': {\n\n         if (state.tempFilter.status_id.includes(action.field)) {\n         return {\n               ...state, \n               tempFilter: {\n               ...state.tempFilter, \n               status_id: state.tempFilter.status_id.filter(status => status !== action.field)\n            }\n            }\n         } else {\n            return {\n               ...state, \n               tempFilter: {\n               ...state.tempFilter, \n               status_id: state.tempFilter.status_id.concat([ action.field ])\n            }\n            }}}\n\n\n      case 'SET_ALL_STATUS_TRUE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            status_id: state.status\n         }}}\n\n      case 'SET_ALL_STATUS_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            status_id: []\n         }}}\n\n         \n      case 'CHANGE_CHECK_TYPE': {\n\n      if (state.tempFilter.order_type_id.includes(Number(action.field))) {\n\n      return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            order_type_id: state.tempFilter.order_type_id.filter(order_type => order_type !== Number(action.field))}\n         }\n      } else {\n         return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            order_type_id: state.tempFilter.order_type_id.concat([Number(action.field)])}\n         }}}\n\n      case 'SET_ALL_TYPE_TRUE': {\n         \n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            order_type_id: state.order_type_id\n         }}}\n\n      case 'SET_ALL_TYPE_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            order_type_id: []\n         }}}\n\n            \n      case 'CHANGE_CHECK_MANAGER': {\n\n      if (state.tempFilter.manager_id.includes(action.field)) {\n\n      return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            manager_id: state.tempFilter.manager_id.filter(manager => manager !== action.field)}\n         }\n      } else {\n         return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            manager_id: state.tempFilter.manager_id.concat([action.field])}\n         }}}\n\n      case 'SET_ALL_MANAGER_TRUE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            manager_id: state.employees\n         }}}\n\n      case 'SET_ALL_MANAGER_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            manager_id: []\n         }}}\n\n      case 'CHANGE_CHECK_ENGINEER': {\n\n      if (state.tempFilter.engineer_id.includes(action.field)) {\n\n      return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            engineer_id: state.tempFilter.engineer_id.filter(engineer => engineer !== action.field)}\n         }\n      } else {\n         return {\n            ...state, \n            tempFilter: {\n            ...state.tempFilter, \n            engineer_id: state.tempFilter.engineer_id.concat([action.field])}\n         }}}\n\n      case 'SET_ALL_ENGINEER_TRUE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            engineer_id: state.employees\n         }}}\n\n      case 'SET_ALL_ENGINEER_FALSE': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            engineer_id: []\n         }}}\n\n      case 'CHANGE_GROUP_MAINFILTER': {\n         return {\n            ...state,\n            tempFilter: {\n               ...state.tempFilter,\n               kindof_good: action.word\n            }}}\n\n      case 'CHANGE_BRAND_MAINFILTER': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            brand: action.word\n         }}}\n\n      case 'CHANGE_SUBTYPE_MAINFILTER': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            subtype: action.word\n         }}}\n\n\n      case 'CHANGE_CLIENT_MAINFILTER': {\n      return {\n         ...state,\n         tempFilter: {\n            ...state.tempFilter,\n            client_name: action.word\n         }}}\n\n      case 'CHANGE_NAME_CLIENTFILTER': {\n      return {\n         ...state,\n         clientFilter: {\n            ...state.clientFilter,\n            name: action.word,\n            phone: ''\n         }}}\n\n         \n      case 'CHANGE_PHONE_CLIENTFILTER': {\n         return {\n            ...state,\n            clientFilter: {\n               ...state.clientFilter,\n               phone: action.word.replace(/[^0-9]/g, ''),\n               name: ''\n            }}}\n\n      case 'CHANGE_CREATE_AT_MAINFILTER': {\n         return {\n            ...state,\n            tempFilter: {\n               ...state.tempFilter,\n               created_at: action.range\n            }}}\n\n\n            \n      case 'APPLY_FILTER': {\n\n         let filter = {}\n\n         if (state.tempFilter.status_id) {\n            Object.assign(filter, {status_id: state.tempFilter.status_id})\n         }\n\n         if (state.tempFilter.order_type_id) {\n            Object.assign(filter, {order_type_id: state.tempFilter.order_type_id})\n         }\n\n         if (state.tempFilter.engineer_id) {\n            Object.assign(filter, {engineer_id: state.tempFilter.engineer_id})\n         }\n\n         if (state.tempFilter.manager_id) {\n            Object.assign(filter, {manager_id: state.tempFilter.manager_id})\n         }\n\n         if (state.tempFilter.kindof_good) {\n            Object.assign(filter, {kindof_good: state.tempFilter.kindof_good})\n         }\n\n         if (state.tempFilter.brand) {\n            Object.assign(filter, {brand: state.tempFilter.brand})\n         }\n\n         if (state.tempFilter.subtype) {\n            Object.assign(filter, {subtype: state.tempFilter.subtype})\n         }\n\n         if (state.tempFilter.client_name) {\n            Object.assign(filter, {client_name: state.tempFilter.client_name})\n         }\n\n         if (state.tempFilter.created_at[0] || state.tempFilter.created_at[1]) {\n            Object.assign(filter, {created_at: state.tempFilter.created_at.map(date => date / 1000)})\n         }\n\n\n         return {\n            ...state,\n            mainFilter: {\n               ...filter,\n               sort: 'asc',\n               field_sort: 'id',\n               page: 0\n         }}\n      }\n\n      case 'RESET_FILTER':\n         return {\n            ...state,\n            tempFilter: {\n               status_id: [],\n               order_type_id: [],\n               engineer_id: [],\n               manager_id: [],\n               kindof_good: '',\n               brand: '',\n               subtype: '',\n               model: '',\n               client_name: '',\n               created_at: [null, null]\n            }\n         }\n\n      case 'CHANGE_TITLE_CREATE':\n         return {\n            ...state,\n            title_create: action.title\n         }\n\n         \n      case 'CHANGE_GENERALE_CREATE':\n         return {\n            ...state,\n            generale_create: !state.generale_create\n         }\n\n      case 'ADD_CUSTOM_FILTERS': {\n         return {\n            ...state,\n            customFilters: action.filters.sort((a, b) => a.id - b.id),\n            title_create: '',\n            generale_create: false\n         }}\n      \n      \n      case 'APPLY_CUSTOM_FILTER': {\n\n         if (!state.customFilters.find(filter => filter.id === action.id).active) {\n\n            let filter_new = {}\n\n            if (action.filter.status_id) {\n               Object.assign(filter_new, {status_id: action.filter.status_id})\n            }\n\n            if (action.filter.order_type_id) {\n               Object.assign(filter_new, {order_type_id: action.filter.order_type_id})\n            }\n\n            if (action.filter.engineer_id) {\n               Object.assign(filter_new, {engineer_id: action.filter.engineer_id})\n            }\n\n            if (action.filter.manager_id) {\n               Object.assign(filter_new, {manager_id: action.filter.manager_id})\n            }\n\n            if (action.filter.kindof_good) {\n               Object.assign(filter_new, {kindof_good: action.filter.kindof_good})\n            }\n\n            if (action.filter.brand) {\n               Object.assign(filter_new, {brand: action.filter.brand})\n            }\n\n            if (action.filter.subtype) {\n               Object.assign(filter_new, {subtype: action.filter.subtype})\n            }\n\n            if (action.filter.client_name) {\n               Object.assign(filter_new, {client_name: action.filter.client_name})\n            }\n\n            if (action.filter.created_at[0] || action.filter.created_at[1]) {\n               Object.assign(filter_new, {created_at: action.filter.created_at.map(date => date / 1000)})\n            }\n\n            return {\n               ...state,\n               tempFilter: action.filter,\n               customFilters: state.customFilters.map(filter => {\n                  return {\n                     ...filter,\n                     active: filter.id === action.id ? true : false\n                  }}),\n               mainFilter: {\n                  ...filter_new,\n                  sort: 'asc',\n                  field_sort: 'id',\n                  page: 0\n            }}\n      } else {\n         return {\n            ...state,\n            tempFilter: {\n               status_id: [],\n               order_type_id: [],\n               engineer_id: [],\n               manager_id: [],\n               kindof_good: '',\n               brand: '',\n               subtype: '',\n               model: '',\n               client_name: '',\n               created_at: [null, null]\n            },\n            customFilters: state.customFilters.map(filter => {\n               return {\n                  ...filter,\n                  active: false\n               }}),\n            mainFilter: {\n               sort: 'asc',\n               field_sort: 'id',\n               page: 0\n         }}}}\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n   title_create: '',\n   edit: 0,\n\n   earnings_visibility: false,\n   leads_visibility: false,\n   orders_visibility:false,\n\n   list_permissions: [],\n   visible_statuses: [],\n   settable_statuses: [],\n   settable_discount_margin: []\n}\n\nexport const roleReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_TITLE_CREATE_ROLE': {\n         return {\n            ...state, \n            title_create: action.title,\n         }\n      }\n\n      case 'CHANGE_PERMISSION': {\n         if (action.value.every(val => state.list_permissions.includes(val))) {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.filter(per => !action.value.includes(per)),\n            }\n         } else {\n            return {\n               ...state, \n               list_permissions: state.list_permissions.concat(action.value),\n            }\n         }\n      }\n\n   \n      case 'CHANGE_EARNINGS_VISIBILITY': {\n         return {\n            ...state, \n            earnings_visibility: action.bool,\n         }\n      }\n   \n      case 'CHANGE_LEADS_VISIBILITY': {\n         return {\n            ...state, \n            leads_visibility:action.bool,\n         }\n      }\n      \n      case 'CHANGE_ORDERS_VISIBILITY': {\n         return {\n            ...state, \n            orders_visibility: action.bool,\n         }\n      }\n\n      case 'CHANGE_VISIBLE_STATUSES': {\n         if (action.id.every(id => state.visible_statuses.includes(id))) {\n            console.log('true')\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               visible_statuses: state.visible_statuses.concat(action.id.filter(id => !state.visible_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_STATUSES': {\n         if (action.id.every(id => state.settable_statuses.includes(id))) {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_statuses: state.settable_statuses.concat(action.id.filter(id => !state.settable_statuses.includes(id))),\n            }\n         }\n      }\n\n      case 'CHANGE_SETTABLE_MARGIN': {\n         if (action.id.every(id => state.settable_discount_margin.includes(id))) {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               settable_discount_margin: state.settable_discount_margin.concat(action.id.filter(id => !state.settable_discount_margin.includes(id))),\n            }\n         }\n      }\n\n   \n      case 'EDIT_ROLE': {\n         return {\n            ...state, \n            title_create: action.role.title,\n            edit: action.role.id,\n            earnings_visibility: action.role.earnings_visibility,\n            leads_visibility: action.role.leads_visibility,\n            orders_visibility: action.role.orders_visibility,\n            list_permissions: action.role.permissions,\n            visible_statuses: action.role.visible_statuses,\n            settable_statuses: action.role.settable_statuses,\n            settable_discount_margin: action.role.settable_discount_margin\n         }\n      }\n\n      case 'SET_VISIBLE_FLAG': {\n         if (action.field === 'statusCreateNewRole') {\n            return {\n               ...state, \n               title_create: '',\n               edit: 0,\n               earnings_visibility: false,\n               leads_visibility: false,\n               orders_visibility:false,\n               list_permissions: [],\n               visible_statuses: [],\n               settable_statuses: [],\n               settable_discount_margin: []\n            }\n         } else {\n            return state\n         }\n      }\n      \n      default: \n         return state\n   }\n   \n}\n","const initialState = {\n  tabs: 1,\n  edit: 0,\n  showDeleted: false,\n  role_title: '',\n\n  first_name: '',\n  last_name: '',\n  email: '',\n  notes: '',\n  phone: '',\n  login: '',\n  password: '',\n  role_id: 0,\n  permissions: [],\n  inn: '',\n  doc_name: '',\n  post: '',\n  deleted: false\n}\n\nexport const employeeReduscer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_EMPLOYEE_TAB': {\n         return {\n            ...state, \n            tabs: action.tab,\n         }\n      }\n\n      case 'CHANGE_EMPLOYEE_EDITOR_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n      \n      case 'CHOOSE_EMPLOYEE_SELECTED': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n\n      case 'SET_ROLE_EMPLOYEE_EDITOR': {\n         return {\n            ...state, \n            role_id: action.role\n         }\n      }\n      \n      case 'CHANGE_SHOW_DELETED': {\n         return {\n            ...state, \n            showDeleted: !state.showDeleted\n         }\n      }\n\n      \n      case 'EDIT_EMPLOYEE': {\n         return {\n            ...state, \n            edit: action.employee.id,\n            first_name: action.employee.first_name || '',\n            last_name: action.employee.last_name || '',\n            email: action.employee.email || '',\n            notes: action.employee.notes || '',\n            phone: action.employee.phone || '',\n            login: action.employee.login || '',\n            role_id: action.employee.role.id,\n            role_title: action.employee.role.title || '',\n            permissions: action.employee.permissions || [],\n            inn: action.employee.inn || '',\n            doc_name: action.employee.doc_name || '',\n            post: action.employee.post || '',\n            deleted: action.employee.deleted\n         }\n      }\n\n      case 'RESET_EMPLOYEE': {\n         return {\n            ...state, \n            edit: 0,\n            first_name: '',\n            last_name: '',\n            email: '',\n            notes: '',\n            phone: '',\n            login: '',\n            password: '',\n            role_title: '',\n            role_id: 0,\n            permissions: [],\n            inn: '',\n            doc_name: '',\n            post: '',\n            deleted: false\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,\n   tabs: 1,\n\n   created_at: 0,\n   done_at: 0,\n   closed_at: 0,\n   assigned_at: 0,\n   duration: 0,\n   estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n   scheduled_for: 0,\n   warranty_date: 0, \n   status_deadline: 0,\n\n   ad_campaign_id: 1,\n   branch_id: 0,\n   status: {},\n   client: {},\n   order_type_id: 1,\n   closed_by_id: 0,\n   created_by_id: 0,\n   manager_id: 0,\n   engineer_id: 0,\n   kindof_good: {},\n   brand: {},\n   subtype: {},\n   model: {},\n\n   operations: [],\n   parts: [], \n   attachments: [], \n   payments: [],\n\n   id_label: '',\n   prefix: '',\n   serial: '',\n   malfunction: '',\n   packagelist: '',\n   appearance: '',\n   engineer_notes: '',\n   manager_notes: '',\n   resume: '',\n   cell: '', \n\n   estimated_cost: 0,\n   missed_payments: 0,\n   discount_sum: 0,\n   payed: 0,\n   price: 0,\n   remaining: 0, \n   remaining_status: 0, \n   remaining_warranty: 0, \n\n   overdue: false,\n   status_overdue: false,\n   urgent: false,\n   warranty_measures: false,\n\n   equipments: [{\n      kindof_good: {},\n      brand: {},\n      subtype: {},\n      model: {},\n      malfunction: '',\n      packagelist: '',\n      appearance: '',\n      urgent: false\n   }],\n  \n}\n\nexport const orderReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'RESET_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {}\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n      \n      case 'SET_ORDER_EQUIPMENT': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = {\n            id: action.data.id,\n            icon: action.data.icon,\n            title: action.data.title,\n            url: action.data.url\n         }\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM': {\n\n         let equipments_list = state.equipments\n         equipments_list[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'ADD_ANOTHER_EQUIPMENT': {\n\n        \n         return {\n            ...state, \n            equipments: state.equipments.concat([{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }])\n         }\n      }\n\n      \n      case 'DELETE_DEVICE': {\n\n         let equipments_list = state.equipments\n         equipments_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            equipments: equipments_list\n         }\n      }\n\n      \n      case 'CHANGE_ORDER_FORM_S': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'RESET_ORDER': {\n\n         return {\n            ...state, \n            edit: 0,\n            tabs: 1,\n\n            created_at: 0,\n            done_at: 0,\n            closed_at: 0,\n            assigned_at: 0,\n            duration: 0,\n            estimated_done_at: parseInt(Date.now() / 1000) + 4 * 24 * 3600,\n            // estimated_done_at: 0,\n            scheduled_for: 0,\n            warranty_date: 0, \n            status_deadline: 0,\n\n            ad_campaign_id: 1,\n            branch_id: 0,\n            status_id: 0,\n            client: {},\n            order_type_id: 1,\n            closed_by_id: 0,\n            created_by_id: 0,\n            manager_id: 0,\n            engineer_id: 0,\n            kindof_good:{},\n            brand: {},\n            subtype: {},\n            model: {},\n\n            operations: [],\n            parts: [],\n            attachments: [],\n            payments: [],\n\n            id_label: '',\n            prefix: '',\n            serial: '',\n            malfunction: '',\n            packagelist: '',\n            appearance: '',\n            engineer_notes: '',\n            manager_notes: '',\n            resume: '',\n            cell: '',\n\n            estimated_cost: 0,\n            missed_payments: 0,\n            discount_sum: 0,\n            payed: 0,\n            price: 0,\n            remaining: 0, \n            remaining_status: 0, \n            remaining_warranty: 0, \n\n            overdue: false,\n            status_overdue: false,\n            urgent: false,\n            warranty_measures: false,\n\n\n            equipments: [{\n               kindof_good: {},\n               brand: {},\n               subtype: {},\n               model: {},\n               malfunction: '',\n               packagelist: '',\n               appearance: '',\n               urgent: false\n            }],\n         }\n      }\n\n      \n      case 'EDIT_ORDER': {\n\n         return {\n            ...state, \n            edit: action.order.id,\n            created_at: action.order.created_at,\n            done_at: action.order.done_at,\n            closed_at: action.order.closed_at,\n            assigned_at: action.order.assigned_at,\n            duration: action.order.duration,\n            estimated_done_at: action.order.estimated_done_at,\n            scheduled_for: action.order.scheduled_for,\n            warranty_date: action.order.warranty_date, \n            status_deadline: action.order.status_deadline,\n\n            ad_campaign_id: action.order.ad_campaign.id,\n            branch_id: action.order.branch.id,\n            status: action.order.status,\n            client: action.order.client,\n            order_type_id: action.order.order_type.id,\n            closed_by_id: action.order.closed_by_id,\n            created_by_id: action.order.created_by_id,\n            manager_id: action.order.manager_id,\n            engineer_id: action.order.engineer_id,\n            kindof_good: action.order.kindof_good,\n            brand: action.order.brand,\n            subtype: action.order.subtype,\n            model: action.order.model,\n\n            operations: action.order.operations,\n            parts: action.order.parts,\n            attachments: action.order.attachments,\n            payments: action.order.payments,\n\n            id_label: action.order.id_label,\n            prefix: action.order.prefix,\n            serial: action.order.serial,\n            malfunction: action.order.malfunction,\n            packagelist: action.order.packagelist,\n            appearance: action.order.appearance,\n            engineer_notes: action.order.engineer_notes,\n            manager_notes: action.order.manager_notes,\n            resume: action.order.resume,\n            cell: action.order.cell,\n\n            estimated_cost: action.order.estimated_cost,\n            missed_payments: action.order.missed_payments,\n            discount_sum: action.order.discount_sum,\n            payed: action.order.payed,\n            price: action.order.price,\n            remaining: action.order.remaining,\n            remaining_status: action.order.remaining_status,\n            remaining_warranty: action.order.remaining_warranty,\n\n            overdue: action.order.overdue,\n            status_overdue: action.order.status_overdue,\n            urgent: action.order.urgent,\n            warranty_measures: action.order.warranty_measures\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","\n\nconst initialState = {\n   juridical: false,\n   supplier: false,\n   conflicted: false,\n   should_send_email: false,\n   deleted: false,\n\n   name: '',\n   name_doc: '',\n   email: '',\n   address: '',\n   phone: [{\n      title: 'Мобильный',\n      number: '',\n      notify: false\n   }],\n   ad_campaign_id: 1,\n   discount_code: '',\n   discount_goods: 0,\n   discount_goods_margin_id: 1,\n   discount_materials: 0,\n   discount_materials_margin_id: 1,\n   discount_services: 0,\n   discount_service_margin_id: 0,\n   notes: '',\n   tags: [],\n   \n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   discount_good_type: false,\n   discount_materials_type: false,\n   discount_service_type: false,\n\n   tabs: 0,\n   phone_titles: ['Мобильный', 'Рабочий', 'Домашний'],\n   statusPhoneList: [false],\n   statusAddTitle: [false]\n}\n\nexport const clientReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'SET_CLIENT_CHECKBOX': {\n\n         if (action.value === 'change') {\n            return {\n               ...state, \n               [action.field]: !state[action.field]\n            }\n         } else {\n            return {\n               ...state,\n            [action.field]: action.value\n            }\n         }\n      }\n\n      case 'CHANGE_CLIENT_FORM': {\n            return {\n               ...state, \n               [action.field]: action.value\n            }\n      }\n      \n      case 'CHANGE_CLIENT_EDITOR_PHONE': {\n\n      let phones = state.phone\n      phones[action.idx].number = action.value\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n   \n   case 'ADD_PHONE_COUNTER': {\n\n         return {\n            ...state, \n            phone: state.phone.concat([{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }]),\n            statusPhoneList: state.statusPhoneList.concat([false])\n         }\n      }\n   \n   case 'DELETE_COUNT_NUMBER': {\n\n      let phones = state.phone\n      phones.splice(action.idx, 1)\n      const statusPhones = state.statusPhoneList\n      statusPhones.splice(action.idx, 1)\n\n         return {\n            ...state, \n            phone: phones,\n            statusPhoneList: statusPhones\n         }\n      }\n      \n      \n   case 'SET_PHONE_NOTIFY': {\n\n      let phones = state.phone\n      phones[action.idx].notify = !phones[action.idx].notify\n\n         return {\n            ...state, \n            phone: phones\n         }\n      }\n\n      \n      case 'SET_PHONE_TITLE': {\n\n         let phones = state.phone\n         phones[action.idx].title = action.title\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n   \n            return {\n               ...state, \n               phone: phones,\n               statusPhoneList: statusPhones\n            }\n         }\n\n      case 'CHANGE_STATUS_PHONE_LIST': {\n\n         const statusPhones = state.statusPhoneList\n         statusPhones[action.idx] = !statusPhones[action.idx]\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = false\n\n         return {\n            ...state, \n            statusPhoneList: statusPhones,\n            statusAddTitle: statusTitle\n         }\n      }\n\n      \n      case 'CHANGE_STATUS_ADD_TITLE': {\n\n         const statusTitle = state.statusAddTitle\n         statusTitle[action.idx] = !statusTitle[action.idx]\n\n         return {\n            ...state, \n            statusAddTitle: statusTitle\n         }\n      }\n\n      case 'SET_AD_CANMPAIGN_CLIENT': {\n\n         return {\n            ...state, \n            ad_campaign_id: action.id\n         }\n      }\n      \n      case 'ADD_CLIENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_CLIENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      case 'RESET_DATA_CLIENT': {\n         return {\n            ...state,\n            juridical: false,\n            supplier: false,\n            conflicted: false,\n            should_send_email: false,\n            deleted: false,\n\n            name: '',\n            name_doc: '',\n            email: '',\n            address: '',\n            phone: [{\n               title: 'Мобильный',\n               number: '',\n               notify: false\n            }],\n            ad_campaign_id: 1,\n            discount_code: '',\n            discount_goods: 0,\n            discount_goods_margin_id: 1,\n            discount_materials: 0,\n            discount_materials_margin_id: 1,\n            discount_services: 0,\n            discount_service_margin_id: 0,\n            notes: '',\n            tags: [],\n            \n            ogrn: '',\n            inn: '',\n            kpp: '',\n            juridical_address: '',\n            director: '',\n            bank_name: '',\n            settlement_account: '',\n            corr_account: '',\n            bic: '',\n\n            discount_good_type: false,\n            discount_materials_type: false,\n            discount_service_type: false,\n\n            edit: 0,\n            tabs: 0,\n            statusPhoneList: [false],\n            statusAddTitle: [false]\n\n         }\n      }\n\n      case 'CHANGE_CLIENT_TABS': {\n\n         return {\n            ...state, \n            tabs: action.tab\n         }\n      }\n\n      \n      case 'EDIT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id\n         }\n      }\n\n      \n      case 'EDIT_CURRENT_CLIENT': {\n         return {\n            ...state,\n            juridical: action.client.juridical,\n            supplier: action.client.supplier,\n            conflicted: action.client.conflicted,\n            should_send_email: action.client.should_send_email,\n            deleted: action.client.deleted,\n\n            name: action.client.name,\n            name_doc: action.client.name_doc,\n            email: action.client.email,\n            address: action.client.address,\n            phone: action.client.phone,\n            ad_campaign_id: action.client.ad_campaign_id,\n            discount_code: action.client.discount_code,\n            discount_goods: action.client.discount_goods,\n            discount_goods_margin_id: action.client.discount_goods_margin_id,\n            discount_materials: action.client.discount_materials,\n            discount_materials_margin_id: action.client.discount_materials_margin_id,\n            discount_services: action.client.discount_services,\n            discount_service_margin_id: action.client.discount_service_margin_id,\n            notes: action.client.notes,\n            tags: action.client.tags,\n            \n            ogrn: action.client.ogrn,\n            inn: action.client.inn,\n            kpp: action.client.kpp,\n            juridical_address: action.client.juridical_address,\n            director: action.client.director,\n            bank_name: action.client.bank_name,\n            settlement_account: action.client.settlement_account,\n            corr_account: action.client.corr_account,\n            bic: action.client.bic,\n\n            discount_good_type: action.client.discount_good_type,\n            discount_materials_type: action.client.discount_materials_type,\n            discount_service_type: action.client.discount_service_type,\n\n            edit: action.client.id,\n            tabs: 1\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n   name: '',\n   address: '',\n   email: '',\n\n   ogrn: '',\n   inn: '',\n   kpp: '',\n   juridical_address: '',\n   director: '',\n   bank_name: '',\n   settlement_account: '',\n   corr_account: '',\n   bic: '',\n\n   description: '',\n   phone: '',\n   logo: ''\n\n}\n\nexport const maindataReducer = (state = initialState, action) => {\n   switch (action.type){\n\n\n      case 'CHANGE_MAINDATA_FORM': {\n\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n\n      case 'ADD_GENERALLY_INFO': {\n\n         return {\n            ...state, \n            name: action.data.name,\n            address: action.data.address,\n            email: action.data.email,\n         \n            ogrn: action.data.ogrn,\n            inn: action.data.inn,\n            kpp: action.data.kpp,\n            juridical_address: action.data.juridical_address,\n            director: action.data.director,\n            bank_name: action.data.bank_name,\n            settlement_account: action.data.settlement_account,\n            corr_account: action.data.corr_account,\n            bic: action.data.bic,\n         \n            description: action.data.description,\n            phone: action.data.phone,\n            logo: action.data.logo\n         }\n      }\n\n      \n      default: return state\n   }\n   \n}\n","export const icon_trush = 'M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z'\n\nexport const icon_close = 'M2.93 17.070c-1.884-1.821-3.053-4.37-3.053-7.193 0-5.523 4.477-10 10-10 2.823 0 5.372 1.169 7.19 3.050l0.003 0.003c1.737 1.796 2.807 4.247 2.807 6.947 0 5.523-4.477 10-10 10-2.7 0-5.151-1.070-6.95-2.81l0.003 0.003zM11.4 10l2.83-2.83-1.41-1.41-2.82 2.83-2.83-2.83-1.41 1.41 2.83 2.83-2.83 2.83 1.41 1.41 2.83-2.83 2.83 2.83 1.41-1.41-2.83-2.83z'\n\nexport const icon_house = 'M32 18.451l-16-12.42-16 12.42v-5.064l16-12.42 16 12.42zM28 18v12h-8v-8h-8v8h-8v-12l12-9z'\n\nexport const icon_location = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 28c-6.627 0-12-5.373-12-12s5.373-12 12-12c6.627 0 12 5.373 12 12s-5.373 12-12 12zM10 16c0-3.314 2.686-6 6-6s6 2.686 6 6c0 3.314-2.686 6-6 6s-6-2.686-6-6z'\n\nexport const icon_map_location = 'M16 0c-5.523 0-10 4.477-10 10 0 10 10 22 10 22s10-12 10-22c0-5.523-4.477-10-10-10zM16 16.125c-3.383 0-6.125-2.742-6.125-6.125s2.742-6.125 6.125-6.125 6.125 2.742 6.125 6.125-2.742 6.125-6.125 6.125zM12.125 10c0-2.14 1.735-3.875 3.875-3.875s3.875 1.735 3.875 3.875c0 2.14-1.735 3.875-3.875 3.875s-3.875-1.735-3.875-3.875z'\n\nexport const icon_wrench = 'M31.342 25.559l-14.392-12.336c0.67-1.259 1.051-2.696 1.051-4.222 0-4.971-4.029-9-9-9-0.909 0-1.787 0.135-2.614 0.386l5.2 5.2c0.778 0.778 0.778 2.051 0 2.828l-3.172 3.172c-0.778 0.778-2.051 0.778-2.828 0l-5.2-5.2c-0.251 0.827-0.386 1.705-0.386 2.614 0 4.971 4.029 9 9 9 1.526 0 2.963-0.38 4.222-1.051l12.336 14.392c0.716 0.835 1.938 0.882 2.716 0.104l3.172-3.172c0.778-0.778 0.731-2-0.104-2.716z'\n\nexport const icon_hammer = 'M31.562 25.905l-9.423-9.423c-0.583-0.583-1.538-0.583-2.121 0l-0.707 0.707-5.75-5.75 9.439-9.439h-10l-4.439 4.439-0.439-0.439h-2.121v2.121l0.439 0.439-6.439 6.439 5 5 6.439-6.439 5.75 5.75-0.707 0.707c-0.583 0.583-0.583 1.538 0 2.121l9.423 9.423c0.583 0.583 1.538 0.583 2.121 0l3.535-3.535c0.583-0.583 0.583-1.538 0-2.121z'\n\nexport const icon_radio = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 20c-2.209 0-4-1.791-4-4s1.791-4 4-4c2.209 0 4 1.791 4 4s-1.791 4-4 4z'\n\nexport const icon_git = 'M31.397 14.575l-13.972-13.971c-0.804-0.805-2.109-0.805-2.915 0l-3.246 3.246 2.443 2.443c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3 0 0.463-0.105 0.902-0.293 1.293l3.999 3.999c0.392-0.187 0.83-0.293 1.293-0.293 1.657 0 3 1.343 3 3s-1.343 3-3 3-3-1.343-3-3c0-0.463 0.105-0.902 0.293-1.293l-3.999-3.999c-0.095 0.046-0.193 0.086-0.293 0.121v8.343c1.165 0.412 2 1.522 2 2.829 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-1.306 0.835-2.417 2-2.829v-8.343c-1.165-0.412-2-1.522-2-2.829 0-0.463 0.105-0.902 0.293-1.293l-2.443-2.443-9.247 9.246c-0.805 0.806-0.805 2.11 0 2.915l13.973 13.971c0.804 0.805 2.109 0.805 2.915 0l13.906-13.906c0.805-0.805 0.805-2.111-0-2.915z'\n\nexport const icon_svg = 'M29 13c-0.888 0-1.686 0.386-2.236 1h-5.936l4.197-4.197c0.822 0.046 1.66-0.245 2.288-0.874 1.172-1.172 1.172-3.071 0-4.243s-3.071-1.172-4.243 0c-0.628 0.628-0.919 1.466-0.874 2.288l-4.197 4.197v-5.936c0.614-0.549 1-1.347 1-2.236 0-1.657-1.343-3-3-3s-3 1.343-3 3c0 0.888 0.386 1.686 1 2.236v5.936l-4.197-4.197c0.045-0.822-0.245-1.66-0.874-2.288-1.172-1.172-3.071-1.172-4.243 0s-1.172 3.071 0 4.243c0.628 0.628 1.466 0.919 2.288 0.874l4.197 4.197h-5.936c-0.549-0.614-1.347-1-2.236-1-1.657 0-3 1.343-3 3s1.343 3 3 3c0.888 0 1.686-0.386 2.236-1h5.936l-4.197 4.197c-0.822-0.046-1.66 0.245-2.288 0.874-1.172 1.172-1.172 3.071 0 4.243s3.071 1.172 4.243 0c0.628-0.628 0.919-1.466 0.874-2.288l4.197-4.197v5.936c-0.614 0.549-1 1.347-1 2.235 0 1.657 1.343 3 3 3s3-1.343 3-3c0-0.888-0.386-1.686-1-2.236v-5.936l4.197 4.197c-0.046 0.822 0.245 1.66 0.874 2.288 1.172 1.172 3.071 1.172 4.243 0s1.172-3.071 0-4.243c-0.628-0.628-1.466-0.919-2.288-0.874l-4.197-4.197h5.936c0.549 0.614 1.347 1 2.235 1 1.657 0 3-1.343 3-3s-1.343-3-3-3z'\n\nexport const icon_spinner = 'M32 12h-12l4.485-4.485c-2.267-2.266-5.28-3.515-8.485-3.515s-6.219 1.248-8.485 3.515c-2.266 2.267-3.515 5.28-3.515 8.485s1.248 6.219 3.515 8.485c2.267 2.266 5.28 3.515 8.485 3.515s6.219-1.248 8.485-3.515c0.189-0.189 0.371-0.384 0.546-0.583l3.010 2.634c-2.933 3.349-7.239 5.464-12.041 5.464-8.837 0-16-7.163-16-16s7.163-16 16-16c4.418 0 8.418 1.791 11.313 4.687l4.687-4.687v12z'\n\nexport const icon_warning = 'M16 2.899l13.409 26.726h-26.819l13.409-26.726zM16 0c-0.69 0-1.379 0.465-1.903 1.395l-13.659 27.222c-1.046 1.86-0.156 3.383 1.978 3.383h27.166c2.134 0 3.025-1.522 1.978-3.383h0l-13.659-27.222c-0.523-0.93-1.213-1.395-1.903-1.395v0z M18 26c0 1.105-0.895 2-2 2s-2-0.895-2-2c0-1.105 0.895-2 2-2s2 0.895 2 2z M16 22c-1.105 0-2-0.895-2-2v-6c0-1.105 0.895-2 2-2s2 0.895 2 2v6c0 1.105-0.895 2-2 2z'\n\nexport const icone_sphere = 'M15 2c-8.284 0-15 6.716-15 15s6.716 15 15 15c8.284 0 15-6.716 15-15s-6.716-15-15-15zM23.487 22c0.268-1.264 0.437-2.606 0.492-4h3.983c-0.104 1.381-0.426 2.722-0.959 4h-3.516zM6.513 12c-0.268 1.264-0.437 2.606-0.492 4h-3.983c0.104-1.381 0.426-2.722 0.959-4h3.516zM21.439 12c0.3 1.28 0.481 2.62 0.54 4h-5.979v-4h5.439zM16 10v-5.854c0.456 0.133 0.908 0.355 1.351 0.668 0.831 0.586 1.625 1.488 2.298 2.609 0.465 0.775 0.867 1.638 1.203 2.578h-4.852zM10.351 7.422c0.673-1.121 1.467-2.023 2.298-2.609 0.443-0.313 0.895-0.535 1.351-0.668v5.854h-4.852c0.336-0.94 0.738-1.803 1.203-2.578zM14 12v4h-5.979c0.059-1.38 0.24-2.72 0.54-4h5.439zM2.997 22c-0.533-1.278-0.854-2.619-0.959-4h3.983c0.055 1.394 0.224 2.736 0.492 4h-3.516zM8.021 18h5.979v4h-5.439c-0.3-1.28-0.481-2.62-0.54-4zM14 24v5.854c-0.456-0.133-0.908-0.355-1.351-0.668-0.831-0.586-1.625-1.488-2.298-2.609-0.465-0.775-0.867-1.638-1.203-2.578h4.852zM19.649 26.578c-0.673 1.121-1.467 2.023-2.298 2.609-0.443 0.312-0.895 0.535-1.351 0.668v-5.854h4.852c-0.336 0.94-0.738 1.802-1.203 2.578zM16 22v-4h5.979c-0.059 1.38-0.24 2.72-0.54 4h-5.439zM23.98 16c-0.055-1.394-0.224-2.736-0.492-4h3.516c0.533 1.278 0.855 2.619 0.959 4h-3.983zM25.958 10h-2.997c-0.582-1.836-1.387-3.447-2.354-4.732 1.329 0.636 2.533 1.488 3.585 2.54 0.671 0.671 1.261 1.404 1.766 2.192zM5.808 7.808c1.052-1.052 2.256-1.904 3.585-2.54-0.967 1.285-1.771 2.896-2.354 4.732h-2.997c0.504-0.788 1.094-1.521 1.766-2.192zM4.042 24h2.997c0.583 1.836 1.387 3.447 2.354 4.732-1.329-0.636-2.533-1.488-3.585-2.54-0.671-0.671-1.261-1.404-1.766-2.192zM24.192 26.192c-1.052 1.052-2.256 1.904-3.585 2.54 0.967-1.285 1.771-2.896 2.354-4.732h2.997c-0.504 0.788-1.094 1.521-1.766 2.192z'\n\nexport const icone_setting = 'M29.181 19.070c-1.679-2.908-0.669-6.634 2.255-8.328l-3.145-5.447c-0.898 0.527-1.943 0.829-3.058 0.829-3.361 0-6.085-2.742-6.085-6.125h-6.289c0.008 1.044-0.252 2.103-0.811 3.070-1.679 2.908-5.411 3.897-8.339 2.211l-3.144 5.447c0.905 0.515 1.689 1.268 2.246 2.234 1.676 2.903 0.672 6.623-2.241 8.319l3.145 5.447c0.895-0.522 1.935-0.82 3.044-0.82 3.35 0 6.067 2.725 6.084 6.092h6.289c-0.003-1.034 0.259-2.080 0.811-3.038 1.676-2.903 5.399-3.894 8.325-2.219l3.145-5.447c-0.899-0.515-1.678-1.266-2.232-2.226zM16 22.479c-3.578 0-6.479-2.901-6.479-6.479s2.901-6.479 6.479-6.479c3.578 0 6.479 2.901 6.479 6.479s-2.901 6.479-6.479 6.479z'\n\nexport const icon_stats_docs = 'M4 28h28v4h-32v-32h4zM9 26c-1.657 0-3-1.343-3-3s1.343-3 3-3c0.088 0 0.176 0.005 0.262 0.012l3.225-5.375c-0.307-0.471-0.487-1.033-0.487-1.638 0-1.657 1.343-3 3-3s3 1.343 3 3c0 0.604-0.179 1.167-0.487 1.638l3.225 5.375c0.086-0.007 0.174-0.012 0.262-0.012 0.067 0 0.133 0.003 0.198 0.007l5.324-9.316c-0.329-0.482-0.522-1.064-0.522-1.691 0-1.657 1.343-3 3-3s3 1.343 3 3c0 1.657-1.343 3-3 3-0.067 0-0.133-0.003-0.198-0.007l-5.324 9.316c0.329 0.481 0.522 1.064 0.522 1.691 0 1.657-1.343 3-3 3s-3-1.343-3-3c0-0.604 0.179-1.167 0.487-1.638l-3.225-5.375c-0.086 0.007-0.174 0.012-0.262 0.012s-0.176-0.005-0.262-0.012l-3.225 5.375c0.307 0.471 0.487 1.033 0.487 1.637 0 1.657-1.343 3-3 3z'\n\nexport const icon_file_text = 'M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z'\n\nexport const icon_burn = 'M10.031 32c-2.133-4.438-0.997-6.981 0.642-9.376 1.795-2.624 2.258-5.221 2.258-5.221s1.411 1.834 0.847 4.703c2.493-2.775 2.963-7.196 2.587-8.889 5.635 3.938 8.043 12.464 4.798 18.783 17.262-9.767 4.294-24.38 2.036-26.027 0.753 1.646 0.895 4.433-0.625 5.785-2.573-9.759-8.937-11.759-8.937-11.759 0.753 5.033-2.728 10.536-6.084 14.648-0.118-2.007-0.243-3.392-1.298-5.312-0.237 3.646-3.023 6.617-3.777 10.27-1.022 4.946 0.765 8.568 7.555 12.394z'\n\nexport const icon_clock = 'M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM20.586 23.414l-6.586-6.586v-8.828h4v7.172l5.414 5.414-2.829 2.829z'\n\nexport const icon_table = 'M0 2v28h32v-28h-32zM12 20v-6h8v6h-8zM20 22v6h-8v-6h8zM20 6v6h-8v-6h8zM10 6v6h-8v-6h8zM2 14h8v6h-8v-6zM22 14h8v6h-8v-6zM22 12v-6h8v6h-8zM2 22h8v6h-8v-6zM22 28v-6h8v6h-8z'\n\nexport const icon_briefcase = 'M30 8h-8v-2c0-1.1-0.9-2-2-2h-8c-1.1 0-2 0.9-2 2v2h-8c-1.1 0-2 0.9-2 2v18c0 1.1 0.9 2 2 2h28c1.1 0 2-0.9 2-2v-18c0-1.1-0.9-2-2-2zM12 6.004c0.001-0.001 0.002-0.003 0.004-0.004h7.993c0.001 0.001 0.003 0.002 0.004 0.004v1.996h-8v-1.996zM30 16h-4v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-12v3c0 0.55-0.45 1-1 1h-2c-0.55 0-1-0.45-1-1v-3h-4v-2h28v2z'\n\nexport const icon_bug = 'M32 18v-2h-6.040c-0.183-2.271-0.993-4.345-2.24-6.008h5.061l2.189-8.758-1.94-0.485-1.811 7.242h-5.459c-0.028-0.022-0.056-0.043-0.084-0.064 0.21-0.609 0.324-1.263 0.324-1.944 0-3.305-2.686-5.984-6-5.984s-6 2.679-6 5.984c0 0.68 0.114 1.334 0.324 1.944-0.028 0.021-0.056 0.043-0.084 0.064h-5.459l-1.811-7.242-1.94 0.485 2.189 8.758h5.061c-1.246 1.663-2.056 3.736-2.24 6.008h-6.040v2h6.043c0.119 1.427 0.485 2.775 1.051 3.992h-3.875l-2.189 8.757 1.94 0.485 1.811-7.243h3.511c1.834 2.439 4.606 3.992 7.708 3.992s5.874-1.554 7.708-3.992h3.511l1.811 7.243 1.94-0.485-2.189-8.757h-3.875c0.567-1.217 0.932-2.565 1.051-3.992h6.043z'\n\nexport const icon_make_group = 'M10 4h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M22 12h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2zM22 6h4v4h-4v-4z M10 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2zM10 26h-4v-4h4v4z M26 20h-4c-1.1 0-2 0.9-2 2v4c0 1.1 0.9 2 2 2h4c1.1 0 2-0.9 2-2v-4c0-1.1-0.9-2-2-2z M28 16h-2c-2.671 0-5.182-1.040-7.071-2.929s-2.929-4.4-2.929-7.071v-2c0-2.2-1.8-4-4-4h-8c-2.2 0-4 1.8-4 4v8c0 2.2 1.8 4 4 4h2c2.671 0 5.182 1.040 7.071 2.929s2.929 4.4 2.929 7.071v2c0 2.2 1.8 4 4 4h8c2.2 0 4-1.8 4-4v-8c0-2.2-1.8-4-4-4zM30 28c0 0.53-0.209 1.031-0.589 1.411s-0.881 0.589-1.411 0.589h-8c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-2c0-6.627-5.373-12-12-12h-2c-0.53 0-1.031-0.209-1.411-0.589s-0.589-0.881-0.589-1.411v-8c0-0.53 0.209-1.031 0.589-1.411s0.881-0.589 1.411-0.589h8c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v2c0 6.627 5.373 12 12 12h2c0.53 0 1.031 0.209 1.411 0.589s0.589 0.881 0.589 1.411v8z'\n\nexport const icon_pencil = 'M27 0c2.761 0 5 2.239 5 5 0 1.126-0.372 2.164-1 3l-2 2-7-7 2-2c0.836-0.628 1.874-1 3-1zM2 23l-2 9 9-2 18.5-18.5-7-7-18.5 18.5zM22.362 11.362l-14 14-1.724-1.724 14-14 1.724 1.724z'\n\nexport const icon_search = 'M31.008 27.231l-7.58-6.447c-0.784-0.705-1.622-1.029-2.299-0.998 1.789-2.096 2.87-4.815 2.87-7.787 0-6.627-5.373-12-12-12s-12 5.373-12 12 5.373 12 12 12c2.972 0 5.691-1.081 7.787-2.87-0.031 0.677 0.293 1.515 0.998 2.299l6.447 7.58c1.104 1.226 2.907 1.33 4.007 0.23s0.997-2.903-0.23-4.007zM12 20c-4.418 0-8-3.582-8-8s3.582-8 8-8 8 3.582 8 8-3.582 8-8 8z'\n\nexport const icon_calendar = 'M10 12h4v4h-4zM16 12h4v4h-4zM22 12h4v4h-4zM4 24h4v4h-4zM10 24h4v4h-4zM16 24h4v4h-4zM10 18h4v4h-4zM16 18h4v4h-4zM22 18h4v4h-4zM4 18h4v4h-4zM26 0v2h-4v-2h-14v2h-4v-2h-4v32h30v-32h-4zM28 30h-26v-22h26v22z'\n\nexport const icon_up = 'M22.086 20.914l2.829-2.829-8.914-8.914-8.914 8.914 2.828 2.828 6.086-6.086z'\n\nexport const icon_right = 'M11.086 22.086l2.829 2.829 8.914-8.914-8.914-8.914-2.828 2.828 6.086 6.086z'\n\nexport const icon_left = 'M20.914 9.914l-2.829-2.829-8.914 8.914 8.914 8.914 2.828-2.828-6.086-6.086z'\n\nexport const icon_down = 'M9.914 11.086l-2.829 2.829 8.914 8.914 8.914-8.914-2.828-2.828-6.086 6.086z'\n\nexport const icon_barcode = 'M0 4h4v20h-4zM6 4h2v20h-2zM10 4h2v20h-2zM16 4h2v20h-2zM24 4h2v20h-2zM30 4h2v20h-2zM20 4h1v20h-1zM14 4h1v20h-1zM27 4h1v20h-1zM0 26h2v2h-2zM6 26h2v2h-2zM10 26h2v2h-2zM20 26h2v2h-2zM30 26h2v2h-2zM24 26h4v2h-4zM14 26h4v2h-4z'\n\nexport const icon_print = 'M8 2h16v4h-16v-4z M30 8h-28c-1.1 0-2 0.9-2 2v10c0 1.1 0.9 2 2 2h6v8h16v-8h6c1.1 0 2-0.9 2-2v-10c0-1.1-0.9-2-2-2zM4 14c-1.105 0-2-0.895-2-2s0.895-2 2-2 2 0.895 2 2-0.895 2-2 2zM22 28h-12v-10h12v10z'\n","import { icon_location } from \"../../data/icons\"\n\nconst initialState = {\n   name: '',\n   address: '',\n   phone: '',\n   color: 'grey',\n   icon: icon_location,\n   orders_type_id: 1,\n   orders_type_strategy: 'last',\n   orders_prefix: 'OTS',\n   documents_prefix: 'A',\n   employees: [],\n   deleted: false,\n   schedule: [\n      {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 1\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 2\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 3\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 4\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: true,\n         week_day: 5\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 6\n      }, {\n         start_time: '9:00',\n         end_time: '18:00',\n         work_day: false,\n         week_day: 7\n      },\n   ],\n\n   edit: 0,\n   showDeleted: false\n}\n\nexport const branchReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BRANCH_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHANGE_SCHEDULE': {\n\n         let list_schedule = state.schedule\n         list_schedule[action.idx][action.field] = action.value\n\n         return {\n            ...state, \n            schedule: list_schedule\n         }\n      }\n      \n      case 'SET_BRANCH_EMPLOYEE': {\n         if (action.id.every(id => state.employees.includes(id))) {\n            return {\n               ...state, \n               employees: state.employees.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               employees: state.employees.concat(action.id.filter(id => !state.employees.includes(id))),\n            }\n         }\n      }\n\n      case 'RESET_BRANCH': {\n\n         return {\n            ...state, \n            name: '',\n            address: '',\n            phone: '',\n            color: 'grey',\n            icon: icon_location,\n            orders_type_id: 1,\n            orders_type_strategy: 'last',\n            orders_prefix: 'OTS',\n            documents_prefix: 'A',\n            employees: [],\n            deleted: false,\n            schedule: [\n               {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 1\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 2\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 3\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 4\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: true,\n                  week_day: 5\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 6\n               }, {\n                  start_time: '9:00',\n                  end_time: '18:00',\n                  work_day: false,\n                  week_day: 7\n               },\n            ],\n\n            edit: 0\n         }\n      }\n\n      \n      case 'EDIT_BRANCH': {\n\n         return {\n            ...state, \n            name: action.branch.name,\n            address: action.branch.address,\n            phone: action.branch.phone,\n            color: action.branch.color,\n            icon: action.branch.icon,\n            orders_type_id: action.branch.orders_type_id,\n            orders_type_strategy: action.branch.orders_type_strategy,\n            orders_prefix: action.branch.orders_prefix,\n            documents_prefix: action.branch.documents_prefix,\n            employees: action.branch.employees,\n            deleted: action.branch.deleted,\n            schedule: action.branch.schedule,\n\n            edit: action.branch.id\n         }\n      }\n      \n      \n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   equipment_types: [],\n   equipment_type_count: 0,\n   equipment_brands: [],\n   equipment_brand_count: 0,\n   equipment_subtypes: [],\n   equipment_subtype_count: 0,\n   equipment_models: [],\n   equipment_models_count: 0,\n\n   tabs: 0,\n\n   equipment_type: {},\n   equipment_brand: {},\n   equipment_subtype: {},\n   equipment_model: {},\n\n   title: '',\n   icon: '',\n   url: '',\n   parent_id: 0,\n   branches: [],\n   deleted: false,\n   img: '',\n\n   direction: 0,\n\n   type: 0,\n   edit: 0,\n   choose_list: [],\n   \n   page_malfunction: 0,\n   selected_malfunction: [],\n   page_packagelist: 0,\n   selected_packagelist: [],\n   page_item_payments: 0,\n   selected_item_payments: [],\n\n   filter_type: '',\n   filter_brand: '',\n   filter_subtype: '',\n   filter_model: '',\n\n   page_type: 1,\n   page_brand: 1,\n   page_subtype: 1,\n   page_model: 1,\n\n   showDeleted: false,\n\n   list_for_join: []\n}\n\nexport const bookReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_BOOK_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n\n      case 'CHOOSE_EQUIPMENT_BRANCHES': {\n         if (action.id.every(id => state.branches.includes(id))) {\n            return {\n               ...state, \n               branches: state.branches.filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               branches: state.branches.concat(action.id.filter(id => !state.branches.includes(id))),\n            }\n         }\n      }\n\n      \n      case 'EDIT_EQUIPMENT': {\n         return {\n            ...state, \n            title: action.equipment.title,\n            icon: action.equipment.icon,\n            url: action.equipment.url,\n            parent_id: action.equipment.parent_id,\n            branches: action.equipment.branches ? action.equipment.branches : [],\n            edit: action.equipment.id,\n            deleted: action.equipment.deleted\n         }\n      }\n\n      case 'RESET_BOOK_EQUIPMENT': {\n         return {\n            ...state, \n            title: '',\n            icon: '',\n            url: '',\n            parent_id: 0,\n            branches: [],\n            deleted: false,\n            img: '',\n            edit: 0,\n            page_malfunction: 0,\n            selected_malfunction: [],\n            page_packagelist: 0,\n            selected_packagelist: [],\n            page_item_payments: 0,\n            selected_item_payments: [],\n\n            filter_type: '',\n            filter_brand: '',\n            filter_subtype: '',\n            filter_model: '',\n\n            page_type: 1,\n            page_brand: 1,\n            page_subtype: 1,\n            page_model: 1,\n\n            showDeleted: false,\n\n            list_for_join: []\n         }\n      }\n\n      case 'CHOOSE_BOOK_SELECTED': {\n         if (action.value.every(value => state[action.field].includes(value))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(value => !action.value.includes(value)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(value => !state[action.field].includes(value))),\n            }\n         }\n      }\n\n      \n      \n      default: return state\n   }\n   \n}\n","import {permission_cahsbox} from \"../../data/permissions\";\n\n\nconst initialState = {\n   tabs: 0,\n   edit: 0,\n   tabs_editor: 0,\n\n   title: '',\n   balance: 0,\n   type: 0,\n   isGlobal: false,\n   isVirtual: false,\n   deleted: false,\n   permissions: permission_cahsbox,\n   employees: {},\n   branch_id: 0,\n\n   permissions_employee: 0, // id сотрудника, права которого редактируются в данный момент\n   current_cashbox: {} // активная касса\n}\n\nexport const cashboxReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_CASHBOX_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_CASHBOX_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n      \n      case 'RESET_CASHBOX': {\n         return {\n            ...state, \n            title: '',\n            balance: 0,\n            type: 0,\n            isGlobal: false,\n            isVirtual: false,\n            deleted: false,\n            permissions: permission_cahsbox,\n            employees: [],\n            branch_id: 0,\n            permissions_employee: 0 // id сотрудника, права которого редактируются в данный момент\n         }\n      }\n\n      \n      case 'CHANGE_CASHBOX_PERMISSION': {\n\n         // Вытаскиваем данные о разрешениях сотрудников из state\n         let employees = state.employees\n         // Данные имеют следующий json формат\n         // const employees = {\n         //    employee_id1: {\n         //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n         //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n         //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n         //    },\n         //    emoloyee_id2: {...}\n         // }\n         // Если запись данных идет в поле permissions (список персональных разрешений)\n         if (action.field === 'permissions') {\n            // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n            if (employees[state.permissions_employee].permissions.includes(action.value)) {\n               // Удаляем значение value из списка специальных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n            // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n            } else {\n               // Добавляем значение value в список персональных разрешений текущего сотрудника\n               employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n            }\n         // Если запись идет не в поле permissions текущего сотрудника\n         } else {\n            // Меняем значение этого поля на значение в value\n            employees[state.permissions_employee][[action.field]] = action.value\n         }\n         // Возвращаем изменненый state\n         return {\n            ...state, \n            employees: employees\n         }\n         \n      }\n      \n      case 'EDIT_CASHBOX': {\n         return {\n            ...state, \n            edit: action.cashbox.id,\n            title: action.cashbox.title,\n            balance: action.cashbox.balance,\n            type: action.cashbox.type,\n            isGlobal: action.cashbox.isGlobal,\n            isVirtual: action.cashbox.isVirtual,\n            deleted: action.cashbox.deleted,\n            permissions: action.cashbox.permissions,\n            employees: action.cashbox.employees,\n            branch_id: action.cashbox.branch_id,\n            permissions_employee: action.cashbox.permissions_employee\n         }\n      }\n\n      default: return state\n   }\n   \n}\n","\nconst initialState = {\n   edit: 0,\n   sum: 0,\n   title: '',\n\n   cashflow_category: '',\n   description: '',\n\n   deposit: 0,\n   income: 0,\n   outcome: 0,\n   direction: 0,\n\n   can_print_fiscal: false,\n   deleted: false,\n   is_fiscal: false,\n\n   created_at: 0,\n   custom_created_at: 0,\n\n   tags: [],\n\n   relation_id: null,\n   cashbox_id: 0,\n   client_id: 0,\n   employee_id: 0,\n   order_id: 0,\n   target_cashbox_id: 0,\n\n   cashbox: {},\n   client: {},\n   employee: {},\n   order: {},\n\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n   filter_tags: [],\n\n   current_type: 0,\n   context: {}\n}\n\nexport const paymentReducer = (state = initialState, action) => {\n   switch (action.type){\n\n      case 'CHANGE_PAYMENT_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value,\n         }\n      }\n\n      case 'CHOOSE_PAYMENT_SELECTED': {\n         if (action.id.every(id => state[action.field].includes(id))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(id => !action.id.includes(id)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.id.filter(id => !state[action.field].includes(id))),\n            }\n         }\n      }\n\n      case 'ADD_PAYMENT_TAG': {\n\n         return {\n            ...state, \n            tags: state.tags.concat([action.tag])\n         }\n      }\n      \n      case 'DELETE_PAYMENT_TAG': {\n\n         let tags_list = state.tags\n         tags_list.splice(action.idx, 1)\n\n         return {\n            ...state, \n            tags: tags_list\n         }\n      }\n\n      \n      case 'RESET_PAYMENTS': {\n\n         return {\n            ...state, \n            edit: 0,\n            sum: 0,\n            title: '',\n\n            cashflow_category: '',\n            description: '',\n\n            deposit: 0,\n            income: 0,\n            outcome: 0,\n            direction: 0,\n\n            can_print_fiscal: true,\n            deleted: false,\n            is_fiscal: false,\n\n            created_at: 0,\n            custom_created_at: 0,\n\n            tags: [],\n\n            cashbox_id: 0,\n            client_id: 0,\n            employee_id: 0,\n            order_id: 0,\n            target_cashbox_id: 0,\n\n            context: {}\n         }\n      }\n      \n      case 'SET_PAYMENT': {\n\n         return {\n            ...state, \n            edit: action.payment.id,\n\n            cashflow_category: action.payment.cashflow_category,\n            description: action.payment.description,\n\n            deposit: action.payment.deposit,\n            income: action.payment.income,\n            outcome: action.payment.outcome,\n            direction: action.payment.direction,\n\n            can_print_fiscal: action.payment.can_print_fiscal,\n            deleted: action.payment.deleted,\n            is_fiscal: action.payment.is_fiscal,\n\n            created_at: action.payment.created_at,\n            custom_created_at: action.payment.custom_created_at,\n\n            tags: action.payment.tags,\n\n            cashbox: action.payment.cashbox,\n            client: action.payment.client,\n            employee: action.payment.employee,\n            order: action.payment.order,\n            target_cashbox_id: action.payment.target_cashbox_id,\n         }\n      }\n      \n      \n\n      \n      \n      default: return state\n   }\n   \n}\n","const initialState = {\n\n   edit: 0,          // id при редактировании\n\n   title: '',        // Описание\n   type_rule: 4,     // Тип начисления\n   order_type: 1,    // Тип заказа\n   method: 0,        // Начисления (0 - проценты, 1 - руб)\n   coefficient: 1,   // Коэффициет при начаслении за работы или запчасти\n   count_coeff: [{   // Условия начисления\n      cost: 0,\n      coef: 0\n   }],\n   fix_salary: 0,    // Оклад\n   deleted: false,   // Удален\n   employee_id: 0,   // Сотрудник\n   check_status: 0,  // 4 - по статусе Готов, 6 - по статусу Закрыт\n\n   // Список правил\n   list_type_rule: [\n      {\n         id: 1,\n         title: 'За создание заказа'\n      },{\n         id: 2,\n         title: 'За закрытие заказа'\n      },{\n         id: 3,\n         title: 'Менеджеру за обработку заказа'\n      },{\n         id: 4,\n         title: 'Исполнителю за работы/услуги'\n      },{\n         id: 5,\n         title: 'Исполнителю за материалы'\n      },{\n         id: 6,\n         title: 'За продажи'\n      },{\n         id: 7,\n         title: 'За рабочие дни'\n      },{\n         id: 8,\n         title: 'За рабочие месяцы'\n      }\n   ],\n   // Список статусов с id\n   statuses: [\n      {\n         id: 4,\n         title: 'Готов'\n      },{\n         id: 6,\n         title: 'Закрыт'\n      }\n   ]\n}\n \nexport const salaryRuleReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_SALARY_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n       \n      //  case 'CHOOSE_EMPLOYEE_SELECTED': {\n      //     if (action.value.every(val => state[action.field].includes(val))) {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n      //        }\n      //     } else {\n      //        return {\n      //           ...state, \n      //           [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n      //        }\n      //     }\n      //  }\n\n      case 'CHANGE_SALARY_COEF_FORM': {\n\n         let list_count_coeff = state.count_coeff\n         list_count_coeff[action.idx][action.field] = parseInt(action.value)\n\n         return {\n            ...state, \n            count_coeff: list_count_coeff\n         }\n      }\n\n      \n      case 'ADD_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.concat([{\n               cost: 0,\n               coef: 0\n            }])\n         }\n      }\n\n      case 'DELETE_SALARY_COUNT_COEF': {\n\n         return {\n            ...state, \n            count_coeff: state.count_coeff.filter((coef, idx) => idx !== action.idx)\n         }\n      }\n \n\n      case 'EDIT_SALARY': {\n         return {\n            ...state, \n            edit: action.salary_rule.id,\n\n            description: action.salary_rule.description,\n            type_rule: action.salary_rule.type_rule,\n            order_type: action.salary_rule.order_type,\n            method: action.salary_rule.method,\n            coefficient: action.salary_rule.coefficient,\n            count_coeff: action.salary_rule.count_coeff,\n            fix_salary: action.salary_rule.fix_salary,\n            deleted: action.salary_rule.deleted,\n            employee_id: action.salary_rule.employee_id,\n            check_status: action.salary_rule.check_status\n         }\n      }\n \n      case 'RESET_SALARY_RULE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            type_rule: 4,\n            order_type: 1,\n            method: 0,\n            coefficient: 0,\n            count_coeff: [{\n               cost: 0,\n               coef: 0\n            }],\n            fix_salary: 0,\n            deleted: false,\n            employee_id: 0,\n            check_status: 0\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","const initialState = {\n\n   edit: 0,\n\n   margin: 0,\n   title: '',\n   margin_type: 1,\n   deleted: false,\n\n   list_type_margin: [\n      {\n         id: 2,\n         title: 'Наценка на товары'\n      },{\n         id: 1,\n         title: 'Скидка на работы'\n      }\n   ]\n}\n \nexport const priceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n\n \n      case 'CHANGE_PRICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n\n      case 'EDIT_PRICE': {\n         return {\n            ...state, \n            edit: action.price.id,\n\n            margin: action.price.margin,\n            title: action.price.title,\n            margin_type: action.price.margin_type,\n            deleted: action.price.deleted,\n         }\n      }\n \n      case 'RESET_PRICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            margin: 0,\n            title: '',\n            margin_type: 0,\n            deleted: false\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}\n ","\nconst initialState = {\n\n   edit: 0,\n   group_edit: 0,\n\n   group_title: '',\n   group_deleted: false,\n   \n   title: '',\n   price: 0,\n   cost: 0,\n   warranty: 0,\n   warranty_value: 30*24*60*60,\n   code: '',\n   earnings_percent: 0,\n   earnings_summ: 0,\n   deleted: false,\n   category_id: 0,\n\n   seted_categiry: null,\n\n   fields: [\n      {\n         id: 1,\n         title: 'Наименование',\n         field: 'title'\n      },{\n         id: 2,\n         title: 'Гаранития',\n         field: 'werranty'\n      },{\n         id: 3,\n         title: 'Себестоимость',\n         field: 'cost'\n      },{\n         id: 4,\n         title: 'Цена',\n         field: 'price'\n      },{\n         id: 5,\n         title: 'Код',\n         field: 'code'\n      },\n   ],\n   // По умалчанию сделаем поле 1 и 4 (наименование и цена) видимыми + десять типов цен, которые возможно будут\n   chosed_fields: Array(10).fill().map((e, i) => i + 6).concat([1, 4])\n}\n \nexport const dictServiceReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_DICT_SERVICE_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_GRUOP_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: action.group.id,\n            group_title: action.group.title,\n            group_deleted: action.group.deleted,\n         }\n      }\n\n      case 'EDIT_SERVICE': {\n         return {\n            ...state, \n            edit: action.service.id,\n            title: action.service.title,\n            price: action.service.price,\n            cost: action.service.cost,\n            warranty: action.service.warranty,\n            code: action.service.code,\n            earnings_percent: action.service.earnings_percent,\n            earnings_summ: action.service.earnings_summ,\n            deleted: action.service.deleted,\n            category_id: action.service.category_id\n         }\n      }\n \n      case 'RESET_GROPE_DICT_SERVICE': {\n         return {\n            ...state, \n            group_edit: 0,\n\n            group_title: '',\n            group_deleted: false\n         }\n      }\n\n      case 'RESET_SERVICE': {\n         return {\n            ...state, \n            edit: 0,\n\n            title: '',\n            price: 0,\n            cost: 0,\n            warranty: 0,\n            warranty_value: 30*24*60*60,\n            code: '',\n            earnings_percent: 0,\n            earnings_summ: 0,\n            deleted: false,\n            category_id: 0,\n         }\n      }\n\n      case 'SELECTED_SERVICE': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,\n\n   amount: 1,\n   cost: 0,\n   discount_value: 0,\n   engineer_id: 0,\n   price: 0,\n   total: 0,\n   title: '',\n   comment: '',\n   percent: true,\n   discount: 0,\n   warranty: false,\n   warranty_period: 0,\n   created_at: 0,\n   order_id: 0,\n   dict_id: 0,\n\n   warranty_value: 30*24*60*60\n\n}\n \nexport const operationReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_OPERATION_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_OPERATION': {\n         return {\n            ...state, \n            edit: action.operation.id,\n            amount: action.operation.amount,\n            cost: action.operation.cost,\n            discount_value: action.operation.discount_value,\n            engineer_id: action.operation.engineer_id,\n            price: action.operation.price,\n            total: action.operation.total,\n            title: action.operation.title,\n            comment: action.operation.comment,\n            percent: action.operation.percent,\n            discount: action.operation.discount,\n            warranty: action.operation.warranty,\n            warranty_period: action.operation.warranty_period,\n            created_at: action.operation.created_at,\n            order_id: action.operation.order_id,\n            dict_id: action.operation.dict_id\n         }\n      }\n \n      case 'RESET_OPERATION': {\n         return {\n            ...state, \n            edit: 0,\n            amount: 1,\n            cost: 0,\n            discount_value: 0,\n            engineer_id: 0,\n            price: 0,\n            total: 0,\n            title: '',\n            comment: '',\n            percent: true,\n            discount: 0,\n            warranty: false,\n            warranty_period: 0,\n            created_at: 0,\n            order_id: 0,\n            dict_id: 0 \n         }\n      }\n\n      case 'SELECTED_OPERATION': {\n         // Обявим переменную для изменных данных\n         let new_data\n         // Проверим если значения value в списке уже существующих\n         if (action.value.every(val => state[action.field].includes(val))) {\n            // Если есть удалим эти значения\n            new_data = state[action.field].filter(val => !action.value.includes(val))\n         } else {\n            // Если нет добавим эти значения\n            new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n         }\n         // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n         if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n         // Вернем изменненый стейт\n         return {\n            ...state,\n            [action.field]: new_data,\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","const initialState = {\n\n   edit: 0,                // id при редактировании\n\n   description: '',        // Описание\n   income: 0,              // Входящяя сумма\n   outcome: 0,             // Иcходящая сумму\n   direction: 0,           // Направление платежа\n   deleted: false,         // Платеж удален\n   reimburse: false,       // Совершен возврат\n   created_at: null,       // Дата создания\n   custom_created_at: null,// Дата установленая пользователем\n   relation_type: 0,       // Тип начисления\n   relation_id: 0,         // id связанного события\n   employee_id: 0,         // Сотрудник\n   order_id: null,         // Заказ\n\n   setted_employee: 0,     // Выбранный сотрудник\n   filter_created_at: [Math.round(Date.now()/1000 - Date.now()/1000 % 86400 - 10800), Math.round(Date.now() / 1000)],\n\n   month_balance: 0\n}\n \nexport const payrollReducer = (state = initialState, action) => {\n   switch (action.type){\n \n      case 'CHANGE_PAYROLL_FORM': {\n         return {\n            ...state, \n            [action.field]: action.value\n         }\n      }\n \n      case 'EDIT_PAYROLL': {\n         return {\n            ...state, \n            edit: action.payroll.id,        \n            description: action.payroll.description,  \n            income: action.payroll.income,  \n            outcome: action.payroll.outcome,  \n            direction: action.payroll.direction,  \n            deleted: action.payroll.deleted,  \n            reimburse: action.payroll.reimburse,  \n            created_at: action.payroll.created_at,  \n            custom_created_at: action.payroll.custom_created_at, \n            relation_type: action.payroll.relation_type, \n            relation_id: action.payroll.relation_id,  \n            employee_id: action.payroll.employee_id,\n            order_id: action.payroll.order_id\n         }\n      }\n \n      case 'RESET_PAYROLL': {\n         return {\n            ...state, \n            edit: 0,                \n            description: '',       \n            income: 0,             \n            outcome: 0,           \n            direction: 0,           \n            deleted: false,         \n            reimburse: false,      \n            created_at: null,          \n            custom_created_at: null,  \n            relation_type: 0,       \n            relation_id: 0,         \n            employee_id: 0,         \n            order_id: null            \n         }\n      }\n\n      case 'SELECTED_PAYROLL': {\n         if (action.value.every(val => state[action.field].includes(val))) {\n            return {\n               ...state, \n               [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n            }\n         } else {\n            return {\n               ...state, \n               [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n         }\n      }\n \n       \n      default: return state\n   }\n    \n}","import {permission_warehouse} from \"../../data/permissions\";\n\nconst initialState = {\n\n    warehouses: [],\n    warehouses_categories: [],\n\n    tabs: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    deleted: false,\n    isGlobal: false,\n    img_url: '',\n    permissions: permission_warehouse,\n    employees: {},\n    branch: {},\n    categories: [],\n    img: '',\n\n    branch_id: 0,\n    permissions_employee: 0,\n\n    title_category: '',\n    parent_category_id: 0,\n    category_deleted: false,\n\n    current_category: {},\n    current_parent_category: {},\n\n    showDeleted: false\n}\n\n\nexport const warehouseReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_WAREHOUSE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_WAREHOUSE': {\n            return {\n                ...state,\n                edit: action.warehouse.id,\n                title: action.warehouse.title,\n                description: action.warehouse.description,\n                deleted: action.warehouse.deleted,\n                isGlobal: action.warehouse.isGlobal,\n                permissions: action.warehouse.permissions,\n                employees: action.warehouse.employees,\n                branch: action.warehouse.branch,\n                categories: action.warehouse.categories,\n                branch_id: action.warehouse.branch.id\n            }\n        }\n\n        case 'EDIT_WAREHOUSE_CATEGORY': {\n            return {\n                ...state,\n                edit: action.warehouse_category.id,\n                title_category: action.warehouse_category.title,\n                parent_category_id: action.warehouse_category.parent_category_id,\n                category_deleted: action.warehouse_category.deleted,\n            }\n        }\n\n        case 'RESET_WAREHOUSE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                deleted: false,\n                isGlobal: false,\n                permissions: permission_warehouse,\n                employees: {},\n                branch: {},\n                categories: [],\n                branch_id: 0,\n                permissions_employee: 0,\n\n                title_category: '',\n                parent_category_id: 0,\n                warehouse_id: 0,\n                category_deleted: false\n\n            }\n        }\n\n        case 'SELECTED_WAREHOUSE': {\n            if (action.value.every(val => state[action.field].includes(val))) {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n                }\n            } else {\n                return {\n                    ...state,\n                    [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n                }\n            }\n        }\n\n        case 'CHANGE_WAREHOUSE_PERMISSION': {\n\n            // Вытаскиваем данные о разрешениях сотрудников из state\n            let employees = state.employees\n            // Данные имеют следующий json формат\n            // const employees = {\n            //    employee_id1: {\n            //       available: true, // разрешен ли вообще доступ к кассе этого стортудника\n            //       like_cashbox: true, // разрения которые есть у самой кассы ( if available is true )\n            //       permissions: [permission_cahsbox] // список специальных разершений ( if available is true and like_cashbox is false )\n            //    },\n            //    emoloyee_id2: {...}\n            // }\n            // Если запись данных идет в поле permissions (список персональных разрешений)\n            if (action.field === 'permissions') {\n                // Если заначение value уже пресутствует в списке специальных разрешений текущего сотрудника (permissions_employee)\n                if (employees[state.permissions_employee].permissions.includes(action.value)) {\n                    // Удаляем значение value из списка специальных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.filter(val => val !== action.value)\n                    // Если значение value отсутсвует в списке персональных разрешений текущего сотрудника\n                } else {\n                    // Добавляем значение value в список персональных разрешений текущего сотрудника\n                    employees[state.permissions_employee].permissions = employees[state.permissions_employee].permissions.concat([action.value])\n                }\n                // Если запись идет не в поле permissions текущего сотрудника\n            } else {\n                // Меняем значение этого поля на значение в value\n                employees[state.permissions_employee][[action.field]] = action.value\n            }\n            // Возвращаем изменненый state\n            return {\n                ...state,\n                employees: employees\n            }\n\n        }\n\n\n        default: return state\n    }\n\n}","export const part_table_headers = [\n    {\n        id: 1,\n        title: 'Наименование',\n        field: 'title'\n    },{\n        id: 2,\n        title: 'Описание',\n        field: 'description'\n    },{\n        id: 3,\n        title: 'Маркировка',\n        field: 'marking'\n    },{\n        id: 4,\n        title: 'Артикул',\n        field: 'article'\n    },{\n        id: 5,\n        title: 'Штрихкод',\n        field: 'barcode'\n    },{\n        id: 6,\n        title: 'Код',\n        field: 'code'\n    },{\n        id: 7,\n        title: 'Категория',\n        field: 'warehouse_category'\n    },{\n        id: 8,\n        title: 'Документация',\n        field: 'doc_url'\n    }\n]","import {part_table_headers} from '../../data/tableHeaders'\n\nconst initialState = {\n\n    parts: [],\n    count_parts: 0,\n\n    edit: 0,\n    title: '',\n    description: '',\n    marking: '',\n    article: '',\n    barcode: '',\n    code: '',\n    image_url: '',\n    doc_url: '',\n    specifications: [],\n    deleted: false,\n    warehouse_category_id: 0,\n    warehouse_category: {},\n    img: '',\n    doc: '',\n\n    page: 0,\n    showDeleted: false,\n\n    choosed_headers: JSON.parse(localStorage.getItem('choosed_headers')) || part_table_headers.map(header => header.id)\n}\n\nexport const partReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_PART': {\n            return {\n                ...state,\n                edit: action.part.id,\n                title: action.part.title,\n                description: action.part.description,\n                marking: action.part.marking,\n                article: action.part.article,\n                barcode: action.part.barcode,\n                code: action.part.code,\n                image_url: action.part.image_url,\n                doc_url: action.part.doc_url,\n                specifications: action.part.specifications,\n                deleted: action.part.deleted,\n                warehouse_category: action.part.warehouse_category\n            }\n        }\n\n        case 'RESET_PART': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                description: '',\n                marking: '',\n                article: '',\n                barcode: '',\n                code: '',\n                image_url: '',\n                doc_url: '',\n                specifications: [],\n                deleted: false,\n                img: '',\n                doc: ''\n            }\n        }\n\n        case 'SELECTED_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n        case 'CHANGE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications[action.idx][action.field] = action.value\n\n            return {\n                ...state,\n                specifications: specifications\n            }\n        }\n\n        case 'ADD_PART_PROPERTY': {\n\n            return {\n                ...state,\n                specifications: state.specifications.concat([{title: '', value: ''}])\n            }\n        }\n\n        case 'DELETE_PART_PROPERTY': {\n\n            let specifications = state.specifications\n            specifications.splice(action.idx, 1)\n\n            return {\n                ...state,\n                specifications: state.specifications\n            }\n        }\n\n\n\n        default: return state\n    }\n\n}","\nconst initialState = {\n\n    edit: 0,                    // id редактируемоей запчасти\n    amount: 1,                  // Количество\n    cost: 0,                    // Себестоимость\n    discount_value: 0,          // Сумма скидки\n    engineer_id: 0,             // Инженер\n    price: 0,                   // Цена запчасти\n    total: 0,                   // Итоговая сумма\n    title: '',                  // Наименование запачасти\n    comment: '',                // Комментарий\n    deleted: false,             // Удален\n    warranty_period: 0,         // Период гарантии\n    created_at: 0,              // Дата создания\n    order_id: 0,                // id заказа\n\n    warranty_value: 30*24*60*60, // Значение гарантии для конвертации из введеных пользователем значений в timestamp (количество секунд в месяце из 30 дней)\n    percent: true,              // true - вычисляем процент, false - сумму в скидке discount_value\n    discount: 0                 // Значение скидки введенное пользователем\n}\n\nexport const orderPartReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_ORDER_PART_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_ORDER_PART': {\n            return {\n                ...state,\n                edit: action.order_part.id,\n                amount: action.order_part.amount,\n                cost: action.order_part.cost,\n                discount_value: action.order_part.discount_value,\n                engineer_id: action.order_part.engineer_id,\n                price: action.order_part.price,\n                total: action.order_part.total,\n                title: action.order_part.title,\n                comment: action.order_part.comment,\n                deleted: action.order_part.deleted,\n                warranty_period: action.order_part.warranty_period,\n                created_at: action.order_part.created_at,\n                order_id: action.order_part.order_id\n            }\n        }\n\n        case 'RESET_ORDER_PART': {\n            return {\n                ...state,\n                edit: 0,\n                amount: 1,\n                cost: 0,\n                discount_value: 0,\n                engineer_id: 0,\n                price: 0,\n                total: 0,\n                title: '',\n                comment: '',\n                deleted: false,\n                warranty_period: 0,\n                created_at: 0,\n                order_id: 0,\n\n                warranty_value: 30*24*60*60,\n                percent: true,\n                discount: 0\n\n            }\n        }\n\n        case 'SELECTED_ORDER_PART': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    templates: [],\n\n    edit: 0,\n    title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false\n}\n\nexport const notTemplateReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_TEMPLATE_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: action.template.id,\n                title: action.template.title,\n                template: action.template.template,\n                deleted: action.template.deleted\n            }\n        }\n\n        case 'RESET_NOT_TEMPLATE': {\n            return {\n                ...state,\n                edit: 0,\n                title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        // case 'SELECTED_TEMPLE': {\n        //     if (action.value.every(val => state[action.field].includes(val))) {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].filter(val => !action.value.includes(val)),\n        //         }\n        //     } else {\n        //         return {\n        //             ...state,\n        //             [action.field]: state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n        //         }\n        //     }\n        // }\n\n\n        default: return state\n    }\n\n}","const initialState = {\n\n    events: [],\n\n    tabs: 0,\n\n    edit: 0,\n    event: '',\n    target_audience: 0,\n    notification_type: 1,\n    statuses: [],\n    notification_template_id: 0,\n    template_title: '',\n    template: '',\n    deleted: false,\n\n    showDeleted: false,\n    filter_target_audience: 0\n}\n\nexport const notEventReducer = (state = initialState, action) => {\n    switch (action.type){\n\n        case 'CHANGE_NOT_EVENT_FORM': {\n            return {\n                ...state,\n                [action.field]: action.value\n            }\n        }\n\n        case 'EDIT_NOT_EVENT': {\n            return {\n                ...state,\n                edit: action.event.id,\n                event: action.event.event,\n                target_audience: action.event.target_audience,\n                notification_type: action.event.notification_type,\n                notification_template_id: action.event.template_id,\n                statuses: action.event.statuses,\n                deleted: action.event.deleted\n            }\n        }\n\n        case 'RESET_NOT_EVENT': {\n            return {\n                ...state,\n                edit: 0,\n                event: '',\n                target_audience: 0,\n                notification_type: 1,\n                notification_template_id: 0,\n                statuses: [],\n                template_title: '',\n                template: '',\n                deleted: false,\n            }\n        }\n\n        case 'SELECTED_NOT_EVENT': {\n            // Обявим переменную для изменных данных\n            let new_data\n            // Проверим если значения value в списке уже существующих\n            if (action.value.every(val => state[action.field].includes(val))) {\n                // Если есть удалим эти значения\n                new_data = state[action.field].filter(val => !action.value.includes(val))\n            } else {\n                // Если нет добавим эти значения\n                new_data = state[action.field].concat(action.value.filter(val => !state[action.field].includes(val)))\n            }\n            // Если флаг saveToApp установлен сохраним данные на локальном хранилище\n            if (action.saveToApp) localStorage.setItem(action.field, JSON.stringify(new_data))\n            // Вернем изменненый стейт\n            return {\n                ...state,\n                [action.field]: new_data,\n            }\n        }\n\n\n        default: return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport { dataReducer } from './reducers/dataReducer'\nimport { visualReducer } from './reducers/visualReducer'\nimport { filterReducer } from './reducers/filterReduser'\nimport { roleReducer } from './reducers/roleReducer'\nimport { employeeReduscer } from './reducers/employeeReducer'\nimport { orderReducer } from './reducers/orderReducer'\nimport { clientReducer } from './reducers/clientReducer'\nimport { maindataReducer } from './reducers/maindataReducer'\nimport { branchReducer } from './reducers/branchReducer'\nimport { bookReducer } from './reducers/bookReducer'\nimport { cashboxReducer } from './reducers/cashboxReducer'\nimport { paymentReducer } from './reducers/paymentReducer'\nimport { salaryRuleReducer } from './reducers/salaryRuleReducer'\nimport { priceReducer } from './reducers/priceReducer'\nimport { dictServiceReducer } from './reducers/dictServiceReducer'\nimport { operationReducer } from './reducers/operationReducer'\nimport { payrollReducer } from './reducers/payrollReducer'\nimport {warehouseReducer} from \"./reducers/wherehouseReducer\";\nimport {partReducer} from './reducers/partReducer';\nimport {orderPartReducer} from './reducers/orderPartReducer'\nimport {notTemplateReducer} from './reducers/notTemplateReducer'\nimport {notEventReducer} from './reducers/notEventReducer'\n\n\n\nexport const rootReducer = combineReducers({\n   data: dataReducer,\n   view: visualReducer,\n   filter: filterReducer,\n   role: roleReducer,\n   employee: employeeReduscer,\n   order: orderReducer,\n   client: clientReducer,\n   maindata: maindataReducer,\n   branch: branchReducer,\n   book: bookReducer,\n   cashbox: cashboxReducer,\n   payment: paymentReducer,\n   salaryRule: salaryRuleReducer,\n   price: priceReducer,\n   dictService: dictServiceReducer,\n   operation: operationReducer,\n   payroll: payrollReducer,\n   warehouse: warehouseReducer,\n   part: partReducer,\n   orderPart: orderPartReducer,\n   notTemplate: notTemplateReducer,\n   notEvent: notEventReducer\n})\n","import {createStore, compose, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk';\n// import createSagaMiddleware from 'redux-saga';\n\nimport {rootReducer} from './rootReducer'\n// import { sagaWatcher } from './sagas';\n\n// const saga = createSagaMiddleware()\n\n// saga.run(sagaWatcher)\n\nconst store = createStore(rootReducer, compose(\n    applyMiddleware(\n        thunk\n    ),\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n))\n\nexport default store","import store from \"./store\"\n\nfunction getRequestConfig(body = {}) {\n\n    const state = store.getState()\n\n    return {\n        method: \"POST\",\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${state.data.token}`,\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(body)\n    }\n}\n\nfunction bad_request(massage = '') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return {type: 'LOGUOT'}\n}\n\nexport function loginAction(token) {\n    return {\n        type: 'LOGIN',\n        token,\n    }\n}\n\nexport function loguotAction() {\n    return {\n        type: 'LOGUOT'\n    }\n}\n\nexport function addUserAction(user) {\n    return {\n        type: 'ADD_USER',\n        user: user\n    }\n}\n\nexport function changePageAction(page) {\n    return {\n        type: 'CHANGE_PAGE',\n        page: page\n    }\n}\n\nexport function changeSortAction(field) {\n    return {\n        type: 'CHANGE_SORT',\n        field: field\n    }\n}\n\nexport function initStatusMenuVisibleAction(list_id) {\n    return {\n        type: 'INIT_STATUS_MENU_VISIBLE',\n        data: list_id\n    }\n}\n\nexport function changeStatusMenuVisible(id_order) {\n    return {\n        type: 'CANGE_STATUS_MENU_VISIBLE',\n        id_order: id_order\n    }\n}\n\nexport function changeFilterAction(word) {\n    return {\n        type: 'CANGE_FILTER',\n        word: word\n    }\n}\n\nexport function activeBadgeAction(filters) {\n    return {\n        type: 'ACTIVE_BADGE',\n        filters\n    }\n}\n\nexport function changeSetStatusFilter() {\n    return {\n        type: 'CHANGE_STATUS_SET_STATUS_FILTER'\n    }\n}\n\nexport function changeStausListFilter() {\n    return {\n        type: 'CHANGE_STATUS_LIST_FILTER'\n    }\n}\n\nexport function changeCheckStatus(field) {\n    return {\n        type: 'CHANGE_CHECK_STATUS',\n        field\n    }\n}\n\nexport function setAllStatusFalse() {\n    return {\n        type: 'SET_ALL_STATUS_FALSE'\n    }\n}\n\nexport function setAllStatusTrue() {\n    return {\n        type: 'SET_ALL_STATUS_TRUE'\n    }\n}\n\nexport function changeTypeListFilter() {\n    return {\n        type: 'CHANGE_TYPE_LIST_FILTER'\n    }\n}\n\nexport function changeCheckType(field) {\n    return {\n        type: 'CHANGE_CHECK_TYPE',\n        field\n    }\n}\n\nexport function setAllTypeTrue() {\n    return {\n        type: 'SET_ALL_TYPE_TRUE'\n    }\n}\n\nexport function setAllTypeFalse() {\n    return {\n        type: 'SET_ALL_TYPE_FALSE'\n    }\n}\n\nexport function changeManagerListFilter() {\n    return {\n        type: 'CHANGE_MANAGER_LIST_FILTER'\n    }\n}\n\nexport function changeCheckManager(field) {\n    return {\n        type: 'CHANGE_CHECK_MANAGER',\n        field\n    }\n}\n\nexport function setAllManagerTrue() {\n    return {\n        type: 'SET_ALL_MANAGER_TRUE'\n    }\n}\n\nexport function setAllManagerFalse() {\n    return {\n        type: 'SET_ALL_MANAGER_FALSE'\n    }\n}\n\nexport function changeEngineerListFilter() {\n    return {\n        type: 'CHANGE_ENGINEER_LIST_FILTER'\n    }\n}\n\nexport function changeCheckEngineer(field) {\n    return {\n        type: 'CHANGE_CHECK_ENGINEER',\n        field\n    }\n}\n\nexport function setAllEngineerTrue() {\n    return {\n        type: 'SET_ALL_ENGINEER_TRUE'\n    }\n}\n\nexport function setAllEngineerFalse() {\n    return {\n        type: 'SET_ALL_ENGINEER_FALSE'\n    }\n}\n\nexport function changeGroupListFilter() {\n    return {\n        type: 'CHANGE_GROUP_LIST_FILTER'\n    }\n}\n\nexport function changeGroupMainFilter(word) {\n    return {\n        type: 'CHANGE_GROUP_MAINFILTER',\n        word\n    }\n}\n\nexport function changeBrandListFilter() {\n    return {\n        type: 'CHANGE_BRAND_LIST_FILTER'\n    }\n}\n\nexport function changeBrandMainFilter(word) {\n    return {\n        type: 'CHANGE_BRAND_MAINFILTER',\n        word\n    }\n}\n\nexport function changeSubtypeListFilter() {\n    return {\n        type: 'CHANGE_SUBTYPE_LIST_FILTER'\n    }\n}\n\nexport function changeSubtypeMainFilter(word) {\n    return {\n        type: 'CHANGE_SUBTYPE_MAINFILTER',\n        word\n    }\n}\n\nexport function changeClientListFilter() {\n    return {\n        type: 'CHANGE_CLIENT_LIST_FILTER'\n    }\n}\n\nexport function changeClientMainFilter(word) {\n    return {\n        type: 'CHANGE_CLIENT_MAINFILTER',\n        word\n    }\n}\n\nexport function changeNameClientFilter(word) {\n    return {\n        type: 'CHANGE_NAME_CLIENTFILTER',\n        word\n    }\n}\n\nexport function changePhoneClientFilter(word) {\n    return {\n        type: 'CHANGE_PHONE_CLIENTFILTER',\n        word\n    }\n}\n\nexport function changeCreateAtMainFilter(range) {\n    return {\n        type: 'CHANGE_CREATE_AT_MAINFILTER',\n        range\n    }\n}\n\nexport function appFilter() {\n    return {\n        type: 'APPLY_FILTER'\n    }\n}\n\nexport function resetFilter() {\n    return {\n        type: 'RESET_FILTER'\n    }\n}\n\nexport function changeStatusCreateNewFilter() {\n    return {\n        type: 'CHANGE_STATUS_CREATE_NEW_FILTER'\n    }\n}\n\nexport function changeTitleCreate(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE',\n        title\n    }\n}\n\nexport function changeGeneraleCreate() {\n    return {\n        type: 'CHANGE_GENERALE_CREATE'\n    }\n}\n\nexport function appCustomFilter(filter, id) {\n    return {\n        type: 'APPLY_CUSTOM_FILTER',\n        filter,\n        id\n    }\n}\n\nexport function changeStatusMenuRow(id) {\n    return {\n        type: 'CHANGE_STATUS_MENU_ROW',\n        id\n    }\n}\n\nexport function changeStatusSettingRow(id) {\n    return {\n        type: 'CHANGE_STATUS_SETTING_ROW',\n        id\n    }\n}\n\nexport function changeTitleCreateRole(title) {\n    return {\n        type: 'CHANGE_TITLE_CREATE_ROLE',\n        title\n    }\n}\n\nexport function changePermissions(value) {\n    return {\n        type: 'CHANGE_PERMISSION',\n        value\n    }\n}\n\nexport function cahngeEarningsVisibility(bool) {\n    return {\n        type: 'CHANGE_EARNINGS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeLeadsVisibility(bool) {\n    return {\n        type: 'CHANGE_LEADS_VISIBILITY',\n        bool\n    }\n}\n\nexport function cahngeOrdersVisibility(bool) {\n    return {\n        type: 'CHANGE_ORDERS_VISIBILITY',\n        bool\n    }\n}\n\nexport function changeVisibleStatuses(id) {\n    return {\n        type: 'CHANGE_VISIBLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableStatuses(id) {\n    return {\n        type: 'CHANGE_SETTABLE_STATUSES',\n        id\n    }\n}\n\nexport function changeSettableMargin(id) {\n    return {\n        type: 'CHANGE_SETTABLE_MARGIN',\n        id\n    }\n}\n\nexport function editRole(role) {\n    return {\n        type: 'EDIT_ROLE',\n        role\n    }\n}\n\nexport function changeEmployeeTabs(tab) {\n    return {\n        type: 'CHANGE_EMPLOYEE_TAB',\n        tab\n    }\n}\n\nexport function changeEmployeEditorForm(value, field) {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_FORM',\n        value,\n        field\n    }\n}\n\nexport function changeEmployeeSelected(value, field) {\n    return {\n        type: 'CHOOSE_EMPLOYEE_SELECTED',\n        value,\n        field\n    }\n}\n\n\nexport function changeEmployeeEditorRoleOptions() {\n    return {\n        type: 'CHANGE_EMPLOYEE_EDITOR_ROLE_OPTIONS'\n    }\n}\n\n\nexport function setRoleEmployeeEdetor(role) {\n    return {\n        type: 'SET_ROLE_EMPLOYEE_EDITOR',\n        role\n    }\n}\n\nexport function changeShowDeleted() {\n    return {\n        type: 'CHANGE_SHOW_DELETED'\n    }\n}\n\n\nexport function editEmoloyee(employee) {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        employee\n    }\n}\n\nexport function resetEmoloyee() {\n    return {\n        type: 'RESET_EMPLOYEE'\n    }\n}\n\n\nexport function setClietnCheckbox(field, value) {\n    return {\n        type: 'SET_CLIENT_CHECKBOX',\n        field,\n        value\n    }\n}\n\n\nexport function changeClientEditorPhone(idx, value) {\n    return {\n        type: 'CHANGE_CLIENT_EDITOR_PHONE',\n        idx,\n        value\n    }\n}\n\n\nexport function addPhoneCounter() {\n    return {\n        type: 'ADD_PHONE_COUNTER'\n    }\n}\n\n\nexport function deleteCountNumber(idx) {\n    return {\n        type: 'DELETE_COUNT_NUMBER',\n        idx\n    }\n}\n\n\nexport function setPhoneNotify(idx) {\n    return {\n        type: 'SET_PHONE_NOTIFY',\n        idx\n    }\n}\n\n\nexport function changeStatusPhoneList(idx) {\n    return {\n        type: 'CHANGE_STATUS_PHONE_LIST',\n        idx\n    }\n}\n\n\nexport function setPhoneTitle(idx, title) {\n    return {\n        type: 'SET_PHONE_TITLE',\n        idx,\n        title\n    }\n}\n\n\nexport function changeStatusAddTitle(idx) {\n    return {\n        type: 'CHANGE_STATUS_ADD_TITLE',\n        idx\n    }\n}\n\nexport function changeStatusAdCampaignClient() {\n    return {\n        type: 'CHANGE_STATUS_AD_CAMPAIGN_CLIENT'\n    }\n}\n\nexport function setAdCampaignClient(id) {\n    return {\n        type: 'SET_AD_CANMPAIGN_CLIENT',\n        id\n    }\n}\n\n\nexport function addClientTag(tag) {\n    return {\n        type: 'ADD_CLIENT_TAG',\n        tag\n    }\n}\n\nexport function deleteClientTag(idx) {\n    return {\n        type: 'DELETE_CLIENT_TAG',\n        idx\n    }\n}\n\nexport function setVisibleFlag(field, value) {\n    return {\n        type: 'SET_VISIBLE_FLAG',\n        field,\n        value\n    }\n}\n\nexport function setVisibleListFlag(field, idx, value) {\n    return {\n        type: 'SET_VISIBLE_LIST_FLAG',\n        field,\n        idx,\n        value\n    }\n}\n\nexport function addVisibleFlag(field) {\n    return {\n        type: 'ADD_FLAG',\n        field\n    }\n}\n\nexport function deleteVisibleFlag(field, idx) {\n    return {\n        type: 'DELETE_FLAG',\n        field,\n        idx\n    }\n}\n\n\nexport function resetDataClient() {\n    return {\n        type: 'RESET_DATA_CLIENT'\n    }\n}\n\n\nexport function resetEquipment(idx, field) {\n    return {\n        type: 'RESET_EQUIPMENT',\n        idx,\n        field\n    }\n}\n\nexport function setOrderEquipment(idx, field, data) {\n    return {\n        type: 'SET_ORDER_EQUIPMENT',\n        idx,\n        field,\n        data\n    }\n}\n\n\nexport function changeOrderForm(idx, field, value) {\n    return {\n        type: 'CHANGE_ORDER_FORM',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function addAnotherEquipment() {\n    return {\n        type: 'ADD_ANOTHER_EQUIPMENT'\n    }\n}\n\n\nexport function deleteDevice(idx) {\n    return {\n        type: 'DELETE_DEVICE',\n        idx\n    }\n}\n\n\nexport function changeOrderFormS(value, field) {\n    return {\n        type: 'CHANGE_ORDER_FORM_S',\n        field,\n        value\n    }\n}\n\n\nexport function changeMaindataForm(field, value) {\n    return {\n        type: 'CHANGE_MAINDATA_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeBranchForm(field, value) {\n    return {\n        type: 'CHANGE_BRANCH_FORM',\n        field,\n        value\n    }\n}\n\n\nexport function changeShedule(idx, field, value) {\n    return {\n        type: 'CHANGE_SCHEDULE',\n        idx,\n        field,\n        value\n    }\n}\n\n\nexport function setBranchEmployee(id) {\n    return {\n        type: 'SET_BRANCH_EMPLOYEE',\n        id\n    }\n}\n\nexport function editBranch(branch) {\n    return dispatch => {\n        dispatch({\n            type: 'EDIT_BRANCH',\n            branch\n        })\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusBranchEditor',\n            value: true\n        })\n    }\n}\n\n\nexport function chooseEquipmentBranches(id) {\n    return {\n        type: 'CHOOSE_EQUIPMENT_BRANCHES',\n        id\n    }\n}\n\n\nexport function editEquipment(equipment) {\n    return {\n        type: 'EDIT_EQUIPMENT',\n        equipment\n    }\n}\n\n\nexport function changeCashboxForm(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_FORM',\n        field,\n        value\n    }\n}\n\nexport function chooseCashboxSelected(id, field) {\n    return {\n        type: 'CHOOSE_CASHBOX_SELECTED',\n        id,\n        field\n    }\n}\n\nexport function changeCashboxPermissions(value, field) {\n    return {\n        type: 'CHANGE_CASHBOX_PERMISSION',\n        value,\n        field\n    }\n}\n\nexport function addData(data, field) {\n    return {\n        type: 'ADD_DATA',\n        data,\n        field\n    }\n}\n\nexport function activeCashbox(id) {\n    return {\n        type: 'ACTIVE_CASHBOX',\n        id\n    }\n}\n\nexport function editCashbox(cashbox) {\n    return {\n        type: 'EDIT_CASHBOX',\n        cashbox\n    }\n}\n\n\n\nexport function editCurrentClient(client) {\n    return {\n        type: 'EDIT_CURRENT_CLIENT',\n        client\n    }\n}\n\n\nexport function setPayment(payment) {\n    return {\n        type: 'SET_PAYMENT',\n        payment\n    }\n}\n\n\nexport function changePriceForm(value, field) {\n    return {\n        type: 'CHANGE_PRICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editPrice(price) {\n    return {\n        type: 'EDIT_PRICE',\n        price\n    }\n}\n\nexport function resetPrice() {\n    return {\n        type: 'RESET_PRICE'\n    }\n}\n\n\nexport function changeDictServiceForm(value, field) {\n    return {\n        type: 'CHANGE_DICT_SERVICE_FORM',\n        field,\n        value\n    }\n}\n\nexport function resetGruopDictService() {\n    return {\n        type: 'RESET_GROPE_DICT_SERVICE'\n    }\n}\n\nexport function editGroupDictService(group) {\n    return {\n        type: 'EDIT_GRUOP_DICT_SERVICE',\n        group\n    }\n}\n\nexport function resetService() {\n    return {\n        type: 'RESET_SERVICE'\n    }\n}\n\n\nexport function selectedService(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function editDictService(service) {\n    return {\n        type: 'EDIT_SERVICE',\n        service\n    }\n}\n\nexport function log_in(login, password) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        email: login,\n        password\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/login', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    sessionStorage.setItem('1xsndt', data.access_token);\n                    sessionStorage.setItem('user', JSON.stringify(data.user))\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'user',\n                        data: data.user,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'login_status',\n                        data: true,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'token',\n                        data: data.access_token,\n                    })\n                } else {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'error_message',\n                        data: data.message,\n                    })\n                    console.warn(data.message)\n                }\n            })\n            .catch(() => bad_request('Запрос авторизации не выполнен'))\n    }\n}\n\n\n// Client ================================================================================================================\nexport function addClients() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig(state.filter.clientFilter))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_CLIENTS_SHOW',\n                        clientShow: data.data,\n                        count: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос клиентов не выполнен'))\n    }\n}\n\nexport function createNewClient() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n        discount_service_type: state.client.discount_service_type,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на создание клиента не выполнен'))\n    }\n}\n\nexport function saveChangeClient() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        juridical: state.client.juridical,\n        supplier: state.client.supplier,\n        conflicted: state.client.conflicted,\n        should_send_email: state.client.should_send_email,\n        discount_good_type: state.client.discount_good_type,\n        discount_materials_type: state.client.discount_materials_type,\n        discount_service_type: state.client.discount_service_type,\n\n        name: state.client.name,\n        name_doc: state.client.name_doc,\n        email: state.client.email,\n        address: state.client.address,\n        discount_code: state.client.discount_code,\n        notes: state.client.notes,\n        ogrn: state.client.ogrn,\n        inn: state.client.inn,\n        kpp: state.client.kpp,\n        juridical_address: state.client.juridical_address,\n        director: state.client.director,\n        bank_name: state.client.bank_name,\n        settlement_account: state.client.settlement_account,\n        corr_account: state.client.corr_account,\n        bic: state.client.bic,\n\n        discount_goods: state.client.discount_goods,\n        discount_materials: state.client.discount_materials,\n        discount_services: state.client.discount_services,\n\n        ad_campaign_id: state.client.ad_campaign_id,\n        discount_goods_margin_id: state.client.discount_goods_margin_id,\n        discount_materials_margin_id: state.client.discount_materials_margin_id,\n        discount_service_margin_id: state.client.discount_service_margin_id,\n\n        tags: state.client.tags,\n        phone: state.client.phone,\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение данных клиента не выполнен'))\n    }\n}\n\nexport function editClient(id) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_clients', getRequestConfig({id}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_CLIENT',\n                        client: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных клиента не выполнен'))\n    }\n}\n\nexport function deleteClient(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.client.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return dispatch => {\n\n\n        fetch(state.data.url_server + '/clients', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                    dispatch({\n                        type: 'RESET_DATA_CLIENT'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewClient',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на изменение клиента не выполнен'))\n    }\n}\n\n//===========================================================================================================================\n\nexport function addEmployees(filters) {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_employee', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addAdCampaign() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_ad_campaign', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_AD_CAMPAIGN',\n                        ad_campaign: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос рекламных компаний не выполнен'))\n    }\n}\n\nexport function createEmployee() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на создание сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function seveEditEmployee() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        first_name: state.employee.first_name,\n        last_name: state.employee.last_name,\n        email: state.employee.email,\n        notes: state.employee.notes,\n        phone: state.employee.phone.replace(/[^0-9]/g, ''),\n        password: state.employee.password,\n        role_id: state.employee.role_id,\n        login: state.employee.login,\n        inn: state.employee.inn,\n        doc_name: state.employee.doc_name,\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос на изменение сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function deleteEmployee(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.employee.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/employee', request_config)\n            .catch(() => bad_request('Запрос удаление/восстановление сотрудника не выполнен'))\n\n        await fetch(state.data.url_server + '/get_employee', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EMPLOYEES',\n                        employees: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEmployeeEditor',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос сотрудников не выполнен'))\n    }\n}\n\nexport function addStatus() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS',\n                        status: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статусов не выполнен'))\n    }\n}\n\nexport function refreshDataOrder(order_id) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: order_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0],\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n    }\n}\n\nexport function addBaggesAction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/bagges', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_BADGES',\n                        badges: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос беджей не выполнен'))\n    }\n}\n\nexport function addStatusGroupAction() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_status_group', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_STATUS_GROUP',\n                        status_group: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос групп статусов не выполнен'))\n    }\n}\n\nexport function addEquipment() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_equipment_type', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_EQUIPMENT',\n                        equipment: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов изделий не выполнен'))\n    }\n}\n\n\nexport function addCustomFilter() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        employee_id: state.data.user.id,\n        title: state.filter.title_create,\n        filters: state.filter.tempFilter,\n        general: state.filter.addCustomFilter\n    })\n\n    const request_config2 = getRequestConfig({employee_id: state.data.user.id})\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config1)\n            .catch(() => bad_request('Запрос на создание фильтра не выполнен'))\n\n        await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_CUSTOM_FILTERS',\n                        filters: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\n\nexport function addCustomFilters() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({employee_id: state.data.user.id})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_custom_filters', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_CUSTOM_FILTERS',\n                        filters: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\n\nexport function saveCustomFilter() {\n\n    const state = store.getState()\n    const idActiveFilter = state.filter.customFilters.find(filter => filter.active === true).id\n\n    let request_config = getRequestConfig({\n        id: idActiveFilter,\n        filters: state.filter.tempFilter\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({employee_id: state.data.user.id})\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .catch(() => bad_request('Запрос на изменеие фильтра не выполнен'))\n\n        await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_CUSTOM_FILTERS',\n                        filters: data.data,\n                    })\n                    dispatch({\n                        type: 'APPLY_CUSTOM_FILTER',\n                        id: idActiveFilter,\n                        filter: data.data.find(filter => filter.id === idActiveFilter).filters\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильров не выполнен'))\n    }\n}\n\n\nexport function removeFilter() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.filter.customFilters.find(filter => filter.active === true).id\n    })\n    request_config.method = 'DELETE'\n\n    const request_config2 = getRequestConfig({employee_id: state.data.user.id})\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/custom_filters', request_config)\n            .catch(() => bad_request('Запрос на удаление фильтра не выполнен'))\n\n        await fetch(state.data.url_server + '/get_custom_filters', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_CUSTOM_FILTERS',\n                        filters: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_ORDER_FORM_S',\n                        field: 'client',\n                        value: {}\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос пользовательских фильтров не выполнен'))\n    }\n}\n\nexport function addDiscountMargin() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_discount_margin', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\n\nexport function createRole() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на создание роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addRoles() {\n\n    const state = store.getState()\n\n    return dispatch => {\n        fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function seveEditRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.role.edit,\n        title: state.role.title_create,\n        earnings_visibility: state.role.earnings_visibility,\n        leads_visibility: state.role.leads_visibility,\n        orders_visibility: state.role.orders_visibility,\n        permissions: state.role.list_permissions,\n        settable_statuses: state.role.settable_statuses,\n        visible_statuses: state.role.visible_statuses,\n        settable_discount_margin: state.role.settable_discount_margin\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на изменение роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function deleteRole() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({id: state.role.edit})\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/roles', request_config)\n            .catch(() => bad_request('Запрос на удаление роли не выполнен'))\n\n        await fetch(state.data.url_server + '/get_roles', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ROLES',\n                        roles: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCreateNewRole',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос ролей не выполнен'))\n    }\n}\n\n\nexport function addMainData() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({})\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_main_data', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'generally_info',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.generally_info,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.branch,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'order_type',\n                        data: data.order_type,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.counts,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ad_campaign',\n                        data: data.ad_campaign,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'status_group',\n                        data: data.status_group,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.cashboxes,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.item_payments,\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.service_prices,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных не выполнен'))\n    }\n}\n\n\nexport function saveGenerallyInfo() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: 1,\n        name: state.maindata.name,\n        address: state.maindata.address,\n        email: state.maindata.email,\n\n        ogrn: state.maindata.ogrn,\n        inn: state.maindata.inn,\n        kpp: state.maindata.kpp,\n        juridical_address: state.maindata.juridical_address,\n        director: state.maindata.director,\n        bank_name: state.maindata.bank_name,\n        settlement_account: state.maindata.settlement_account,\n        corr_account: state.maindata.corr_account,\n        bic: state.maindata.bic,\n\n        description: state.maindata.description,\n        phone: state.maindata.phone,\n        logo: state.maindata.logo\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n\n        await fetch(state.data.url_server + '/generally_info', request_config)\n            .catch(() => bad_request('Запрос изменение основных данных компании не выполнен'))\n\n        await fetch(state.data.url_server + '/get_generally_info', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_GENERALLY_INFO',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос основных данных компании не выполнен'))\n    }\n}\n\n\nexport function addCounters() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_counts', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'counters',\n                        data: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос счетчиков не выполнен'))\n    }\n}\n\n\nexport function createBranch() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на создание филиалов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function saveBranch() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n\n        id: state.branch.edit,\n        name: state.branch.name,\n        address: state.branch.address,\n        phone: state.branch.phone,\n        color: state.branch.color,\n        icon: state.branch.icon,\n        orders_type_id: state.branch.orders_type_id,\n        orders_type_strategy: state.branch.orders_type_strategy,\n        orders_prefix: state.branch.orders_prefix,\n        documents_prefix: state.branch.documents_prefix,\n        employees: state.branch.employees,\n        deleted: state.branch.deleted,\n        schedule: state.branch.schedule\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на изменение филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос флиалов не выполнен'))\n    }\n}\n\n\nexport function deleteBranch(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.branch.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/branch', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление филиала не выполнен'))\n\n        await fetch(state.data.url_server + '/get_branch', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'branches',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusBranchEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_BRANCH'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос филиалов не выполнен'))\n    }\n}\n\nexport function addDictMalfunction() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_malfunction\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_malfunction', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictMalfunction',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_malfunction',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос словарая неисправностей не выполнен'))\n    }\n}\n\nexport function createBookElement() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        direction: state.book.direction\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на создание записи в словарь не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function deleteBookElements() {\n\n    const state = store.getState()\n\n    const url_list = ['malfunction', 'packagelist', 'item_payments']\n    const field_list = ['dictMalfunction', 'dictPackagelist', 'item_payments']\n\n    let request_config = getRequestConfig({\n        del_ids: state.book[`selected_${url_list[state.book.type]}`]\n    })\n    request_config.method = 'DELETE'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + `/${url_list[state.book.type]}`, request_config)\n            .catch(() => bad_request('Запрос на удаление записи соваря не выполнен'))\n\n        await fetch(state.data.url_server + `/get_${url_list[state.book.type]}`, getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: field_list[state.book.type],\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: `count_${url_list[state.book.type]}`,\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос данных словаря не выполнен'))\n    }\n}\n\nexport function addDictPackagelist() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_packagelist\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_packagelist', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dictPackagelist',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_packagelist',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос списка комплектаций не выполнен'))\n    }\n}\n\nexport function addItemPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.book.page_item_payments\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_item_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'item_payments',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count_item_payments',\n                        data: data.count\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос статей плтатежей не выполнен'))\n    }\n}\n\nexport function createCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на создание кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function addCashboxes() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_cashbox', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_CASHBOX_FORM',\n                        field: 'current_cashbox',\n                        value: data.data.filter(cashbox =>\n                            !cashbox.deleted &&\n                            cashbox.employees[state.data.user.id].available &&\n                            (cashbox.branch_id === (state.data.current_branch ? state.data.current_branch.id : false) || cashbox.isGlobal)\n                        )[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function seveEditCashbox() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        title: state.cashbox.title,\n        balance: state.cashbox.balance,\n        type: state.cashbox.type,\n        isGlobal: state.cashbox.isGlobal,\n        isVirtual: state.cashbox.isVirtual,\n        deleted: state.cashbox.deleted,\n        permissions: state.cashbox.permissions,\n        employees: state.cashbox.employees,\n        branch_id: state.data.current_branch.id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на изменение кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function deleteCashbox(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.cashbox.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/cashbox', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление кассы не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusCashboxEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_CASHBOX'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}\n\nexport function createPrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на создание наценки не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function savePrice() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        title: state.price.title,\n        margin: state.price.margin,\n        margin_type: state.price.margin_type,\n        deleted: state.price.deleted\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на изменение ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function deletePrice(flag) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: state.price.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/discount_margin', request_config)\n            .catch(() => bad_request('Запрос на удаление ыены не выполнен'))\n\n        await fetch(state.data.url_server + '/get_discount_margin', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'discount_margin',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPriceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PRICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос наценок не выполнен'))\n    }\n}\n\nexport function addGroupeService() {\n\n    const state = store.getState()\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function createGroupDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.group_title,\n        deleted: false\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function saveGroupDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        title: state.dictService.group_title\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function deleteGroupDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.group_edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/group_dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание категории не выполнен'))\n\n        await fetch(state.data.url_server + '/get_group_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'group_dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusGroupServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_GROPE_DICT_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий не выполнен'))\n    }\n}\n\nexport function addDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        category_id: state.dictService.seted_categiry\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/get_dict_service', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function createDictService() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: false,\n        category_id: state.dictService.category_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function saveDictService() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        title: state.dictService.title,\n        price: state.dictService.price,\n        cost: state.dictService.cost,\n        warranty: state.dictService.warranty,\n        code: state.dictService.code,\n        earnings_percent: state.dictService.earnings_percent,\n        earnings_summ: state.dictService.earnings_summ,\n        deleted: state.dictService.deleted,\n        category_id: state.dictService.category_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на изменение услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function deleteDictService(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.dictService.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/dict_service', request_config)\n            .catch(() => bad_request('Запрос на удалене/восстановление услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_dict_service', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'dict_service',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusServiceEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_SERVICE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n\nexport function addServicePrices() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_service_prices', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос цен на услуги не выполнен'))\n    }\n}\n\nexport function createSaveServicePrice(id, cost, discount_margin_id, service_id) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id,\n        cost,\n        discount_margin_id,\n        service_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/service_prices', request_config)\n            .catch(() => bad_request('Запрос на создание услуги не выполнен'))\n\n        await fetch(state.data.url_server + '/get_service_prices', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'service_prices',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос услуг не выполнен'))\n    }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuRow } from '../../Redux/actions'\n\n\nfunction MenuRow(props) {\n  return (\n    <Link \n      className=\"menuRow\" \n      to={props.row.url}\n      style={props.menuRows.find(row => row.id === props.row.id).active ? {\n        backgroundColor: '#53585c',\n        borderLeftColor: props.current_branch.color \n      } : null}\n      onClick={() => props.changeStatusMenuRow(props.row.id)}\n    >\n      {props.row.image === 'task' ? (\n        <div className=\"taskNumber\">\n          <span className=\"taskNumber1\">8</span>\n        </div>\n      ) : (\n        <svg className=\"sidebarIcon\">\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" d={props.row.image}></path>\n        </svg>\n      )}\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n  menuRows: state.data.menuRows,\n  current_branch: state.data.current_branch\n})\n\nconst mapDispatchToProps = {\n  changeStatusMenuRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MenuRow)\n","import React from 'react'\n\nimport MenuRow from './MenuRow'\n\n\nfunction MenuGroup({group}) {\n\n    return (\n\n            <div>\n                {group.map(row => {\n                    return (\n                        <MenuRow row = {row} key = {row.id}/>\n                        )\n                    }\n                )\n                }\n            </div>\n    )}\n   \nexport default MenuGroup\n","import React from 'react';\n\n\n\nfunction LogoUser() {\n    \n    return (\n        <div className = 'avatar'> \n        \n            <img \n                src = {`${process.env.PUBLIC_URL}/data/avatars/ava.jpeg`}\n                className = 'imgAvatar' \n                alt = 'User avatar' \n            />\n        </div>\n    )\n    \n}\n\nexport default LogoUser;\n","\nimport React from 'react'\n\n\nconst Icon = (props) => {\n   return (\n      <svg \n         className={props.className ? props.className : 'icon-branch'}\n         viewBox={props.viewBox ? props.viewBox : '0 0 32 32'}\n         style={{ fill: props.color }}      >\n         <path d={props.icon}/>\n      </svg> \n   )\n}\n\n\n  \n export default Icon","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addData } from '../../Redux/actions'\nimport Icon from '../general/Icon'\n\nconst ChooseBranch = (props) => {\n\n   const [menuVisibel, setMenuVisibel] = useState(false)\n\n   return (\n      <div>\n      <div \n         className='menuBranch'\n         onClick={() => setMenuVisibel(!menuVisibel)}\n      >\n         <Icon \n            className='smalIcon'\n            icon={props.current_branch.icon} \n            color={props.current_branch.color}\n         />\n         <div className='sidebarBranch'>\n           {props.current_branch.name}\n         </div>\n      </div>\n      {menuVisibel ? <div className='listOptionsBranch'>\n         {props.branches.filter(branch => branch.employees.includes(props.user_id) && !branch.deleted).map(branch => (\n            <div \n               key={branch.id}\n               className='listBranch'\n               onClick={() => {\n                  props.addData(branch, 'current_branch')\n                  setMenuVisibel(false)\n               }}\n            >\n               <Icon \n                  className='smalIcon'\n                  icon={branch.icon} \n                  color={branch.color}\n               />\n               <div className='ml5'>{branch.name}</div>\n            </div>\n         ))}\n      </div> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_branch: state.data.current_branch,\n   branches: state.data.branches,\n   user_id: state.data.user.id\n   })\n\nconst mapDispatchToProps = {\n   addData\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseBranch)","import React from 'react';\nimport MenuGroup from './MenuGroup';\nimport LogoUser from './LogoUser';\nimport { connect } from 'react-redux'\nimport ChooseBranch from './ChooseBranch';\n\nfunction Sidebar(props) {\n\n    const generally_menu = props.menuRows.filter(row => \n        row.group_name === 'generally_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const report_menu = props.menuRows.filter(row => \n        row.group_name === 'report_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n\n    const setting_menu = props.menuRows.filter(row => \n        row.group_name === 'setting_menu' && row.permission_keys.some(key => props.permission.includes(key)))\n   \n\n    return (\n        <div className = 'sidebarMain'> \n            <LogoUser/>\n           {props.current_branch ? <ChooseBranch/> : null}\n            <hr className = 'hrMenu' />\n\n        {generally_menu.length ? \n        <>\n            <MenuGroup group = {generally_menu} key = {1011}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {report_menu.length ? \n        <>\n            <MenuGroup group = {report_menu} key = {1012}/>\n            <hr className = 'hrMenu' />\n        </> : null}\n\n        {setting_menu.length ? <MenuGroup group = {setting_menu} key = {1013}/> : null}\n            \n        </div>\n    )\n   \n}\n\nconst mapStateToProps = state => ({\n    menuRows: state.data.menuRows,\n    permission: state.data.user.role.permissions,\n    current_branch: state.data.current_branch\n  })\n   \nexport default connect(mapStateToProps)(Sidebar)","import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilterAction } from '../../Redux/actions'\n\nfunction Header({changeFilter, search_word}) {\n\n   const [search, setSearch] = useState('')\n\n    const handleSearch = (event) => {\n        if (event.key !== 'Enter') return\n        event.preventDefault()\n        if (event.key === 'Enter') changeFilter(search)\n    }\n\n    \n\n    return (\n        <div className = 'Header'>\n            <div className = 'headerTitle'>Заказы</div>\n            <div className = 'imputSearch'>\n                <form>\n                    <input \n                        className = 'imputSearchForm' \n                        placeholder = 'Минимум 3 символа'\n                        onChange={event => setSearch(event.target.value)}\n                        onKeyPressCapture={event => handleSearch(event)}\n                        value = {search}\n                        />\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    search_word: state.data.search_word\n})\n\nconst mapDispatchToProps = {\n    changeFilter: changeFilterAction\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Header)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { activeBadgeAction } from '../../Redux/actions'\n\n\n\n\nfunction MainFilter({data: {color, title, count, img, filters}, activeBadge}) { \n\n    return (\n        <div \n        className = 'mainFilter' \n        style = {{backgroundColor: color}}\n        onClick = {() => activeBadge(filters)}\n        >\n            <div className = 'filterIcon'>\n                <svg className = \"svgFilterIcon\">\n                    <path  d = {img}></path>\n                </svg>\n            </div>\n            <div className = 'filterName'>\n                <div className = 'filterName-value'>{count} {count === 1 ? 'заказ': ((count < 5) ? 'заказа': 'заказов') }</div>\n                <div className = 'filterName-title'> {title}</div>\n            </div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    activeBadge: activeBadgeAction\n}\n\nexport default connect(null, mapDispatchToProps) (MainFilter);","import React from 'react'\nimport MainFilter from './MainFilter';\nimport dataMainFilters from '../../data/dataMainFilters'\nimport { connect } from 'react-redux';\n\n\nfunction Filters({badges}) {\n \n    return (\n        <div className = 'mainFilters'>\n            {badges.map(badge => {\n                return (\n                   badge.count ? <MainFilter data = {badge} key = {badge.id}/> : null\n                    )\n                }\n            )\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    badges: state.data.badges\n})\n\nexport default connect(mapStateToProps) (Filters);","import store from '../store'\n\nexport function getRequestConfig(body = {}) {\n\n  const state = store.getState()\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${state.data.token}`,\n      Accept: 'application/json',\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nexport function bad_request(massage='') {\n    sessionStorage.clear()\n    console.warn(massage)\n    return { type: 'LOGUOT' }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function editOrder(order) {\n    return {\n        type: 'EDIT_ORDER',\n        order\n    }\n}\n\nexport function resetOrder() {\n    return {\n        type: 'RESET_ORDER'\n    }\n}\n\nexport function addOrders() {\n\n    const state = store.getState()\n\n    let filters = state.filter.mainFilter\n    filters.engineer_id = !state.data.user.role.orders_visibility ? [state.data.user.id] : state.filter.mainFilter.engineer_id\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function createOrder() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        estimated_done_at: state.order.estimated_done_at,\n\n        order_type_id: state.order.order_type_id,\n        client_id: state.order.client.id,\n        ad_campaign_id: state.order.ad_campaign_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id ? state.order.engineer_id : null,\n        created_by_id: state.data.user.id,\n        branch_id: state.data.current_branch.id,\n        status_id: 1,\n\n        equipments: state.order.equipments,\n\n        manager_notes: state.order.manager_notes,\n        estimated_cost: state.order.estimated_cost\n    })\n\n    let filters = state.filter.mainFilter\n    filters.engineer_id = !state.data.user.role.orders_visibility ? [state.data.user.id] : state.filter.mainFilter.engineer_id\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderEditor',\n            value: false\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if(state.view.checkOrderSticker) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderSticker',\n                        value: true\n                    })\n                }\n            })\n            .catch(() => bad_request('Запрос на создание заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'ordersShow',\n                        data: data.data\n                    })\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'count',\n                        data: data.count\n                    })\n                    dispatch({\n                        type: 'RESET_ORDER'\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function changeStatus(status_id, order_id) {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        id: order_id,\n        status_id: status_id\n    })\n    const request_config2 = getRequestConfig(state.filter.mainFilter)\n\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/change_order_status', request_config1)\n            .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    if (state.order.edit) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data.find(order => order.id === state.order.edit),\n                        })\n                    }\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: false\n        })\n    }\n}\n\nexport function saveOrder() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.order.edit,\n        assigned_at: state.order.assigned_at,\n        duration: state.order.duration,\n        estimated_done_at: state.order.estimated_done_at,\n        scheduled_for: state.order.scheduled_for,\n        warranty_date: state.order.warranty_date,\n        status_deadline: state.order.status_deadline,\n\n        ad_campaign_id: state.order.ad_campaign_id,\n        client: state.order.client.id,\n        order_type_id: state.order_type_id,\n        manager_id: state.order.manager_id,\n        engineer_id: state.order.engineer_id,\n        kindof_good: state.order.kindof_good.id,\n        brand: state.order.brand.id,\n        subtype: state.order.subtype.id,\n        model: state.order.model.id,\n\n        serial: state.order.serial,\n        malfunction: state.order.malfunction,\n        packagelist: state.order.packagelist,\n        appearance: state.order.appearance,\n        engineer_notes: state.order.engineer_notes,\n        manager_notes: state.order.manager_notes,\n        resume: state.order.resume,\n        cell: state.order.cell,\n\n        estimated_cost: state.order.estimated_cost,\n        urgent: state.order.urgent\n    })\n    request_config.method = 'PUT'\n\n    let filters = state.filter.mainFilter\n    filters.engineer_id = !state.data.user.role.orders_visibility ? [state.data.user.id] : state.filter.mainFilter.engineer_id\n\n    return async dispatch => {\n\n        await  dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusOrderLoader',\n            value: true\n        })\n\n        await fetch(state.data.url_server + '/orders', request_config)\n            .catch(() => bad_request('Запрос на изменение заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n        await fetch(state.data.url_server + '/get_orders', getRequestConfig(filters))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_ORDERS_SHOW',\n                        ordersShow: data.data,\n                        count: data.count\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusOrderLoader',\n                        value: false\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\nexport function saveOrderPyaments() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.order.edit,\n        discount_sum: state.order.discount_sum,\n        payed: state.order.payed,\n        price: state.order.price,\n    })\n    request_config.method = 'PUT'\n\n     return async dispatch => {\n\n         await  fetch(state.data.url_server + '/orders', request_config)\n             .catch(() => bad_request('Запрос на изменение заказов не выполнен'))\n     }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changeBookForm(value, field) {\n    return {\n        type: 'CHANGE_BOOK_FORM',\n        field,\n        value,\n    }\n}\n\nexport function resetBookEquipment() {\n    return {\n        type: 'RESET_BOOK_EQUIPMENT',\n    }\n}\n\nexport function chooseBookSelected(value, field) {\n    return {\n        type: 'CHOOSE_BOOK_SELECTED',\n        field,\n        value,\n    }\n}\n\nexport function createEType() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на создание типа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEbrand() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config1)\n            .catch(() => bad_request('Запрос на создание бренда не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function createESubtype() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false,\n        img: state.book.img\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config1)\n            .catch(() => bad_request('Запрос на создание подтипа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEModel() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_subtype_id: state.book.parent_id,\n        branches: state.book.branches,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .catch(() => bad_request('Запрос на создание модели не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function createEquipmentType(title) {\n    const state = store.getState()\n\n    const request_config1 = title ? getRequestConfig({title})\n        : getRequestConfig({\n            title: state.book.title,\n            icon: state.book.icon,\n            url: state.book.url,\n            branches: state.book.branches,\n            deleted: false\n        })\n\n    const request_config2 = getRequestConfig({\n        title,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на создание типа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function addEquipmentType() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return (dispatch) => {\n        fetch(state.data.url_server + '/get_equipment_type', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function createEquipmentBrand(idx, title) {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_type_id: state.order.edit\n            ? state.order.kindof_good.id\n            : state.order.equipments[idx].kindof_good.id,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title,\n        equipment_type_id: state.book.equipment_type.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config)\n            .catch(() => bad_request('Запрос на создание бренда не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function addEquipmentBrand() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос брендов не выполнен'))\n    }\n}\n\nexport function cteateEquipmentSubtype(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_brand_id: state.order.edit\n            ? state.order.brand.id\n            : state.order.equipments[idx].brand.id,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title,\n        equipment_brand_id: state.book.equipment_brand.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config)\n            .catch(() => bad_request('Запрос на создание подтипа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function addEquipmentSubtype() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос модулей не выполнен'))\n    }\n}\n\nexport function createEquipmentModel(idx, title) {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title,\n        equipment_subtype_id: state.order.edit ?\n            state.order.subtype.id\n            : state.order.equipments[idx].subtype.id,\n        deleted: false\n    })\n\n    const request_config2 = getRequestConfig({\n        title,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n        await fetch(state.data.url_server + '/equipment_model', request_config)\n            .catch(() => bad_request('Запрос на создание модели не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\nexport function addEquipmentModel() {\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/get_equipment_model', request_config)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models_count',\n                        value: data.count,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос моделей не выполнен'))\n    }\n}\n\n// export function seveEditEquipment( ) {\n\n//   const state = store.getState()\n\n//   const field_lidt = ['equipment', 'equipment_type_id', 'equipment_brand_id', 'equipment_subtype_id']\n//   const url_list = ['/equipment_type', '/equipment_brand', '/equipment_subtype', '/equipment_model']\n//   const list_func = [addEquipmentType, addEquipmentBrand, addEquipmentSubtype, addEquipmentModel]\n\n//   let request_config = getRequestConfig({\n//     id: state.book.edit,\n//     title: state.book.title,\n//     icon: state.book.icon,\n//     url: state.book.url,\n//     [field_lidt[state.book.type]]: state.book.parent_id,\n//     branches: state.book.branches\n//   })\n//   request_config.method = 'PUT'\n\n//   return async dispatch => {\n\n//     await fetch(state.data.url_server + url_list[state.book.type], request_config)\n//     .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n//     list_func[state.book.type]()\n//   }\n// }\n\nexport function seveEquipmentType() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_type,\n        page: state.book.page_type - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentBrand() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_type_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        page: state.book.page_brand - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async dispatch => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentSubtype() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        img: state.book.img,\n        equipment_brand_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        page: state.book.page_subtype - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function seveEquipmentModel() {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        title: state.book.title,\n        icon: state.book.icon,\n        url: state.book.url,\n        equipment_model_id: state.book.parent_id,\n        branches: state.book.branches,\n        list_for_join: state.book.list_for_join.map((equipment) => equipment.id),\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        page: state.book.page_model - 1,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_model', request_config1)\n            .catch(() => bad_request('Запрос на изменение данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentType(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_type,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_type', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_type', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_types',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_type_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentBrand(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_brand,\n        equipment_type_id: state.book.equipment_type.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_brand', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_brand', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brands',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_brand_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentSubtype(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_subtype,\n        equipment_brand_id: state.book.equipment_brand.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_subtype', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_subtype', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtypes',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_subtype_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n\nexport function deleteEquipmentModel(flag) {\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.book.edit,\n        deleted: flag,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        title: state.book.filter_model,\n        equipment_subtype_id: state.book.equipment_subtype.id,\n        deleted: state.book.showDeleted\n    })\n\n    return async (dispatch) => {\n        await fetch(state.data.url_server + '/equipment_model', request_config1)\n            .catch(() => bad_request('Запрос на удаление данных изделия не выполнен'))\n\n        await fetch(state.data.url_server + '/get_equipment_model', request_config2)\n            .then((response) => response.json())\n            .then((data) => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_models',\n                        value: data.data,\n                    })\n                    dispatch({\n                        type: 'CHANGE_BOOK_FORM',\n                        field: 'equipment_model_count',\n                        value: data.count,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusEquipmentEditor',\n                        value: false,\n                    })\n                    dispatch({\n                        type: 'RESET_BOOK_EQUIPMENT',\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос типов тихеники не выполнен'))\n    }\n}\n","import React from 'react'\nimport './Loader.css'\n\n\n\nconst Loader = props => {\n    return (\n        <div className={props.className}>\n            <div className = \"lds-spinner\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )    \n}\n\nexport default Loader","import React from 'react'\nimport { connect } from 'react-redux'\n\n\n\nconst Create = ({data: { created_by_id, created_at}, employees}) => {\n\n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n   return (\n      <td>\n      {/* Возвращаем имя инженера создавшего заказ через его ID */}\n      <div>{getEmploeeName(created_by_id)}</div>\n      {/* Выводим и форматируем дату создания */}\n      <div className=\"orderDate\">\n        {new Date(created_at * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Create)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Lable = ({data: {id_label, urgent}}) => {\n   return (\n      <td className=\"orderLabel tableRow\">\n         <span className={urgent ? 'fire-text': null}>{ id_label }</span>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Lable)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { icon_clock } from '../../../data/icons'\nimport Icon from '../../general/Icon'\n\nconst EstimatedDone = ({data : {estimated_done_at, overdue, status, remaining }}) => {\n   \n   const optionsShowDate = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    }\n\n    function getDateEstimated(datestamp, statusGroop) {\n      if (statusGroop > 3) return '-'\n      const deltaMinut = Math.round( datestamp / 60 )\n      if (Math.abs(deltaMinut) < 60) return `${deltaMinut}м.`\n      const deltaHour = Math.round( datestamp / (60 * 60 ))\n      if (Math.abs(deltaHour) < 24) return `${deltaHour}ч.`\n      const deltaDay = Math.round( datestamp / (24 * 60 * 60 ))\n      return `${deltaDay}д.`\n    }\n\n   return (\n      <td>\n      {/* Вывожу иконку времени с цветовой зависимостью от статуса и времени просрочки */}\n      <div className=\"estimated-top\">\n        <Icon \n          icon={icon_clock} \n          className='clockEstimated'\n          color={(!overdue && status.group < 4) ? '#f0ad4e' : '#ebebeb'}\n        />\n        {/* Вывожу разницу времени от создания до плановой даты готовности в днях или часах */}\n        <span>{getDateEstimated(remaining, status.group)}</span>\n      </div>\n      {/* Вывожу форматированую дату готовности */}\n      <div className=\"orderDate\">\n        {new Date(estimated_done_at * 1000).toLocaleString('ru', optionsShowDate ).replace('г.,', '')}\n      </div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EstimatedDone)","import React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { changeSortAction } from '../../Redux/actions'\n\n\nfunction TableHeader(props) {\n\n  //  let startDrag = 0\n  //  let endDrag = 0\n  //  let deltaDrag = 0\n   \n   \n   \n  //  function handleDragStart(event) {\n  //     startDrag = event.pageX\n      \n      \n  //  }\n\n  //  function handleDragEnd(event) {\n  //     endDrag = event.pageX\n  //     deltaDrag = endDrag - startDrag \n  //     console.log('отрезок :', deltaDrag)\n  //     const currentSize = parseInt(tableOrdersHeaders.find(header => header.field === data.field).width)\n  //     resizeOrderHeader(data.field,  currentSize + deltaDrag)\n\n  //  }\n\n\n\n\n  return (\n     <>\n    <th className = 'tableColumnHeader'\n      style = {{ minWidth: `${props.data.width}px` }}\n      onClick = {() => props.changeSort(props.data.field)}\n    >\n      {props.data.title}\n      <span>\n        {props.mainFilter.field_sort === props.data.field ? (props.mainFilter.sort === 'asc' ? '↓' : '↑') : null}\n      </span>\n    </th>\n    {/* <th \n    className = 'cursorResizeTable'\n    onDragStart = {handleDragStart}\n    onDragEnd = {handleDragEnd}\n    /> */}\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  mainFilter: state.filter.mainFilter\n})\n\nconst mapDispatchToProps = {\n  changeSort: changeSortAction,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (TableHeader)\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changePaymentForm(value, field) {\n    return {\n        type: 'CHANGE_PAYMENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function addPaymentTag(tag) {\n    return {\n        type: 'ADD_PAYMENT_TAG',\n        tag\n    }\n}\n\nexport function deletePaymentTag(idx) {\n    return {\n        type: 'DELETE_PAYMENT_TAG',\n        idx\n    }\n}\n\nexport function resetPayments() {\n    return {\n        type: 'RESET_PAYMENTS'\n    }\n}\n\nexport function createPayment(context) {\n\n    const state = store.getState()\n\n    const now = Math.round(Date.now() / 1000)\n    const cashbox1 = state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).title\n    const cashbox2 = state.payment.target_cashbox_id ? state.data.cashboxes.find(cashbox => cashbox.id === state.payment.target_cashbox_id).title : ''\n\n    const disc = `Перемещение денег из кассы \"${cashbox1}\" в кассу \"${cashbox2}\".`\n\n    const request_config = getRequestConfig({\n        cashflow_category: state.payment.direction ? state.data.item_payments.find(item => item.id === state.payment.cashflow_category).title : null,\n        description: state.payment.direction ? state.payment.description : disc + state.payment.description,\n        deposit: state.data.cashboxes.find(cashbox => cashbox.id === state.payment.cashbox_id).balance + state.payment.income - state.payment.outcome,\n        income: state.payment.income,\n        outcome: -state.payment.outcome,\n        direction: state.payment.direction,\n        deleted: false,\n        can_print_fiscal: state.payment.can_print_fiscal,\n        is_fiscal: state.payment.is_fiscal,\n        created_at: now,\n        custom_created_at: state.payment.custom_created_at ? state.payment.custom_created_at : now,\n        tags: state.payment.tags,\n        cashbox_id: state.payment.cashbox_id ? state.payment.cashbox_id : null,\n        client_id: state.payment.client_id ? state.payment.client_id : null,\n        employee_id: state.payment.employee_id,\n        order_id: state.payment.order_id ? state.payment.order_id : null,\n        target_cashbox_id: state.payment.direction ? null : state.payment.target_cashbox_id\n    })\n\n    const request_config_2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на создание платежа не выполнен'))\n\n        if (context.type === 'payment') {\n            await fetch(state.data.url_server + '/get_payments', request_config_2)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'payments',\n                            data: data.data,\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос платежей не выполнен'))\n\n            await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_DATA',\n                            field: 'cashboxes',\n                            data: data.data,\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос касс не выполнен'))\n        }\n\n        if (context.type === 'order') {\n            fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0]\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order') {\n            const request_config3 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config4 = getRequestConfig(state.filter.mainFilter)\n\n            await fetch(state.data.url_server + '/change_order_status', request_config3)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config4)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'ADD_ORDERS_SHOW',\n                            ordersShow: data.data,\n                            count: data.count\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос заказов не выполнен'))\n        }\n\n        if (context.type === 'closed_order_editor') {\n            const request_config5 = getRequestConfig({\n                id: context.order_id,\n                status_id: context.status_id\n            })\n            const request_config6 = getRequestConfig({\n                id: context.order_id\n            })\n\n            await fetch(state.data.url_server + '/change_order_status', request_config5)\n                .catch(() => bad_request('Запрос изменения статуса заказа не выполнен'))\n\n            await fetch(state.data.url_server + '/get_orders', request_config6)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.success) {\n                        dispatch({\n                            type: 'EDIT_ORDER',\n                            order: data.data[0],\n                        })\n                        dispatch({\n                            type: 'SET_VISIBLE_FLAG',\n                            field: 'statusPaymentsEditor',\n                            value: false\n                        })\n                        dispatch({\n                            type: 'RESET_PAYMENTS'\n                        })\n                    } else {\n                        console.warn(data.massage)\n                    }\n                })\n                .catch(() => bad_request('Запрос на обновление заказа не выполнен'))\n        }\n    }\n}\n\nexport function addPayments() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_payments', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n    }\n}\n\nexport function deletePayment(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.payment.edit,\n        relation_id: state.payment.relation_id ? state.payment.relation_id : null,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        custom_created_at: [state.payment.filter_created_at[0], state.payment.filter_created_at[1] + 86399],\n        cashbox_id: state.cashbox.current_cashbox.id,\n        tags: state.payment.filter_tags.length ? state.payment.filter_tags : null\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/payments', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление платежа не выполнен'))\n\n        await fetch(state.data.url_server + '/get_payments', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'payments',\n                        data: data.data,\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPaymentsCard',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PAYMENTS'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос платежей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_cashbox', getRequestConfig())\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'ADD_DATA',\n                        field: 'cashboxes',\n                        data: data.data,\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос касс не выполнен'))\n    }\n}","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {changeStatusMenuVisible, editCurrentClient, refreshDataOrder, setVisibleFlag} from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\n\nfunction StatusListGroup(props) {\n\n    const handleClick = (status) => {\n        if (props.groupIdx === 5 && props.order.price !== props.order.payed){\n            const income = props.order.price > props.order.payed\n            props.changePaymentForm(income ? 2 : 1, 'direction')\n            props.changePaymentForm(Math.abs(props.order.price - props.order.payed), income ? 'income': 'outcome')\n            props.changePaymentForm(props.order.client.id, 'client_id')\n            props.editCurrentClient(props.order.client)\n            props.changePaymentForm(income ? `Оплата по заказу № ${props.order.id_label}` : `Выплата по заказу № ${props.order.id_label}`, 'description')\n            props.changePaymentForm(income ? 2 : 1, 'direction')\n            props.changePaymentForm(income ? 2 : 8, 'cashflow_category')\n            props.changePaymentForm(props.current_user_id, 'employee_id')\n            props.changePaymentForm(props.order.edit || props.order.id, 'order_id')\n            const context = {\n                type: props.order.edit ? 'closed_order_editor' : 'closed_order',\n                order_id: props.order.edit || props.order.id,\n                status_id: status.id\n            }\n            props.changePaymentForm(context, 'context')\n            props.setVisibleFlag('statusPaymentsEditor', true)\n        } else {\n            if (props.order.edit) {\n                props.changeStatus(status.id, props.order.edit)\n                props.refreshDataOrder(props.order.edit)\n            } else {\n                props.changeStatus(status.id, props.order.id)\n                props.changeStatusMenuVisible(props.order.id)\n            }\n        }\n\n    }\n\n    return (\n        <>\n            <span>{props.groupName}</span>\n            {props.status.filter((status) => status.group === props.groupIdx + 1)\n                .map((status) => {\n                    return (\n                        <li\n                            key={status.id}\n                            className=\"statusListRow\"\n                            style={{backgroundColor: status.color}}\n                            onClick={() => handleClick(status) }\n                        >\n                            {status.name}\n                        </li>\n                    )\n                })}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    status: state.data.status,\n    // order: state.order,\n    current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible,\n    changeStatus,\n    addOrders,\n    refreshDataOrder,\n    changePaymentForm,\n    setVisibleFlag,\n    editCurrentClient\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusListGroup)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStatusMenuVisible, setVisibleFlag } from '../../Redux/actions'\nimport StatusListGroup from './StatusListGroup'\n\nfunction StatusList(props) {\n  const groupName = [\n    'Новые',\n    'На исполнении',\n    'Отложенные',\n    'Готовые',\n    '',\n    'Закрытые успешно',\n    'Закрытые не успешно',\n  ]\n\n  const clichHandel = (event) => {\n    if (!event.path.map(el => el.id).includes('statusListOrderForm')) {\n      props.changeStatusMenuVisible(props.order.id)\n      props.setVisibleFlag('statusStatusList', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clichHandel)\n    return () => {\n      window.removeEventListener('click', clichHandel)\n    }\n  })\n\n  return (\n    <div className=\"statusList\" id=\"statusList\">\n      {groupName.map((groupName, idx) => (\n        <StatusListGroup\n          key={idx + groupName}\n          groupName={groupName}\n          groupIdx={idx}\n          order={props.order}\n        />\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = {\n  changeStatusMenuVisible,\n  setVisibleFlag\n}\n\nexport default connect(null, mapDispatchToProps) (StatusList)\n","import React from 'react'\nimport {connect} from 'react-redux'\n\nimport StatusList from '../StatusList'\nimport {changeStatusMenuVisible} from '../../../Redux/actions'\n\nconst Status = props => {\n\n\n    return (\n        <td>\n            <div className=\"orderStatus\">\n        <span>\n            <button\n                className=\"statusButtom\"\n                type=\"button\"\n                style={{backgroundColor: props.data.status.color}}\n                onClick={() => props.changeStatusMenuVisible(props.data.id)}\n            >\n                {props.data.status.name}\n                <span className=\"statusSeparate\"> | &#6662;</span>\n            </button>\n            {props.statusMenuVisible[[props.data.id]] ? <StatusList order={props.data}/> : null}\n        </span>\n            </div>\n        </td>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusMenuVisible: state.view.statusMenuVisible\n})\n\nconst mapDispatchToProps = {\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Status)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Brand = ({data: {brand}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {brand.title}\n     </span>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Brand)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst KindOfGood = ({data: {kindof_good}}) => {\n   return (\n     <td>\n     <span className=\"tableText\">\n       {kindof_good}\n     </span>\n   </td>\n   )\n}\n\n// const mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n// })\n  \n export default connect(null, null)(KindOfGood)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Malfunction = ({data: {malfunction}}) => {\n   return (\n    <td>\n      <div className=\"tableText tableOne\">\n         {malfunction}\n      </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Malfunction)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Engineer = ({data: {engineer_id}, employees}) => {\n\n   function getEmploeeName(id) {\n      if (id) {\n        let employee = employees.find((employee) => employee.id === id)\n        return `${employee.last_name} ${employee.first_name}`\n      }\n    }\n\n   return (\n     <td>\n     <div>\n        {getEmploeeName(engineer_id)}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees\n   })\n  \n export default connect(mapStateToProps)(Engineer)","const optionsShowDate = {\n   year: 'numeric',\n   month: 'long',\n   day: 'numeric',\n   hour: 'numeric',\n   minute: 'numeric',\n   // second: 'numeric'\n }\n\n/**\n * Приодит номер телефона к читабильному виду\n *\n * @param {number} phone The phone number in the format 71234567890\n * @return {string} The phone number in the string '+7 (123) 456-78-90'\n */\nexport function showPhone (phone) {\n   return `+${phone.slice(0, 1)}(${phone.slice(1, 4)}) ${phone.slice(4, 7)}-${phone.slice(7, 10)}-${phone.slice(9, 12)}`\n}\n\nexport function check0_100 (value) {\n   return !(value < 0 || value > 100) && !isNaN(value)\n}\n\nexport function check0_999 (value) {\n   return value > 0 && !isNaN(value)\n}\n\nexport function showName (employee) {\n   return `${employee.last_name} ${employee.first_name}`\n}\n\nexport function showDate (date) {\n   return new Date(date * 1000).toLocaleString('ru', optionsShowDate).replace('г.,', '')\n}\n\nexport function currentMonth() {\n   let today = new Date\n   let start_date = new Date\n   start_date.setDate(1)\n   start_date.setHours(0, 0, 0, 0)\n   return [parseInt(start_date / 1000), parseInt(today / 1000)]\n}\n\nexport function valueOfPhoneInput(number) {\n   if (number) {\n      switch (number.length) {\n         case 0: \n            return ''\n         case 1:\n            return `+${number[0]}`\n         case 2:\n            return `+${number[0]} (${number[1]}`\n         case 3:\n            return `+${number[0]} (${number[1]}${number[2]}`\n         case 4:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}`\n         case 5:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}`\n         case 6:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}`\n         case 7:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}`\n         case 8:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}`\n         case 9:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}`\n         case 10:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}`\n         case 11:\n            return `+${number[0]} (${number[1]}${number[2]}${number[3]}) ${number[4]}${number[5]}${number[6]}-${number[7]}${number[8]}-${number[9]}${number[10]}`\n      } \n   } else {\n      return ''\n   }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { showPhone } from '../../general/utils'\n\nconst Client = ({data: {client}}) => {\n   return (\n      <td>\n      <div className=\"tableClientName\">{client.name}</div>\n      <div className=\"orderDate\">{showPhone(client.phone[0].number)}</div>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Client)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Price = ({data: {price}}) => {\n   return (\n      <td className=\"tablePrice\">\n      <span>{price ? price : null}</span>\n    </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Price)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst EngineerNotes = ({data: {engineer_notes}}) => {\n   return (\n     <td>\n     <div className=\"tableText tableOne\">\n       {engineer_notes}\n     </div>\n   </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(EngineerNotes)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../../general/Icon'\n\nconst Equipment = ({ data }) => {\n   return (\n     <td>\n         <div className=\"tableText row\">\n            <div>\n               <img\n                  className=\"icon_equipment\"\n                  src={data.kindof_good.icon}\n               />\n            </div>\n            <div>\n               <div className='noWr'>\n                  {data.kindof_good.icon ? null : <span className=\"\">{data.kindof_good.title}</span>}\n                  <span className=\"ml5\">{data.brand.title}</span>\n               </div>\n               <div className='noWr'>\n                  <span>{data.subtype.title}</span>\n                  <span className=\"orderDate ml5\">{data.model.title}</span>\n               </div>\n            </div>\n         </div>\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   //   dataSidebarRows: 'dataSidebarRows',\n})\n  \n export default connect(mapStateToProps)(Equipment)","import React from 'react'\n\nimport { icon_trush, icon_spinner } from '../../data/icons'\n\n/**\n* Кнопки сниза панели редактора\n*\n * edit={props.edit} // Новый заказ или редактируем существующий\n *\n * deleted={props.deleted} // Удален ли заказ\n *\n * create={() => console.log('create')} // Функция создания нового\n *\n * save={() => console.log('save')} // Функция сохранения уже существующего\n *\n * delete={() => console.log('delete')} // Функция удаления\n *\n * recover={() => console.log('recover')} // Фунция восстановления\n *\n * close={() => console.log('close')} // Функция закрытия редактора\n *\n */\nconst BottomButtons = (props) => {\n  const buttomCreate = props.create ? (\n    <div className=\"blueButton mr-lf-0 \" onClick={props.create}>\n      Создать\n    </div>\n  ) : null\n\n  const buttomSave = props.save ? (\n    <div className=\"blueButton mr-lf-0\" onClick={props.save}>\n      Сохранить\n    </div>\n  ) : null\n\n  const buttomClose = props.close ? (\n    <div className=\"whiteBlueBotton\" onClick={props.close}>\n      Закрыть\n    </div>\n  ) : null\n\n  const buttomDelete = props.delete ? (\n    <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n      <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n        <path d={icon_trush} />\n      </svg>\n    </div>\n  ) : null\n\n  const buttomRecover = props.recover ? (\n    <div \n      className={`${props.recover ? 'blueButton' : 'greyDisbledButton'} mr-lf-0`} \n      onClick={props.recover}\n    >\n      <svg className=\"icon-recover\" viewBox=\"0 0 32 32\">\n        <path d={icon_spinner} />\n      </svg>\n      Восстановить\n    </div>\n  ) : null\n\n  return (\n    <div className=\"buttons_ mt15\">\n      <div className=\"buttons\">\n        {props.edit ? (props.deleted ? buttomRecover : buttomSave): buttomCreate}\n        {buttomClose}\n      </div>\n      {props.edit && !props.deleted ? buttomDelete : null}\n    </div>\n  )\n}\n\nexport default BottomButtons\n\n// edit={props.edit}\n// deleted={props.deleted}\n// create={() => console.log('create')}\n// save={() => console.log('save')}\n// delete={() => console.log('delete')}\n// recover={() => console.log('recover')}\n// close={() => console.log('close')}\n","import React, { useState } from 'react'\nimport PropTypes from \"prop-types\"\n\n/**\n *\n * className='className'\n *\n * title= Подпись'\n *\n * name={['Имя1', 'Имя2']}\n *\n * func1 = {() => function()}\n *\n * func2 = {() => function()}\n *\n * checked = { true }\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseBotton = (props) => {\n\n   const [stateButton, setStateButton] = useState(props.checked ? props.checked : false)\n\n   return props.unvisible ? (<div/>) : (\n      <div className={props.className}>\n         <div className='lableImput'>{props.title}</div>\n         <div className='checkButton'>\n            <div \n            className={stateButton ? 'checkButtonTwo' : 'checkButtonOne'}\n            onClick={props.disabled ? null : () => {\n               setStateButton(true)\n               props.func1()\n            }}\n            > \n               {props.name[0]}\n            </div>\n            <div \n            className={stateButton ? 'checkButtonOne' : 'checkButtonTwo'}\n            onClick={props.disabled ? null :() => {\n               setStateButton(false)\n               props.func2()\n            }}\n            >\n               {props.name[1]}\n            </div>\n         </div>\n      </div>\n   )\n}\n\nChooseBotton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.arrayOf(PropTypes.string),\n    func1: PropTypes.func,\n    func2: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    unvisible: PropTypes.bool\n}\n\n export default ChooseBotton\n\n\n\n\n// className='className'\n// title= Подпись'\n// name={['Имя1', 'Имя2']}\n// func1 = {() => function()}\n// func2 = {() => function()}\n// checked = { true }\n// disabled={false}\n// unvisible={false}","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeClientForm( value, field ) {\n    return {\n        type: 'CHANGE_CLIENT_FORM',\n        field,\n        value\n    }\n}\n\n/*\nexport function editTemple(temple) {\n    return {\n        type: 'EDIT_TEMPLE',\n        temple\n    }\n}\n\nexport function resetTemple() {\n    return {\n        type: 'RESET_TEMPLE'\n    }\n}\n\n\nexport function selectedTemple( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_TEMPLE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addTemple() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_temple', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function createTemple() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на создание temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n\n\nexport function saveTemple() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на изменение temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.temple.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        ability1: 0,\n        ability2: 0\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/temple', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление temple не выполнен'))\n\n        await fetch(state.data.url_server + '/get_temple', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_TEMPLE_FORM',\n                        field: 'temple',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusTempleEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_TEMPLE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос temple не выполнен'))\n\n    }\n}\n\n*/","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientBalans = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Балансы клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientBalans)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientCalls = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Звонки</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCalls)","import React, { useState } from 'react'\n\n\nconst AddTags = (props) => {\n\n   const [inputValue, setInputValue] = useState('')\n\n   const handelPresEnter = event =>{\n      props.addTag(event.target.value)\n      setInputValue('')\n   }\n   \n\n   return (\n   <div className={props.className}>\n      <div className=\"lableImput\">Теги</div>\n      <div className='tagBox'> \n         <div className='icon_tag'/>\n         {props.tags.map((tag, idx) => \n         <div className='tag' key={idx}>\n            <div \n               className='icon_close'\n               onClick={() => props.daleteTag(idx)}\n            />\n            <div>{tag}</div>\n         </div>)\n         }\n         <input \n            className='optionFilterInput w150'\n            onKeyPress={event => {if (event.key === 'Enter') {handelPresEnter(event)}}}\n            value={inputValue}\n            onChange={event => setInputValue(event.target.value)}\n         />\n      </div>\n   </div>\n   )\n}\n\n export default AddTags\n\n//  tags={}\n//  daleteTag={}\n//  addTag={}\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n/**\n * id='idElement'\n *\n * title='Наменование'\n *\n * className='className'\n *\n * list={props.list}\n *\n * field='field'\n *\n * setElement={props.setElement}\n *\n * current_id={props.current_id}\n *\n * width={'250px'}\n *\n * employee={false}\n *\n * checkedFlag='checkedFlag'\n *\n * checked={flag}\n *\n * noChoosed='Выберете тип'\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\nconst ChooseOfList = (props) => {\n\n   const [listVisible, setListVisible] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const current = props.list.find(element => element.id === props.current_id)\n\n   const handleClickChecked = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n      props.setVisibleFlag(props.checkedFlag, true)\n   }\n\n   const handleClick = (element) => {\n      props.setElement(element.id, props.field ? props.field : null)\n      setListVisible(false)\n   }\n\n   const noChoosed = props.noChoosed || 'Выберете тип'\n\n   return props.unvisible ? (<div/>) : (\n      <div \n         className={props.className}\n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n      >\n         <div className='lableImput'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div \n            className='optionsButton' \n            onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            style={props.checkedFlag && !props.checked ? { borderColor: 'red' } : null}\n         >\n            <div className='noWr'>\n               {props.employee ? \n               (props.current_id ? `${current.last_name} ${current.first_name}` : 'не назначен') : \n               (props.current_id ? (current.title ? current.title : current.name) : noChoosed)}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо выбрать'}</div> : null}\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n                  onClick={props.checkedFlag ? () => handleClickChecked(element) : () => handleClick(element)}\n               >\n                  {props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\nChooseOfList.propTypes = {\n   id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   title: PropTypes.string,\n   className: PropTypes.string,\n   list: PropTypes.arrayOf(PropTypes.object),\n   field: PropTypes.string,\n   setElement: PropTypes.func,\n   current_id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n   width: PropTypes.string,\n   employee: PropTypes.bool,\n   checkedFlag: PropTypes.string,\n   checked: PropTypes.bool,\n   disabled: PropTypes.bool,\n   unvisible: PropTypes.bool\n}\n\n// const mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n// })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n\n  \n export default connect(null, mapDispatchToProps)(ChooseOfList)\n\n\n   // id={}\n   // title='Наменование'\n   // className='className'\n   // list={props.list}\n   // field='field'\n   // setElement={props.setElement}\n   // current_id={props.current_id}\n   // width={'250px'}\n   // employee={false}\n   // checkedFlag='checkedFlag'\n   // checked={flag}\n   // disabled={false}\n   // unvisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport { valueOfPhoneInput } from './utils'\n\nconst LableInput = (props) => {\n\n   const handleChange = (event) => {\n      const out = event.target.value.replace(/[^0-9]/g, '')\n      if (out.length < 12) props.onChange(out)\n   }\n\n   return props.unvisible ? <div/> : (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <div className='row'>\n               <input \n                  className={`${props.unit ? 'numberInput' : 'textInput'} ${props.disabled ? 'ds' : null} ${props.inputClassName}`}\n                  style={{\n                     width: props.width ? props.width : null,\n                     borderColor: props.checkedFlag && !props.checked  ? 'red' : null\n                  }}\n                  name={props.name}\n                  onChange={props.isPhone ? handleChange : props.onChange}\n                  value={props.isPhone ? valueOfPhoneInput(props.value) : props.value}\n                  onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n                  // style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n                  disabled={props.disabled}\n               />\n               {props.unit ? <div className='ml5'>{props.unit}</div> : null}\n            </div>\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableInput.propTypes = {\n    className: PropTypes.string,\n    inputClassName: PropTypes.string,\n    width: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    unit: PropTypes.string,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string,\n    isPhone: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableInput)\n\n\n//  className=''\n//  inputClassName=''\n//  width=''\n//  title=''\n//  name=''\n//  onChange={}\n//  value={}\n//  unit=''\n//  checkedFlag=''\n//  checked={}\n//  disabled={}\n//  redStar={false}\n//  errorMassage=''\n//  isPhone={true}\n//  unvisible={false}","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * title='Наименование' // Наименование поля\n *\n * onChange={event => console.log(event.target.value)} // Функция изменения\n *\n * value={props.value} // Значение\n *\n * disabled={false} // Заблокировать\n *\n * checkedFlag='flagname' // Имя флага для проверки\n *\n * checked={props.statusChecked} // Флаг проверки\n *\n * redStar={true} // Добавить красную звездочку к наименованию поля\n *\n * errorMassage='errorMassage' // Ошибка при непройденой проверки\n *\n * @returns {JSX.Element}\n */\nconst LableArea = (props) => {\n\n   return (\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}{props.redStar ? <span className='redStar'>*</span> : null}</div>\n            <textarea \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleFlag(props.checkedFlag, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? {borderColor: 'red'} : null}\n               disabled={props.disabled}\n            />\n         {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необходимо заполнить'}</div> : null}\n      </div>\n   )\n}\n\nLableArea.propTypes ={\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    disabled: PropTypes.bool,\n    checkedFlag: PropTypes.string,\n    checked: PropTypes.bool,\n    redStar: PropTypes.bool,\n    errorMassage: PropTypes.string\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LableArea)\n\n// className=''\n// title=''\n// onChange={}\n// value={}\n// disabled={}\n// checkedFlag={}\n// checked={}\n// redStar={}\n// errorMassage=''","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport { changeClientForm} from '../../../Redux/actions/clientAction'\nimport { check0_100 } from '../../general/utils'\nimport AddTags from '../../general/AddTags'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableInput from '../../general/LableInput'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport LableArea from '../../general/LableArea'\n\nconst ClientAnotherInfo = (props) => {\n\n\n  return (\n    <div className=\"clientGenerally\">\n\n      <div className=\"orderFormTitle\">Прочее</div>\n      <LableInput\n        className='mt15 w250'\n        title='Скидочная карта'\n        onChange={event => props.changeClientForm(event.target.value, 'discount_code')}\n        value={props.client.discount_code}\n        disabled={props.client.deleted}\n      />\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на услуги в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_service_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_service_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_service_type ? (\n          <ChooseOfList\n            id={111}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 1)}\n            field='discount_service_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_service_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_services')}\n            value={props.client.discount_services}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscServChecked'\n            checked={check0_100(props.client.discount_services)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на материалы в Заказе и Счете'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_materials_type', false) }\n        func2 = {() =>  props.setClietnCheckbox('discount_materials_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_materials_type ? (\n          <ChooseOfList\n            id={11}\n            className='mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_materials_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_materials_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml15 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_materials')}\n            value={props.client.discount_materials}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscMatChecked'\n            checked={check0_100(props.client.discount_materials)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <div className='row al-itm-fs'>\n      <ChooseBotton\n        className='mt15'\n        title='Скидка на товары в Продажах'\n        name={['Фиксированная', 'От типа цены']}\n        func1 = {() => props.setClietnCheckbox('discount_good_type', false) }\n        func2 = {() => props.setClietnCheckbox('discount_good_type', true) }\n        checked = { true }\n        disabled={props.client.deleted}\n      />\n        {props.client.discount_good_type ? (\n          <ChooseOfList\n            id={12}\n            className='ml30 mt35 h27'\n            list={props.discount_margin.filter(margin => !margin.deleted && margin.margin_type === 2)}\n            field='discount_goods_margin_id'\n            setElement={props.changeClientForm}\n            current_id={props.client.discount_goods_margin_id}\n            width={'150px'}\n          />\n        ) : (\n          <LableInput\n            className='ml30 mt35'\n            onChange={event => props.changeClientForm(event.target.value.replace(/[^0-9]/g, ''), 'discount_goods')}\n            value={props.client.discount_goods}\n            unit='%'\n            disabled={props.client.deleted}\n            checkedFlag='inputClientDiscGoodChecked'\n            checked={check0_100(props.client.discount_goods)}\n            errorMassage='Введите значение от 0 до 100'\n          />\n        )}\n      </div>\n      <LableArea\n        className='mt15'\n        title='Примечание'\n        onChange={event => props.changeClientForm(event.target.value, 'notes')}\n        value={props.client.notes}\n        disabled={props.client.deleted}\n      />\n      <AddTags\n        tags={props.client.tags}\n        addTag={props.addClientTag}\n        daleteTag={props.deleteClientTag}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  discount_margin: state.data.discount_margin,\n  inputClientDiscServChecked: state.view.inputClientDiscServChecked,\n  inputClientDiscMatChecked: state.view.inputClientDiscMatChecked,\n  inputClientDiscGoodChecked: state.view.inputClientDiscGoodChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  addClientTag,\n  deleteClientTag,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientAnotherInfo)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n} from '../../../Redux/actions'\n\nconst PhoneTitle = (props) => {\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes(`listOptionsOfPhones${props.idx}`)\n    ) {\n      if (props.client.statusPhoneList[props.idx]) {\n        props.changeStatusPhoneList(props.idx)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div id={`listOptionsOfPhones${props.idx}`}>\n      <div\n        className=\"lableImput mt15 curP\"\n        onClick={() => props.changeStatusPhoneList(props.idx)}\n      >\n        {props.title}\n        {props.idx === 0 ? <span className=\"redStar\">*</span> : null}\n        <span className=\"smallIcon\">&#6662;</span>\n      </div>\n\n      {props.client.statusPhoneList[props.idx] ? (\n        <div className=\"listOptionsPhones\">\n          {props.client.phone_titles.map((title) => {\n            return (\n              <div\n                key={title}\n                className=\"options\"\n                onClick={() => {\n                  props.setPhoneTitle(props.idx, title)\n                }}\n              >\n                {title}\n              </div>\n            )\n          })}\n          <div className=\"btmsts\">\n            {props.client.statusAddTitle[props.idx] ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => { if (event.key === 'Enter') props.setPhoneTitle(props.idx, event.target.value)} }\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => props.changeStatusAddTitle(props.idx)}\n              >\n                Задать поле\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  changeStatusPhoneList,\n  setPhoneTitle,\n  changeStatusAddTitle,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneTitle)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n} from '../../../Redux/actions'\nimport PhoneTitle from './PhoneTitle'\nimport { icon_trush } from '../../../data/icons'\nimport { valueOfPhoneInput } from '../../general/utils'\n\nconst AddPhones = (props) => {\n\n  const handleChange = (idx, event) => {\n    const out = event.target.value.replace(/[^0-9]/g, '')\n    if (out.length < 12) props.changeClientEditorPhone(idx, out)\n }\n\n  return (\n    <div>\n      {props.client.phone.map((phone, idx) => (\n        <div key={idx}>\n          <PhoneTitle idx={idx} title={phone.title} />\n\n          <div className=\"inputPhoneBox\">\n            <input\n              className='textInput w250'\n              onChange={event => handleChange(idx, event)}\n              value={valueOfPhoneInput(phone.number)}\n              onBlur={event => props.setVisibleListFlag('inputClientPhoneChecked', idx, event.target.value.replace(/[^0-9]/g, '').length === 11)}\n              style={ !props.view.inputClientPhoneChecked[idx] ? { borderColor: 'red' } : null}\n            />\n            {idx !== 0 ? (\n              <div\n                onClick={() => {\n                  props.deleteCountNumber(idx)\n                  props.deleteVisibleFlag('inputClientPhoneChecked', idx)\n                }}\n              >\n                <svg className=\"icon-deletePhone\" viewBox=\"0 0 32 32\">\n                  <path d={icon_trush} />\n                </svg>\n              </div>\n            ) : null}\n          </div>\n          {!props.view.inputClientPhoneChecked[idx] ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n          <div className=\"checkbox mt5\">\n            <input\n              type=\"checkbox\"\n              onChange={() => props.setPhoneNotify(idx)}\n              checked={phone.notify}\n            />\n            <label>Согласен получать SMS</label>\n          </div>\n        </div>\n      ))}\n      <div\n        className=\"addPhone\"\n        onClick={() => {\n          props.addPhoneCounter()\n          props.addVisibleFlag('inputClientPhoneChecked')\n        }}\n      >\n        + Добавить телефон\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeClientEditorPhone,\n  addPhoneCounter,\n  deleteCountNumber,\n  setPhoneNotify,\n  setVisibleListFlag,\n  addVisibleFlag,\n  deleteVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPhones)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport LableInput from '../../general/LableInput'\n\nconst ClientJuridicalInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Реквизиты компании</div>\n      <LableInput\n        className='w250 mt15'\n        title='ОГРН'\n        onChange={event => props.changeClientForm(event.target.value, 'ogrn') }\n        value={props.client.ogrn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='ИНН'\n        onChange={event => props.changeClientForm(event.target.value, 'inn')}\n        value={props.client.inn}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='КПП'\n        onChange={event => props.changeClientForm(event.target.value, 'kpp')}\n        value={props.client.kpp}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Юридический адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'juridical_address')}\n        value={props.client.juridical_address}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Директор'\n        onChange={event => props.changeClientForm(event.target.value, 'director')}\n        value={props.client.director}\n      />\n\n      <div className='orderFormTitle'>Банковские реквизиты</div>\n      <LableInput\n        className='w250 mt15'\n        title='Название банка'\n        onChange={event => props.changeClientForm(event.target.value, 'bank_name') }\n        value={props.client.bank_name}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Р/С'\n        onChange={event => props.changeClientEditorForm(event.target.value, 'settlement_account')}\n        value={props.client.settlement_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='К/С'\n        onChange={event => props.changeClientForm(event.target.value, 'corr_account')}\n        value={props.client.corr_account}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='БИК'\n        onChange={event => props.changeClientForm(event.target.value, 'bic')}\n        value={props.client.bic}\n      />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientJuridicalInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\nimport AddPhones from './AddPhones'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport ClientJuridicalInfo from './ClientJuridicalInfo'\nimport LableInput from '../../general/LableInput'\n\nconst ClientGenerallyInfo = (props) => {\n  return (\n    <div className='clientGenerally'>\n      <div className='orderFormTitle'>Общая информация</div>\n      <LableInput\n        className='w250 mt15'\n        title={props.client.juridical ? 'Название компании' : 'Имя клиета'}\n        redStar={true}\n        onChange={event => props.changeClientForm(event.target.value, 'name')}\n        value={props.client.name}\n        checkedFlag='inputClientNameChecked'\n        checked={props.inputClientNameChecked}\n      />\n      <LableInput\n        className='w250 mt15'\n        title='Обращение'\n        onChange={event => props.changeClientForm(event.target.value, 'name_doc')}\n        value={props.client.name_doc}\n      />\n      <AddPhones />\n      <LableInput\n        className='w250 mt15'\n        title='Email'\n        onChange={event => props.changeClientForm(event.target.value, 'email')}\n        value={props.client.email}\n      />\n      <div className='checkbox mt5'>\n        <input\n          type='checkbox'\n          name='should_send_email'\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.should_send_email}\n        />\n        <label>Согласен получать Email</label>\n      </div>\n      <LableInput\n        className='w250 mt15'\n        title='Адрес'\n        onChange={event => props.changeClientForm(event.target.value, 'address')}\n        value={props.client.address}\n      />\n\n      <ChooseOfList\n        id={13}\n        className='mt15 h52'\n        title='Откуда клиент о нас узнал'\n        list={props.ad_campaign}\n        setElement={props.setAdCampaignClient}\n        current_id={props.client.ad_campaign_id}\n        width='250px'\n      />\n\n      {props.client.juridical ? <ClientJuridicalInfo /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n  statusPhoneList: state.view.statusPhoneList,\n  ad_campaign: state.data.ad_campaign,\n  statusAdCampaignClient: state.view.statusAdCampaignClient,\n  inputClientNameChecked: state.view.inputClientNameChecked,\n})\n\nconst mapDispatchToProps = {\n    changeClientForm,\n  setClietnCheckbox,\n  changeStatusAdCampaignClient,\n  setAdCampaignClient,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientGenerallyInfo)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setClietnCheckbox } from '../../../Redux/actions'\n\nconst TopCheckboxes = (props) => {\n  return (\n    <div className=\"buttons mt15\">\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.client.juridical ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.setClietnCheckbox('juridical', false)}\n        >\n          Физ. лицо\n        </div>\n        <div\n          className={\n            props.client.juridical ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          name=\"juridical\"\n          onClick={(event) => props.setClietnCheckbox('juridical', true)}\n        >\n          Компания\n        </div>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"supplier\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.supplier}\n        />\n        <label>\n          <svg className=\"icon-black\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M32 18l-4-8h-6v-4c0-1.1-0.9-2-2-2h-18c-1.1 0-2 0.9-2 2v16l2 2h2.536c-0.341 0.588-0.536 1.271-0.536 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.536-2h11.073c-0.341 0.588-0.537 1.271-0.537 2 0 2.209 1.791 4 4 4s4-1.791 4-4c0-0.729-0.196-1.412-0.537-2h2.537v-6zM22 18v-6h4.146l3 6h-7.146z\"\n            ></path>\n          </svg>\n          <span>Поставщик</span>\n        </label>\n      </div>\n\n      <div className=\"subCheckbox\">\n        <input\n          type=\"checkbox\"\n          name=\"conflicted\"\n          onChange={(event) =>\n            props.setClietnCheckbox(event.target.name, 'change')\n          }\n          checked={props.client.conflicted}\n        />\n        <label>\n          <svg className=\"icon-red\" viewBox=\"0 0 32 32\">\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM22 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM10 8c1.105 0 2 0.895 2 2s-0.895 2-2 2-2-0.895-2-2 0.895-2 2-2zM22.003 24.398c-1.224-2.036-3.454-3.398-6.003-3.398s-4.779 1.362-6.003 3.398l-2.573-1.544c1.749-2.908 4.935-4.855 8.576-4.855s6.827 1.946 8.576 4.855l-2.573 1.544z\"\n            ></path>\n          </svg>\n          <span>Конфликтный</span>\n        </label>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  client: state.client,\n})\n\nconst mapDispatchToProps = {\n  setClietnCheckbox,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopCheckboxes)\n","\nimport React from 'react'\n\nimport ClientAnotherInfo from './ClientAnotherInfo'\nimport ClientGenerallyInfo from './ClientGenerallyInfo'\nimport TopCheckboxes from './TopCheckboxes'\n\nconst ClientInfo = () => {\n   return (\n      <>\n         <TopCheckboxes/>\n         <ClientGenerallyInfo/>\n         <ClientAnotherInfo/>\n      </>\n   )\n}\n\n\n  \n export default ClientInfo","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientLeads = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Обращения клиента</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientLeads)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientOrder = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Заказы</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientOrder)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientPayments = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Платежи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientPayments)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientSMS = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>SMS</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientSMS)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst ClientTask = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Задачи</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientTask)","import React from 'react'\nimport PropTypes from \"prop-types\";\n\n\n/**\n *\n * className='className' // Класс оболочки\n *\n * list={['tab1', 'tab2', 'tab3']} // Список имен вкладок\n *\n * contents={[<Component1/>, <Component2/>, <Component3/>]}\n *\n * tab={props.tab} // Поле с номером текущей вкладки\n *\n * func={() => console.log('set tab')} // Функция изменения номера текущей вкладки\n *\n * tab_field='tab_field' // Назавние поля текущей вкладки (default='tabs')\n *\n * @returns {JSX.Element}\n */\nconst Tabs = (props) => {\n    return (\n            <div className={`tabs ${props.className}`}>\n                {props.list.map((tab, idx) => (\n                    <div\n                        key={idx}\n                        className={props.tab === idx ? 'tabOn' : 'tab'}\n                        onClick={() => props.func(idx, props.tab_field ? props.tab_field : 'tabs')}\n                    >\n                        {tab}\n                    </div>\n                ))}\n            </div>\n\n    )\n}\n\nTabs.propTypes = {\n    className: PropTypes.string,\n    list: PropTypes.arrayOf(PropTypes.string),\n    tab: PropTypes.number,\n    func: PropTypes.func,\n    tab_field: PropTypes.string\n}\n\nexport default Tabs\n\n// className=''\n// list=['tab1', 'tab2', 'tab3']\n// tab={props.tab}\n// func={() => console.log('set tab')}\n// tab_field='tab_field' default 'tabs'\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n} from '../../../Redux/actions'\nimport {changeClientForm} from '../../../Redux/actions/clientAction'\n\nimport BottomButtons from '../../general/BottomButtons'\n\nimport {check0_100} from '../../general/utils'\nimport ClientBalans from './ClientBalans'\nimport ClientCalls from './ClientCalls'\nimport ClientInfo from './ClientInfo'\nimport ClientLeads from './ClientLeads'\nimport ClientOrder from './ClientOrder'\nimport ClientPayments from './ClientPayments'\nimport ClientSMS from './ClientSMS'\nimport ClientTask from './ClientTask'\nimport Tabs from '../../general/Tabs'\n\nconst ClientEditor = (props) => {\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('createNewClient')) {\n            if (props.view.statusCreateNewClient) {\n                //  props.setVisibleFlag('statusCreateNewClient', false)\n                props.resetDataClient()\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handelCreateClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.createNewClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    const handelSaveClient = () => {\n        if (\n            props.client.name &&\n            props.view.inputClientPhoneChecked.every((ph) => ph) &&\n            check0_100(props.client.discount_materials) &&\n            check0_100(props.client.discount_goods) &&\n            check0_100(props.client.discount_services)\n        ) {\n            props.saveChangeClient()\n        } else {\n            if (!props.client.name) {\n                props.setVisibleFlag('inputClientNameChecked', false)\n            }\n            if (!check0_100(props.client.discount_materials)) {\n                props.setVisibleFlag('inputClientDiscMatChecked', false)\n            }\n            if (!check0_100(props.client.discount_goods)) {\n                props.setVisibleFlag('inputClientDiscGoodChecked', false)\n            }\n            if (!check0_100(props.client.discount_services)) {\n                props.setVisibleFlag('inputClientDiscServChecked', false)\n            }\n            props.client.phone.forEach((phone, idx) => {\n                if (phone.number.replace(/[^0-9]/g, '').length !== 11) {\n                    props.setVisibleListFlag('inputClientPhoneChecked', idx, false)\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow mw50\" id=\"createNewClient\">\n                <div className=\"createNewTitle\">\n                    {props.client.edit ? props.client.name : 'Новый клиент'}\n                </div>\n\n                <div className='contentEditor'>\n                    {props.client.edit ?\n                        <div>\n                            <Tabs\n                                className='mt15'\n                                list={['Общие', 'Баланс', 'Обращения', 'Заказы', 'Платежи', 'Звонки', 'SMS', 'Задачи']}\n                                tab={props.client.tabs}\n                                func={props.changeClientForm}\n                            />\n                            {props.client.tabs === 0 ? <ClientInfo/> : null}\n                            {props.client.tabs === 1 ? <ClientBalans/> : null}\n                            {props.client.tabs === 2 ? <ClientLeads/> : null}\n                            {props.client.tabs === 3 ? <ClientOrder /> : null}\n                            {props.client.tabs === 4 ? <ClientPayments /> : null}\n                            {props.client.tabs === 5 ? <ClientCalls /> : null}\n                            {props.client.tabs === 6 ? <ClientSMS /> : null}\n                            {props.client.tabs === 7 ? <ClientTask /> : null}\n                        </div>\n                        :\n                        <ClientInfo/>\n                        }\n                </div>\n\n                <BottomButtons\n                    edit={props.client.edit}\n                    create={handelCreateClient}\n                    save={handelSaveClient}\n                    delete={props.permissions.includes('delete_client') ? () => props.deleteClient(true) : null}\n                    recover={props.permissions.includes('recover_client') ? () => props.deleteClient(false) : null}\n                    close={() => props.setVisibleFlag('statusCreateNewClient', false)}\n                    deleted={props.client.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    client: state.client,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetDataClient,\n    setVisibleListFlag,\n    createNewClient,\n    saveChangeClient,\n    deleteClient,\n    changeClientForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ClientEditor)\n","\nimport React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeNameClientFilter, setVisibleFlag,  editCurrentClient } from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport { showPhone } from '../general/utils'\nimport ClientEditor from '../Clients/ClientEditor/ClientEditor'\n\nconst SetClientByName = (props) => {\n\n   const [showList, setShowList] = useState(false)\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listClientsOfOfPayments') &&\n         !event.path.map(el => el.id).includes('clientInputBoxOfPayments')\n         ) {\n            setShowList(false)\n      }\n    }\n\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n   return (\n      <div className='w400 h52'>\n         \n         <div className='lableImput mt15'>Имя клиента</div>\n\n         <div className='blockImput'>\n            <div \n               id='clientInputBoxOfPayments'\n               className='orderInputBox'\n               onClick={() => setShowList(true)}\n            >\n               <input\n                  className='optionFilterInput'\n                  onChange={event => props.changeNameClientFilter(event.target.value)}\n               />\n               <div \n               className='simbolButton'\n               onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n               >\n                  +\n               </div>\n               <div className='simbolButton'>&#6662;</div> \n            </div>\n\n            {showList ? \n            <div className='listFilter' id='listClientsOfOfPayments'>\n            {props.clientShow.map(client => (\n               <div \n                  className='rowGropList' \n                  key={client.id}\n                  onClick={() => {\n                     setShowList(false)\n                     props.editCurrentClient(client)\n                     props.changePaymentForm(client.id, 'client_id')\n                  }}\n               >\n                  <div>{client.name}</div>\n                  <div className='orderDate'>\n                     {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                  </div>\n               </div>\n            ))}\n            </div> : null}\n\n         </div>\n         \n\n\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   clientShow: state.data.clientShow,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   setVisibleFlag,\n   changePaymentForm,\n   editCurrentClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClientByName)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../general/utils'\nimport { editClient } from '../../Redux/actions'\nimport ClientEditor from './ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'mt15'>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={props.edit}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={props.close}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\n\nconst Receipt = (props) => {\n\n   const cashbox = props.payment.cashbox_id ? props.cashboxes.find(cashbox => cashbox.id === props.payment.cashbox_id).title : ''\n\n   const disc = [`Перемещение денег из кассы \"${cashbox}\"`, 'Выплата денег из кассы', 'Внесение денег в кассу']\n\n   const sum = props.payment.outcome ?  props.payment.outcome : props.payment.income\n   \n   return (\n      <div className='receiptBox'>\n               <div className='receipt mt15'>\n                  <table>\n                     <thead>\n                        <tr>\n                           <th>Наименование</th>\n                           <th className='tae w80'>Сумма, руб.</th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        <tr>\n                           <td>{props.payment.edit ? props.payment.description : disc[props.payment.direction]}</td>\n                           <td className='eal'>\n                              {props.payment.edit ? <div>{ sum }</div> :\n                              <input \n                                 className='w70'\n                                 style={ props.inputPaymentSumChecked ? null : {borderColor: 'red'} }\n                                 onChange={event => props.changePaymentForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payment.direction === 2 ? 'income' : 'outcome')}\n                                 value={ sum }\n                                 onBlur={() => props.setVisibleFlag('inputPaymentSumChecked', props.payment.direction === 2 ? !!props.payment.income : !!props.payment.outcome)}\n                                 disabled={props.payment.context.type === 'closed_order_editor' || props.payment.context.type === 'closed_order'}\n                              />}\n                           </td>\n                        </tr>\n                        <tr>\n                           <td className='tae'>Итого:</td>\n                           <td className='eal'>\n                              <div className='sum'>{`${ sum } руб`}</div>\n                           </td>\n                        </tr>\n                     </tbody>\n                  </table>\n               </div>\n           </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   inputPaymentSumChecked: state.view.inputPaymentSumChecked,\n   cashboxes: state.data.cashboxes\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Receipt)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, {registerLocale} from 'react-datepicker'\n\nimport {\n    setVisibleFlag,\n    addClients,\n    addItemPayments,\n    refreshDataOrder,\n    changeStatusMenuVisible\n} from '../../Redux/actions'\nimport {changePaymentForm, addPaymentTag, deletePaymentTag} from '../../Redux/actions/paymentAction'\nimport {createPayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport {check0_999} from '../general/utils';\nimport BottomButtons from '../general/BottomButtons'\nimport ChooseBotton from '../general/ChooseBotton'\nimport SetClientByName from './SetClientByName'\nimport ClientCard from '../Clients/ClientCard'\nimport Receipt from './Receipt'\nimport ChooseOfList from '../general/ChooseOfList'\nimport LableArea from '../general/LableArea'\nimport AddTags from '../general/AddTags'\nimport {changeStatus} from '../../Redux/actions/orderActions'\n\nregisterLocale('ru', ru)\n\nconst PaymentsEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputPaymentSumChecked', true)\n        props.setVisibleFlag('inputPaymentCashboxChecked', true)\n        props.setVisibleFlag('inputPaymentDescChecked', true)\n        props.setVisibleFlag('inputPaymentCashflowChecked', true)\n        props.setVisibleFlag('inputPaymentEmployeeChecked', true)\n        props.setVisibleFlag('statusPaymentsEditor', false)\n        props.resetPayments()\n    }\n\n    const clickHandel = (event) => {\n\n        if (!event.path.map((el) => el.id).includes('paymentsEditorWiondow') &&\n            !event.path.map((el) => el.id).includes('createNewOrder')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        props.addClients()\n    }, [props.clientFilter])\n\n    useEffect(() => {\n        // props.addItemPayments()\n        props.changePaymentForm(props.user_id, 'employee_id')\n        props.changePaymentForm(props.current_cashbox.id, 'cashbox_id')\n    }, [])\n\n    const hangleCreate = () => {\n        if (\n            // Проверим внесена ли сумма\n            (props.payment.income || props.payment.outcome) &&\n            // Проверим выбрана ли касса при direction (приход или расход) или выбрана ли целевая касса при перемещение дененг в дргую касса\n            ((props.payment.cashbox_id && props.payment.direction) || (props.payment.target_cashbox_id && !props.payment.direction)) &&\n            // Преовеним введен ли коментарий\n            props.payment.description &&\n            // Проверим выбрана ли категория если это приход или расход\n            (props.payment.cashflow_category || !props.payment.direction) &&\n            // Проверим выбран ли сотрудник\n            props.payment.employee_id\n        ) {\n            props.createPayment(props.payment.context)\n        } else {\n            if (!(props.payment.income || props.payment.outcome))\n                props.setVisibleFlag('inputPaymentSumChecked', false)\n            if (!(props.payment.cashbox_id && props.payment.direction) || !(props.payment.target_cashbox_id && !props.payment.direction))\n                props.setVisibleFlag('inputPaymentCashboxChecked', false)\n            if (!props.payment.description)\n                props.setVisibleFlag('inputPaymentDescChecked', false)\n            if (!props.payment.cashflow_category)\n                props.setVisibleFlag('inputPaymentCashflowChecked', false)\n            if (!props.payment.employee_id)\n                props.setVisibleFlag('inputPaymentEmployeeChecked', false)\n        }\n    }\n\n\n    const [chooseData, setChooseData] = useState(false)\n\n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n\n    const cashboxes = props.cashboxes.filter(cashbox =>\n        cashbox.type === props.payment.current_type  &&\n        (props.payment.direction || cashbox.id !== props.payment.cashbox_id) &&\n        !cashbox.deleted &&\n        (cashbox.isGlobal || cashbox.branch_id === props.current_branch_id)\n    )\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wmn500\" id=\"paymentsEditorWiondow\">\n                <div className=\"createNewTitle\">\n                    {title[props.payment.direction]}\n                </div>\n\n                <div className='contentEditor'>\n\n                    <div className='row al-itm-fe'>\n                        <ChooseBotton\n                            className='mt15 mr-rg-20'\n                            title='Дата и время'\n                            name={['Текущее', 'Заданное']}\n                            func1={() => {\n                                setChooseData(false)\n                                props.changePaymentForm(0, 'custom_created_at')\n                            }}\n                            func2={() => setChooseData(true)}\n                            checked={true}\n                            disabled={!props.permissions.includes('backdating')}\n                        />\n                        {chooseData ?\n                            <DatePicker\n                                selected={props.payment.custom_created_at ? new Date(props.payment.custom_created_at * 1000) : Date.now()}\n                                onChange={(date) => {\n                                    props.changePaymentForm(date / 1000, 'custom_created_at')\n                                }}\n                                isClearable={true}\n                                placeholderText='Выбирите дату'\n                                className=\"optionFilterInputDate\"\n                                dateFormat='dd.MM.yyyy HH:mm'\n                                locale={'ru'}\n                                maxDate={Date.now()}\n                                // startDate={Date.now()}\n                                showTimeSelect\n                            /> : null}\n                    </div>\n\n                    {props.payment.direction ? (props.payment.client_id ?\n                        <ClientCard\n                            edit={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                            close={() => props.changePaymentForm(0, 'client_id')}\n                        /> : <SetClientByName/>) : null}\n                    <Receipt/>\n\n                    <div className='row mt15 al-itm-fs'>\n                        <ChooseBotton\n                            className=''\n                            title='Форма оплаты'\n                            name={['Нал.', 'Безнал.']}\n                            func1={() => {\n                                props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                                props.changePaymentForm(0, 'current_type')\n                            }}\n                            func2={() => {\n                                props.changePaymentForm(0, props.payment.direction ? 'cashbox_id' : 'target_cashbox_id')\n                                props.changePaymentForm(1, 'current_type')\n                            }}\n                            checked={!props.current_cashbox.type}\n                        />\n                        <ChooseOfList\n                            id={20}\n                            title='Касса'\n                            className='ml10 h52'\n                            list={cashboxes}\n                            field={props.payment.direction ? 'cashbox_id' : 'target_cashbox_id'}\n                            setElement={props.changePaymentForm}\n                            current_id={props.payment.direction ? props.payment.cashbox_id : props.payment.target_cashbox_id}\n                            width={'250px'}\n                            checkedFlag='inputPaymentCashboxChecked'\n                            checked={props.view.inputPaymentCashboxChecked}\n                            disabled={props.payment.deleted}\n                        />\n                    </div>\n                    <LableArea\n                        className='mt15'\n                        title='Коментарий'\n                        onChange={event => props.changePaymentForm(event.target.value, 'description')}\n                        value={props.payment.description}\n                        checkedFlag='inputPaymentDescChecked'\n                        checked={props.view.inputPaymentDescChecked}\n                        redStar={true}\n                        disabled={props.payment.deleted}\n                    />\n                    <ChooseOfList\n                        id={41}\n                        title='Статья'\n                        className='mt15 h52'\n                        list={props.item_payments.filter(item => item.direction === props.payment.direction)}\n                        field='cashflow_category'\n                        setElement={props.changePaymentForm}\n                        current_id={props.payment.cashflow_category}\n                        width={'250px'}\n                        checkedFlag='inputPaymentCashflowChecked'\n                        checked={props.view.inputPaymentCashflowChecked}\n                        disabled={props.payment.deleted}\n                        unvisible={!props.payment.direction}\n                    />\n                    <ChooseOfList\n                        id={22}\n                        title='Кассир'\n                        className='mt15 h52'\n                        list={props.employees.filter(employee => !employee.deleted)}\n                        field='employee_id'\n                        setElement={props.changePaymentForm}\n                        current_id={props.payment.employee_id}\n                        width={'250px'}\n                        employee={true}\n                        checkedFlag='inputPaymentEmployeeChecked'\n                        checked={props.view.inputPaymentEmployeeChecked}\n                        disabled={!props.permissions.includes('choose_emploees')}\n                    />\n                    <AddTags\n                        className='mt15'\n                        tags={props.payment.tags}\n                        addTag={props.addPaymentTag}\n                        daleteTag={props.deletePaymentTag}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.payment.edit}\n                    create={hangleCreate}\n                    // save={hangleSave}\n                    delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null}\n                    recover={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null}\n                    close={handleClose}\n                    deleted={props.payment.deleted}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    view: state.view,\n    payment: state.payment,\n    permissions: state.data.user.role.permissions,\n    clientFilter: state.filter.clientFilter,\n    cashboxes: state.data.cashboxes,\n    current_branch_id: state.data.current_branch.id,\n    item_payments: state.data.item_payments,\n    employees: state.data.employees,\n    user_id: state.data.user.id,\n    current_cashbox: state.cashbox.current_cashbox,\n    order_edit: state.order.edit\n})\n\nconst mapDispatchToProps = {\n    changePaymentForm,\n    setVisibleFlag,\n    addClients,\n    addItemPayments,\n    addPaymentTag,\n    deletePaymentTag,\n    createPayment,\n    resetPayments,\n    changeStatus,\n    refreshDataOrder,\n    changeStatusMenuVisible\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentsEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icon_burn, icon_clock } from '../../../data/icons'\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport Icon from '../../general/Icon'\nimport StatusList from '../StatusList'\nimport PaymentsEditor from '../../Payments/PaymentsEditor'\n\nconst TitleOrderEditor = (props) => {\n\n  const iconBr = <Icon icon={props.current_branch.icon} color={props.current_branch.color} className='icon-sm8'/>\n  const iconB = props.order.urgent ? <Icon icon={icon_burn} color='red' className='icon-sm8'/> : null\n  const iconC = (!props.order.overdue && props.order.status.group < 4) ? <Icon icon={icon_clock} color='#f0ad4e' className='icon-sm8'/> : null\n\n   return (\n\n      <div className=\"createNewTitle\">\n         {props.order.edit ? \n         <div className='statusListOrder'>\n            <span>Заказ № {props.order.id_label}</span>\n            <span className='ml10 fsz12'>\n               <button\n                  id='statusListOrderForm'\n                  className=\"statusButtom\"\n                  type=\"button\"\n                  style={{ backgroundColor: props.order.status.color }}\n                  onClick={() => props.setVisibleFlag('statusStatusList', true)}\n               >\n                  {props.order.status.name}\n                  <span className=\"statusSeparate\"> | &#6662;</span>\n               </button>\n               {props.statusStatusList ?\n                   <StatusList\n                       order={props.order}\n                   />\n                   : null\n               }\n            </span>\n            <span className='ml10'>{iconBr}</span>\n            <span className='ml5'>{iconB}</span>   \n            <span className='ml5'>{iconC}</span>\n         </div> : 'Новый заказ'}\n          {props.statusPaymentsEditor ? <PaymentsEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    current_branch: state.data.current_branch,\n    statusStatusList: state.view.statusStatusList,\n    statusPaymentsEditor: state.view.statusPaymentsEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TitleOrderEditor)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst AssingEmployee = (props) => {\n\n  // текущий список менеджеров\n  let list_managers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_managers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_managers = list_managers.some(employee => employee.id === props.manager_id) || !props.manager_id ? list_managers :\n  list_managers.concat([props.employees.find(employee => employee.id === props.manager_id)])\n\n  // текущий список инженеров\n  let list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n  // проверим есть ли текущий сотрудник в списке менеджеров, если нет, то добавим, если да, оставим как есть\n  list_ingineers = list_ingineers.some(employee => employee.id === props.engineer_id) || !props.engineer_id ? list_ingineers :\n  list_ingineers.concat([props.employees.find(employee => employee.id === props.engineer_id)]) \n\n\n   return (\n      <div className = 'boxAssingEmployee'>\n\n         <div className = 'formRow'>\n          <div className='optionsTitle'>Менеджер</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={17}\n              list={ list_managers }\n              setElement={props.changeOrderFormS}\n              current_id={props.manager_id ? props.manager_id : 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='manager_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n\n        <div className = 'formRow'>\n          <div className='optionsTitle'>Исполнитель</div> \n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              list={ list_ingineers }\n              setElement={props.changeOrderFormS}\n              current_id={ props.engineer_id ? props.engineer_id: 0}\n              width={'250px'}\n              className='pd-lf-5'\n              field='engineer_id'\n              employee={true}\n              disabled={!props.user.role.permissions.includes('assing_emploees') || props.status_group > 3}\n            /> \n          </div>\n        </div>\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   manager_id: state.order.manager_id,\n   engineer_id: state.order.engineer_id,\n   user: state.data.user,\n   status_group: state.order.status.group\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(AssingEmployee)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editClient, changeOrderFormS } from '../../../../Redux/actions'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\n\nconst ClientCard = (props) => {\n\n\n   return (\n      <div className = 'formRow'>\n         <div className='optionsTitle'></div>\n         <div className = 'clientCard'>\n         <div>\n            <div>\n               <svg className=\"icon-client\" viewBox=\"0 0 32 32\">\n                  <path fillRule=\"evenodd\" clipRule=\"evenodd\" d='M18 22.082v-1.649c2.203-1.241 4-4.337 4-7.432 0-4.971 0-9-6-9s-6 4.029-6 9c0 3.096 1.797 6.191 4 7.432v1.649c-6.784 0.555-12 3.888-12 7.918h28c0-4.030-5.216-7.364-12-7.918z'></path>\n               </svg>\n               <span \n                  className='clientCardName'\n                  onClick={() => props.editClient(props.client.id)}\n                  >\n                  {props.client.name}\n               </span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Телефон:</span>\n               <span className='clientCardText'> {props.client.phone[0] ? showPhone(props.client.phone[0].number) : null}</span>\n            </div>\n            <div>\n               <span className='clientCardTitle'>Баланс: </span>\n               <span className='clientCardText'>000 (клиет должет нам)</span>\n            </div>\n         </div>\n         <div \n            className='crossButtom'\n            onClick={() => props.changeOrderFormS({}, 'client')}\n         >\n            &#9587;\n         </div>\n         </div>\n         {props.statusCreateNewClient ? <ClientEditor/> : null }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   client: state.order.client,\n   statusCreateNewClient: state.view.statusCreateNewClient\n   })\n\nconst mapDispatchToProps = {\n   editClient,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ClientCard)","import React, { useEffect, useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeNameClientFilter, changePhoneClientFilter, setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\nimport ClientEditor from '../../../Clients/ClientEditor/ClientEditor'\nimport LableInput from '../../../general/LableInput'\n\nconst SetClient = (props) => {\n\n   const [listClientsVisible, setListClientsVisible] = useState(false)\n   const [listClientsPhoneVisible, setListClientsPhoneVisible] = useState(false)\n\n   const clickHandel1 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfOrOrder') &&\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrder')\n         ) {\n         if (listClientsVisible) {\n            setListClientsVisible(false)\n      }}\n    }\n\n    const clickHandel2 = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('orderInputBoxOfOrderPhone') &&\n         !event.path.map(el => el.id).includes('listFilterOfOrOrderPhone')\n         ) {\n         if (listClientsPhoneVisible) {\n            setListClientsPhoneVisible(false)\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel1)\n      window.addEventListener('click', clickHandel2)\n      return () => {\n        window.removeEventListener('click', clickHandel1)\n        window.removeEventListener('click', clickHandel2)\n      }\n    })\n\n\n\n   return (\n      <div className='cleintForm'>\n\n         <div className = 'formRow'>\n            <div className='optionsTitle'>Имя клиента<span className='redStar'>*</span></div>\n\n            <div className='blockImput'>\n               <div \n                  id='orderInputBoxOfOrder'\n                  className='orderInputBox'\n                  onClick={() => setListClientsVisible(true)}\n                  style={props.view.checkedOrderClient ? {borderColor: 'red'} : null}\n               >\n                  <input\n                     className='optionFilterInput'\n                     onChange={event => props.changeNameClientFilter(event.target.value)}\n                     // onBlur={() => props.setVisibleFlag('checkedOrderClient', !Object.values(props.client).length)}\n                  />\n                  <div \n                     className='simbolButton'\n                     onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                  >\n                     +\n                  </div>\n                  <div className='simbolButton'>&#6662;</div> \n               </div>\n               {props.view.checkedOrderClient ? <div className='errorMassageInput'>{'Необоходимо выбрать клиента'}</div> : null}\n\n               {listClientsVisible ? \n               <div className='listFilter' id='listFilterOfOrOrder'>\n               {props.clientShow.map(client => (\n                  <div \n                     className='rowGropList' \n                     key={client.id}\n                     onClick={() => {\n                        props.changeOrderFormS(client, 'client')\n                        setListClientsVisible(false)\n                     }}\n                  >\n                     <div>{client.name}</div>\n                     <div className='orderDate'>\n                        {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                     </div>\n                  </div>\n               ))}\n               </div> : null}\n\n            </div>\n            </div>\n\n            <div className = 'formRow'>\n\n               <div className='optionsTitle'>Телефон<span className='redStar'>*</span></div>\n               <div className='blockImput'>\n\n                  <div \n                     id='orderInputBoxOfOrderPhone'\n                     className='orderInputBox'\n                     onClick={() => setListClientsPhoneVisible(true)}\n                  >\n                    <LableInput\n                        className='w100'\n                        inputClassName='optionFilterInput'\n                        onChange={value => props.changePhoneClientFilter(value)}\n                        value={props.phone}\n                        isPhone={true}\n                    />\n                     <div \n                        className='simbolButton'\n                        onClick={() => props.setVisibleFlag('statusCreateNewClient', true)}\n                     >\n                        +\n                     </div>\n                     <div className='simbolButton'>&#6662;</div> \n                  </div>\n\n                 \n\n                  {listClientsPhoneVisible ? \n                  <div className='listFilter' id='listFilterOfOrOrderPhone'>\n                  {props.clientShow.map(client => (\n                     <div \n                        className='rowGropList' \n                        key={client.id}\n                        onClick={() => {\n                           props.changeOrderFormS(client, 'client')\n                           setListClientsPhoneVisible(false)\n                        }}\n                     >\n                        <div>{client.name}</div>\n                        <div className='orderDate'>\n                           {client.phone[0] ? showPhone(client.phone[0].number) : null}\n                        </div>\n                     </div>\n                  ))}\n                  </div> : null}\n\n               </div>\n               \n            </div>\n      \n      {props.view.statusCreateNewClient ? <ClientEditor/> : null }           \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   clientShow: state.data.clientShow,\n   phone: state.filter.clientFilter.phone,\n   view: state.view,\n   client: state.order.client\n   })\n\nconst mapDispatchToProps = {\n   changeNameClientFilter,\n   changePhoneClientFilter,\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\n\nconst SetTypeOrder = (props) => {\n\n \n  return (\n\n    <div className = 'formRow mt15'>\n      <div className='optionsTitle'>Тип заказа</div> \n      <div className='blockImput'>\n        <ChooseOfList\n          id={17}\n          list={ props.order_type }\n          setElement={props.changeOrderFormS}\n          current_id={ props.order.order_type_id }\n          width='150px'\n          className='pd-lf-5'\n          field='order_type_id'\n          disabled={!props.permissions.includes('edit_info_orders') || props.order.status_group > 3}\n        /> \n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  order_type: state.data.order_type,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrder)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleListFlag } from '../../../../Redux/actions'\n\nconst LabelInputOrder = (props) => {\n\n   return (\n      <div className = {props.className}>\n         <div className='optionsTitle'>{props.title}{props.checkedFlag ? <span className='redStar'>*</span> : null}</div>\n         <div className='blockImput'>\n            <input \n               className='textInput'\n               name={props.name}\n               onChange={props.onChange}\n               value={props.value}\n               onBlur={props.checkedFlag ? event => props.setVisibleListFlag(props.checkedFlag, props.idx, !!event.target.value) : null}\n               style={props.checkedFlag && !props.checked  ? { borderColor: 'red' } : null}\n               disabled={props.disabled}\n            />\n            {props.checkedFlag && !props.checked ? <div className='errorMassageInput'>{props.errorMassage ? props.errorMassage : 'Необоходимо заполнить'}</div> : null}\n         </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   // checked: state.view[props.checkedFlag]\n   })\n\nconst mapDispatchToProps = {\n   setVisibleListFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(LabelInputOrder)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { createEquipmentBrand, addEquipmentBrand, changeBookForm} from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderBrand = (props) => {\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_type).length) props.addEquipmentBrand()\n  }, [props.book.equipment_type, props.book.filter_brand])\n\n\n  const edit = props.order.edit\n  const disabled = !Object.values(props.book.equipment_type).length\n  const brand = props.order.edit ? props.order.brand : props.order.equipments[props.idx].brand\n  const seted = !!Object.values(brand).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfBrand') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfBrand')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS({}, 'brand')\n      props.changeOrderFormS({}, 'subtype')\n      props.changeOrderFormS({}, 'model')\n    } else {\n      props.resetEquipment(props.idx, 'brand')\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_brand')\n  }\n\n  const setBrand = (idx, brand) => {\n    edit ? props.changeOrderFormS(brand, 'brand') : props.setOrderEquipment(idx, 'brand', brand)\n    props.changeBookForm(brand, 'equipment_brand')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.setVisibleListFlag('checkedOrderBrand', props.idx, true)\n    props.changeBookForm('', 'filter_brand')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfBrand\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n        style={!props.view.checkedOrderBrand[props.idx] ? { borderColor: 'red' } : null}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={event => props.changeBookForm(event.target.value, 'filter_brand')}\n          placeholder=\"Выбирете бренд\"\n          value={seted ? brand.title : props.book.filter_brand}\n          disabled={disabled || seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ? \n          <svg\n            className=\"icon-close\"\n            viewBox=\"0 0 22 22\"\n            onClick={ reset }\n          >\n            <path d={icon_close} />\n          </svg> : <span>&#6662;</span>}\n      </button>\n      {!props.view.checkedOrderBrand[props.idx] ? (\n        <div className=\"errorMassageInput\">\n          {'Необоходимо выбрать из списка'}\n        </div>\n      ) : null}\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfBrand\">\n          {props.book.equipment_brands.map(brand => {\n              return  (\n                <div\n                  key={brand.id}\n                  className=\"rowGropList\"\n                  onClick={() => setBrand(props.idx, brand)}\n                >\n                  {brand.title}\n                </div>\n              ) \n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={event => {\n                  if (event.key === 'Enter') {\n                    props.createEquipmentBrand(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_brand')\n                    // props.addEquipmentBrand()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить бренд\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentBrand,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addEquipmentBrand,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderBrand)\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport { createEquipmentType, addEquipmentType, changeBookForm } from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderGroupe = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    props.addEquipmentType()\n  }, [props.book.filter_type])\n\n  const edit = props.order.edit\n  // const types = edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good\n  const types = useMemo(() => edit ? props.order.kindof_good : props.order.equipments[props.idx].kindof_good, [props.order.kindof_good, props.order.equipments[props.idx].kindof_good])\n  const seted = !!Object.values(types).length \n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listOrderOfGroup') &&\n       !event.path.map(el => el.id).includes('optionsOrderTextOfGroup')\n       ) {\n       if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const reset = () => {\n    if (edit) {\n      props.changeOrderFormS( {}, 'kindof_good' )\n      props.changeOrderFormS( {}, 'brand' )\n      props.changeOrderFormS( {}, 'subtype' )\n      props.changeOrderFormS( {}, 'model' ) \n    } else {\n      props.resetEquipment(props.idx, 'kindof_good')\n      props.resetEquipment(props.idx, 'brand')\n      props.resetEquipment(props.idx, 'subtype')\n      props.resetEquipment(props.idx, 'model')\n    }\n    props.changeBookForm({}, 'equipment_type')\n  }\n\n\n  const setOrderType = (idx, equipment) => {\n    edit ? props.changeOrderFormS( equipment, 'kindof_good' ) : props.setOrderEquipment(idx, 'kindof_good', equipment)\n    props.changeBookForm(equipment, 'equipment_type')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_type')\n  }\n\n   return (\n    <>\n    \n      <button \n        className='optionsFilterText'\n        id='optionsOrderTextOfGroup'\n        onClick={() => setVisibleList(true)}\n        disabled={seted}\n        style={!props.view.checkedOrderKindofGood[props.idx] ? {borderColor: 'red'} : null}\n      > \n        <input \n          className='optionFilterInput'\n          onChange={event => props.changeBookForm(event.target.value, 'filter_type')}\n          placeholder='Выбирете группу'\n          value={seted ? types.title : props.book.filter_type}\n          disabled={seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ?\n        <svg \n          className=\"icon-close\"  \n          viewBox=\"0 0 22 22\"\n          onClick={ reset }\n        >\n          <path d={icon_close}/>\n        </svg> :\n        <span>&#6662;</span> }\n      </button>\n      {!props.view.checkedOrderKindofGood[props.idx] ? <div className='errorMassageInput'>{'Необоходимо выбрать из списка'}</div> : null}\n      {visibleList ? <div className='listFilter' id='listOrderOfGroup'>\n        {props.book.equipment_types.map(equipment => {\n      \n        return (\n          <div\n            key={equipment.id} \n            className='rowGropList'\n            onClick={() => setOrderType(props.idx, equipment) }\n          >\n            {equipment.title}\n          </div> \n        )})}\n        <div className='btmsts'>\n        {visibleBotton ? \n        <input \n          className='optionFilterInput'\n          autoFocus\n          onKeyPress={(event) => {\n            if (event.key === 'Enter') { \n              props.createEquipmentType(event.target.value)\n              props.changeBookForm(event.target.value, 'filter_type')\n              // props.addEquipmentType()\n              setVisisbleBotton(false)\n              \n            } \n          }}\n          placeholder = 'Введите и нажмиете Enter' \n        /> :\n        <div \n          className='btnstsTitle'\n          onClick={() => setVisisbleBotton(true)}\n        >\n          Добавить тип\n        </div>}\n        </div>\n\n      </div> : null}\n      </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  order: state.order,\n  view: state.view,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentType,\n  setOrderEquipment,\n  resetEquipment,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addEquipmentType,\n  changeBookForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetOrderGroupe)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setOrderEquipment, resetEquipment, changeOrderFormS } from '../../../../Redux/actions'\nimport { createEquipmentModel, addEquipmentModel, changeBookForm } from '../../../../Redux/actions/bookActions'\nimport { icon_close } from '../../../../data/icons'\n\nconst SetOrderModel = (props) => {\n\n  const [visibleList, setVisibleList] = useState(false)\n  const [visibleBotton, setVisisbleBotton] = useState(false)\n\n  useEffect(() => {\n    if (Object.values(props.book.equipment_subtype).length) props.addEquipmentModel()\n  }, [props.book.equipment_subtype, props.book.filter_model])\n\n  const edit = props.order.edit\n\n  const model = edit ? props.order.model: props.order.equipments[props.idx].model\n  const disabled = !Object.values(props.book.equipment_subtype).length\n  // const disabled = edit ? !Object.values(props.order.subtype).length : !Object.values(props.order.equipments[props.idx].subtype).length\n  const seted = !!Object.values(model).length\n\n  const clickHandel = (event) => {\n    if (\n      !event.path.map((el) => el.id).includes('listOrderOfModel') &&\n      !event.path.map((el) => el.id).includes('optionsOrderTextOfModel')\n    ) {\n      if (visibleList) {\n        setVisibleList(false)\n        setVisisbleBotton(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const setModel = (idx, model) => {\n    edit ? props.changeOrderFormS(model, 'model') : props.setOrderEquipment(idx, 'model', model)\n    props.changeBookForm(model, 'equipment_model')\n    setVisibleList(false)\n    setVisisbleBotton(false)\n    props.changeBookForm('', 'filter_model')\n  }\n\n  const reset = () => {\n    edit ? props.changeOrderFormS({}, 'model') : props.resetEquipment(props.idx, 'model')\n    props.changeBookForm({}, 'equipment_model')\n  }\n\n  return (\n    <>\n      <button\n        className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n        id=\"optionsOrderTextOfModel\"\n        onClick={() => setVisibleList(true)}\n        disabled={disabled || seted}\n      >\n        <input\n          className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n          onChange={ event => props.changeBookForm(event.target.value, 'filter_model')}\n          placeholder=\"Выбирете модель\"\n          value={seted ? model.title : props.book.filter_model}\n          disabled={disabled || seted}\n        />\n        {seted && props.permissions.includes('edit_info_orders') ? (\n          <svg\n            className=\"icon-close\"\n            viewBox=\"0 0 22 22\"\n            onClick={ reset }\n          >\n            <path d={icon_close} />\n          </svg>\n        ) : (\n          <span>&#6662;</span>\n        )}\n      </button>\n      {visibleList && !disabled ? (\n        <div className=\"listFilter\" id=\"listOrderOfModel\">\n          {props.book.equipment_models.map((model) => {\n              return (\n                <div\n                  key={model.id}\n                  className=\"rowGropList\"\n                  onClick={() => setModel(props.idx, model) }\n                >\n                  {model.title}\n                </div>\n              ) \n            })}\n          <div className=\"btmsts\">\n            {visibleBotton ? (\n              <input\n                className=\"optionFilterInput\"\n                autoFocus\n                onKeyPress={(event) => {\n                  if (event.key === 'Enter') {\n                    props.createEquipmentModel(props.idx, event.target.value)\n                    props.changeBookForm(event.target.value, 'filter_model')\n                    // props.addEquipmentModel()\n                    setVisisbleBotton(false)\n                  }\n                }}\n                placeholder=\"Введите и нажмиете Enter\"\n              />\n            ) : (\n              <div\n                className=\"btnstsTitle\"\n                onClick={() => setVisisbleBotton(true)}\n              >\n                Добавить модель\n              </div>\n            )}\n          </div>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  book: state.book,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  createEquipmentModel,\n  setOrderEquipment,\n  resetEquipment,\n  changeOrderFormS,\n  addEquipmentModel,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderModel)\n","\nimport React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nconst Subtype = (props) => {\n\n    const [showPictute, setShowPicture] = useState(false)\n\n    return (\n        <div>\n            <div\n                className=\"rowGropList\"\n                onClick={props.onClick}\n                onMouseOver={() => setShowPicture(true)}\n                onMouseOut={() => setShowPicture(false)}\n            >\n                {props.subtype.title}\n            </div>\n            {showPictute && props.subtype.url ?\n                <div className='subtypePicture'>\n                    <img className='setSubtypeImg' src={`${process.env.PUBLIC_URL}/${props.subtype.url}`}/>\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subtype)","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setOrderEquipment, resetEquipment, setVisibleListFlag, changeOrderFormS} from '../../../../Redux/actions'\nimport {cteateEquipmentSubtype, changeBookForm, addEquipmentSubtype} from '../../../../Redux/actions/bookActions'\nimport {icon_close} from '../../../../data/icons'\nimport Subtype from './Subtype'\n\nconst SetOrderSubtype = (props) => {\n    const [visibleList, setVisibleList] = useState(false)\n    const [visibleBotton, setVisisbleBotton] = useState(false)\n\n    useEffect(() => {\n        if (Object.values(props.book.equipment_brand).length) props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype])\n\n    const edit = props.order.edit\n    const subtype = edit ? props.order.subtype : props.order.equipments[props.idx].subtype\n    const disabled = !Object.values(props.book.equipment_brand).length\n    const seted = !!Object.values(subtype).length\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('listOrderOfSubtype') &&\n            !event.path.map((el) => el.id).includes('optionsOrderTextOfSubtype')\n        ) {\n            if (visibleList) {\n                setVisibleList(false)\n                setVisisbleBotton(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const reset = () => {\n        if (edit) {\n            props.changeOrderFormS({}, 'subtype')\n            props.changeOrderFormS({}, 'model')\n        } else {\n            props.resetEquipment(props.idx, 'subtype')\n            props.resetEquipment(props.idx, 'model')\n        }\n        props.changeBookForm({}, 'equipment_subtype')\n\n    }\n\n    const setSubtype = (idx, subtype) => {\n        edit ? props.changeOrderFormS(subtype, 'subtype') : props.setOrderEquipment(idx, 'subtype', subtype)\n        props.changeBookForm(subtype, 'equipment_subtype')\n        setVisibleList(false)\n        setVisisbleBotton(false)\n        props.setVisibleListFlag('checkedOrderSubtype', props.idx, true)\n        props.changeBookForm('', 'filter_subtype')\n    }\n\n    return (\n        <>\n            <button\n                className={disabled ? 'optionsUnavaliable' : 'optionsFilterText'}\n                id=\"optionsOrderTextOfSubtype\"\n                onClick={() => setVisibleList(true)}\n                disabled={disabled || seted}\n                style={!props.view.checkedOrderSubtype[props.idx] ? {borderColor: 'red'} : null}\n            >\n                <input\n                    className={disabled ? 'optionsUnavaliable' : 'optionFilterInput'}\n                    onChange={event => props.changeBookForm(event.target.value, 'filter_subtype')}\n                    placeholder=\"Выбирете модуль / серию\"\n                    value={seted ? subtype.title : props.book.filter_subtype}\n                    disabled={disabled || seted}\n                />\n                {seted && props.permissions.includes('edit_info_orders') ?\n                    <svg className=\"icon-close\" viewBox=\"0 0 22 22\" onClick={reset}>\n                        <path d={icon_close}/>\n                    </svg> : <span>&#6662;</span>\n                }\n            </button>\n            {!props.view.checkedOrderSubtype[props.idx] ?\n                <div className=\"errorMassageInput\">{'Необоходимо выбрать из списка'}</div> : null}\n            {visibleList && !disabled ? (\n                <div className=\"listFilter\" id=\"listOrderOfSubtype\">\n                    {props.book.equipment_subtypes.map((subtype) => {\n                        return (\n                            <Subtype\n                                key={subtype.id}\n                                subtype={subtype}\n                                onClick={() => setSubtype(props.idx, subtype)}\n                            />\n                        )\n                    })}\n                    <div className=\"btmsts\">\n                        {visibleBotton ? (\n                            <input\n                                className=\"optionFilterInput\"\n                                autoFocus\n                                onKeyPress={(event) => {\n                                    if (event.key === 'Enter') {\n                                        props.cteateEquipmentSubtype(props.idx, event.target.value)\n                                        props.changeBookForm(event.target.value, 'filter_subtype')\n                                        // props.addEquipmentSubtype()\n                                        setVisisbleBotton(false)\n                                    }\n                                }}\n                                placeholder=\"Введите и нажмиете Enter\"\n                            />\n                        ) : (\n                            <div\n                                className=\"btnstsTitle\"\n                                onClick={() => setVisisbleBotton(true)}\n                            >\n                                Добавить модуль / серию\n                            </div>\n                        )}\n                    </div>\n                </div>\n            ) : null}\n        </>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    view: state.view,\n    book: state.book,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    cteateEquipmentSubtype,\n    setOrderEquipment,\n    resetEquipment,\n    setVisibleListFlag,\n    changeOrderFormS,\n    changeBookForm,\n    addEquipmentSubtype\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetOrderSubtype)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n} from '../../../../Redux/actions'\nimport { icon_trush } from '../../../../data/icons'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\nimport { sortedIndex } from 'lodash'\n\nconst ChooseEquipment = (props) => {\n  return (\n    <div>\n      <div className=\"formRow mt15\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle\">Изделиe и неисправность</div>\n      </div>\n      {props.order.equipments.map((equipment, idx) => {\n        return (\n          <div className=\"orderDevice\" key={idx}>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Тип устройства<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderGroup idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Бренд<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderBrand idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">\n                Модуль / Серия<span className=\"redStar\">*</span>\n              </div>\n              <div className=\"blockImput\">\n                <SetOrderSubtype idx={idx} />\n              </div>\n            </div>\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Модель</div>\n              <div className=\"blockImput\">\n                <SetOrderModel idx={idx} />\n              </div>\n            </div>\n            <LabelInputOrder\n              idx={idx}\n              className=\"formRow\"\n              title=\"Неисправность\"\n              name=\"malfunction\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'malfunction', event.target.value)\n              }\n              value={props.order.equipments[idx].malfunction}\n              checkedFlag=\"inputMalfunctionChecked\"\n              checked={props.view.inputMalfunctionChecked[idx]}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Комплектация\"\n              name=\"packagelist\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'packagelist', event.target.value)\n              }\n              value={props.order.equipments[idx].packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className=\"formRow\"\n              title=\"Внешинй вид\"\n              name=\"appearance\"\n              onChange={(event) =>\n                props.changeOrderForm(idx, 'appearance', event.target.value)\n              }\n              value={props.order.equipments[idx].appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className=\"formRow\">\n              <div className=\"optionsTitle\">Срочно</div>\n              <div className=\"blockImput\">\n                <div className=\"checkbox pd-tb-5 al-itm-fs\">\n                  <input\n                    type=\"checkbox\"\n                    onChange={(event) =>\n                      props.changeOrderForm(idx, 'urgent', event.target.checked)\n                    }\n                    checked={props.order.equipments[idx].urgent}\n                  />\n                  <label></label>\n                  <div\n                    className=\"whiteButton simbolBotton pz-r320\"\n                    onClick={() => props.deleteDevice(idx)}\n                  >\n                    <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                      <path d={icon_trush} />\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )\n      })}\n\n      <div className=\"formRow jc-c\">\n        <div\n          className=\"fs14 addPhone\"\n          onClick={() => props.addAnotherEquipment()}\n        >\n          + Устройство\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseEquipment)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderForm, addAnotherEquipment, deleteDevice, changeOrderFormS } from '../../../../Redux/actions'\n\nimport LabelInputOrder from './LabelInputOrder'\nimport SetOrderBrand from './SetOrderBrand'\nimport SetOrderGroup from './SetOrderGroup'\nimport SetOrderModel from './SetOrderModel'\nimport SetOrderSubtype from './SetOrderSubtype'\n\nconst ChooseSingleEquipment = (props) => {\n  return (\n    <div>\n\n      <div className='formRow mt15'>\n        <div className='optionsTitle'></div>\n        <div className='orderFormTitle'>Изделиe и неисправность</div>\n      </div>\n\n          <div className='orderDevice'>\n            \n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Тип устройства<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderGroup idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Бренд<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderBrand idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>\n                Модуль / Серия<span className='redStar'>*</span>\n              </div>\n              <div className='blockImput'>\n                <SetOrderSubtype idx={0} />\n              </div>\n            </div>\n\n            <div className='formRow'>\n              <div className='optionsTitle'>Модель</div>\n              <div className='blockImput'>\n                <SetOrderModel idx={0} />\n              </div>\n            </div>\n\n            <LabelInputOrder\n              idx={23}\n              className='formRow'\n              title='Неисправность'\n              name='malfunction'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'malfunction') }\n              value={props.order.malfunction}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Комплектация'\n              name='packagelist'\n              onChange={(event) => props.changeOrderFormS( event.target.value, 'packagelist')}\n              value={props.order.packagelist}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <LabelInputOrder\n              className='formRow'\n              title='Внешинй вид'\n              name='appearance'\n              onChange={(event) => props.changeOrderFormS(event.target.value, 'appearance')}\n              value={props.order.appearance}\n              disabled={!props.permissions.includes('edit_info_orders')}\n            />\n            <div className='formRow'>\n              <div className='optionsTitle'>Срочно</div>\n              <div className='blockImput'>\n                <div className='checkbox pd-tb-5 al-itm-fs'>\n                  <input\n                    type='checkbox'\n                    onChange={event => props.changeOrderFormS(event.target.checked, 'urgent')}\n                    checked={props.order.urgent}\n                    disabled={!props.permissions.includes('edit_info_orders')}\n                  />\n                  <label></label>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  order: state.order,\n  view: state.view,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderForm,\n  addAnotherEquipment,\n  deleteDevice,\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseSingleEquipment)\n","import React, { useState, useEffect } from 'react'\n\n\nimport { showDate } from './utils'\n\nimport Icon from './Icon'\nimport { icon_calendar } from '../../data/icons'\n\nconst ChooseDate = (props) => {\n\n   const [current_date, setCurrent_day] = useState(new Date) \n   const [visibleListMonth, setVisibleListMonth] = useState(false)\n   const [visibleInputYear, setVisibleInputYear] = useState(false)\n   const [visibleCalendar, setVisibleCalendar] = useState(false)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`monthList`) ) {\n         if (visibleListMonth) {\n            setVisibleListMonth(false)\n      }}\n      if (!event.path.map(el => el.id).includes(`calendar`) ) {\n         if (visibleCalendar) {\n            setVisibleCalendar(false)\n      }}\n   }\n   \n   useEffect(() => {\n   window.addEventListener('click', clickHandel)\n   return () => {\n      window.removeEventListener('click', clickHandel)\n   }\n   })\n\n   const weekDays = ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']\n   const months = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь']\n\n   let first = new Date(current_date)\n   // first.setHours(0, 0, 0, 0)\n   first.setDate(1)\n   first.setTime(first.getTime() - (first.getDay() || 7)*24*60*60*1000)\n   \n\n   let current_days = []\n   for (let i=0; i<42; i++) {\n      current_days[i] = new Date(first.getTime() + 24*60*60*1000)\n      first.setTime(first.getTime() + 24*60*60*1000)\n   }\n\n   const compareDates = (date1, date2) => {\n      return   date1.getDate() === date2.getDate() && \n               date1.getMonth() === date2.getMonth() && \n               date1.getFullYear() === date2.getFullYear()\n   }\n\n   const handleInputYear = (value) => {\n      let out = value.replace(/[^0-9]/g, '')\n      if (value > 9999) out = 9999\n      if (value < 0) out = 0\n      setCurrent_day(new Date(current_date.setFullYear(out)))\n   }\n\n   return (\n      <div>\n         <div \n            className='dateContaner'\n            onClick={() => setVisibleCalendar(true)}\n         >\n            <Icon \n               className='icon-s2 mlr5'\n               icon={icon_calendar}\n               color='gray'\n            />\n            <div>{showDate(props.current_date/1000)}</div>\n         </div>\n\n         {visibleCalendar && !props.disabled ? \n         <div className='calendar' id='calendar'>\n\n            <div className='calendarNavi'>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() - 1)))}\n               >\n                  {'<'}\n               </div>\n\n               <div className='row'>\n                  <div \n                     className='currMonth'\n                     onClick={() => setVisibleListMonth(!visibleListMonth)}\n                  >\n                     <div>{months[current_date.getMonth()]}</div><div className='gu'>&#6662;</div>\n                  </div>\n\n                  {visibleInputYear ? \n                  <input\n                     className='optionFilterInput w30'\n                     autoFocus\n                     onChange={event => handleInputYear(event.target.value)}\n                     value={current_date.getFullYear()}\n                     onBlur={() => setVisibleInputYear(false)}\n                  /> :\n                  <div \n                     className='pd5'\n                     onDoubleClick={() => setVisibleInputYear(true)}\n                  >\n                     {current_date.getFullYear()}\n                  </div>}\n                  <div className='nextY'>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() + 1)))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        className='gy'\n                        onClick={() => setCurrent_day(new Date(current_date.setFullYear(current_date.getFullYear() - 1)))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n               <div \n                  className='nextB'\n                  onClick={() => setCurrent_day(new Date(current_date.setMonth(current_date.getMonth() + 1)))}\n               >\n                  {'>'}\n               </div>\n            </div>\n           { visibleListMonth ?\n           <div className='monthList' id='monthList'>\n               {months.map((month, idx) => (\n                  <div \n                     key={idx}\n                     className='month'\n                     onClick={() => {\n                        setCurrent_day(new Date(current_date.setMonth(idx)))\n                        setVisibleListMonth(!visibleListMonth)\n                     }}\n                  >\n                     {month}\n                  </div>\n                     ))}\n            </div> : null}\n\n            <div className='row'>\n               {weekDays.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className='calendarWeekDay'\n                  >\n                     {day}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calendarDays'>\n               {current_days.map((day, idx) => (\n                  <div \n                     key={idx}\n                     className={`calendarDay \n                        ${compareDates(new Date(props.current_date), day) ? 'settedDay' : null}\n                     `}\n                     style={{\n                        color: day.getMonth() === current_date.getMonth() ? null : '#aaaaaa'\n                     }}\n                     onClick={() => {\n                        props.func(day)\n                        setCurrent_day(new Date(day))\n                     }}\n                  >\n                     {day.getDate()}\n                  </div>\n               ))}\n            </div>\n\n            <div className='calandarTime'>\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getHours()}</div>\n                  <div className='ssm'>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setHours(new Date(props.current_date).getHours() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>:\n               <div className='mtime'>\n                  <div className='hsm'>{new Date(props.current_date).getMinutes()}</div>\n                  <div className='ssm'>\n                  <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() + 1))}\n                     >\n                        &#9650;\n                     </div>\n                     <div \n                        onClick={() => props.func(new Date(props.current_date).setMinutes(new Date(props.current_date).getMinutes() - 1))}\n                     >\n                        &#9660;\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div> : null }\n\n      </div>\n   )\n}\n\n export default ChooseDate","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEquipment from './ChooseEquipment'\nimport LabelInputOrder from './LabelInputOrder'\nimport ChooseSingleEquipment from './ChooseSingleEquipment'\nimport ChooseDate from '../../../general/ChooseDate'\n\n\nconst TypeForm1 = (props) => {\n\n  return (\n    <div>\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Рекламная компания</div>\n        <div className=\"blockImput\">\n          <ChooseOfList\n            id={14}\n            list={props.ad_campaign}\n            setElement={props.changeOrderFormS}\n            field='ad_campaign_id'\n            current_id={props.order.ad_campaign_id}\n            width={'250px'}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      {props.order.edit ? <ChooseSingleEquipment/> : <ChooseEquipment/>}\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\"></div>\n        <div className=\"orderFormTitle mt15\">Дополнительная информация</div>\n      </div>\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Заметки приемщика</div>\n        <div className=\"blockImput mh\">\n          <textarea\n            className=\"textInput\"\n            name=\"manager_notes\"\n            onChange={(event) =>\n              props.changeOrderFormS(event.target.value, 'manager_notes')\n            }\n            value={props.order.manager_notes}\n            disabled={!props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n\n      <LabelInputOrder\n        className=\"formRow\"\n        title=\"Ориетнировачная стоимость\"\n        name=\"estimated_cost\"\n        onChange={(event) => props.changeOrderFormS(event.target.value.replace(/[^0-9]/g, ''), 'estimated_cost')}\n        value={props.order.estimated_cost}\n        disabled={!props.permissions.includes('edit_info_orders')}\n      />\n\n      <div className=\"formRow\">\n        <div className=\"optionsTitle\">Дата готовности</div>\n        <div className=\"blockImput\">\n          <ChooseDate\n              func={date => props.changeOrderFormS(parseInt(date / 1000), 'estimated_done_at')}\n              current_date={props.order.estimated_done_at * 1000}\n              disabled={props.order.status.group > 3 || !props.permissions.includes('edit_info_orders')}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  ad_campaign: state.data.ad_campaign,\n  order: state.order,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  changeOrderFormS\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TypeForm1)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nimport AssingEmployee from './AssingEmployee'\nimport ClientCard from './ClientCard'\nimport SetClient from './SetClient'\nimport SetTypeOrder from './SetTypeOrder'\nimport TypeForm1 from './TypeForm1'\n\nconst OrderInfo = (props) => {\n   return (\n      <div className = 'contentTab'>\n\n         <SetTypeOrder/>\n         <div className=\"formRow\">\n            <div className=\"optionsTitle\"></div>\n            <div className=\"orderFormTitle\">Клиент</div>\n         </div>\n         { props.permissions.includes('see_client') ?\n            (Object.values(props.order.client).length ? <ClientCard/> : <SetClient/>)\n         : null }\n         <TypeForm1/>\n         <AssingEmployee />\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   permissions: state.data.user.role.permissions\n})\n  \n export default connect(mapStateToProps, null)(OrderInfo)","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\n\nexport function changeOperationForm(value, field) {\n    return {\n        type: 'CHANGE_OPERATION_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOperation(operation) {\n    return {\n        type: 'EDIT_OPERATION',\n        operation\n    }\n}\n\nexport function resetOperation() {\n    return {\n        type: 'RESET_OPERATION'\n    }\n}\n\n\nexport function selectedOperation(value, field, saveToApp = false) {\n    return {\n        type: 'SELECTED_SERVICE',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function createOperation(service) {\n\n    const state = store.getState()\n\n    // const price = state.order.client.discount_service_type ? (\n    //     state.data.service_prices.find(price =>\n    //         price.service_id === service.id &&\n    //         price.discount_margin_id === state.order.client.discount_service_margin_id\n    //     ).cost || 0\n    // ) : (service.price)\n\n    const getPrice = (service, state) => {\n        if (state.order.client.discount_service_type) {\n            const price = state.data.service_prices.find(price =>\n                price.service_id === service.id &&\n                price.discount_margin_id === state.order.client.discount_service_margin_id\n            )\n            if (price) return price.cost\n            return 0\n        } else {\n            return service.price\n        }\n    }\n\n    const price = getPrice(service, state)\n\n    const discount_value = state.order.client.discount_service_type ?\n        service.price - price :\n        (service.price * state.order.client.discount_services / 100) || 0\n\n    const request_config = getRequestConfig({\n        amount: 1,\n        cost: service.cost || 0,\n        discount_value: discount_value,\n        engineer_id: state.operation.engineer_id,\n        price: service.price || 0,\n        total: state.order.client.discount_service_type ? price : price - discount_value,\n        title: service.title,\n        comment: '',\n        percent: !state.order.client.discount_service_type,\n        discount: state.order.client.discount_service_type ? (discount_value || 0) : state.order.client.discount_services,\n        warranty_period: service.warranty_period,\n        order_id: state.order.edit,\n        dict_id: service.id,\n\n        earnings_percent: service.earnings_percent,\n        earnings_summ: service.earnings_summ,\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function createCustomOperation() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit,\n        dict_id: null,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на создание операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\n\nexport function saveOperation() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        title: state.operation.title,\n        price: state.operation.price || 0,\n        amount: state.operation.amount,\n        cost: state.operation.cost || 0,\n        discount_value: state.operation.discount_value || 0,\n        engineer_id: state.operation.engineer_id,\n        total: state.operation.total || 0,\n        comment: state.operation.comment,\n        percent: state.operation.percent,\n        discount: state.operation.discount,\n        warranty_period: state.operation.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на изменение операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOperation(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.operation.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/operations', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление операции не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { resetOperation, changeOperationForm, createCustomOperation } from '../../../../Redux/actions/operationActions'\nimport { saveOperation, deleteOperation } from '../../../../Redux/actions/operationActions'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OperationEditor = (props) => {\n\n   const handleClose = () => {\n       props.resetOperation()\n       props.setVisibleFlag('statusOperationEditor', false)\n       props.setVisibleFlag('inputOperationTitleChacked', true)\n       props.setVisibleFlag('inputOperationEngineerChacked', true)\n   }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('operationEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      const discount = props.operation.percent ?  props.operation.price * props.operation.amount * props.operation.discount / 100 : props.operation.discount * props.operation.amount\n      props.changeOperationForm(discount, 'discount_value')\n   }, [props.operation.discount, props.operation.percent, props.operation.amount])\n\n   useEffect(() => {\n      props.changeOperationForm(props.operation.price * props.operation.amount - props.operation.discount_value , 'total')\n   }, [props.operation.price, props.operation.discount_value, props.operation.amount])\n\n\n  const handleCreate = () => {\n    if (props.operation.title && props.operation.engineer_id) {\n      props.createCustomOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.operation.title && props.operation.engineer_id) {\n      props.saveOperation()\n      handleClose()\n    } else {\n      if (!props.operation.title) props.setVisibleFlag('inputOperationTitleChacked', false)\n      if (!props.operation.engineer_id) props.setVisibleFlag('inputOperationEngineerChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='operationEditorWiondow'>\n         <div className='createNewTitle fsz20'>{props.operation.edit ? props.operation.title : 'Новая операция'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='mt15'\n               title='Наименование'\n               onChange={event => props.changeOperationForm(event.target.value, 'title')}\n               value={props.operation.title}\n               checkedFlag='inputOperationTitleChacked'\n               checked={props.view.inputOperationTitleChacked}\n               disabled={props.operation.deleted}\n               unvisible={props.operation.edit}\n               redStar={true}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.operation.price}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Количество'\n               onChange={event => props.changeOperationForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n               value={props.operation.amount}\n               unit=' '\n               disabled={props.operation.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.operation.cost}\n               unit='руб.'\n               disabled={props.operation.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Скидка'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                  value={props.operation.discount}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['руб.', '%']}\n                  func1 = {() => props.changeOperationForm(false, 'percent')}\n                  func2 = {() => props.changeOperationForm(true, 'percent')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeOperationForm(event.target.value.replace(/[^0-9]/g, '') * props.operation.warranty_value, 'warranty_period')}\n                  value={parseInt(props.operation.warranty_period / props.operation.warranty_value)}\n                  unit=' '\n                  disabled={props.operation.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeOperationForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeOperationForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.operation.deleted}\n               />\n            </div>\n            <ChooseOfList\n               id={24}\n               title='Исполнитель'\n               className='mt15'\n               list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n               field='engineer_id'\n               setElement={props.changeOperationForm}\n               current_id={props.operation.engineer_id}\n               employee={true}\n               width={'250px'}\n               checkedFlag='inputOperationEngineerChacked'\n               checked={props.view.inputOperationEngineerChacked}\n               disabled={props.operation.deleted}\n            />\n            <LableArea\n               className='w250 mt15'\n               title='Коментарий'\n               onChange={event => props.changeOperationForm(event.target.value, 'comment')}\n               value={props.operation.comment}\n               disabled={props.operation.deleted}\n            />\n            <div className='mt15'>Сумма скидки: {props.operation.discount_value}</div>\n            <div>Итого: {props.operation.total}</div>\n            \n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.operation.edit}\n            deleted={props.operation.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOperation(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOperation(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   operation: state.operation,\n   view: state.view,\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetOperation,\n   changeOperationForm,\n   createCustomOperation,\n   saveOperation,\n   deleteOperation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OperationEditor)\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\n/**\n * Кнопка с набором функций.\n *\n * id={'id'} // id кнопки\n *\n * className='className' // Класс стилей\n *\n * title='title' // Надпись внутри кнопки\n *\n * onClick={() => console.log('click')} // Функция при нажатии на кнопку\n *\n * unvisible={false} // Неотображать\n *\n * disabled={false} // Заблакировать\n */\nconst Button = (props) => {\n   return props.unvisible ? (<div/>) : (\n      <button\n         id={props.id}\n         className={props.unvisible ? 'disabledButton' : props.className}\n         onClick={props.onClick}\n         disabled={props.unvisible || props.disabled}\n      >\n         {props.title}\n      </button>\n   )\n}\n\nButton.propTypes = {\n    className: PropTypes.string,\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    unvisible: PropTypes.bool,\n    disabled: PropTypes.bool\n}\n\n export default Button\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeOrderPartForm( value, field ) {\n    return {\n        type: 'CHANGE_ORDER_PART_FORM',\n        field,\n        value\n    }\n}\n\nexport function editOrderPart(order_part) {\n    return {\n        type: 'EDIT_ORDER_PART',\n        order_part\n    }\n}\n\nexport function resetOrderPart() {\n    return {\n        type: 'RESET_ORDER_PART'\n    }\n}\n\n\nexport function selectedOrderPart( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_ORDER_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\n\nexport function createCustomOrderPart() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        deleted: false,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit,\n\n        order_type_id: state.order.order_type_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на создание запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n    }\n}\n\n\n\nexport function saveOrderPart() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        amount: state.orderPart.amount,\n        cost: state.orderPart.cost || 0,\n        discount_value: state.orderPart.discount_value || 0,\n        engineer_id: state.orderPart.engineer_id,\n        price: state.orderPart.price || 0,\n        total: state.orderPart.total || 0,\n        title: state.orderPart.title,\n        comment: state.orderPart.comment,\n        warranty_period: state.orderPart.warranty_period,\n        order_id: state.order.edit\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на изменение запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}\n\nexport function deleteOrderPart(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.orderPart.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/order_parts', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление запчати в заказе не выполнен'))\n\n        fetch(state.data.url_server + '/get_orders', getRequestConfig({id: state.order.edit}))\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'EDIT_ORDER',\n                        order: data.data[0]\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос заказов не выполнен'))\n\n    }\n}","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeOrderPartForm, createCustomOrderPart, deleteOrderPart} from '../../../../Redux/actions/orderPartAction'\nimport {resetOrderPart, saveOrderPart} from '../../../../Redux/actions/orderPartAction'\n\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\n\nconst OrderPartEditor = (props) => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('inputOrderPartEngineerChecked', true)\n        props.setVisibleFlag('inputOrderPartTitleChacked', true)\n        props.setVisibleFlag('statusOrderPartEditor', false)\n        props.resetOrderPart()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('orderPartEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    // В зависимости от суммы скидки discount, способа расчета percent (процент или сумма), и количества amount\n    // расчитываем сумму скидки discount_value\n    useEffect(() => {\n        // Если считаем процент то, умножаем стоимость товара price на количество amount и на процент discount/100, если нет отставляем просто сумму скидки discount\n        const discount = props.orderPart.percent ?  props.orderPart.price * props.orderPart.amount * props.orderPart.discount / 100 : props.orderPart.discount\n        // Заносим получивешееся значение в state\n        props.changeOrderPartForm(discount, 'discount_value')\n        // Перечисляем зависимости\n    }, [props.orderPart.discount, props.orderPart.percent, props.orderPart.amount])\n\n    // В зависимости от стоимости товара price, суммы скидки discount_value и количества amount\n    // расчитываем конечную стоимоть total\n    useEffect(() => {\n        // Умнажаем стомость товар price на количество amount и отнимаем общуу скидку discount_value\n        const total = props.orderPart.price * props.orderPart.amount - props.orderPart.discount_value\n        // Заносим данные в state\n        props.changeOrderPartForm(total , 'total')\n        // Перечисляем зависимости\n    }, [props.orderPart.price, props.orderPart.discount_value, props.orderPart.amount])\n\n\n    const handleCreate = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.createCustomOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.orderPart.title && props.orderPart.engineer_id) {\n            props.saveOrderPart()\n            handleClose()\n        } else {\n            if (!props.orderPart.title) props.setVisibleFlag('inputOrderPartTitleChacked', false)\n            if (!props.orderPart.engineer_id) props.setVisibleFlag('inputOrderPartEngineerChecked', false)\n        }\n    }\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow mwp' id='orderPartEditorWindow'>\n                <div className='createNewTitle fsz20'>{props.orderPart.edit ? props.orderPart.title : 'Добавить материал'}</div>\n\n                <div className='contentEditor'>\n                    <LableInput\n                        className='mt15'\n                        title='Наименование'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'title')}\n                        value={props.orderPart.title}\n                        checkedFlag='inputOrderPartTitleChacked'\n                        checked={props.view.inputOrderPartTitleChacked}\n                        disabled={props.orderPart.deleted}\n                        unvisible={props.orderPart.edit}\n                        redStar={true}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Цена'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n                        value={props.orderPart.price}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Количество'\n                        onChange={event => props.changeOrderPartForm(parseInt(event.target.value.replace(/[^0-9.]/g, '')), 'amount')}\n                        value={props.orderPart.amount}\n                        unit=' '\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableInput\n                        className='w70 mt15'\n                        title='Себестоимость'\n                        onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n                        value={props.orderPart.cost}\n                        unit='руб.'\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Скидка'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, ''), 'discount')}\n                            value={props.orderPart.discount}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['руб.', '%']}\n                            func1 = {() => props.changeOrderPartForm(false, 'percent')}\n                            func2 = {() => props.changeOrderPartForm(true, 'percent')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <div className='row al-itm-fe'>\n                        <LableInput\n                            className='w70 mt15'\n                            title='Гарантия'\n                            onChange={event => props.changeOrderPartForm(event.target.value.replace(/[^0-9]/g, '') * props.orderPart.warranty_value, 'warranty_period')}\n                            value={parseInt(props.orderPart.warranty_period / props.orderPart.warranty_value)}\n                            unit=' '\n                            disabled={props.orderPart.deleted}\n                        />\n                        <ChooseBotton\n                            className='ml30'\n                            name={['Дни', 'Мес']}\n                            func1 = {() => props.changeOrderPartForm(1*24*60*60, 'warranty_value')}\n                            func2 = {() => props.changeOrderPartForm(30*24*60*60, 'warranty_value')}\n                            disabled={props.orderPart.deleted}\n                        />\n                    </div>\n                    <ChooseOfList\n                        id={24}\n                        title='Исполнитель'\n                        className='mt15'\n                        list={props.employees.filter(employee => employee.role.permissions.includes('in_list_engineers'))}\n                        field='engineer_id'\n                        setElement={props.changeOrderPartForm}\n                        current_id={props.orderPart.engineer_id}\n                        employee={true}\n                        width={'250px'}\n                        checkedFlag='inputOrderPartEngineerChecked'\n                        checked={props.view.inputOrderPartEngineerChecked}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <LableArea\n                        className='w250 mt15'\n                        title='Коментарий'\n                        onChange={event => props.changeOrderPartForm(event.target.value, 'comment')}\n                        value={props.orderPart.comment}\n                        disabled={props.orderPart.deleted}\n                    />\n                    <div className='mt15'>Сумма скидки: {props.orderPart.discount_value}</div>\n                    <div>Итого: {props.orderPart.total}</div>\n\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.orderPart.edit}\n                    deleted={props.orderPart.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={props.permissions.includes('setting_delete_service') ? () => props.deleteOrderPart(true) : null}\n                    recover={props.permissions.includes('setting_recover_service') ? () => props.deleteOrderPart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    orderPart: state.orderPart,\n    view: state.view,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetOrderPart,\n    changeOrderPartForm,\n    createCustomOrderPart,\n    saveOrderPart,\n    deleteOrderPart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPartEditor)\n","import React, {useEffect, useState, useMemo} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport {createOperation} from '../../../../Redux/actions/operationActions'\nimport OperationEditor from './OperationEditor'\nimport Icon from '../../../general/Icon'\nimport {icon_barcode} from '../../../../data/icons'\nimport Button from '../../../general/Button'\nimport OrderPartEditor from './OrderPartEditor'\n\n\nconst SetWorkMatireals = (props) => {\n\n    const [listVisible, setlistVisible] = useState(false)\n    const [filterWorks, setFileterWorks] = useState('')\n\n    const disabled = props.status_group > 3\n\n    const clickHandel1 = (event) => {\n        if (\n            !event.path.map(el => el.id).includes('listSetWorks') &&\n            !event.path.map(el => el.id).includes('setWorks')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel1)\n        return () => {\n            window.removeEventListener('click', clickHandel1)\n        }\n    })\n\n    const servises = useMemo(() => props.dict_service.filter(service => !service.deleted && service.title.toLowerCase().includes(filterWorks.toLowerCase())), [filterWorks])\n\n    const handelCreateOperation = (service) => {\n        props.createOperation(service)\n        setlistVisible(false)\n    }\n\n    return (\n        <div className='row'>\n\n            <div className='mt15 w400'>\n                <div className='lableImput'>Выполненная работа</div>\n\n                <div className='blockImput'>\n                    <div\n                        id='setWorks'\n                        className='orderInputBox'\n                        onClick={() => setlistVisible(true)}\n                    >\n                        <input\n                            className='optionFilterInput'\n                            onChange={event => setFileterWorks(event.target.value)}\n                            velue={filterWorks}\n                            disabled={disabled}\n                        />\n                    </div>\n\n                    {listVisible && !disabled ?\n                        <div className='listFilter' id='listSetWorks'>\n                            {servises.map(service => (\n                                <div\n                                    className='rowGropList'\n                                    key={service.id}\n                                    onClick={() => handelCreateOperation(service)}\n                                >\n                                    <div className='fc-gr'>{service.title}</div>\n                                    <div className='fc-gr'>{service.price} руб.</div>\n                                </div>\n                            ))}\n                            <div className='btmsts'>\n                                <Button\n                                    title='Добавить как работу'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOperationEditor', true)}\n                                />\n                                <Button\n                                    title='Добавить как материал'\n                                    className='whiteBlueBotton'\n                                    onClick={() => props.setVisibleFlag('statusOrderPartEditor', true)}\n                                />\n                            </div>\n                        </div> : null}\n\n                </div>\n            </div>\n            {props.statusOperationEditor ? <OperationEditor/> : null}\n            {props.statusOrderPartEditor ? <OrderPartEditor/> : null}\n            <div className='setOrderOr'> или </div>\n            <div className='mt15'>\n\n                <div className='lableImput'>Товары/Запчасти</div>\n                    <div\n                        className='addPartsBox'\n                    >\n                        <Icon icon={icon_barcode} className='icon-s1'/>\n                        <div className='ml10'>Со склада</div>\n                    </div>\n                </div>\n\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    dict_service: state.data.dict_service,\n    statusOperationEditor: state.view.statusOperationEditor,\n    statusOrderPartEditor: state.view.statusOrderPartEditor,\n    status_group: state.order.status.group\n})\n\nconst mapDispatchToProps = {\n    createOperation,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetWorkMatireals)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeOrderFormS } from '../../../../Redux/actions'\nimport { editOperation, deleteOperation, resetOperation } from '../../../../Redux/actions/operationActions'\nimport { icon_briefcase, icon_bug, icon_pencil, icon_trush } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {deleteOrderPart, editOrderPart, resetOrderPart} from '../../../../Redux/actions/orderPartAction'\n\nconst TableWorksMaterials = (props) => {\n\n   const disabled = props.order.status.group > 3 || !props.permissions.includes('edit_operations_materials')\n   \n\n   const editOperation = (operation) => {\n      props.editOperation(operation)\n      props.setVisibleFlag('statusOperationEditor', true)\n   }\n\n   const deleteOperation = (operation) => {\n      props.editOperation(operation)\n      props.deleteOperation(true)\n      props.resetOperation()\n   }\n\n   const deletePart = (part) => {\n      props.editOrderPart(part)\n      props.deleteOrderPart(true)\n      props.resetOrderPart()\n   }\n\n   const editPart = (part) => {\n      props.editOrderPart(part)\n      props.setVisibleFlag('statusOrderPartEditor', true)\n   }\n\n   return (\n\n      <table className='mt15'>\n         <thead>\n            <tr>\n               <th className='w10'></th>\n               <th>Наименование</th>\n               <th className='w50 tae'>Кол-во</th>\n               <th className='w70 tae'>Цена</th>\n               <th className='w70 tae'>Скидка</th>\n               <th className='w70 tae'>Сумма</th>\n               <th></th>\n            </tr>\n         </thead>\n         \n            {props.employees.map(employee => (\n               props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).length ||\n               props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).length ?\n               <tbody key={employee.id}>\n                  <tr className='ss'>\n                     <td></td>\n                     <td className='txtb' colSpan='5'>{`${employee.first_name} ${employee.last_name}`}</td>\n                  </tr>\n                  {props.order.operations.filter(operation => !operation.deleted && operation.engineer_id === employee.id).map(operation => (\n                     <tr \n                        key={operation.id} \n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editOperation(operation) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_briefcase} color='#aaa'/>\n                        </td>\n                        <td>{operation.title}{operation.comment ? ` (${operation.comment })`: null}</td>\n                        <td className='tae'>{operation.amount}</td>\n                        <td className='tae'>{operation.price * operation.amount}</td>\n                        <td className='tae'>{operation.discount_value / operation.amount}</td>\n                        <td className='tae'>{operation.total}</td>\n                        <td>\n                           {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deleteOperation(operation)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n                  {props.order.parts.filter(part => !part.deleted && part.engineer_id === employee.id).map(part => (\n                     <tr \n                        key={part.id}\n                        className='fillcol'\n                        onDoubleClick={disabled ? null : () => editPart(part) }\n                     >\n                        <td>\n                           <Icon className='icon-s1' icon={icon_bug} color='#aaa'/>\n                        </td>\n                        <td>{part.title}{part.comment ? ` (${part.comment })`: null}</td>\n                        <td className='tae'>{part.amount}</td>\n                        <td className='tae'>{part.price * part.amount}</td>\n                        <td className='tae'>{part.discount_value / part.amount}</td>\n                        <td className='tae'>{part.total}</td>\n                        <td>\n                        {!disabled ?\n                           <div className='row'>\n                              <div onClick={() => editPart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_pencil}/>\n                              </div>\n                              <div onClick={() => deletePart(part)}>\n                                 <Icon className='icon-s2 curP ml5' icon={icon_trush}/>\n                              </div>\n                           </div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody> : null\n            ))}\n            <tbody>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого скидка:</td>\n                  <td className='tae'>{props.order.discount_sum}</td>\n                  <td>руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td className='tae' colSpan='4'>Итого сумма:</td>\n                  <td className='tae'>{props.order.price}</td>\n                  <td>руб.</td>\n               </tr>\n            </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   employees: state.data.employees,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editOperation,\n   setVisibleFlag,\n   deleteOperation,\n   resetOperation,\n   changeOrderFormS,\n   deleteOrderPart,\n   editOrderPart,\n   resetOrderPart\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWorksMaterials)","export const cells = [\n   {\n      id: 1,\n      title: 'A1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 2,\n      title: 'A2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 3,\n      title: 'A3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 4,\n      title: 'A4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 5,\n      title: 'A5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 6,\n      title: 'A6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 7,\n      title: 'B1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 8,\n      title: 'B2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 9,\n      title: 'B3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 10,\n      title: 'B4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 11,\n      title: 'B5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 12,\n      title: 'B6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 13,\n      title: 'C1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 14,\n      title: 'C2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 15,\n      title: 'C3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 16,\n      title: 'C4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 17,\n      title: 'C5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 18,\n      title: 'C6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 19,\n      title: 'D1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 20,\n      title: 'D2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 21,\n      title: 'D3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 22,\n      title: 'D4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 23,\n      title: 'D5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 24,\n      title: 'D6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   }, {\n      id: 25,\n      title: 'E1',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 26,\n      title: 'E2',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 27,\n      title: 'E3',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 28,\n      title: 'E4',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 29,\n      title: 'E5',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 30,\n      title: 'E6',\n      width: '48px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 31,\n      title: 'F1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 32,\n      title: 'F2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 33,\n      title: 'F3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 34,\n      title: 'G1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 35,\n      title: 'G2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 36,\n      title: 'G3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 37,\n      title: 'H1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 38,\n      title: 'H2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 39,\n      title: 'H3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 40,\n      title: 'I1',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 41,\n      title: 'I2',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   },{\n      id: 42,\n      title: 'I3',\n      width: '100px',\n      height: '48px',\n      color: 'grey'\n   }\n   ,{\n      id: 43,\n      title: 'J1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 44,\n      title: 'J2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 45,\n      title: 'J3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 46,\n      title: 'K1',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 47,\n      title: 'K2',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   },{\n      id: 48,\n      title: 'K3',\n      width: '100px',\n      height: '100px',\n      color: 'grey'\n   }\n]","\n\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { cells } from '../../../../data/cells'\n\n\n\nconst CellEditor = (props) => {\n\n\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusCellEditor', false)\n      // props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cellEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlock'>\n         <div className='blockWindow' id='cellEditor'>\n            <div className='createNewTitle'>Выберете ячейку</div>\n            <div className='cellContainer'>\n               {cells.map( cell => (\n                  <div\n                     key={cell.id}\n                     style={{\n                        width: cell.width,\n                        height: cell.height,\n                        backgroundColor: cell.color\n                     }}\n                     className='cell'\n                     onClick={() => {\n                        props.changeOrderFormS(cell.title, 'cell')\n                        handleClose()\n                     }}\n                  >\n                     {cell.title}\n                  </div>\n               ))}\n\n            </div>\n\n            \n\n           \n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CellEditor)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport CellEditor from './CellEditor'\n\nconst SetCell = (props) => {\n\n\n   return (\n      <div \n         className = 'mt15'\n         style={{width: '150px'}} \n      >\n         <div className='lableImput'>Ячейка</div>\n         <div \n            className='optionsButton' \n            onClick={() => props.setVisibleFlag('statusCellEditor', true)}\n         >\n            <div className='noWr w100 tac'>\n               {props.order.cell || 'Выберете ячейку'}\n            </div>\n            <span>&#6662;</span>\n         </div>\n         {props.statusCellEditor ? <CellEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n   statusCellEditor: state.view.statusCellEditor\n})\n\nconst mapDispatchToProps = {\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetCell)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport { changeOperationForm } from '../../../../Redux/actions/operationActions'\n\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SetWorkMatireals from './SetWorkMatireals'\nimport TableWorksMaterials from './TableWorksMaterials'\nimport LableArea from '../../../general/LableArea'\nimport SetCell from './SetCell'\n\nconst OrderWorksMaterials = (props) => {\n\n   const list_ingineers = props.employees.filter(employee => !employee.deleted && employee.role.permissions.includes('in_list_engineers'))\n\n   const isExist = list_ingineers.some(employee => employee.id === props.current_engineer_id)\n\n   useEffect(() => {\n      const engineer_id = props.order.engineer_id && isExist ? props.order.engineer_id : props.current_user_id\n      props.changeOperationForm(engineer_id, 'engineer_id')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n          <div className='blockImput'>\n            <ChooseOfList\n              id={18}\n              title='Исполнитель'\n              list={ list_ingineers }\n              setElement={props.changeOperationForm}\n              current_id={isExist ? props.current_engineer_id : 0}\n              width={'200px'}\n              field='engineer_id'\n              employee={true}\n            /> \n            <SetWorkMatireals/>\n            <TableWorksMaterials/>\n            <LableArea\n               className='mt15'\n               title='Заметки исполнителя'\n               onChange={event => props.changeOrderFormS(event.target.value, 'engineer_notes')}\n               value={props.order.engineer_notes}\n            />\n            <LableArea\n               className='mt15'\n               title='Вердикт / Комментарий'\n               onChange={event => props.changeOrderFormS(event.target.value, 'resume')}\n               value={props.order.resume}\n            />\n            <SetCell/>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   current_user_id: state.data.user.id,\n   current_engineer_id: state.operation.engineer_id\n   })\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   changeOperationForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderWorksMaterials)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clause = (props) => {\n   return (\n      <div className={`row ${props.className}`}>\n         <span className='lableImput'>{ props.title }</span>\n         <span className='ml5'>{ props.text }</span>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n   })\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Clause)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../Redux/actions'\nimport {deletePayment, resetPayments} from '../../Redux/actions/paymentAction'\nimport Receipt from './Receipt'\nimport BottomButtons from '../general/BottomButtons'\nimport Clause from './cashboxes/Clause'\n\nconst PaymentCard = (props) => {\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('paymentsCardWiondow')) {\n        props.setVisibleFlag('statusPaymentsCard', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n    const title = ['Перемещение денег', 'Расход денег', 'Приход денег']\n  \n  \n    return (\n         <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow wsp\" id=\"paymentsCardWiondow\">\n\n            <div className=\"createNewTitle\">\n              {title[props.payment.direction]}\n            </div>\n  \n            <div className='contentEditor'>\n              \n               <Receipt/>\n\n               <Clause\n                  className='mt15'\n                  title='Форма оплаты:'\n                  text={ props.payment.cashbox.type ? 'Безналичная' : 'Наличная'}\n               />\n               <Clause\n                  className='mt5'\n                  title='Касса:'\n                  text={ props.payment.cashbox.title }\n               />\n               {props.payment.cashflow_category ?\n               <Clause\n                  className='mt5'\n                  title='Статья:'\n                  text={ props.payment.cashflow_category }\n               /> : null}\n                {Object.values(props.payment.client).length ? \n                <Clause\n                  className='mt5'\n                  title='Клиет:'\n                  text={ props.payment.client.name }\n               /> : null}\n                <Clause\n                  className='mt5'\n                  title='Кассир:'\n                  text={ props.payment.employee.name }\n               />\n            \n  \n            </div>\n         \n  \n          <BottomButtons\n            edit={props.payment.edit}\n            delete={ props.permissions.includes('delete_payments') ? () => props.deletePayment( true ) : null }\n            recover={ props.permissions.includes('recover_payments') ? () => props.deletePayment( false ) : null }\n            close={() => {\n              props.setVisibleFlag('statusPaymentsCard', false)\n              props.resetPayments()\n            }}\n            deleted={props.payment.deleted}\n          />\n        </div>\n      </div>\n    )\n  }\n\n\nconst mapStateToProps = state => ({\n   payment: state.payment,\n   cashboxes: state.data.cashboxes,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   resetPayments,\n   deletePayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PaymentCard)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate } from '../../../general/utils'\nimport { icon_warning } from '../../../../data/icons'\nimport Icon from '../../../general/Icon'\nimport {setPayment, setVisibleFlag} from '../../../../Redux/actions'\nimport PaymentCard from '../../../Payments/PaymentCard'\n\nconst TableOrderPaymants = (props) => {\n\n   return (\n      <div className = 'mt15'>\n         <table>\n            <thead>\n               <tr>\n                  <th className='w160'>Дата и время</th>\n                  <th>Описание</th>\n                  <th className='w91 tac'>Сумма</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.order.payments.filter(payment => !payment.deleted).map(payment => (\n                  <tr\n                     key={payment.id}\n                     className={payment.deleted ? 'rowDeleted redBorder' : null}\n                     onDoubleClick={() => {\n                         props.setPayment(payment)\n                         props.setVisibleFlag('statusPaymentsCard', true)\n                     }}\n                  >\n                     <td>\n                        <div>{payment.employee.name}</div>\n                        <div className='row'>\n                           <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                           {payment.created_at !== payment.custom_created_at ?\n                              <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                              <Icon \n                                 className='icon-s2 ml5'\n                                 icon={icon_warning} \n                                 color='red' \n                              /> \n                           </div> : null}\n                        </div>\n                     </td>\n                     <td>{payment.description}</td>\n                     {payment.direction === 2 ?\n                     <td className='greenFont tac'>{payment.income}</td> :\n                     <td className='redFont tac'>{payment.outcome}</td>}\n                  </tr>\n                  \n               ))}\n                <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Итого платежей:</td>\n                  <td className='tae'>{props.order.payed} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>Заказ на сумму:</td>\n                  <td className='tae'>{props.order.price} руб.</td>\n               </tr>\n               <tr className='ss'>\n                  <td></td>\n                  <td className='tae'>\n                     {props.order.missed_payments > 0 ? 'Клиент должен нам:' : 'Мы должны клиенту'}\n                  </td>\n                  <td\n                      className='tae'\n                      style={{color: props.order.missed_payments > 0 ? '#5cb85c' : '#f74e4d'}}\n                  >\n                     {Math.abs(props.order.missed_payments)} руб.\n                  </td>\n               </tr>\n            </tbody>\n         </table>\n        {props.statusPaymentsCard ? <PaymentCard/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   order: state.order,\n    statusPaymentsCard: state.view.statusPaymentsCard\n})\n\nconst mapDispatchToProps = {\n    setPayment,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableOrderPaymants)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addItemPayments, editCurrentClient, addCashboxes } from '../../../../Redux/actions'\nimport {changePaymentForm} from '../../../../Redux/actions/paymentAction'\nimport { changeOrderFormS } from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport TableOrderPaymants from './TableOrderPaymants'\n// import PaymentsEditor from '../../../Payments/PaymentsEditor'\n\nconst OrderPayments = (props) => {\n\n   const handelIncome = () => {\n      props.changePaymentForm(2, 'direction')\n      props.changePaymentForm(props.order.client.id, 'client_id')\n      props.editCurrentClient(props.order.client)\n      props.changePaymentForm(`Оплата по заказу № ${props.order.id_label}`, 'description')\n      props.changePaymentForm(2, 'cashflow_category')\n      props.changePaymentForm(props.current_user_id, 'employee_id')\n      props.changePaymentForm(props.order.edit, 'order_id')\n      props.changePaymentForm({type: 'order'}, 'context')\n      props.setVisibleFlag('statusPaymentsEditor', true)\n   }\n\n   const handelOutcome = () => {\n      props.changePaymentForm(1, 'direction')\n      props.changePaymentForm(props.order.client.id, 'client_id')\n      props.editCurrentClient(props.order.client)\n      props.changePaymentForm(`Выплата по заказу № ${props.order.id_label}`, 'description')\n      props.changePaymentForm(8, 'cashflow_category')\n      props.changePaymentForm(props.current_user_id, 'employee_id')\n      props.changePaymentForm(props.order.edit, 'order_id')\n      props.changePaymentForm({type: 'order'}, 'context')\n      props.setVisibleFlag('statusPaymentsEditor', true)\n   }\n\n   return (\n      <div className = 'contentTab'>\n         <div className='row mt15' id='btorderpay'>\n            <Button\n               className='greenButton'\n               title='Предоплата'\n               onClick={ handelIncome }\n               unvisible={false}\n               disabled={false}\n            />\n            <Button\n               className='greenButton bcr ml10'\n               title='Выплата'\n               onClick={ handelOutcome }\n               unvisible={false}\n               disabled={false}\n            />\n         </div>\n         <TableOrderPaymants/>\n          {/*{props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}*/}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   order: state.order,\n   view: state.view,\n   current_user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   changeOrderFormS,\n   setVisibleFlag,\n   changePaymentForm,\n   addItemPayments,\n   editCurrentClient,\n   addCashboxes\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(OrderPayments)","\nimport React from 'react'\nimport PropTypes from \"prop-types\";\n\n/**\n * Чек бокс с подписью\n *\n * className='className'\n *\n * label='label'\n *\n * onChange={() => console.log('change')}\n *\n * checked={props.checked}\n *\n * disabled={false}\n *\n * unvisible={false}\n *\n * @returns {JSX.Element}\n *\n */\n\nconst Checkbox = (props) => {\n\n   return (\n      props.unvisible ? <div/> :\n      <div className={`checkbox ${props.className}`}>\n         <input \n            type='checkbox'\n            onChange={props.onChange}\n            checked={props.checked}\n            disabled={props.disabled}\n         />\n         <label>{props.label}</label>\n      </div>\n   )\n}\n\nCheckbox.propTypes ={\n    className: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    checked: PropTypes.bool,\n    disabled: PropTypes.bool,\n    unvisible: PropTypes.bool\n}\n\n export default Checkbox\n\n// className='className'\n// label='label'\n// onChange={() => console.log('change')}\n// checked={props.checked}\n// disabled={false}\n// unvisible={false}","import React, { useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Icon from '../general/Icon'\nimport {icon_down, icon_print} from '../../data/icons'\nimport Button from '../general/Button'\nimport Checkbox from '../general/Checkbox'\nimport {setVisibleFlag} from '../../Redux/actions'\n\nconst OrderPrint = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const handlePrint = () => {\n        props.setVisibleFlag('statusOrderSticker', props.checkOrderSticker)\n        setListVisible(false)\n    }\n\n    const handleCheckSticker = (event) => {\n        props.setVisibleFlag('checkOrderSticker', event.target.checked)\n        localStorage.setItem('checkOrderSticker', event.target.checked)\n    }\n\n    return (\n        <div className='blockImput mwmc'>\n            <div\n                className='row'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                <div className='whiteButton'>\n                    <Icon icon={icon_print} className='icon-s4 pd1'/>\n                    <Icon icon={icon_down} className='icon-s4 pd1'/>\n                </div>\n            </div>\n            {listVisible ?\n                <div className='listFilter'>\n                    <Checkbox\n                        label='Приемная этикетка'\n                        onChange={handleCheckSticker}\n                        checked={props.checkOrderSticker}\n                    />\n                    <Button\n                        className='blueButton ml30'\n                        title='Печать'\n                        onClick={handlePrint}\n                        unvisible={!props.order.edit}\n                    />\n                </div>\n                : null\n            }\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order,\n    checkOrderSticker: state.view.checkOrderSticker\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderPrint)","import React, {useRef} from 'react'\nimport { connect } from 'react-redux'\nimport OrderPrint from './OrderPrint'\n\n\nconst OrderHistory = (props) => {\n\n\n    return (\n        <div className=\"orderHistory\">\n        <div className='row'>\n            <OrderPrint/>\n\n        </div>\n\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n\n                    <h1 className = 'tempTitle'>История</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderHistory)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  changeOrderFormS,\n  addDictService\n} from '../../../Redux/actions'\nimport {createOrder, resetOrder, saveOrder, addOrders, saveOrderPyaments} from '../../../Redux/actions/orderActions'\nimport {resetBookEquipment} from \"../../../Redux/actions/bookActions\";\n\n\nimport BottomButtons from '../../general/BottomButtons'\nimport TitleOrderEditor from './TitleOrderEditor'\nimport Tabs from '../../general/Tabs'\nimport OrderInfo from './info/OrderInfo'\nimport OrderWorksMaterials from './work_matireal/OrderWorksMaterials'\nimport OrderPayments from './payments/OrderPayments'\n// import * as PropTypes from 'prop-types'\nimport OrderHistory from '../OrderHistory'\n\n// function ComponentToPrint(props) {\n//   return null\n// }\n//\n// ComponentToPrint.propTypes = {ref: PropTypes.any}\n\nconst OrderEditor = (props) => {\n\n  useEffect(() => {\n    props.addClients()\n  }, [props.clientFilter])\n\n  useEffect(() => {\n    props.addDiscountMargin()\n    props.addDictService()\n    props.resetBookEquipment()\n  }, [])\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusOrderEditor', false)\n    props.resetOrder()\n    props.setVisibleFlag('checkedOrderClient', false)\n    props.setVisibleListFlag('checkedOrderKindofGood', 0, true)\n    props.setVisibleListFlag('checkedOrderBrand', 0, true)\n    props.setVisibleListFlag('checkedOrderSubtype', 0, true)\n  }\n\n  const clickHandel = (event) => {\n    if (\n        !event.path.map((el) => el.id).includes('createNewOrder') &&\n        !event.path.map((el) => el.id).includes('paymentsEditorWiondow')\n    ) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  // useEffect(() => {\n  //   let sum = 0\n  //   props.order.payments.filter(payment => !payment.deleted).forEach(payment => {\n  //     sum += payment.income\n  //     sum += payment.outcome\n  //   })\n  //   props.changeOrderFormS(sum, 'payed')\n  // }, [props.order.payments])\n  //\n  // useEffect(() => {\n  //   let price = 0\n  //   let discount = 0\n  //   props.order.operations.filter(operation => !operation.deleted).forEach(operation => {\n  //     price += operation.total\n  //     discount += operation.discount_value\n  //   })\n  //   props.order.parts.filter(part => !part.deleted).forEach(part => {\n  //     price += part.total\n  //     discount += part.discount_value\n  //   })\n  //   props.changeOrderFormS(price, 'price')\n  //   props.changeOrderFormS(discount, 'discount_sum')\n  // }, [props.order.operations, props.order.parts])\n\n  \n\n  const handleCreate = () => {\n    if (\n      Object.values(props.order.client).length &&\n      props.order.equipments.every(\n        (equipment) =>\n          Object.values(equipment.kindof_good).length &&\n          Object.values(equipment.brand).length &&\n          Object.values(equipment.subtype).length &&\n          equipment.malfunction\n      )\n    ) {\n      props.createOrder()\n    } else {\n      if (!Object.values(props.order.client).length) {\n        props.setVisibleFlag('checkedOrderClient', true)\n      }\n      props.order.equipments.forEach((equipment, idx) => {\n        if (!Object.values(equipment.kindof_good).length) {\n          props.setVisibleListFlag('checkedOrderKindofGood', idx, false)\n        }\n        if (!Object.values(equipment.brand).length) {\n          props.setVisibleListFlag('checkedOrderBrand', idx, false)\n        }\n        if (!Object.values(equipment.subtype).length) {\n          props.setVisibleListFlag('checkedOrderSubtype', idx, false)\n        }\n        if (!equipment.malfunction) {\n          props.setVisibleListFlag('inputMalfunctionChecked', idx, false)\n        }\n      })\n    }\n  }\n\n  const handleSave = () => {\n    if (\n      Object.values(props.order.client).length &&\n      Object.values(props.order.kindof_good).length &&\n      Object.values(props.order.brand).length &&\n      Object.values(props.order.subtype).length\n      \n    ) {\n      props.saveOrder()\n    } else {\n      if (!Object.values(props.order.client).length) props.setVisibleFlag('checkedOrderClient', true)\n      if (!Object.values(props.order.kindof_good).length) props.setVisibleListFlag('checkedOrderKindofGood', 0, false)\n      if (!Object.values(props.order.brand).length) props.setVisibleListFlag('checkedOrderBrand', 0, false)\n      if (!Object.values(props.order.subtype).length) props.setVisibleListFlag('checkedOrderSubtype', 0, false)\n    }\n  }\n\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewOrder\">\n        <div className=\"cteateNewOrderContent\">\n          \n          <div className=\"createOrderForm\">\n\n            <TitleOrderEditor/>\n            {props.order.edit ?\n              <div>\n                <Tabs\n                  list={ ['Информация о заказе', 'Работы и материалы', 'Платежи'] }\n                  func={props.changeOrderFormS}\n                  tab={props.order.tabs}\n                />\n                  {props.order.tabs === 0 ? <OrderInfo/> : null}\n                  {props.order.tabs === 1 ? <OrderWorksMaterials/> : null}\n                  {props.order.tabs === 2 ? <OrderPayments/> : null}\n                </div> : <OrderInfo/> }\n          </div>\n\n         <OrderHistory/>\n        </div>\n\n        <div className=\"boxOrderButtons\">\n          <BottomButtons\n            edit={ props.order.edit }\n            create={ handleCreate }\n            save={ handleSave }\n            // delete={() => props.deleteClient(props.client.edit)}\n            close={ handleClose }\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  clientFilter: state.filter.clientFilter,\n  order: state.order\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addClients,\n  addDiscountMargin,\n  setVisibleListFlag,\n  createOrder,\n  changeOrderFormS,\n  resetOrder,\n  addDictService,\n  saveOrder,\n  addOrders,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderEditor)\n","import React, {forwardRef} from 'react'\n\n\n\nconst Sticker = forwardRef((props, ref) => {\n\n    const date = new Date(props.order.created_at * 1000)\n    return (\n        <div\n            className = 'orderSticker'\n            ref={ref}\n        >\n            <div className='row fs16'>\n                <div>OneTwoService</div>\n                <div className='ml30'>{props.order.id_label}</div>\n            </div>\n            <div className=' '>{ `${date.getDate()}.${date.getMonth()}.${date.getFullYear()}  Гaрантия до: _____` }</div>\n            <div>{props.order.client.name}</div>\n            <div>{props.order.malfunction}</div>\n            <div>Работа/дата:______________</div>\n            <div>Комментарий_____________</div>\n\n        </div>\n    )\n})\n\nexport default Sticker","import React, {useEffect, useRef} from 'react'\nimport {connect} from 'react-redux'\n\nimport ReactToPrint, {useReactToPrint} from 'react-to-print'\n\n\nimport Sticker from './Sticker'\n\nconst StikerToPrint = props => {\n\n    const stickerToPrintRef = useRef()\n\n\n\n    const printOSticker = useReactToPrint({\n        content: () => stickerToPrintRef.current,\n        onAfterPrint: props.onAfterPrint\n    })\n    useEffect(() => {\n        printOSticker()\n    })\n\n\n    return (\n            <div\n                style={{display: 'none'}}\n            >\n                <Sticker\n                    ref={stickerToPrintRef}\n                    order={props.order}\n                />\n            </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    order: state.order\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StikerToPrint)","import React, { useEffect, useRef, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { addOrders,editOrder } from '../../Redux/actions/orderActions'\nimport { initStatusMenuVisibleAction, setVisibleFlag } from '../../Redux/actions'\nimport { changeBookForm } from '../../Redux/actions/bookActions'\n\nimport Loader from '../Loader/Loader'\nimport Create from './cell/Create'\nimport Lable from './cell/Lable'\nimport EstimatedDone from './cell/EstimatedDone'\nimport TableHeader from './TableHeader'\nimport Status from './cell/Status'\nimport KindOfGood from './cell/KindOfGood'\nimport Brand from './cell/Brand'\nimport Malfunction from './cell/Malfunction'\nimport Engineer from './cell/Engineer'\nimport Client from './cell/Client'\nimport Price from './cell/Price'\nimport EngineerNotes from './cell/EngineerNotes'\nimport Equipment from './cell/Equipment'\nimport OrderEditor from './newOrder/OrderEditor'\nimport PaymentsEditor from '../Payments/PaymentsEditor'\nimport StikerToPrint from './StikerToPrint'\n\n// const optionsShowDate = {\n//   year: 'numeric',\n//   month: 'long',\n//   day: 'numeric',\n//   hour: 'numeric',\n//   minute: 'numeric',\n//   // second: 'numeric'\n// }\n\n\nfunction TableOrders(props) {\n\n  \n\n  useEffect(() => {\n    let statusVis = {}\n    props.ordersShow.forEach((order) => {\n    statusVis[order.id] = false\n    })\n    props.initStatusMenuVisible(statusVis)\n  }, [props.ordersShow])\n\n  const handleEdit = (order) => {\n    props.editOrder(order)\n    props.changeBookForm(order.kindof_good, 'equipment_type')\n    props.changeBookForm(order.brand, 'equipment_brand')\n    props.changeBookForm(order.subtype, 'equipment_subtype')\n    props.changeBookForm(order.model, 'equipment_model')\n    props.setVisibleFlag('statusOrderEditor', true)\n  }\n  \n   \n\n  if (props.user.table_headers && props.employees) {\n    return (\n      <div className=\"tableOrders\">\n        <table className=\"tableOrders\">\n          <thead className=\"tableThead\">\n            <tr>\n              {Object.values(props.user.table_headers).map((header) => (\n                <TableHeader data={header} key={header.id}/>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {props.ordersShow.map((order) => (\n              <tr \n                key={order.id} \n                className=\"orderTableRows\"\n                onDoubleClick={ () => handleEdit(order)}\n              >\n                <Lable data = {order}/>\n                <Create data = {order}/>\n                <EstimatedDone data = {order}/>\n                <Status data = {order}/>\n                <Equipment data = {order}/>\n                {/* <KindOfGood data = {order}/> */}\n                <Brand data = {order}/>\n                <Malfunction data = {order}/>\n                <Engineer data = {order}/>\n                {props.permissions.includes('see_client') ? <Client data = {order}/> : <div/>}\n                <Price data = {order}/>\n                <EngineerNotes data = {order}/>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {props.view.statusOrderEditor ? <OrderEditor/> : null}\n        {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n        {props.view.statusOrderSticker ? <StikerToPrint onAfterPrint={() => props.setVisibleFlag('statusOrderSticker', false)}/> : null}\n\n      </div>\n    )\n  } else {\n    return <Loader />\n  }\n}\n\nconst mapStateToProps = state => ({\n  ordersShow: state.data.ordersShow,\n  employees: state.data.employees, \n  user: state.data.user,\n  view: state.view,\n  mainFilter: state.filter.mainFilter,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addOrders,\n  initStatusMenuVisible: initStatusMenuVisibleAction,\n  setVisibleFlag,\n  editOrder,\n  changeBookForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableOrders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { appCustomFilter } from '../../Redux/actions'\n\nconst CustomFilter = (props) => {\n   return (\n    <div \n    className='customFilter'\n    onClick={() => props.appCustomFilter(props.data.filters, props.data.id)}\n    style={{backgroundColor: props.customFilters.find(filter => filter.id === props.data.id).active ? '#eeeeef' : 'white'}}\n    >\n       <div className='titleCustumFilter'>\n         {props.data.title}\n       </div>\n    </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n  customFilters: state.filter.customFilters\n   })\n  \nconst mapDispatchToProps = {\n  appCustomFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CustomFilter)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBrandListFilter, changeBrandMainFilter } from '../../../Redux/actions'\n\nconst SetBrand = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfBrand') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfBrand')\n       ) {\n       if (props.brandListFilter) {\n        props.changeBrandListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const listOfBrand = (tempFilter, equipment) => {\n\n    if (equipment.map(equipment => equipment.title).includes(tempFilter.kindof_good)) {\n      \n      return (\n        equipment.find(equipment => equipment.title === tempFilter.kindof_good).equipment_brand.map(brand => {\n\n       return (\n        brand.title.toLowerCase().includes(props.tempFilter.brand.toLowerCase()) ? \n        <div key={brand.id}\n        className='rowGropList'\n        onClick={() => {\n          props.changeBrandMainFilter(brand.title)\n          props.changeBrandListFilter()\n        }}\n        >\n          {brand.title}\n        </div> : null\n      )})\n      \n    )\n  } else {\n    let list_brand = []\n    props.equipment.forEach(equip => {\n      list_brand = list_brand.concat(equip.equipment_brand)\n    } )\n    list_brand = list_brand.map(brand => brand.title)\n    list_brand = [...new Set(list_brand)]  \n\n    return (\n      list_brand.map((brand, idx) => {\n          return (\n            brand.toLowerCase().includes(props.tempFilter.brand.toLowerCase()) ? \n        <div \n        key={idx}\n        className='rowGropList'\n        onClick={() => {\n          props.changeBrandMainFilter(brand)\n          props.changeBrandListFilter()\n        }}\n        >\n          {brand}\n        </div> : null\n          )}))}}\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Бренд</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfBrand'\n    onClick={() => props.changeBrandListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => props.changeBrandMainFilter(event.target.value)}\n      placeholder='Выбирете бренд'\n      value={props.tempFilter.brand}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.brandListFilter ? <div className='listFilter' id='listFilterOfBrand'>\n      {listOfBrand(props.tempFilter, props.equipment)}\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  brandListFilter: state.view.brandListFilter,\n  equipment: state.data.equipment,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeBrandListFilter,\n  changeBrandMainFilter,\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetBrand)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeClientListFilter, changeClientMainFilter, changeNameClientFilter } from '../../../Redux/actions'\n\nconst SetClient = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfClient') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfClient')\n       ) {\n       if (props.clientListFilter) {\n        props.changeClientListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Клиент</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfClient'\n    onClick={() => props.changeClientListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => {\n        props.changeClientMainFilter(event.target.value)\n        props.changeNameClientFilter(event.target.value)\n      }}\n      placeholder='Выбирете клиента'\n      value={props.tempFilter.client_name}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.clientListFilter ? <div className='listFilter' id='listFilterOfClient'>\n      {props.clientShow.map(client => {\n       return (\n        client.name.toLowerCase().includes(props.tempFilter.client_name.toLowerCase()) ? \n        <div \n        key={client.id}\n        className='rowGropList'\n        onClick={() => {\n          props.changeClientMainFilter(client.name)\n          props.changeClientListFilter()\n        }}\n        >\n          {client.name}\n        </div> : null\n      )})}\n\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  clientListFilter: state.view.clientListFilter,\n  clientShow: state.data.clientShow,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeClientListFilter,\n  changeClientMainFilter,\n  changeNameClientFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetClient)","import React from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { changeCreateAtMainFilter } from '../../../Redux/actions'\n\nregisterLocale('ru', ru)\n\nconst SetDataCreate = (props) => {\n\n \n   return (\n    <>\n    <div className='optionsFilterTitle'>Заказ создан</div>\n    <DatePicker \n      selectsRange={true}\n      startDate={props.created_at[0] ? new Date(props.created_at[0]) : null}\n      endDate={props.created_at[1] ? new Date(props.created_at[1]) : null}\n      onChange={(update) => {\n        props.changeCreateAtMainFilter(update.map(day =>  day ? day.getTime() : null))\n      }}\n      isClearable={true}\n      placeholderText='Выбирите дату'\n      className=\"optionFilterInputDate\"\n      dateFormat=\"dd.MM.yyyy\"\n      locale={'ru'}\n      maxDate={ Date.now() }\n    />\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  created_at: state.filter.tempFilter.created_at\n   })\n\nconst mapDispatchToProps = {\n  changeCreateAtMainFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetDataCreate)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeEngineerListFilter, changeCheckEngineer, setAllEngineerTrue, setAllEngineerFalse } from '../../../Redux/actions'\n\nconst SetEngineer = (props) => {\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfEngineer') &&\n         !event.path.map(el => el.id).includes('optionsFilterButtonOfEngineer')\n         ) {\n         if (props.engineerListFilter) {\n          props.changeEngineerListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n\n   const chooseWord = (count) => {\n\n      if (count === props.employees.length) {\n        return 'Любой'\n      }\n  \n      if (count === 0) {\n         return 'Выбирете инженера'\n      }\n  \n      if (count > 10 &&  count < 20) {\n         return `${count} инженеров`\n      }\n  \n      if (count % 10  === 1 ) {\n         return `${count} инженер`\n      }\n  \n      if (count % 10  > 1 && count % 10  < 5) {\n         return `${count} инженера`\n      }\n      return `${count} инженеров`\n   }\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Инженер</div>\n    <div \n    className='optionsFilterButton' \n    id='optionsFilterButtonOfEngineer' \n    onClick={() => props.changeEngineerListFilter()}\n    > \n      <span>{chooseWord(props.tempFilter.engineer_id.length)}</span>  \n      <span>&#6662;</span> \n    </div>\n    {props.engineerListFilter ? <div className='listFilter' id='listFilterOfEngineer'>\n\n        {props.employees.map(employee => {\n          \n          if (!employee.deleted) {\n            return (\n              <div className='statusListTitle2' key={employee.id}>\n                  <input \n                  className = 'chackboxListStatus' \n                  type = 'checkbox'\n                  onChange = {() => props.changeCheckEngineer(employee.id)}\n                  checked = {props.tempFilter.engineer_id.includes(employee.id)}\n                  />\n                  <div className='listFilterMenu'>{`${employee.first_name} ${employee.last_name}`}</div>\n              </div>\n          )}\n          return null\n        })}\n         \n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllEngineerTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllEngineerFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n   tempFilter: state.filter.tempFilter,\n   engineerListFilter: state.view.engineerListFilter,\n   employees: state.data.employees\n   })\n\nconst mapDispatchToProps = {\n  changeEngineerListFilter,\n  changeCheckEngineer,\n  setAllEngineerTrue,\n  setAllEngineerFalse\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetEngineer)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeGroupListFilter, changeGroupMainFilter } from '../../../Redux/actions'\n\nconst SetGroupe = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfGroup') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfGroup')\n       ) {\n       if (props.groupListFilter) {\n        props.changeGroupListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Группа</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfGroup'\n    onClick={() => props.changeGroupListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => props.changeGroupMainFilter(event.target.value)}\n      placeholder='Выбирете группу'\n      value={props.tempFilter.kindof_good}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.groupListFilter ? <div className='listFilter' id='listFilterOfGroup'>\n      {props.equipment.map(equipment => {\n     \n       return (\n        equipment.title.toLowerCase().includes(props.tempFilter.kindof_good.toLowerCase()) ? \n        <div\n        key={equipment.id} \n        className='rowGropList'\n        onClick={() => {\n          props.changeGroupMainFilter(equipment.title)\n          props.changeGroupListFilter()\n        }}\n        >\n          {equipment.title}\n        </div> : null\n      )})}\n\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  groupListFilter: state.view.groupListFilter,\n  equipment: state.data.equipment,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeGroupListFilter,\n  changeGroupMainFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetGroupe)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeManagerListFilter, changeCheckManager, setAllManagerTrue, setAllManagerFalse } from '../../../Redux/actions'\n\nconst SetManager = (props) => {\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('listFilterOfManager') &&\n         !event.path.map(el => el.id).includes('optionsFilterButtonOfManager')\n         ) {\n         if (props.managerListFilter) {\n          props.changeManagerListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n  \n\n   const chooseWord = (count) => {\n\n      if (count === props.employees.length) {\n        return 'Любой'\n      }\n  \n      if (count === 0) {\n         return 'Выбирете менеджера'\n      }\n  \n      if (count > 10 &&  count < 20) {\n         return `${count} менеджеров`\n      }\n  \n      if (count % 10  === 1 ) {\n         return `${count} менеджер`\n      }\n  \n      if (count % 10  > 1 && count % 10  < 5) {\n         return `${count} менеджера`\n      }\n      return `${count} менеджеров`\n   }\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Менеджер</div>\n    <div \n    className='optionsFilterButton' \n    id='optionsFilterButtonOfManager' \n    onClick={() => props.changeManagerListFilter()}\n    > \n      <span>{chooseWord(props.tempFilter.manager_id.length)}</span>  \n      <span>&#6662;</span> \n    </div>\n    {props.managerListFilter ? <div className='listFilter' id='listFilterOfManager'>\n\n        {props.employees.map(employee => {\n          \n          if (!employee.deleted) {\n            return (\n              <div className='statusListTitle2' key={employee.id}>\n                  <input \n                  className = 'chackboxListStatus' \n                  type = 'checkbox'\n                  onChange = {() => props.changeCheckManager(employee.id)}\n                  checked = {props.tempFilter.manager_id.includes(employee.id)}\n                  />\n                  <div className='listFilterMenu'>{`${employee.first_name} ${employee.last_name}`}</div>\n              </div>\n          )}\n          return null\n        })}\n         \n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllManagerTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllManagerFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n   tempFilter: state.filter.tempFilter,\n   managerListFilter: state.view.managerListFilter,\n   employees: state.data.employees\n   })\n\nconst mapDispatchToProps = {\n  changeManagerListFilter,\n  changeCheckManager,\n  setAllManagerTrue,\n  setAllManagerFalse\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetManager)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSubtypeListFilter, changeSubtypeMainFilter } from '../../../Redux/actions'\n\nconst SetSubtype = (props) => {\n\n  const clickHandel = (event) => {\n    if (\n       !event.path.map(el => el.id).includes('listFilterOfSubtype') &&\n       !event.path.map(el => el.id).includes('optionsFilterTextOfSubtype')\n       ) {\n       if (props.subtypeListFilter) {\n        props.changeSubtypeListFilter()\n    }}\n  }\n \n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const listOfSubtype = (tempFilter, equipment) => {\n  \n    if (\n      equipment.map(equipment => equipment.title).includes(tempFilter.kindof_good) && \n      equipment.find(equip => equip.title == tempFilter.kindof_good).equipment_brand.map(brand => brand.title).includes(tempFilter.brand)\n    ) {\n      \n      return (\n        equipment.find(equipment => equipment.title === tempFilter.kindof_good)\n        .equipment_brand.find(brand => brand.title == tempFilter.brand).equipment_subtype.map(subtype => {\n\n       return (\n        subtype.title.toLowerCase().includes(props.tempFilter.subtype.toLowerCase()) ? \n        <div \n        key={subtype.id}\n        className='rowGropList'\n        onClick={() => {\n          props.changeSubtypeMainFilter(subtype.title)\n          props.changeSubtypeListFilter()\n        }}\n        >\n          {subtype.title}\n        </div> : null\n      )})\n      \n    )\n  } else {\n    let list_subtype = []\n    props.equipment.forEach(equip => {\n      equip.equipment_brand.forEach(brand => {\n        list_subtype = list_subtype.concat(brand.equipment_subtype)\n      })\n    })\n    list_subtype = list_subtype.map(subtype => subtype.title)\n    list_subtype = [...new Set(list_subtype)]  \n\n    return (\n      list_subtype.map((subtype, idx) => {\n          return (\n            subtype.toLowerCase().includes(props.tempFilter.subtype.toLowerCase()) ? \n        <div\n        key={idx} \n        className='rowGropList'\n        onClick={() => {\n          props.changeSubtypeMainFilter(subtype)\n          props.changeSubtypeListFilter()\n        }}\n        >\n          {subtype}\n        </div> : null\n          )}))}}\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Модуль</div>\n    <div \n    className='optionsFilterText'\n    id='optionsFilterTextOfSubtype'\n    onClick={() => props.changeSubtypeListFilter()}\n    > \n      <input \n      className='optionFilterInput'\n      onChange={event => props.changeSubtypeMainFilter(event.target.value)}\n      placeholder='Выбирете тип модуля'\n      value={props.tempFilter.subtype}\n      />\n      <span>&#6662;</span> \n    </div>\n    {props.subtypeListFilter ? <div className='listFilter' id='listFilterOfSubtype'>\n      {listOfSubtype(props.tempFilter, props.equipment)}\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  subtypeListFilter: state.view.subtypeListFilter,\n  equipment: state.data.equipment,\n  tempFilter: state.filter.tempFilter\n})\n\nconst mapDispatchToProps = {\n  changeSubtypeListFilter,\n  changeSubtypeMainFilter\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetSubtype)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeStausListFilter, changeCheckStatus, setAllStatusFalse, setAllStatusTrue } from '../../../Redux/actions'\n\n\n\n\n\nconst SetStatus = (props) => {\n\n   const clickHandel = (event) => {\n      if (\n         !event.path.map(el => el.id).includes('stausListFilter') &&\n         !event.path.map(el => el.id).includes('optionsFilterButtonOfStatus')\n         ) {\n         if (props.stausListFilter) {\n          props.changeStausListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n\n  const chooseWord = (count_status) => {\n\n      if (count_status === props.status.length) {\n         return 'Любой'\n      }\n\n      if (count_status === 0) {\n         return 'Выбирете статус'\n      }\n\n      if (count_status > 10 &&  count_status < 20) {\n         return `${count_status} статусов`\n      }\n\n      if (count_status % 10  === 1 ) {\n         return `${count_status} статус`\n      }\n\n      if (count_status % 10  > 1 && count_status % 10  < 5) {\n         return `${count_status} статусa`\n      }\n      return `${count_status} статусов`\n  }\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Статус</div>\n    <div \n    className='optionsFilterButton' \n    id='optionsFilterButtonOfStatus'\n    onClick = {() => props.changeStausListFilter()}\n    > \n      <span>\n         {chooseWord(props.tempFilter.status_id.length)}\n      </span>  \n      <span>&#6662;</span> \n    </div>\n    {props.stausListFilter ? <div className='stausListFilter' id='stausListFilter'>\n       {props.status_group.map(group => {\n          return (\n             <div key={group.id}>\n\n             {group.status.length ? <div className='statusListTitle' >\n             \n                {group.name}\n                </div> : null}\n\n             {group.status.map(status => {\n                return (\n                  <div className='statusListTitle2' key={status.id + group.id * 100}>\n                     <input \n                     className = 'chackboxListStatus' \n                     type = 'checkbox'\n                     name = {status.id}\n                     onChange = {() => props.changeCheckStatus(status.id)}\n                     checked = {props.tempFilter.status_id.includes(status.id)}\n                     />\n                     <div className='statusListRow' style = {{backgroundColor: status.color}}> {status.name}</div>\n                  </div>\n                )\n             })}\n          </div>\n          )\n       })}\n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllStatusTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllStatusFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n   tempFilter: state.filter.tempFilter,\n   status: state.data.status,\n   status_group: state.data.status_group,\n   stausListFilter: state.view.stausListFilter\n   })\n\nconst mapDispatchToProps = {\n   changeStausListFilter,\n   changeCheckStatus,\n   setAllStatusFalse,\n   setAllStatusTrue\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SetStatus)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeTypeListFilter, changeCheckType, setAllTypeTrue, setAllTypeFalse } from '../../../Redux/actions'\n\nconst SetTypeOrders = (props) => {\n\n   const clickHandel = (event) => {\n\n      if ( \n          !event.path.map(el => el.id).includes('listFilterOfType') && \n          !event.path.map(el => el.id).includes('optionsFilterButtonOfType')\n      ) {\n         if (props.typeListFilter) {\n          props.changeTypeListFilter()\n      }}\n    }\n   \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n\n\n  const chooseWord = (count) => {\n\n    if (count === props.order_type.length) {\n      return 'Любой'\n    }\n\n    if (count === 0) {\n       return 'Выбирете тип'\n    }\n\n    if (count > 10 &&  count < 20) {\n       return `${count} типов`\n    }\n\n    if (count % 10  === 1 ) {\n       return `${count} тип`\n    }\n\n    if (count % 10  > 1 && count % 10  < 5) {\n       return `${count} типа`\n    }\n    return `${count} типов`\n}\n\n   return (\n    <>\n    <div className='optionsFilterTitle'>Тип заказа</div>\n    <div \n    className='optionsFilterButton'\n    id='optionsFilterButtonOfType'\n    onClick={() => props.changeTypeListFilter()}\n    > \n      <span>{chooseWord(props.tempFilter.order_type_id.length)}</span>  \n      <span>&#6662;</span> \n    </div>\n    {props.typeListFilter ? <div className='listFilter' id='listFilterOfType'>\n\n        {props.order_type.map(type => {\n          return (\n            <div className='statusListTitle2' key={type.id}>\n                <input \n                className = 'chackboxListStatus' \n                type = 'checkbox'\n                name = {type.id}\n                onChange = {event => props.changeCheckType(event.target.name)}\n                checked = {props.tempFilter.order_type_id.includes(type.id)}\n                />\n                <div className='listFilterMenu'>{type.name}</div>\n            </div>\n          )\n        })}\n         \n      <div className='btmsts'>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllTypeTrue()}\n         >\n            Выбрать все\n         </div>\n         <div \n         className='btnstsTitle'\n         onClick={() => props.setAllTypeFalse()}\n         >\n            Отменить все\n         </div>\n      </div>\n    </div> : null}\n    </>\n   )\n}\n\nconst mapStateToProps = state => ({\n  typeListFilter: state.view.typeListFilter,\n  order_type: state.data.order_type,\n  tempFilter: state.filter.tempFilter\n})\n\n\nconst mapDispatchToProps = {\n  changeTypeListFilter,\n  changeCheckType,\n  setAllTypeTrue,\n  setAllTypeFalse\n}\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(SetTypeOrders)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeStatusCreateNewFilter,\n  changeTitleCreate,\n  changeGeneraleCreate,\n  addCustomFilter,\n} from '../../Redux/actions'\n\nconst CreateNewFilter = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewFilterWiondow')) {\n      props.changeStatusCreateNewFilter()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewFilterWiondow\">\n        <div className=\"createNewTitle\">Новый фильтр</div>\n        <div className=\"lableImput\">\n          Название филтьтра <span className=\"redStar\">*</span>\n        </div>\n        <input\n          className=\"textInput\"\n          onChange={(event) => props.changeTitleCreate(event.target.value)}\n          value={props.title_create}\n        />\n        <div className=\"checkboxRow\">\n          <input\n            type=\"checkbox\"\n            className=\"chackboxListStatus\"\n            onChange={() => props.changeGeneraleCreate()}\n            value={props.generale_create}\n          />\n          <div className=\"lableImput\">Общий фильтр</div>\n        </div>\n        <div className=\"buttons mt15\">\n          <div\n            className=\"blueButton\"\n            onClick={() => {\n              props.addCustomFilter()\n              props.changeStatusCreateNewFilter()\n            }}\n          >\n            Cохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.changeStatusCreateNewFilter()}\n          >\n            Отменить\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  generale_create: state.filter.generale_create,\n  title_create: state.filter.title_create,\n})\n\nconst mapDispatchToProps = {\n  changeStatusCreateNewFilter,\n  changeTitleCreate,\n  changeGeneraleCreate,\n  addCustomFilter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateNewFilter)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  addClients,\n  appFilter,\n  resetFilter,\n  changeStatusCreateNewFilter,\n  saveCustomFilter,\n  removeFilter,\n} from '../../../Redux/actions'\n\nimport SetBrand from './SetBrand'\nimport SetClient from './SetClient'\nimport SetDataCreate from './SetDataCreate'\nimport SetEngeneer from './SetEngeneer'\nimport SetGroup from './SetGroup'\nimport SetManager from './SetManager'\nimport SetSubtype from './SetSubtype'\nimport SetStatus from './SetStatus'\nimport SetTypeOrders from './SetTypeOrders'\nimport CreateNewFilter from '../CreateNewFilter'\n\nimport { icon_trush } from '../../../data/icons'\n\nconst SetFilter = (props) => {\n  useEffect(() => {\n    props.addClients()\n  }, [props.clientFilter])\n\n  return (\n    <div className=\"setCustomFilter\">\n      <div className=\"filterOptions\">\n        <div className=\"setCustomFilterRow\">\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetStatus />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetGroup />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetClient />\n          </div>\n        </div>\n        <div className=\"setCustomFilterRow\">\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetTypeOrders />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetBrand />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetManager />{' '}\n          </div>\n        </div>\n        <div className=\"setCustomFilterRow\">\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetDataCreate />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {' '}\n            <SetSubtype />{' '}\n          </div>\n          <div className=\"setCustomFilterCell\">\n            {props.user.role.orders_visibility ? (\n              <SetEngeneer />\n            ) : (\n              <>\n                <div className=\"optionsFilterTitle\">Инженер</div>\n                <div className=\"optionsFilterButton curNone\">\n                  <span>{`${props.user.last_name} ${props.user.first_name}`}</span>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n      <div className=\"buttons fs14 mt15\">\n        <div className=\"blueButton\" onClick={() => props.appFilter()}>\n          Применить\n        </div>\n        {props.customFilters.map((filter) => filter.active).includes(true) ? (\n          <>\n            <div\n              className=\"whiteButton\"\n              onClick={() => props.saveCustomFilter()}\n            >\n              Сохранить фильтр\n            </div>\n            <div\n              className=\"whiteButton simbolBotton\"\n              onClick={() => props.removeFilter()}\n            >\n              <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                <path d={icon_trush} />\n              </svg>\n            </div>\n          </>\n        ) : (\n          <div\n            className=\"whiteButton\"\n            onClick={() => props.changeStatusCreateNewFilter()}\n          >\n            Создать фильтр\n          </div>\n        )}\n        <div className=\"whiteButton\" onClick={() => props.resetFilter()}>\n          <span className=\"blackCross\">✖</span>Сбросить параметы\n        </div>\n      </div>\n      {props.statusCreateNewFilter ? <CreateNewFilter /> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  clientFilter: state.filter.clientFilter,\n  statusCreateNewFilter: state.view.statusCreateNewFilter,\n  customFilters: state.filter.customFilters,\n  user: state.data.user,\n})\n\nconst mapDispatchToProps = {\n  addClients,\n  appFilter,\n  resetFilter,\n  changeStatusCreateNewFilter,\n  saveCustomFilter,\n  removeFilter,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SetFilter)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport CustomFilter from './CustomFilter'\nimport SetFilter from './setCustomFilter/SetFilter'\nimport { changeSetStatusFilter, setVisibleFlag, changeOrderFormS } from '../../Redux/actions'\nimport OrderEditor from './newOrder/OrderEditor'\nimport { icon_table } from '../../data/icons'\n\nconst CustomPanel = (props) => {\n\n   const newOrder = () => {\n      // if (!props.edit) {\n      //    props.changeOrderFormS(parseInt(Date.now() / 1000) + 4 * 24 * 3600, 'estimated_done_at')\n      //  }\n      props.changeOrderFormS(props.user.id, 'manager_id')\n      props.setVisibleFlag('statusOrderEditor', true)\n   }\n\n   return (\n      <div className='mainCustomPanel'>\n         <div className='customPanel'>\n            <div \n               className='greenButton h27'\n               style={props.permissions.includes('create_orders') ?  null : {display: 'none'}}\n               onClick = { newOrder }>\n                  + Заказ \n            </div>\n            \n            <div className='customFilters'>\n               <div \n               className='customFilter'\n               onClick = { ()=> props.changeSetStatusFilter() }>\n                  <div className='cl11'>\n                  <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                     <path d=\"M16 0c-8.837 0-16 2.239-16 5v3l12 12v10c0 1.105 1.791 2 4 2s4-0.895 4-2v-10l12-12v-3c0-2.761-7.163-5-16-5zM2.95 4.338c0.748-0.427 1.799-0.832 3.040-1.171 2.748-0.752 6.303-1.167 10.011-1.167s7.262 0.414 10.011 1.167c1.241 0.34 2.292 0.745 3.040 1.171 0.494 0.281 0.76 0.519 0.884 0.662-0.124 0.142-0.391 0.38-0.884 0.662-0.748 0.427-1.8 0.832-3.040 1.171-2.748 0.752-6.303 1.167-10.011 1.167s-7.262-0.414-10.011-1.167c-1.24-0.34-2.292-0.745-3.040-1.171-0.494-0.282-0.76-0.519-0.884-0.662 0.124-0.142 0.391-0.38 0.884-0.662z\"></path>\n                  </svg>\n               </div> Фильтр\n               </div>\n               {props.customFilters.map(filter => {\n                  return (\n                  <CustomFilter data = {filter} key = {filter.id}/>\n                  )\n               })}\n            </div>\n            <div \n               className='chooseFieldButton'\n               onClick = {()=> console.log('ckick on \"set table\"')}\n            >\n               <div className='cl11'>\n                  <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                     <path d={icon_table}></path>\n                  </svg>\n               </div>\n               <div className='cl12'>\n                  <span className=\"fieldSeparate\">&#6662;</span>\n               </div>   \n            </div>\n         </div>\n         \n            {props.statusSetCustomFilter ? <SetFilter/> : null}\n         \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   customFilters: state.filter.customFilters,\n   statusSetCustomFilter: state.view.statusSetCustomFilter,\n   permissions: state.data.user.role.permissions,\n   statusOrderEditor: state.view.statusOrderEditor,\n   user: state.data.user,\n   edit: state.order.edit\n   })\n\nconst mapDispatchToProps = {\n   changeSetStatusFilter,\n   setVisibleFlag,\n   changeOrderFormS\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CustomPanel)","import React, {useState, useEffect, useRef} from 'react'\nimport _, {add} from 'lodash'\nimport ReactPaginate from 'react-paginate'\nimport {connect} from 'react-redux'\n\nimport Header from './Header'\nimport Filters from './Filters'\nimport TableOrders from './TableOrdrers'\nimport Loader from '../Loader/Loader'\nimport OrderEditor from './newOrder/OrderEditor'\nimport {addOrders} from '../../Redux/actions/orderActions'\nimport {\n    changePageAction,\n    addBaggesAction,\n    addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment\n} from '../../Redux/actions'\nimport CustomPanel from './CustomPanel'\n\nfunction Orders(props) {\n\n\n// Загружаем заказы\n    useEffect(() => {\n        props.addStatusGroup()\n        props.addCustomFilters()\n        props.addAdCampaign()\n    }, [])\n\n\n    const pageChangeHandler = (page) => {\n        const curent_page = page.selected ? page.selected : 0\n        props.changePage(curent_page)\n    }\n    useEffect(() => {\n        props.addOrders()\n        props.addBagges()\n    }, [props.mainFilter])\n\n    return (\n        <div className=\"pageContent\">\n            <Header oderSearch={''}/>\n            <Filters/>\n            <CustomPanel/>\n            {props.ordersShow ? <TableOrders/> : <Loader/>}\n            <div className=\"tableAllPage\">\n                <ReactPaginate\n                    pageCount={props.count % 50 > 0 ? (props.count / 50) : props.count / 50 - 1}\n                    marginPagesDisplayed={2}\n                    pageRangeDisplayed={5}\n                    onPageChange={pageChangeHandler}\n                    forcePage={props.mainFilter.page}\n                    previousLabel={'<'}\n                    nextLabel={'>'}\n                    breakLabel={'...'}\n                    breakClassName={'pages-pagination'}\n                    containerClassName={'pagination'}\n                    pageClassName={'pages-pagination'}\n                    activeClassName={'active'}\n                    nextClassName={'pages-pagination'}\n                    previousClassName={'pages-pagination'}\n                />\n                <div className=\"tablePageCount\">\n                    Всего - {props.count}\n                </div>\n            </div>\n            {props.statusOrderLoader ? <Loader className='orderLoader'/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    mainFilter: state.filter.mainFilter,\n    count: state.filter.count,\n    ordersShow: state.data.ordersShow,\n    statusOrderLoader: state.view.statusOrderLoader\n})\n\nconst mapDispatchToProps = {\n    addOrders,\n    changePage: changePageAction,\n    addBagges: addBaggesAction,\n    addStatusGroup: addStatusGroupAction,\n    addCustomFilters,\n    addAdCampaign,\n    addEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst TaskManager = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будет менеджер задач</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(TaskManager)\n","import React from 'react'\n\n\nconst Leads = () => {\n\n\n    const handleOnCkick = () => {\n\n        fetchOrders()\n    }\n\n    async function fetchOrders() {\n\n        const url = 'https://onetwoonline.moizvonki.ru/api/v1'\n\n        const body = {\n            user_name: 'stasmen66@gmail.com',\n            api_key: '1zww7we8zoq53rm32cmewjnjx683asms',\n            action: 'calls.send_sms',\n            to: '79002888475',\n            text: 'Брат привет!'\n        }\n\n        try {\n            const request_config = {\n                method: \"POST\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'Content-Length': '2'\n                },\n                body: JSON.stringify(body)\n            }\n\n            await fetch(url, request_config)\n                .then(response => response.json())\n                .then(data => console.log(data))\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    return (\n        <div className=\"tempPage\">\n            <div className=\"tempContainer\">\n                <h1 className=\"tempTitle\">Здесь будут обращения</h1>\n                <p className=\"tempDescription\">Страница на стадии разработки</p>\n                <button onClick={handleOnCkick} className=\"dataDownload\">\n                    Загрузить заказ\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Leads\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Shops = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут продажи</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Shops)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { icone_sphere, icone_setting } from '../../../data/icons'\nimport { activeCashbox, editCashbox, setVisibleFlag, changeCashboxForm } from '../../../Redux/actions'\nimport {changePaymentForm} from '../../../Redux/actions/paymentAction'\nimport Button from '../../general/Button'\nimport Icon from '../../general/Icon'\n\n\n\nconst Cashbox = (props) => {\n\n   const activ = (id) => {\n      return id === props.activ_cashbox_id\n   }\n\n   const edit = props.user.role.permissions.includes('edit_cash')\n\n   const income = props.user.role.permissions.includes('make_income') &&\n                  activ(props.cashbox.id) && \n                  (props.cashbox.employees[props.user.id].like_cashbox ? \n                  props.cashbox.permissions.includes('incoming') :\n                  props.cashbox.employees[props.user.id].permissions.includes('incoming'))\n\n   const outcome = props.user.role.permissions.includes('make_expenditure') &&\n                   activ(props.cashbox.id) && \n                   (props.cashbox.employees[props.user.id].like_cashbox ? \n                   props.cashbox.permissions.includes('outcoming') :\n                   props.cashbox.employees[props.user.id].permissions.includes('outcoming'))\n\n   const move = props.user.role.permissions.includes('move_money') &&\n                activ(props.cashbox.id) && \n                (props.cashbox.employees[props.user.id].like_cashbox ? \n                props.cashbox.permissions.includes('outcoming_move') :\n                props.cashbox.employees[props.user.id].permissions.includes('outcoming_move'))\n\n   const showBalance = props.user.role.permissions.includes('see_remains') &&\n                       (props.cashbox.employees[props.user.id].like_cashbox ? \n                       props.cashbox.permissions.includes('show_cashbox_remains') :\n                       props.cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains'))\n\n   function handleEdit () {\n      props.editCashbox(props.cashbox)\n      props.setVisibleFlag('statusCashboxEditor', true)\n   }\n\n\n   return (\n      <div \n         className = {`cashbox ${activ(props.cashbox.id) && !props.cashbox.deleted  ? 'bcg' : 'cgr'}`}\n         onClick={() => props.changeCashboxForm(props.cashbox, 'current_cashbox')}\n      >\n         <div className='icons'>\n               <div><Icon className='smalIcon' icon={icone_sphere} color={activ(props.cashbox.id) && props.cashbox.isGlobal ? 'grey' : 'white'}/></div>\n               <div\n                  onClick={edit ? handleEdit : null}\n               >\n                  <Icon className='smalIcon curP' icon={icone_setting} color={activ(props.cashbox.id) && edit ? 'grey' : 'white'}/>\n               </div>\n         </div>\n         <div>{props.cashbox.title.toUpperCase()}</div>\n         {showBalance ? \n         <div className='cacsboxBalance'>{`${parseFloat(props.cashbox.balance).toFixed(2)} руб.`}</div> : null}\n         <div className='row jc-c'>\n            <Button\n               title='+ Приход'\n               className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton m10'}\n               onClick={() => {\n                  props.changePaymentForm(2, 'direction')\n                  props.changePaymentForm({type: 'payment'}, 'context')\n                  props.setVisibleFlag('statusPaymentsEditor', true)\n               }}\n               disabled={props.cashbox.deleted}\n               unvisible={!income}\n            />\n            <Button\n               title='- Расход'\n               className={props.cashbox.deleted ? 'whiteButton m10' : 'greenButton bcr m10'}\n               onClick={() => {\n                  props.changePaymentForm(1, 'direction')\n                  props.changePaymentForm({type: 'payment'}, 'context')\n                  props.setVisibleFlag('statusPaymentsEditor', true)\n               }}\n               disabled={props.cashbox.deleted}\n               unvisible={!outcome}\n            /> \n         </div>\n         <Button\n            title='Перемещение'\n            className='whiteButton'\n            onClick={() => {\n               props.changePaymentForm(0, 'direction')\n               props.changePaymentForm(props.cashbox.id, 'cashbox_id')\n               props.changePaymentForm({type: 'payment'}, 'context')\n               props.setVisibleFlag('statusPaymentsEditor', true)\n            }}\n            disabled={props.cashbox.deleted}\n            unvisible={!move}\n         /> \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   user: state.data.user,\n   activ_cashbox_id: state.cashbox.current_cashbox.id\n})\n\nconst mapDispatchToProps = {\n   activeCashbox,\n   editCashbox,\n   setVisibleFlag,\n   changePaymentForm,\n   changeCashboxForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashbox)","\nimport React from 'react'\n\nimport Icon from './Icon'\nimport { icon_warning } from '../../data/icons'\n\nconst WarningOrange = (props) => {\n   return (\n      <div \n         className='warningOrange'\n         style={{width: props.width}}\n      >\n         <div><Icon icon={icon_warning} color='#efac4e'/></div>\n         <div className='ml10'>{props.text}</div>\n      </div>\n   )\n}\n\n  \n export default WarningOrange","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeEmployeeSelected, changeCashboxPermissions } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport WarningOrange from '../../general/WarningOrange'\nimport Checkbox from '../../general/Checkbox'\n\nconst CashboxEmployeeEditor = (props) => {\n\n   const [perm, setPerm] = useState( props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox )\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('cashboxEmployeeEditor')) {\n        props.setVisibleFlag('statusCashboxEmployeeEditor', false)\n      }\n    }\n  \n    useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n    })\n   \n  return (\n    <div className=\"centerBlock\">\n      <div className=\"blockWindow\" id='cashboxEmployeeEditor'>\n        <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n        <div className=\"createNewTitle mt0\">\n          {props.employee.role_title}\n        </div>\n        <WarningOrange\n          text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n          width=\"500px\"\n        />\n        <ChooseBotton\n          className='mt15'\n          title='Выберите права'\n          name={['Доступные для кассы', 'Персональные']}\n          func1={() => {\n             setPerm(true)\n             props.changeCashboxPermissions(true, 'like_cashbox')\n          }}\n          func2={() => {\n             setPerm(false)\n             props.changeCashboxPermissions(false, 'like_cashbox')\n            }}\n          checked={props.cashbox.employees[props.cashbox.permissions_employee].like_cashbox}\n          disabled={props.cashbox.deleted}\n        />\n        <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.changeCashboxPermissions('show_cashbox_remains', 'permissions')} \n            checked={\n               perm ? \n               props.cashbox.permissions.includes('show_cashbox_remains') : \n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cashbox_remains')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.changeCashboxPermissions('show_cash_flow', 'permissions')} \n            checked={ \n               perm ? \n               props.cashbox.permissions.includes('show_cash_flow') :\n               props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('show_cash_flow')\n            }\n            disabled={props.cashbox.deleted || perm}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('incoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('incoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('incoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('incoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.changeCashboxPermissions('outcoming', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.changeCashboxPermissions('outcoming_move', 'permissions')} \n                  checked={ \n                     perm ? \n                     props.cashbox.permissions.includes('outcoming_move') :\n                     props.cashbox.employees[props.cashbox.permissions_employee].permissions.includes('outcoming_move')\n                  }\n                  disabled={props.cashbox.deleted || perm}\n               />\n            </div>\n          </div>\n\n        <div className=\"row\">\n          <div\n            className=\"blueButton mr-lf-0\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Сохранить\n          </div>\n          <div\n            className=\"whiteBlueBotton\"\n            onClick={() => props.setVisibleFlag('statusCashboxEmployeeEditor', false)}\n          >\n            Закрыть\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  cashbox: state.cashbox\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeEmployeeSelected,\n  changeCashboxPermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, editEmoloyee, changeCashboxForm, changeCashboxPermissions } from '../../../Redux/actions'\nimport Checkbox from '../../general/Checkbox'\nimport CashboxEmployeeEditor from './CashboxEmployeeEditor'\n\n\nconst CashboxAccess = (props) => {\n\n   const handleEdit = employee => {\n      props.changeCashboxForm(employee.id, 'permissions_employee')\n      props.editEmoloyee(employee)\n      props.setVisibleFlag('statusCashboxEmployeeEditor', true)\n   }\n\n   const handleCheck = (employee_id, value) => {\n      props.changeCashboxForm(employee_id, 'permissions_employee')\n      props.changeCashboxPermissions(value, 'available')\n   }\n\n   return (\n      <div className = 'contentEditor'>\n         <table className='mt15'>\n            <thead>\n               <tr>\n                  <th className='w15'>\n                  </th>\n                  <th>Сотрудник</th>\n                  <th>Права</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.employees.map(employee => (\n                  <tr \n                     key={employee.id}\n                     onDoubleClick={() => handleEdit(employee)}\n                  >\n                     <td>\n                        <Checkbox\n                           onChange={event => handleCheck(employee.id, event.target.checked)}\n                           checked={props.cashbox.employees[employee.id].available}\n                           disabled={props.cashbox.deleted}\n                        />\n                     </td>\n                     <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                     <td>\n                        {props.cashbox.employees[employee.id].available ? \n                     (props.cashbox.employees[employee.id].like_cashbox  ? 'Доступные для кассы' : 'Персональные') :\n                     'Нет доступа'}\n                     </td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n         {props.statusCashboxEmployeeEditor ? <CashboxEmployeeEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   cashbox: state.cashbox,\n   statusCashboxEmployeeEditor: state.view.statusCashboxEmployeeEditor\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editEmoloyee,\n   changeCashboxForm,\n   changeCashboxPermissions\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(CashboxAccess)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../general/LableInput'\n\nimport { changeCashboxForm, chooseCashboxSelected } from '../../../Redux/actions'\nimport ChooseBotton from '../../general/ChooseBotton'\nimport Checkbox from '../../general/Checkbox'\n\nconst DataCashbox = (props) => {\n   return (\n      <div className = 'contentEditor'>\n\n         <LableInput\n            className=\"w250 mt15\"\n            title='Наименование'\n            onChange={(event) => props.changeCashboxForm(event.target.value, 'title')}\n            value={props.cashbox.title}\n            checkedFlag=\"inputCashboxTitleChecked\"\n            checked={props.view.inputCashboxTitleChecked}\n            redStar={ true }\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Тип'\n            name={['Касса компании', 'Касса локации']}\n            func1 = {() => props.changeCashboxForm(true, 'isGlobal')}\n            func2 = {() => props.changeCashboxForm(false, 'isGlobal')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Виртуальная касса'\n            onChange={event => props.changeCashboxForm(event.target.checked, 'isVirtual')} \n            checked={props.cashbox.isVirtual}\n            disabled={props.cashbox.deleted}\n          />\n          <ChooseBotton\n            className='mt15'\n            title='Способ расчета'\n            name={['Наличный', 'Безналичный']}\n            func1={() => props.changeCashboxForm(0, 'type')}\n            func2={() => props.changeCashboxForm(1, 'type')}\n            checked={true}\n            disabled={props.cashbox.deleted}\n         />\n         <div className='lableImput mt15'>Допустимые действия с кассой</div>\n         <Checkbox\n            className='mt15'\n            label='Видеть остаток денег в кассе'\n            onChange={() => props.chooseCashboxSelected(['show_cashbox_remains'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cashbox_remains')}\n            disabled={props.cashbox.deleted}\n          />\n          <Checkbox\n            className='mt15'\n            label='Видеть денежный поток'\n            onChange={() => props.chooseCashboxSelected(['show_cash_flow'], 'permissions')} \n            checked={props.cashbox.permissions.includes('show_cash_flow')}\n            disabled={props.cashbox.deleted}\n          />\n          <div className='row'>\n            <div>\n               <div className='lableImput mt15'>Входящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['incoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['incoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('incoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n            <div className='ml30'>\n               <div className='lableImput mt15'>Исходящие операции:</div>\n               <Checkbox\n                  className='mt15'\n                  label='Приход'\n                  onChange={() => props.chooseCashboxSelected(['outcoming'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming')}\n                  disabled={props.cashbox.deleted}\n               />\n               <Checkbox\n                  className='mt15'\n                  label='Перемещение'\n                  onChange={() => props.chooseCashboxSelected(['outcoming_move'], 'permissions')} \n                  checked={props.cashbox.permissions.includes('outcoming_move')}\n                  disabled={props.cashbox.deleted}\n               />\n            </div>\n          </div>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   cashbox: state.cashbox,\n   view: state.view\n\n   })\n\nconst mapDispatchToProps = {\n   changeCashboxForm,\n   chooseCashboxSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DataCashbox)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm, setVisibleFlag, createCashbox, seveEditCashbox, deleteCashbox } from '../../../Redux/actions'\nimport { permission_cahsbox } from \"../../../data/permissions\";\n\nimport BottomButtons from '../../general/BottomButtons'\nimport Tabs from '../../general/Tabs'\nimport CashboxAccess from './CashboxAccess'\nimport DataCashbox from './DataCashbox'\n\nconst CashboxEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('cashboxEditorWiondow')) {\n      props.setVisibleFlag('statusCashboxEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n   useEffect(() => {\n     if (!props.cashbox.edit) {\n      let list_per = {}\n      props.employees.filter(employee => !employee.deleted).forEach(employee => {\n         list_per[employee.id] = {}\n         list_per[employee.id].available = true\n         list_per[employee.id].like_cashbox = true\n         list_per[employee.id].permissions = permission_cahsbox\n      })\n      props.changeCashboxForm(list_per, 'employees')\n    }\n   }, [])\n\n  const hangleCreate = () => {\n    if (props.cashbox.title) {\n      props.createCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (props.cashbox.title) {\n      props.seveEditCashbox()\n    } else {\n      if (!props.cashbox.title) {\n        props.setVisibleFlag('inputCashboxTitleChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow wmn500\" id=\"cashboxEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.cashbox.edit ? props.cashbox.title : 'Новая касса'}\n        </div>\n\n        <Tabs\n          list={['Общие', 'Доcтуп']}\n          func={props.changeCashboxForm}\n          tab={props.cashbox.tabs_editor}\n          tab_field=\"tabs_editor\"\n        />\n\n        {props.cashbox.tabs_editor === 0 ? <DataCashbox /> : null}\n        {props.cashbox.tabs_editor === 1 ? <CashboxAccess /> : null}\n\n        <BottomButtons\n          edit={props.cashbox.edit}\n          create={ hangleCreate }\n          save={ hangleSave }\n          delete={props.permissions.includes('edit_cash') ? () => props.deleteCashbox(true) : null }\n          recover={ props.permissions.includes('edit_cash') ? () => props.deleteCashbox(false) : null }\n          close={() => props.setVisibleFlag('statusCashboxEditor', false)}\n          deleted={props.cashbox.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  cashbox: state.cashbox,\n  employees: state.data.employees,\n  view: state.view,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm,\n  setVisibleFlag,\n  createCashbox,\n  seveEditCashbox,\n  deleteCashbox\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CashboxEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, setPayment } from '../../Redux/actions'\nimport { icon_file_text, icon_warning } from '../../data/icons'\nimport Icon from '../general/Icon'\nimport { showDate } from '../general/utils'\n\nconst TablePayments = (props) => {\n\n   const showBalance = props.user.role.permissions.includes('see_remains') \n                     //   (props.current_cashbox.employees[props.user.id].like_cashbox ? \n                     //   props.current_cashbox.permissions.includes('show_cashbox_remains') :\n                     //   props.current_cashbox.employees[props.user.id].permissions.includes('show_cashbox_remains')) \n\n   return (\n      <table className = 'mt15'>\n         <thead>\n            <tr className=''>\n               <th className='w150'>Создан</th>\n               <th>Описание</th>\n               <th className='w91'>Приход, руб.</th>\n               <th className='w91'>Расход, руб.</th>\n               {showBalance ? <th className='w91'>Остаток, руб.</th> : null}\n            </tr>\n         </thead>\n         <tbody>\n            {props.payments.filter(payment => props.showDeleted || !payment.deleted ).map(payment => (\n               <tr \n                  key={payment.id}\n                  className={payment.deleted ? 'rowDeleted redBorder' : null}\n                  onDoubleClick={() => {\n                     props.setPayment(payment)\n                     props.setVisibleFlag('statusPaymentsCard', true)\n                  }}\n               >\n                  <td>\n                     <div>{payment.employee.name}</div>\n                     <div className='row'>\n                        <div className='cgr'>{showDate(payment.custom_created_at)}</div>\n                        {payment.created_at !== payment.custom_created_at ?\n                           <div title={`Платеж добавлен задним числом\\n${showDate(payment.created_at)}` }>\n                           <Icon \n                              className='icon-s2 ml5'\n                              icon={icon_warning} \n                              color='red' \n                           /> \n                        </div> : null}\n                     </div>\n                  </td>\n                  <td>\n                     <div>{payment.description}</div>\n                     {payment.direction ? \n                     <div className='row'>\n                        <Icon className='icon-s1' icon={icon_file_text} color='#acacac'/>\n                        <div className='tac ml5 cgr'>{payment.cashflow_category}</div> \n                     </div> : null }\n                  </td>\n                  <td className={payment.income ? 'greenFont tac': 'tac'}>{payment.income}</td>\n                  <td className={payment.outcome ? 'redFont tac': 'tac'}>{payment.outcome}</td>\n                  {showBalance ? <td className='tac'>{parseFloat(payment.deposit).toFixed(2)}</td> : null }\n               </tr> \n            ))}\n         </tbody>\n         \n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payments: state.data.payments,\n   employees: state.data.employees,\n   user: state.data.user,\n   current_cashbox: state.cashbox.current_cashbox\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   setPayment\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TablePayments)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { addPayments } from '../../Redux/actions/paymentAction'\nimport {changePaymentForm} from '../../Redux/actions/paymentAction'\nimport { icon_stats_docs } from '../../data/icons'\nimport Icon from '../general/Icon'\nimport TablePayments from './TablePayments';\nimport Checkbox from '../general/Checkbox';\n\nregisterLocale('ru', ru)\n\nconst ManeyMovement = (props) => {\n\n   useEffect(() => {\n      if (props.current_cashbox) { props.addPayments() }\n   }, [props.current_cashbox])\n\n   const [showDeleted, setShowDeleted] = useState(false)\n   \n   return (\n      <div className = 'ml30 w100'>\n\n         <div className='row'>\n            <Icon icon={icon_stats_docs}/>\n            <h3 className='ml5'>{`Движение денег по кассе \"${props.current_cashbox ? props.current_cashbox.title : ''}\"`}</h3>\n         </div>\n\n         <div className='row'>\n            {props.permissions.includes('see_moving_money_all_time') ? <>\n            <div className='w250'>\n               <DatePicker \n                  selectsRange={true}\n                  startDate={props.filter_created_at[0] ? new Date(props.filter_created_at[0] * 1000) : null}\n                  endDate={props.filter_created_at[1] ? new Date(props.filter_created_at[1] * 1000) : null}\n                  onChange={(update) => {\n                     props.changePaymentForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat=\"dd.MM.yyyy\"\n                  locale={'ru'}\n                  maxDate={ Date.now() }\n               />\n            </div>\n\n            <button \n               className='blueButton'\n               onClick={() => props.addPayments()}\n            >\n               Применить\n            </button>\n            </> : null}\n\n            {props.permissions.includes('see_delete_payments') ? \n            <Checkbox\n               label='Показать удаленные'\n               onChange={event => setShowDeleted(event.target.checked)}\n               value={showDeleted}\n            /> : null}\n         </div>\n\n         <TablePayments showDeleted = { showDeleted }/>\n\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   current_cashbox: state.cashbox.current_cashbox,\n   filter_created_at: state.payment.filter_created_at,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   changePaymentForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ManeyMovement)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag, addCashboxes, changeCashboxForm } from '../../../Redux/actions'\nimport {addPayments} from '../../../Redux/actions/paymentAction'\nimport Checkbox from '../../general/Checkbox'\nimport Cashbox from './Cashbox'\nimport CashboxEditor from './CashboxEditor'\nimport PaymentsEditor from '../PaymentsEditor'\nimport ManeyMovement from '../ManeyMovement'\nimport PaymentCard from '../PaymentCard'\n\n\nconst Cashboxes = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addCashboxes()\n   },[])\n\n   const cashboxes = props.cashboxes.filter(cashbox => \n      (!cashbox.deleted || showDeleted) && \n      cashbox.employees[props.user.id].available &&\n      (cashbox.branch_id === (props.current_branch ? props.current_branch.id : false )|| cashbox.isGlobal)\n      )\n   \n   \n   // useEffect(() => {\n   //    props.changeCashboxForm(cashboxes[0], 'current_cashbox')\n   // },[])\n\n   return (\n      <div className = 'contentTab'>\n\n         <div className = 'row al-itm-bl'>\n            <div className='cashboxes'>\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  checked={showDeleted}\n               />\n               {cashboxes.map(cashbox => {\n               return (\n                  <Cashbox\n                     key={cashbox.id}\n                     cashbox={cashbox}\n                     active={cashbox.active}\n                  />\n               )})}\n               \n               {props.user.role.permissions.includes('edit_cash') ?\n               <div \n                  className='whiteButton'\n                  onClick={() => props.setVisibleFlag('statusCashboxEditor', true)}\n               >\n                     + Добавить кассу\n               </div> : null}\n\n            </div>\n            {props.permissions.includes('see_moving_money') ? <ManeyMovement/> : null }\n           \n         </div>\n         {props.view.statusPaymentsCard ? <PaymentCard/> : null}\n         {props.view.statusPaymentsEditor ? <PaymentsEditor/> : null}\n         {props.view.statusCashboxEditor ? <CashboxEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view,\n   cashboxes: state.data.cashboxes,\n   user: state.data.user,\n   current_branch: state.data.current_branch,\n   permissions: state.data.user.role.permissions\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   addCashboxes,\n   changeCashboxForm,\n   addPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Cashboxes)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\nimport { currentMonth } from '../../components/general/utils'\n\n\nexport function changePayrollForm( value, field ) {\n   return {\n     type: 'CHANGE_PAYROLL_FORM',\n     field,\n     value\n   }\n }\n\nexport function editPayroll(payroll) {\n   return {\n     type: 'EDIT_PAYROLL',\n     payroll\n   }\n }\n \n export function resetPayroll() {\n   return {\n     type: 'RESET_PAYROLL'\n   }\n }\n \n \n export function selectedPayroll( value, field ) {\n   return {\n     type: 'SELECTED_PAYROLL',\n     field,\n     value\n   }\n }\n\nexport function addPayrolls() {\n\n   const state = store.getState()\n\n   const request_config = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n \n   return dispatch => {\n \n     fetch(state.data.url_server + '/get_payrolls', request_config)\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrolls',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос начислений не выполнен'))\n   }\n }\n\n export function addMonthBalance() {\n\n  const state = store.getState()\n\n  const request_config = getRequestConfig({\n   custom_created_at: currentMonth(),\n   employee_id: state.payroll.setted_employee\n })\n\n  return dispatch => {\n\n    fetch(state.data.url_server + '/get_payroll_sum', request_config)\n    .then(response => response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'CHANGE_PAYROLL_FORM',\n          field: 'month_balance',\n          value: data.sum,\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос баланса не выполнен'))\n  }\n}\n\nexport function createPayroll() {\n\n  const state = store.getState()\n\n  const request_config1 = getRequestConfig({\n    description: state.payroll.description,      \n    income: state.payroll.income,\n    outcome: -state.payroll.outcome,\n    direction: state.payroll.direction,\n    deleted: state.payroll.deleted,\n    reimburse: state.payroll.reimburse,\n    created_at: state.payroll.created_at,\n    custom_created_at: state.payroll.custom_created_at,\n    relation_type: state.payroll.relation_type,\n    relation_id: state.payroll.relation_id,\n    employee_id: state.payroll.employee_id,\n    order_id: state.payroll.order_id\n  })\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    await fetch(state.data.url_server + '/get_payrolls', request_config2)\n      .then(response =>  response.json())\n      .then(data => {\n        if (data.success) {\n          dispatch({\n            type: 'ADD_DATA',\n            field: 'payrolls',\n            data: data.data,\n          })\n          dispatch({\n            type: 'RESET_PAYROLL',\n          })\n          dispatch({\n            type: 'SET_VISIBLE_FLAG',\n            field: 'statusPayrollEditor',\n            value: false\n          })\n        } else {\n          console.warn(data.massage)\n        }\n      })\n      .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}\n\nexport function deletePayroll(flag) {\n\n  const state = store.getState()\n\n  let request_config1 = getRequestConfig({\n    id: state.payroll.edit,      \n    deleted: flag\n  })\n  request_config1.method = 'PUT'\n\n  const request_config2 = getRequestConfig({\n    custom_created_at: state.payroll.filter_created_at,\n    employee_id: state.payroll.setted_employee\n  })\n\n  return async dispatch => {\n\n    await fetch(state.data.url_server + '/payroll', request_config1)\n    .catch(() => bad_request('Запрос на создание начисления не выполнен'))\n\n    fetch(state.data.url_server + '/get_payrolls', request_config2)\n    .then(response =>  response.json())\n    .then(data => {\n      if (data.success) {\n        dispatch({\n          type: 'ADD_DATA',\n          field: 'payrolls',\n          data: data.data,\n        })\n        dispatch({\n          type: 'RESET_PAYROLL',\n        })\n        dispatch({\n          type: 'SET_VISIBLE_FLAG',\n          field: 'statusPayrollEditor',\n          value: false\n        })\n      } else {\n        console.warn(data.massage)\n      }\n    })\n    .catch(() => bad_request('Запрос начислений не выполнен'))\n     \n  }\n}","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { editPayroll } from '../../../Redux/actions/payrollActions'\n\nimport { showDate } from '../../general/utils'\n\nconst TablePayrolls = (props) => {\n\n   const [incomeSum, setIncomeSum] = useState(0)\n   const [outcomeSum, setOutcomeSum] = useState(0)\n\n   const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n   const editPayroll = (payroll) => {\n      props.editPayroll(payroll)\n      props.setVisibleFlag('statusPayrollEditor', true)\n   }\n\n   const payrolls = props.payrolls.filter(payroll => props.showDeleted || !payroll.deleted)\n\n   \n   useEffect(() => {\n      let income_sum = 0\n      let outcome_sum = 0\n      props.payrolls.filter(payroll => !payroll.deleted).forEach(payroll => {\n         income_sum += payroll.income\n         outcome_sum += payroll.outcome\n      })\n      setIncomeSum(income_sum)\n      setOutcomeSum(outcome_sum)\n   }, [props.payrolls])\n   \n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w135'>Дата</th>\n               <th>Описание</th>\n               <th className='w91'>Приход, руб.</th>\n               <th className='w91'>Расход, руб.</th>\n               <th className='w91'>Баланс, руб.</th>\n            </tr>\n         </thead>\n         <tbody>\n            {payrolls.map(payroll => (\n               <tr \n                  key={payroll.id}\n                  className={payroll.deleted ? 'rowDeleted redBorder' : null}\n                  onDoubleClick={() => editPayroll(payroll)}\n               >\n                  <td className='pd-lr-5'>\n                     <div>\n                        <div>{type_payrolls[payroll.relation_type]}</div>\n                        <div className='cgr'>{showDate(payroll.created_at)}</div>\n                     </div>\n                  </td>\n                  <td className='pd-lr-5'>{payroll.description}</td>\n                  <td className={payroll.income ? 'greenFont tac': 'tac'}>{payroll.income}</td>\n                  <td className={payroll.outcome ? 'redFont tac': 'tac'}>{payroll.outcome}</td>\n                  <td className='tac'>{payroll.deposit.toFixed(2)}</td>\n               </tr>\n            ))}\n            <tr>\n               <td colSpan='2'>Всего - {payrolls.length}</td>\n               <td className='txtb tac'>{incomeSum.toFixed(2)} руб.</td>\n               <td className='txtb tac'>{outcomeSum.toFixed(2)} руб.</td>\n               <td></td>\n            </tr>\n         </tbody>\n      </table>\n\n   )\n}\n\nconst mapStateToProps = state => ({\n   payrolls: state.data.payrolls\n   })\n\nconst mapDispatchToProps = {\n   editPayroll,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TablePayrolls)","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { changePayrollForm } from '../../../Redux/actions/payrollActions'\n\nimport ChooseBotton from '../../general/ChooseBotton'\nimport ChooseOfList from '../../general/ChooseOfList'\nimport LableArea from '../../general/LableArea'\nimport LableInput from '../../general/LableInput'\n\nregisterLocale('ru', ru)\n\nconst PayrollForm = (props) => {\n\n   const [chooseData, setChooseData] = useState(false)\n\n   return (\n      <div className=''>\n         <div className='row al-itm-fe'>\n               <ChooseBotton\n                  className='mt15 mr-rg-20'\n                  title='Дата и время'\n                  name={['Текущее', 'Заданное']}\n                  func1 = {() => {\n                    setChooseData(false)\n                    props.changePayrollForm( null, 'custom_created_at')\n                  }}\n                  func2 = {() => setChooseData(true)}\n                  checked = { true }\n                  // disabled={!props.permissions.includes('backdating')}\n               />\n               {chooseData ? \n               <DatePicker \n                  selected={props.payroll.custom_created_at ? new Date(props.payroll.custom_created_at * 1000) : Date.now()}\n                  onChange={(date) => {\n                     props.changePayrollForm( date / 1000, 'custom_created_at')\n                  }}\n                  isClearable={true}\n                  placeholderText='Выбирите дату'\n                  className=\"optionFilterInputDate\"\n                  dateFormat='dd.MM.yyyy HH:mm'\n                  locale={'ru'}\n                  maxDate={ Date.now() }\n                  // startDate={Date.now()}\n                  showTimeSelect\n               /> : null }\n            </div> \n            <LableInput\n               className='mt15'\n               width='70px'\n               title='Сумма'\n               onChange={event => props.changePayrollForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), props.payroll.direction === 2 ? 'income' : 'outcome')}\n               value={props.payroll.outcome ?  props.payroll.outcome : props.payroll.income}\n               unit='руб.'\n               checkedFlag='inputPayrollSumChecked'\n               checked={props.view.inputPayrollSumChecked}\n               disabled={props.payroll.deleted}\n               redStar={ true }\n            />\n            <ChooseOfList\n               id='employeePayroll'\n               title='Сотрудник'\n               className='mt15'\n               list={props.employees}\n               field='employee_id'\n               setElement={props.changePayrollForm}\n               current_id={props.payroll.employee_id}\n               width={'250px'}\n               employee={true}\n               checkedFlag='inputPayrollEmployeeChecked'\n               checked={props.view.inputPayrollEmployeeChecked}\n               disabled={props.payroll.deleted}\n               // unvisible={false}\n            />\n            <LableArea\n               className='mt15'\n               title='Коментарий'\n               onChange={event => props.changePayrollForm(event.target.value, 'description')}\n               value={props.payroll.description}\n               checkedFlag='inputPayrollDescChecked'\n               checked={props.view.inputPayrollDescChecked}\n               redStar={ true }\n               disabled={props.payroll.deleted}\n            />      \n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   view: state.view, \n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollForm)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showDate, showName } from '../../general/utils'\n\nconst PayrollReceipt = (props) => {\n   return (\n      <div className = ''>\n        <div className='mt15'>\n           <span className='txtb'>Дата:</span>\n           <span className='ml5'>{showDate(props.payroll.created_at)}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сумма:</span>\n           <span className='ml5'>{props.payroll.direction == 2 ? props.payroll.income : props.payroll.outcome} руб.</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Сотрудник:</span>\n           <span className='ml5'>{showName(props.employees.find(employee => employee.id === props.payroll.employee_id))}</span>\n        </div>\n        <div className='mt15'>\n           <span className='txtb'>Комментарий:</span>\n           <span className='ml5'>{props.payroll.description}</span>\n        </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   employees: state.data.employees\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PayrollReceipt)","\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport { resetPayroll, changePayrollForm, createPayroll, deletePayroll } from '../../../Redux/actions/payrollActions'\nimport BottomButtons from '../../general/BottomButtons'\n\nimport PayrollForm from './PayrollForm';\nimport PayrollReceipt from './PayrollReceipt'\n\n\n\nconst PaypolleEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusPayrollEditor', false)\n      props.setVisibleFlag('inputPayrollDescChecked', true )\n      props.setVisibleFlag('inputPayrollEmployeeChecked', true )\n      props.resetPayroll()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('payrollEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      props.changePayrollForm(props.payroll.setted_employee, 'employee_id')\n   }, [])\n\n \n\n   const hangleCreate = () => {\n      if (\n         (props.payroll.income || props.payroll.outcome) &&\n         props.payroll.employee_id  && \n         props.payroll.description\n         ) {\n         props.createPayroll()\n      } else {\n         if (!(props.payroll.income || props.payroll.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n         if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n         if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n      }\n   }\n\n  const hangleSave = () => {\n   if (\n      (props.payrolle.income || props.payrolle.outcome) &&\n      props.payroll.employee_id  && \n      props.payroll.description\n      ) {\n      // props.createPayment()\n   } else {\n      if (!(props.payrolle.income || props.payrolle.outcome)) { props.setVisibleFlag('inputPayrollSumChecked', false)}\n      if (!props.payroll.employee_id) {props.setVisibleFlag('inputPayrollEmployeeChecked', false) }\n      if (!props.payroll.description) {props.setVisibleFlag('inputPayrollDescChecked', false) }\n   }\n  }\n\n  \n\n  const title = ['', 'Взыскание', 'Премия']\n\n  const type_payrolls = ['', 'Cоздания заказа', 'Закрытие заказа', 'Ведение заказа', 'Работа', 'Работа', 'Продажа', 'Оклад', '', 'Премия', 'Взыскания', 'Возврат']\n\n  return (\n      <div className=\"rightBlock\">\n         <div className=\"rightBlockWindow w500\" id=\"payrollEditorWiondow\">\n         <div className=\"createNewTitle\">\n            {props.payroll.edit ? type_payrolls[props.payroll.relation_type] :(title[props.payroll.direction])}\n         </div>\n\n         <div className='contentEditor'>\n           \n           {props.payroll.edit ? <PayrollReceipt/> : <PayrollForm/>}\n\n         </div>\n       \n        <BottomButtons\n            edit={props.payroll.edit}\n            create={ hangleCreate }\n            // save={ hangleSave }\n            delete={ props.permissions.includes('delete_payrolls') ? () => props.deletePayroll(true) : null }\n            recover={ props.permissions.includes('recover_payrolls') ? () => props.deletePayroll(false) : null }\n            close={ handleClose }\n            deleted={props.payroll.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view, \n  payroll: state.payroll,\n  permissions: state.data.user.role.permissions,\n  employees: state.data.employees.filter(employee => !employee.deleted)\n})\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   setVisibleFlag,\n   resetPayroll,\n   createPayroll,\n   deletePayroll\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PaypolleEditor)\n","\nimport React, { useEffect, useState, useMemo } from 'react'\nimport { connect } from 'react-redux'\nimport ru from 'date-fns/locale/ru';\nimport DatePicker, { registerLocale } from 'react-datepicker'\n\nimport { addEmployees, setVisibleFlag } from '../../../Redux/actions';\nimport { changePayrollForm, addPayrolls, addMonthBalance } from '../../../Redux/actions/payrollActions'\nimport { showName } from '../../general/utils'\nimport TablePayrolls from './TablePayrolls'\nimport Checkbox from '../../general/Checkbox'\nimport Button from '../../general/Button'\nimport PaypolleEditor from './PaypolleEditor';\n\nregisterLocale('ru', ru)\n\n\nconst EmployeeSalary = (props) => {\n\n   const [showDeleted, setShowDeleted] = useState(false)\n\n   useEffect(() => {\n      props.addMonthBalance()\n      props.addEmployees()\n   }, [props.payroll.setted_employee])\n\n   const current_employee = useMemo(() => props.employees.find(employee => employee.id === props.payroll.setted_employee), [props.payroll.setted_employee])\n\n   const handleIncome = () => {\n      props.changePayrollForm(2, 'direction')\n      props.changePayrollForm(9, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n\n   const handleOutcome = () => {\n      props.changePayrollForm(1, 'direction')\n      props.changePayrollForm(10, 'relation_type')\n      props.setVisibleFlag('statusPayrollEditor', true )\n   }\n   \n\n   return (\n      <div className = ''>\n         <div className='createNewTitle fsz20 mt0'>\n            {showName(current_employee)}\n         </div>\n         <div className='txtb'>\n            <span>Начисленно в текущем месяце: </span>\n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{props.payroll.month_balance.toFixed(2)}</span> руб.\n            </div>\n         <div className='txtb'>\n            <span>Баланс:</span> \n            <span className={props.payroll.month_balance > 0 ? 'greenFont ml5' : 'redFont ml5'}>{current_employee.balance.toFixed(2)}</span> руб.\n            </div>\n\n         <div className='row mt15 jc-sb'>\n           <div className='row'>\n               <div className='w250'>\n                  <DatePicker \n                     selectsRange={true}\n                     startDate={props.payroll.filter_created_at[0] ? new Date(props.payroll.filter_created_at[0] * 1000) : null}\n                     endDate={props.payroll.filter_created_at[1] ? new Date(props.payroll.filter_created_at[1] * 1000) : null}\n                     onChange={(update) => {\n                        props.changePayrollForm(update.map(day =>  day ? day.getTime()/ 1000 : null), 'filter_created_at')\n                     }}\n                     isClearable={true}\n                     placeholderText='Выбирите дату'\n                     className=\"optionFilterInputDate\"\n                     dateFormat=\"dd.MM.yyyy\"\n                     locale={'ru'}\n                     maxDate={ Date.now() + 84600000 }\n                  />\n               </div>\n               <Button\n                  className='blueButton'\n                  title='Применить'\n                  onClick={() => props.addPayrolls()}\n               />\n               <Checkbox\n                  label='Показать удаленные'\n                  onChange={event => setShowDeleted(event.target.checked)}\n                  value={showDeleted}\n                  unvisible={!props.permissions.includes('see_seleted_payrolls')}\n               />\n            </div>\n            <div className='row'>\n               <Button\n                  className='greenButton'\n                  title='+ Премия'\n                  onClick={ handleIncome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n               <Button\n                  className='greenButton bcr m10'\n                  title='- Взыскание'\n                  onClick={ handleOutcome }\n                  unvisible={!props.permissions.includes('create_payrolls')}\n               />\n            </div>\n         </div>\n         {props.statusPayrollEditor ? <PaypolleEditor/> : null}\n         <TablePayrolls showDeleted={showDeleted}/>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   statusPayrollEditor: state.view.statusPayrollEditor\n   })\n\nconst mapDispatchToProps = {\n   changePayrollForm,\n   addPayrolls,\n   addMonthBalance,\n   addEmployees,\n   setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(EmployeeSalary)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showName } from '../../general/utils'\nimport { changePayrollForm } from '../../../Redux/actions/payrollActions'\n\nconst TableSalaryEmployees = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Сотрудник</th>\n               <th>Баланс</th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.employees.map(employee => (\n               <tr \n                  key={employee.id}\n                  onClick={() => props.changePayrollForm(employee.id, 'setted_employee')}\n                  style={employee.id === props.payroll.setted_employee ? { backgroundColor: '#cae1f5'} : null}\n               >\n                  <td>{showName(employee)}</td>\n                  <td>{employee.balance ? employee.balance.toFixed(2) : 0}</td>\n               </tr>\n            ))}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees.filter(employee => !employee.deleted),\n   payroll: state.payroll\n   })\n\nconst mapDispatchToProps = {\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableSalaryEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addPayrolls, changePayrollForm } from '../../../Redux/actions/payrollActions'\nimport EmployeeSalary from './EmployeeSalary'\nimport TableSalaryEmployees from './TableSalaryEmployees'\n\n\nconst Salaries = (props) => {\n\n   useEffect(() => {\n      props.addPayrolls()\n   }, [props.payroll.setted_employee])\n\n   useEffect(() => {\n      props.changePayrollForm(props.user_id, 'setted_employee')\n   }, [])\n\n   return (\n      <div className = 'contentTab'>\n         <p>Поместим график сюда</p>\n\n         {props.permissions.includes('see_all_payrolls') ? \n         <div className='row al-itm-fs'>\n            <div className='w250'>\n               <TableSalaryEmployees/>\n            </div>\n            <div className='ml30'>\n               {props.payroll.setted_employee ? <EmployeeSalary/> : null}\n            </div>         \n         </div> : (props.payroll.setted_employee ? <EmployeeSalary/> : null) }\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   payroll: state.payroll,\n   permissions: state.data.user.role.permissions,\n   user_id: state.data.user.id\n})\n\nconst mapDispatchToProps = {\n   addPayrolls,\n   changePayrollForm\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Salaries)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeCashboxForm  } from '../../Redux/actions'\n\nimport Tabs from '../general/Tabs'\nimport Cashboxes from './cashboxes/Cashboxes'\nimport Salaries from './salaries/Salaries'\n\nconst Payments = (props) => {\n\n  useEffect(() => {\n \n  }, [])\n\n\n  return (\n    <div className='pageContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Финансы</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ ['Платежи', 'Взаиморасчеты', 'Счета', 'Зарплаты'] }\n        func={props.changeCashboxForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <Cashboxes/>: null}\n         {props.tabs === 1 ? null : null}\n         {props.tabs === 2 ? null : null}\n         {props.tabs === 3 ? <Salaries/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.cashbox.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeCashboxForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Payments)\n\n","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\nexport function changeWarehouseForm(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editWarehouse(warehouse) {\n    return {\n        type: 'EDIT_WAREHOUSE',\n        warehouse\n    }\n}\n\nexport function editWarehouseCategory(warehouse_category) {\n    return {\n        type: 'EDIT_WAREHOUSE_CATEGORY',\n        warehouse_category\n    }\n}\n\nexport function resetWarehouse() {\n    return {\n        type: 'RESET_WAREHOUSE',\n    }\n}\n\nexport function chooseWarehouseSelected(value, field) {\n    return {\n        type: 'SELECTED_WAREHOUSE',\n        field,\n        value\n    }\n}\n\nexport function changeWarehousePermission(value, field) {\n    return {\n        type: 'CHANGE_WAREHOUSE_PERMISSION',\n        field,\n        value\n    }\n}\n\nexport function addWarehouse() {\n\n    const state = store.getState()\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function createWarehouse() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на создание склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function saveWarehouse() {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title,\n        description: state.warehouse.description,\n        deleted: state.warehouse.deleted,\n        isGlobal: state.warehouse.isGlobal,\n        permissions: state.warehouse.permissions,\n        employees: state.warehouse.employees,\n        branch_id: state.warehouse.branch_id\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на изменение склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function deleteWarehouse(flag) {\n\n    const state = store.getState()\n\n    let request_config = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config.method = 'PUT'\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse', request_config)\n            .catch(() => bad_request('Запрос на удаление/восстановление склада не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse', getRequestConfig({}))\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос складов не выполнен'))\n    }\n}\n\n\nexport function addWarehouseCategories() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_warehouse_category', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function createWarehouseCategory() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n        deleted: state.warehouse.category_deleted\n    })\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на создание категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\n\nexport function saveWarehouseCategory() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        title: state.warehouse.title_category,\n        parent_category_id: state.warehouse.current_parent_category.id,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}\n\nexport function deleteWarehouseCategory( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.warehouse.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        id: 1,\n        deleted: state.warehouse.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/warehouse_category', request_config1)\n            .catch(() => bad_request('Запрос на изменение категории запчастей не выполнен'))\n\n        await fetch(state.data.url_server + '/get_warehouse_category', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_WAREHOUSE_FORM',\n                        field: 'warehouses_categories',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusWarehouseCategoryEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_WAREHOUSE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос категорий запчастей не выполнен'))\n    }\n}","import store from '../store'\nimport {getRequestConfig, bad_request} from './actionUtils'\n\nexport function changePartForm(value, field) {\n    return {\n        type: 'CHANGE_PART_FORM',\n        field,\n        value,\n    }\n}\n\nexport function editPart(part) {\n    return {\n        type: 'EDIT_PART',\n        part\n    }\n}\n\nexport function resetPart() {\n    return {\n        type: 'RESET_PART',\n    }\n}\n\nexport function choosePartSelected(value, field, saveToApp=false) {\n    return {\n        type: 'SELECTED_PART',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function changePartProperty(value, idx, field) {\n    return {\n        type: 'CHANGE_PART_PROPERTY',\n        value,\n        idx,\n        field\n    }\n}\n\nexport function addPartProperty() {\n    return {\n        type: 'ADD_PART_PROPERTY'\n    }\n}\n\nexport function deletePartProperty(idx) {\n    return {\n        type: 'DELETE_PART_PROPERTY',\n        idx\n    }\n}\n\nexport function addParts() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_parts', request_config)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function createPart() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        deleted: false,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на создание товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function savePart() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        title: state.part.title,\n        description: state.part.description,\n        marking: state.part.marking,\n        article: state.part.article,\n        barcode: state.part.barcode,\n        code: state.part.code,\n        specifications: state.part.specifications,\n        warehouse_category_id: state.warehouse.current_parent_category.id,\n        img: state.part.img,\n        doc: state.part.doc\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на иземенение товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}\n\nexport function deletePart( flag ) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.part.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        page: state.part.page,\n        deleted: state.part.showDeleted,\n        warehouse_category_id: state.warehouse.current_category.id\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/parts', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление товара не выполнен'))\n\n        await fetch(state.data.url_server + '/get_parts', request_config2)\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_PART_FORM',\n                        field: 'parts',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusPartEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_PART'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос товаров не выполнен'))\n    }\n}","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst SelectCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(!!props.edit)\n\n    return (props.edit === props.category.id) ? null : (\n        <>\n            <div\n                className='row hovblue'\n            >\n                <div className='row w100 '>\n                    <div onClick={() => setVisibleList(!visibleList)}>\n                        {props.category.categories.length ?\n                            <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                            : <div className='ml15'/>\n                        }\n                    </div>\n                    <div\n                        className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}\n                        onClick={() => props.choose(props.category) }\n                    >\n                        {props.category.title}\n                    </div>\n                </div>\n            </div>\n            { visibleList ?\n                <div className='ml10'>\n                    {props.category.categories.map(category => (\n                        <SelectCategory\n                            key={category.id}\n                            edit={props.edit}\n                            category={category}\n                            choose={cat => props.choose(cat)}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default SelectCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\n\nimport {icon_down, icon_left, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport SelectCategory from './SelectCategory';\n\nconst ChooseCategory = (props) => {\n\n    const [listVisible, setListVisible] = useState(false)\n    const [catVisible, setCatVisible] = useState(!!props.warehouse.edit)\n\n    const mainCategory = props.warehouse.warehouses_categories[0]\n\n    const handleChoose = (category) => {\n        setListVisible( false )\n        props.changeWarehouseForm(category, 'current_parent_category')\n    }\n\n    return (\n        <div className = 'w250 mt15'>\n            <div className='lableImput'>Родительская категория</div>\n            <div\n                className='optionsButton'\n                onClick={() => setListVisible(!listVisible && !props.warehouse.category_deleted)}\n                // style={props.warehouse.current_parent_category.id === mainCategory.id ? { borderColor: '#cae1f5' } : null}\n            >\n                <div className='noWr'>{props.warehouse.current_parent_category.title}</div>\n                <Icon className='icon-s2' icon={listVisible ? icon_down : icon_left}/>\n            </div>\n            {listVisible && !props.disabled ?\n                <div className='listOptionsChoose pos-a'>\n                    <div\n                        className='row hovblue'\n                    >\n                        <div onClick={() => setCatVisible(!catVisible)}>\n                            <Icon className='icon-s1' icon={catVisible ? icon_down : icon_right}/>\n                        </div>\n                        <div onClick={() => handleChoose(mainCategory) }>{mainCategory.title}</div>\n                    </div>\n                    {catVisible ?\n                        <div className='ml10'>\n                            {mainCategory.categories.map(category => (\n                                <SelectCategory\n                                    key={category.id}\n                                    edit={props.warehouse.edit}\n                                    category={category}\n                                    choose={cat => handleChoose(cat)}\n                                />\n                            ))}\n                        </div>\n                        : null\n                    }\n                </div>\n                : null\n            }\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseCategory)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changeWarehouseForm, createWarehouseCategory, resetWarehouse} from '../../../Redux/actions/warehouseAction';\nimport {saveWarehouseCategory, deleteWarehouseCategory} from '../../../Redux/actions/warehouseAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport ChooseCategory from './ChooseCategory';\n\nconst WarehouseCategoryEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusWarehouseCategoryEditor', false)\n        props.setVisibleFlag('inputWCategoryTitleChecked', true)\n        props.resetWarehouse()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wgategoryEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWC')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.warehouse.title_category) {\n            props.createWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title_category) {\n            props.saveWarehouseCategory()\n        } else {\n            props.setVisibleFlag('inputWCategoryTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('delete_warehouse_categories')\n    const can_recover = props.permissions.includes('recover_warehouse_categories')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"wgategoryEditorWindow\">\n                <div className=\"createNewTitle\">Новая категория</div>\n\n                <div className=\"contentEditor\">\n                    <LableInput\n                        className=\"w250 mt15\"\n                        title=\"Название категории\"\n                        onChange={event => props.changeWarehouseForm(event.target.value, 'title_category')}\n                        value={props.warehouse.title_category}\n                        checkedFlag=\"inputWCategoryTitleChecked\"\n                        checked={props.inputWCategoryTitleChecked}\n                        redStar={ true }\n                        disabled={props.warehouse.category_deleted}\n                    />\n                    <ChooseCategory/>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.warehouse.edit}\n                    deleted={props.warehouse.category_deleted}\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={can_delete ? () => props.deleteWarehouseCategory(true) : null}\n                    recover={can_recover ? () => props.deleteWarehouseCategory(false) : null}\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    warehouse: state.warehouse,\n    inputWCategoryTitleChecked: state.view.inputWCategoryTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    createWarehouseCategory,\n    resetWarehouse,\n    saveWarehouseCategory,\n    deleteWarehouseCategory\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseCategoryEditor)\n","import React, {useState} from 'react'\n\nimport {icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\n\n\nconst WarehouseCategory = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const handleChoose = () => {\n        props.choose(props.category)\n        props.choose_parent_category(props.parent_category)\n        setVisibleList(!visibleList)\n    }\n\n\n    return (\n        <>\n            <tr\n                className='row hovblue'\n                style={props.category.id === props.current.id ? { backgroundColor: '#cae1f5'} : null}\n                onClick={ handleChoose }\n                onDoubleClick={() => props.edit(props.category)}\n            >\n                <td className='row w100 pd5'>\n                    {props.category.categories.length ?\n                        <Icon className='icon-s1 pd1' icon={visibleList ? icon_down : icon_right}/>\n                        : <div className='ml15'/>\n                    }\n                    <div className={props.category.deleted ? 'rowDeleted noWr' : 'noWr'}>{props.category.title}</div>\n                </td>\n                <td className='w70 pd5 tac'>{props.category.categories.length}</td>\n            </tr>\n            { visibleList ?\n                <div className='ml10'>\n                {props.category.categories.map(category => (\n                    <WarehouseCategory\n                        key={category.id}\n                        category={category}\n                        choose={cat => props.choose(cat)}\n                        current={props.current}\n                        parent_category={props.category}\n                        choose_parent_category={cats => props.choose_parent_category(cats)}\n                        edit={cat => props.edit(cat)}\n                    />\n                    ))}\n                </div>\n                : null\n            }\n        </>\n    )\n}\n\n\n\nexport default WarehouseCategory","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changeWarehouseForm, editWarehouseCategory} from '../../../Redux/actions/warehouseAction';\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport { icon_down, icon_right} from '../../../data/icons';\n\nimport Icon from '../../general/Icon';\nimport WarehouseCategory from './WarehouseCategory';\n\nconst CategoryTable = props => {\n\n    const [visibleList, setVisibleList] = useState(false)\n\n    const mainCategory = props.warehouse.warehouses_categories[0] || {id: 1, title: 'Все категории', categories: []}\n\n    const handleChoose = () => {\n        props.changeWarehouseForm(mainCategory, 'current_category')\n        // props.changeWarehouseForm(props.warehouse.warehouses_categories, 'choose_parents_category')\n        setVisibleList(!visibleList)\n    }\n\n    const handleEdit = (cat) => {\n        if(props.permissions.includes('edit_warehouse_categories')) {\n            props.editWarehouseCategory(cat)\n            props.changeWarehouseForm(props.warehouse.current_parent_category, 'current_parent_category')\n            props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n        }\n    }\n\n    return (\n        <table className='mt15'>\n            <thead className='had'>\n                <tr className='row'>\n                    <th className='w100 pd5'>Категория</th>\n                    <th className='w70 pd5 tac'>Кол-во</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                    className='row hovblue'\n                    style={mainCategory.id === props.warehouse.current_category.id ? { backgroundColor: '#cae1f5'} : null}\n                    onClick= { handleChoose }\n                >\n                    <td className='row w100 pd5'>\n                        <Icon className='icon-s1' icon={visibleList ? icon_down : icon_right}/>\n                        <div className='noWr'>{mainCategory.title}</div>\n                    </td>\n                    <td className='w70 pd5 tac'>{mainCategory.categories.length}</td>\n                </tr>\n                {visibleList ?\n                    <div className='ml10'>\n                    {mainCategory.categories.map(category => (\n                        <WarehouseCategory\n                            key={category.id}\n                            category={category}\n                            choose={cat => props.changeWarehouseForm(cat, 'current_category')}\n                            current={props.warehouse.current_category}\n                            parent_category={mainCategory}\n                            choose_parent_category={cats => props.changeWarehouseForm(cats, 'current_parent_category')}\n                            edit={cat => handleEdit(cat)}\n                        />\n                    ))}\n                    </div>\n                    : null\n                }\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editWarehouseCategory,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable)","import React from 'react'\n\nconst AddPicture = (props) => {\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n    }\n   return (\n\n      <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n            \n            <div className={props.value || props.url ? 'showPicture' : 'addPicture'}>\n               <label className=\"label\">\n                 {props.value || props.url ? <img src={props.value || `${process.env.PUBLIC_URL}/${props.url}`} className='showPicture'/> :\n                 <i className=\"material-icons\">attach_file</i>\n                  }\n                  <input \n                     className=''\n                     type='file'\n                     accept=\"image/*\"\n                     onChange={fileHandler}\n                     disabled={props.disabled}\n                  />\n               </label>\n\n            </div>\n      </div>\n   )\n}\n\n\n  \n export default AddPicture","import React, {useState} from 'react'\nimport { connect } from 'react-redux'\n\nimport {changePartProperty, deletePartProperty} from '../../../Redux/actions/partAction'\nimport Icon from '../../general/Icon'\nimport {icon_trush} from '../../../data/icons'\n\nconst Property = (props) => {\n\n    const [titleVisible, setTitleVisible] = useState(!props.title)\n    const [valueVisible, setValueVisible] = useState(!props.value)\n\n    const disabled = props.part.deleted\n\n    return (\n        <tr className='fillcol'>\n            <td>\n                {titleVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'title')}\n                        value={props.title}\n                        autoFocus={true}\n                        onBlur={() => setTitleVisible(!props.title)}\n                        onKeyPress={event => {if (event.key === 'Enter') setTitleVisible(!props.title)}}\n                        placeholder='Свойство'\n                    />\n                    :\n                    <div\n                        className='w100'\n                        onDoubleClick={() => setTitleVisible(true)}\n                    >\n                        {props.title}\n                    </div>\n                }\n            </td>\n            <td>\n                {valueVisible && !disabled ?\n                    <input\n                        className='optionFilterInput'\n                        onChange={event => props.changePartProperty(event.target.value, props.idx, 'value')}\n                        value={props.value}\n                        autoFocus={true}\n                        onBlur={() => setValueVisible(!props.value)}\n                        onKeyPress={event => {if (event.key === 'Enter') setValueVisible(!props.value)}}\n                        placeholder='Значение'\n                    />\n                    :\n                    <div\n                        className='ml30'\n                        onDoubleClick={() => setValueVisible(true)}\n                    >\n                        {props.value}\n                    </div>\n                }\n            </td>\n            <td\n                onClick={disabled ? null : () => props.deletePartProperty(props.idx)}\n            >\n                <Icon icon={icon_trush} className='icon-s1'/>\n            </td>\n\n        </tr>\n    )\n}\n\nconst mapStateToProps = state => ({\n     part: state.part\n})\n\nconst mapDispatchToProps = {\n    changePartProperty,\n    deletePartProperty\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(Property)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Button from '../../general/Button'\nimport {addPartProperty} from '../../../Redux/actions/partAction'\nimport Property from './Property'\n\nconst Specifications = (props) => {\n    return (\n        <div className = ''>\n            <div className='lableImput'>Характеристики</div>\n            <div className='mwmc'>\n                <table>\n                    <tbody>\n                        {props.part.specifications.map((property, idx) => (\n                            <Property\n                                key={idx}\n                                idx={idx}\n                                title={property.title}\n                                value={property.value}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            <Button\n                className='whiteBlueBotton'\n                title='+ Свойство'\n                onClick={() => props.addPartProperty()}\n                disabled={props.part.deleted}\n\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part\n})\n\nconst mapDispatchToProps = {\n    addPartProperty\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specifications)","import React, {useState} from 'react'\n\nconst AddDocument = (props) => {\n\n    const name = props.url ? props.url.split('/').pop() : ''\n\n    const [fileName, setFileName] = useState(name)\n\n    const fileHandler = event => {\n        let reader = new FileReader()\n        reader.onload = function (e) {\n            props.onChange(e.target.result)\n        }\n        reader.readAsDataURL(event.target.files[0])\n        setFileName(event.target.files[0].name)\n    }\n\n    return (\n\n        <div className={props.className}>\n            <div className='lableImput'>{props.title}</div>\n\n            <div className='row'>\n                {props.value ?\n                    <div className='noWr w150'>{fileName}</div>\n                    : (props.url ?\n                        <a\n                            className='noWr w150'\n                            href={`${process.env.PUBLIC_URL}/${props.url}`}\n                            target='_blank'\n                        >\n                            Datasheet.pdf\n                        </a>\n                        : null)\n                }\n                    <label className=\"label\">\n\n                        {props.value || props.url ?\n                            <div className='whiteBlueBotton'>Изменить файл</div>\n                            :\n                            <div className='whiteBlueBotton'>Добавить файл</div>\n                        }\n\n                        <input\n                            className='addDoc'\n                            type='file'\n                            accept='application/pdf'\n                            onChange={fileHandler}\n                            disabled={props.disabled}\n                        />\n                    </label>\n\n            </div>\n        </div>\n    )\n}\n\n\n\nexport default AddDocument","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag} from '../../../Redux/actions';\nimport {changePartForm, resetPart, createPart, savePart, deletePart} from '../../../Redux/actions/partAction';\n\nimport LableInput from '../../general/LableInput'\nimport BottomButtons from '../../general/BottomButtons'\nimport AddPicture from '../../general/AddPicture';\nimport Specifications from './Specifications'\nimport LableArea from '../../general/LableArea'\nimport AddDocument from '../../general/AddDocument'\nimport ChooseCategory from './ChooseCategory'\n\nconst PartEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusPartEditor', false)\n        props.setVisibleFlag('inputWPartTitleChecked', true)\n        props.resetPart()\n    }\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('wpartEditorWindow') &&\n            !event.path.map((el) => el.id).includes('btaddWP')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.part.title) {\n            props.createPart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.part.title) {\n            props.savePart()\n        } else {\n            props.setVisibleFlag('inputWPartTitleChecked', false)\n        }\n    }\n\n\n    const can_delete = props.permissions.includes('delete_parts')\n    const can_recover = props.permissions.includes('recover_parts')\n\n    return (\n        <div className='rightBlock'>\n            <div className='rightBlockWindow' id='wpartEditorWindow'>\n                <div className='createNewTitle'>{props.part.edit ? props.part.title : 'Новый товар'}</div>\n\n                <div className='contentEditor'>\n                    <div className='row al-itm-bl'>\n                        <div>\n                            <AddPicture\n                                className='mt15'\n                                title='Добавить изображение'\n                                url={props.part.image_url}\n                                onChange={file => props.changePartForm(file, 'img')}\n                                value={props.part.img}\n                                disabled={props.part.deleted}\n                            />\n                            <AddDocument\n                                className='mt15'\n                                title='Добавить документ'\n                                url={props.part.doc_url}\n                                onChange={file => props.changePartForm(file, 'doc')}\n                                value={props.part.doc}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                        <div className='ml30'>\n                            <LableInput\n                                className='w250 mt15'\n                                title='Название'\n                                onChange={event => props.changePartForm(event.target.value, 'title')}\n                                value={props.part.title}\n                                checkedFlag='inputWPartTitleChecked'\n                                checked={props.inputWPartTitleChecked}\n                                redStar={true}\n                                disabled={props.part.deleted}\n                            />\n                            <ChooseCategory\n                                disabled={props.part.deleted}\n                            />\n                            <LableArea\n                                className='w250 mt15'\n                                title='Описание'\n                                onChange={event => props.changePartForm(event.target.value, 'description')}\n                                value={props.part.description}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Маркировка'\n                                onChange={event => props.changePartForm(event.target.value, 'marking')}\n                                value={props.part.marking}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Артикул'\n                                onChange={event => props.changePartForm(event.target.value, 'article')}\n                                value={props.part.article}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Штрих код'\n                                onChange={event => props.changePartForm(event.target.value, 'barcode')}\n                                value={props.part.barcode}\n                                disabled={props.part.deleted}\n                            />\n                            <LableInput\n                                className='w250 mt15'\n                                title='Код'\n                                onChange={event => props.changePartForm(event.target.value, 'code')}\n                                value={props.part.code}\n                                disabled={props.part.deleted}\n                            />\n                        </div>\n                    </div>\n                    <Specifications/>\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.part.edit}\n                    deleted={props.part.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_delete ? () => props.deletePart(true) : null}\n                    recover={can_recover ? () => props.deletePart(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    part: state.part,\n    inputWPartTitleChecked: state.view.inputWPartTitleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changePartForm,\n    resetPart,\n    createPart,\n    savePart,\n    deletePart\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PartEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../Redux/actions'\nimport {editPart} from '../../../Redux/actions/partAction'\nimport {part_table_headers} from '../../../data/tableHeaders'\nimport {changeWarehouseForm} from '../../../Redux/actions/warehouseAction'\n\n\nfunction PartTable (props) {\n\n\n    const handleEdit = (part) => {\n        props.editPart(part)\n        props.setVisibleFlag('statusPartEditor', true)\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n    }\n\n    const table_heards = part_table_headers.filter(part => props.part.choosed_headers.includes(part.id))\n\n    return (\n        <table className='mt15'>\n            <thead>\n            <tr>\n                {table_heards.map(header => (\n                    <th>{header.title}</th>\n                ))}\n            </tr>\n            </thead>\n            <tbody>\n            {props.part.parts.map(part => (\n                    <tr\n                        key={part.id}\n                        className={part.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() => handleEdit(part)}\n                    >\n                        {table_heards.map(header => {\n                            if (header.field === 'doc_url')\n                                return (\n                                    <td>\n                                        {part[header.field] ?\n                                            <a\n                                                href={`${process.env.PUBLIC_URL}/${part[header.field]}`}\n                                                target='_blank'\n                                            >\n                                                {part[header.field].split('/').pop()}\n                                            </a>\n                                            : null\n                                        }\n                                    </td>\n                                )\n                            if (header.field === 'warehouse_category')\n                                return <td>{part[header.field].title}</td>\n                            return <td>{part[header.field]}</td>\n                        })}\n                    </tr>\n                )\n            )}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    part: state.part,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editPart,\n    changeWarehouseForm\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (PartTable)","\nimport React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\nimport { icon_table } from '../../data/icons'\n\n\n/**\n * Меню выбора полей таблицы для отображения\n *\n * id='id' // id компонента\n *\n * className='className' // Класс оболочки компонента\n *\n * height='200px' // Высота компонента\n *\n * list={props.list} // Список всех полей таблицы\n *\n * checked_list={props.checked_list} // Список выбраных палей таблицы\n *\n * func={() => console.log('choose element')} // функция выбора элементов\n *\n * field='field' // имя поля в редюссере списка выбраных полей таблицы\n *\n * @returns {JSX.Element}\n */\nconst TableFields = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`tableFields${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n   useEffect(() => {\n      setListVisible(false)\n   }, [])\n \n\n   return (\n      <div \n         id={`tableFields${props.id}`}\n         className={`tableFields ${props.className}`}\n      >\n         <div \n            className='chooseFieldButton pd1 h24'\n            onClick = {()=> setListVisible(!listVisible)}\n         >\n            <div className='cl11'>\n               <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n                  <path d={icon_table}></path>\n               </svg>\n            </div>\n            <div className='cl12'>\n               <span className=\"fieldSeparate\">&#6662;</span>\n            </div>   \n         </div>\n\n         {listVisible ?\n            <div \n               className='listOptions'\n               style={{ minHeight : props.height}}\n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id), props.field)}\n                        disabled={props.disabled}\n                     />\n                     <label>Все</label>\n                  </div>\n                  \n            {props.list.map(field => {\n               return(\n               <div\n                  key={field.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={field.title}\n                     onChange={() => props.func([field.id], props.field, true)}\n                     checked={props.checked_list.includes(field.id)}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default TableFields\n\n// id='id'\n// className='className'\n// height='200px'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// field='field'\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { addWarehouseCategories, changeWarehouseForm} from '../../../Redux/actions/warehouseAction';\nimport {addParts, changePartForm, choosePartSelected} from '../../../Redux/actions/partAction'\nimport {setVisibleFlag} from '../../../Redux/actions';\n\nimport Button from '../../general/Button';\nimport WarehouseCategoryEditor from './WarehouseCategoryEditor';\nimport CategoryTable from './CategoryTable';\nimport Checkbox from '../../general/Checkbox';\nimport PartEditor from './PartEditor';\nimport PartTable from './PartTable'\nimport TableFields from '../../general/TableFields'\nimport {part_table_headers} from '../../../data/tableHeaders'\n\nconst WarehouseParts = props => {\n\n    useEffect(() => {\n        props.addWarehouseCategories()\n    }, [props.warehouse.showDeleted])\n\n    useEffect(() => {\n        props.addParts()\n    }, [props.part.showDeleted, props.part.page, props.warehouse.current_category])\n\n    const handleAddCategory = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusWarehouseCategoryEditor', true)\n    }\n\n    const handleAddPart = () => {\n        props.changeWarehouseForm(props.warehouse.current_category, 'current_parent_category')\n        props.setVisibleFlag('statusPartEditor', true)\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <div className='row al-itm-bl'>\n                <div className='wmn300 overv'>\n                    <div className='row'>\n                        <Button\n                            id='btaddWC'\n                            className='greenButton'\n                            title='+ категорию'\n                            onClick={ handleAddCategory }\n                            unvisible={!props.permissions.includes('create_warehouse_categories')}\n                        />\n                        <Checkbox\n                            className='ml10'\n                            label='Показать удаленные'\n                            onChange={event => props.changeWarehouseForm(event.target.checked, 'showDeleted')}\n                            checked={props.warehouse.showDeleted}\n                            unvisible={!props.permissions.includes('see_deleted_warehouse_categories')}\n                        />\n                    </div>\n                    {props.statusWarehouseCategoryEditor ? <WarehouseCategoryEditor/> : null}\n                    <CategoryTable/>\n                </div>\n                <div className='ml10 w100'>\n                    <div className='row jc-sb'>\n                        <div className='row'>\n                            <Button\n                                id='btaddWP'\n                                className='greenButton'\n                                title='+ Товар'\n                                onClick={ handleAddPart }\n                                unvisible={!props.permissions.includes('create_new_part')}\n                            />\n                            <Checkbox\n                                className='ml10'\n                                label='Показать удаленные'\n                                onChange={event => props.changePartForm(event.target.checked, 'showDeleted')}\n                                checked={props.part.showDeleted}\n                                unvisible={!props.permissions.includes('see_delete_parts')}\n                            />\n                        </div>\n                        <TableFields\n                            id='part'\n                            height='185px'\n                            list={part_table_headers}\n                            checked_list={props.part.choosed_headers}\n                            func={props.choosePartSelected}\n                            field='choosed_headers'\n                        />\n                    </div>\n                    {props.statusPartEditor ? <PartEditor/> : null}\n                    <PartTable/>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusWarehouseCategoryEditor: state.view.statusWarehouseCategoryEditor,\n    statusPartEditor: state.view.statusPartEditor,\n    warehouse: state.warehouse,\n    part: state.part,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addWarehouseCategories,\n    changeWarehouseForm,\n    addParts,\n    choosePartSelected,\n    changePartForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseParts)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRegistration = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут оприходования</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRegistration)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseWriteOf = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут списания</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseWriteOf)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseMoves = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут перемещения</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseMoves)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseInventories = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут инвентаризации</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInventories)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseRemains = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут возвраты</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseRemains)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst WarehouseBacks = props => {\n    return (\n        <div className = 'contentTab'>\n            <div className = 'tempPage'>\n                <div className = 'tempContainer'>\n                    <h1 className = 'tempTitle'>Здесь будут остатки</h1>\n                    <p className = 'tempDescription'>Страница на стадии разработки</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseBacks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm } from '../../Redux/actions/warehouseAction'\n\nimport Tabs from '../general/Tabs'\nimport WarehouseParts from './WarehouseParts/WarehouseParts';\nimport WarehouseRegistration from './WarehouseRegistration/WarehouseRegistration';\nimport WarehouseWriteOf from './WarehouseWriteOf/WarehouseWriteOf';\nimport WarehouseMoves from './WarehouseMoves/WarehouseMoves';\nimport WarehouseInventories from './WarehouseInventories/WarehouseInventories';\nimport WarehouseRemains from './WarehouseRemains/WarehouseRemains';\nimport WarehouseBacks from './WarehouseBacks/WarehouseBacks';\n\n\nconst Wherehouse = (props) => {\n  return (\n      <div className='pageContent'>\n\n          <div className='Header'>\n              <span className='headerTitle'>Слады</span>\n          </div>\n          <div className='settingPageBody'>\n          </div>\n\n          <Tabs\n              list={ ['Остатки', 'Оприходования', 'Списания', 'Пермещения', 'Инвентаризации', 'Возвраты поставщику', 'Товары и категории'] }\n              func={props.changeWarehouseForm}\n              tab={props.tabs}\n          />\n          {props.tabs === 0 ? <WarehouseRemains/> : null}\n          {props.tabs === 1 ? <WarehouseRegistration/> : null}\n          {props.tabs === 2 ? <WarehouseWriteOf/> : null}\n          {props.tabs === 3 ? <WarehouseMoves/> : null}\n          {props.tabs === 4 ? <WarehouseInventories/> : null}\n          {props.tabs === 5 ? <WarehouseBacks/> : null}\n          {props.tabs === 6 ? <WarehouseParts/> : null}\n\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.warehouse.tabs,\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wherehouse)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Clients = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут клиенты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  //   dataSidebarRows: 'dataSidebarRows',\n})\n\nexport default connect(mapStateToProps)(Clients)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Analytics = (props) => {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Здесь будет аналитика</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nconst mapDispatchToProps = {\n\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(Analytics)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Reports = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут отчеты</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\n\n\nexport default connect()(Reports)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst Telephony = (props) => {\n  return (\n    <div className=\"tempPage\">\n      <div className=\"tempContainer\">\n        <h1 className=\"tempTitle\">Здесь будут звонки</h1>\n        <p className=\"tempDescription\">Страница на стадии разработки</p>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  // todos: 'todos',\n})\n\nexport default connect(mapStateToProps)(Telephony)\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { changeStatusSettingRow } from '../../Redux/actions'\n\n\nfunction SettingRow(props) {\n  return (\n    <Link \n    className=\"settingRow\" \n    to={props.row.url}\n    style={{\n       backgroundColor: props.settingMenu.find(row => row.id === props.row.id).active ? '#939699' : '#53585c',\n       color: props.settingMenu.find(row => row.id === props.row.id).active ? '#fff' : null\n      }}\n    onClick={() => props.changeStatusSettingRow(props.row.id)}\n    >\n      <span className=\"didebarItemsText\">{props.row.title}</span>\n    </Link>\n  )\n}\n\nconst mapStateToProps = state => ({\n   settingMenu: state.data.settingMenu\n})\n\nconst mapDispatchToProps = {\n   changeStatusSettingRow\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SettingRow)\n","import React from 'react'\n\nimport SettingRow from './settingRow'\n\n\n\n\nfunction SettingGroup({group}) {\n\n    return (\n        <div>\n            {group.map(row => {\n                return (\n                    <SettingRow row = {row} key = {row.id}/>\n                    )\n                }\n            )\n            }\n        </div>\n    )}\n   \nexport default SettingGroup","import React from 'react';\nimport { connect } from 'react-redux'\n\nimport SettingGroup from './SettingGroup';\nimport  Loader  from '../Loader/Loader';\n\nfunction SettingMenu(props) {\n\n    if (props.settingMenu) {\n        return (\n            <div className = 'settingMenuMain'> \n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'generally_setting' && props.permission.includes(row.permission_key))} \n                    key = {2011}\n                    />\n                <hr className = 'hrMenu' />\n                <SettingGroup \n                    group = {props.settingMenu.filter(row => \n                        row.group_name === 'app_setting' && props.permission.includes(row.permission_key))}  \n                    key = {2012}\n                />\n            </div>\n        )\n    }\n    else {\n     return (<Loader/>)\n    }\n}\n\nconst mapStateToProps = state => ({\n    permission: state.data.user.role.permissions,\n    settingMenu: state.data.settingMenu\n  })\n   \nexport default connect(mapStateToProps)(SettingMenu)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeMaindataForm,\n  saveGenerallyInfo,\n} from '../../../../Redux/actions'\nimport { icon_house } from '../../../../data/icons'\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableArea'\n\nconst MainData = (props) => {\n  return (\n    <div className=\"settingSubpage\">\n      <div className=\"formRow\">\n        <svg className=\"icon-table\" viewBox=\"0 0 32 32\">\n          <path d={icon_house} />\n        </svg>\n        <h4>Реквизиты компании</h4>\n      </div>\n\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Название компании\"\n        onChange={(event) => props.changeMaindataForm('name', event.target.value)}\n        value={props.maindata.name}\n        checkedFlag=\"inputMaindataNameChecked\"\n        checked={props.view.inputMaindataNameChecked}\n        redStar={ true }\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Адрес\"\n        onChange={(event) => props.changeMaindataForm('address', event.target.value)}\n        value={props.maindata.address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Email\"\n        onChange={(event) => props.changeMaindataForm('email', event.target.value)}\n        value={props.maindata.email}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"ОГРН\"\n        onChange={(event) => props.changeMaindataForm('ogrn', event.target.value)}\n        value={props.maindata.ogrn}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"КПП\"\n        onChange={(event) => props.changeMaindataForm('kpp', event.target.value)}\n        value={props.maindata.kpp}\n      />\n      <LableArea\n        className=\"wm500 mt15\"\n        title=\"Юредический адрес\"\n        onChange={(event) =>\n          props.changeMaindataForm('juridical_address', event.target.value)\n        }\n        value={props.maindata.juridical_address}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Директор\"\n        onChange={(event) => props.changeMaindataForm('director', event.target.value)}\n        value={props.maindata.director}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Наименование банка\"\n        onChange={(event) => props.changeMaindataForm('bank_name', event.target.value)}\n        value={props.maindata.bank_name}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"Р/С\"\n        onChange={(event) => props.changeMaindataForm('settlement_account', event.target.value)}\n        value={props.maindata.settlement_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"К/с\"\n        onChange={(event) => props.changeMaindataForm('corr_account', event.target.value)}\n        value={props.maindata.corr_account}\n      />\n      <LableInput\n        className=\"wm500 mt15\"\n        title=\"БИК\"\n        onChange={(event) => props.changeMaindataForm('bic', event.target.value)}\n        value={props.maindata.bic}\n      />\n      <div\n        className=\"blueButton buttonSaveSet\"\n        onClick={() => props.saveGenerallyInfo()}\n      >\n        Сохранить\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  maindata: state.maindata,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeMaindataForm,\n  saveGenerallyInfo,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainData)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport MainData from './MainData'\n\nconst Generally = (props) => {\n  \n  return (\n    <div className='settingContent'>\n        <div className='Header'>\n          <span className='headerTitle'>Общие</span>\n        </div>\n        <div className='settingPageBody'>\n          <MainData/>\n\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(Generally)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { createSalaryRule, saveSalaryRule, deleteSalaryRule } from '../../../../Redux/actions/payrulleAction'\nimport { changeSalaryRuleForm, addSalaryCountCoef, changeSalaryCoefForm } from '../../../../Redux/actions/payrulleAction'\nimport { deleteSalaryCountCoef, resetPayrule } from '../../../../Redux/actions/payrulleAction'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport WarningOrange from '../../../general/WarningOrange'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport Icon from '../../../general/Icon'\nimport { icon_trush } from '../../../../data/icons'\n\n\nconst SalaryRuleReducer = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusSalaryEditor', false)\n      props.resetPayrule()\n   }\n\n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('salaryEditor')) {\n         handleClose()\n      }\n    }\n  \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   return (\n      <div className='centerBlockFix'>\n         <div className='blockWindowFix wmx750 wmn750' id='salaryEditor'>\n            <div className='createNewTitle'>{props.salaryRule.edit ? 'Редактировать правило' : 'Создать правило' }</div>\n\n            <div className='row h90 al-itm-bl'>\n               <ChooseOfList\n                  id={21}\n                  title='Правило'\n                  className='mt15'\n                  list={props.salaryRule.list_type_rule}\n                  field='type_rule'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.type_rule}\n                  width={'250px'}\n               />\n               <ChooseOfList\n                  id={31}\n                  title='Тип заказа'\n                  className='mt15 ml10'\n                  list={props.order_type}\n                  field='order_type'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.order_type}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseOfList\n                  id={26}\n                  title='Считать по статусу'\n                  className='mt15 ml10'\n                  list={props.salaryRule.statuses}\n                  field='check_status'\n                  setElement={props.changeSalaryRuleForm}\n                  current_id={props.salaryRule.check_status}\n                  width={'150px'}\n                  unvisible={![1, 2, 3, 4, 5].includes(props.salaryRule.type_rule)}\n               />\n               <ChooseButton\n                  className='mt15 ml10'\n                  title='Метод расчета'\n                  name={['%', 'руб']}\n                  func1 = {() => props.changeSalaryRuleForm(0, 'method')}\n                  func2 = {() => props.changeSalaryRuleForm(1, 'method')}\n                  checked = { true }\n                  unvisible={![1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule)}\n               />\n            </div>\n\n            {[4, 5, 6].includes(props.salaryRule.type_rule) ?\n            <div>\n               <WarningOrange text='Расчет по выбранному правилу может происходить двумя способами'/>\n\n               <div className='row mt15'>\n                  <div className='numruond'>1</div>\n                  <div>В случае, если в прейскуранте услуг в карточке услуги указано значение вознаграждения, то в расчете ЗП будет использоваться это значение умноженное на коэффициент</div>\n               </div>\n\n               <div className='row mt15 jc-c'>\n                  <div className='txtb'>Коэффициент</div>\n                  <LableInput\n                     className='ml10'\n                     width='70px'\n                     onChange={event => props.changeSalaryRuleForm(parseFloat(event.target.value.replace(/[^0-9.]/g, '')), 'coefficient')}\n                     value={props.salaryRule.coefficient}\n                  />\n               </div>\n\n               <div className='row mt15'>\n                  <div className='numruond'>2</div>\n                  <div>Для всех остальных услуг будет использоваться правило расчета:</div>\n               </div>\n            </div> : null }\n\n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n               props.salaryRule.count_coeff.map((count_coef, idx) => (\n               <div className='coef_row' key={idx}>\n                  <div>Если сумма работы</div>\n                  <div className='ml10'>&ge;</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'cost', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit='руб,'\n                     value={count_coef.cost}\n                  />\n                  <div className='ml10'>Вознаграждение составит</div>\n                  <LableInput\n                     className='ml10'\n                     width='50px'\n                     onChange={event => props.changeSalaryCoefForm( idx, 'coef', event.target.value.replace(/[^0-9]/g, ''))}\n                     unit={props.salaryRule.method ? 'руб.': '%'}\n                     value={count_coef.coef}\n                  />\n                  {idx ? \n                  <div onClick={() => props.deleteSalaryCountCoef(idx)}>\n                     <Icon \n                        className='icon-s2 ml10'\n                        icon={icon_trush} \n                     /> \n                  </div> : null}\n               </div>\n            )) : null}\n            \n            {[1, 2, 3, 4, 5, 6].includes(props.salaryRule.type_rule) ? \n            <div className='row mt15 jc-c'>\n               <button\n                  className='whiteButton' \n                  onClick={() => props.addSalaryCountCoef()}\n               >\n                  + Добавить\n               </button>\n            </div> : null}\n\n            {[7, 8].includes(props.salaryRule.type_rule) ? \n            <div>\n               <WarningOrange text='Расчет по выбранному правилу будет расчитвываться исходя из графика рабочих смен'/>\n               <LableInput\n                  className='mt15'\n                  title='Ставка'\n                  width='50px'\n                  onChange={event => props.changeSalaryRuleForm(parseInt( event.target.value.replace(/[^0-9]/g, '')), 'fix_salary')}\n                  unit='руб.'\n                  value={props.salaryRule.fix_salary}\n               />\n            </div> : null } \n\n            <BottomButtons\n               edit={props.salaryRule.edit}\n               create={() => props.createSalaryRule()}\n               save={() => props.saveSalaryRule()}\n               delete={() => props.deleteSalaryRule(true)}\n               close={handleClose}\n            />\n         </div>\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   salaryRule: state.salaryRule,\n   order_type: state.data.order_type\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   changeSalaryRuleForm,\n   addSalaryCountCoef,\n   changeSalaryCoefForm,\n   deleteSalaryCountCoef,\n   createSalaryRule,\n   resetPayrule,\n   saveSalaryRule,\n   deleteSalaryRule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRuleReducer)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\n\nexport function changeSalaryRuleForm( value, field ) {\n   return {\n     type: 'CHANGE_SALARY_FORM',\n     field,\n     value\n   }\n }\n \n export function changeSalaryCoefForm(idx, field, value) {\n   return {\n     type: 'CHANGE_SALARY_COEF_FORM',\n     idx,\n     field,\n     value\n   }\n }\n \n export function addSalaryCountCoef() {\n   return {\n     type: 'ADD_SALARY_COUNT_COEF'\n   }\n }\n \n export function deleteSalaryCountCoef(idx) {\n   return {\n     type: 'DELETE_SALARY_COUNT_COEF',\n     idx\n   }\n }\n \n export function editPayrule(salary_rule) {\n   return {\n     type: 'EDIT_SALARY',\n     salary_rule\n   }\n }\n \n export function resetPayrule() {\n   return {\n     type: 'RESET_SALARY_RULE'\n   }\n }\n\n\nexport function addPayrules() {\n\n   const state = store.getState()\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\nexport function createSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на создание правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n\n export function saveSalaryRule() {\n\n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     title: state.salaryRule.list_type_rule.find(rule => rule.id === state.salaryRule.type_rule).title,\n     type_rule: state.salaryRule.type_rule,\n     order_type: state.salaryRule.order_type,\n     method: state.salaryRule.method,\n     coefficient: state.salaryRule.coefficient,\n     count_coeff: state.salaryRule.count_coeff,\n     fix_salary: state.salaryRule.fix_salary,\n     deleted: state.salaryRule.deleted,\n     employee_id: state.data.user.id,\n     check_status: state.salaryRule.check_status\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на изменение правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }\n \n \n export function deleteSalaryRule( flag ) {\n \n   const state = store.getState()\n \n   const request_config = getRequestConfig({\n     id: state.salaryRule.edit,\n     deleted: flag\n   })\n   request_config.method = 'PUT'\n \n   return async dispatch => {\n \n     await fetch(state.data.url_server + '/payrule', request_config)\n     .catch(() => bad_request('Запрос на удаление правила не выполнен'))\n \n     await fetch(state.data.url_server + '/get_payrules', getRequestConfig({}))\n     .then(response => response.json())\n     .then(data => {\n       if (data.success) {\n         dispatch({\n           type: 'ADD_DATA',\n           field: 'payrules',\n           data: data.data,\n         })\n         dispatch({\n           type: 'SET_VISIBLE_FLAG',\n           field: 'statusSalaryEditor',\n           value: false\n         })\n         dispatch({\n           type: 'RESET_SALARY_RULE'\n         })\n       } else {\n         console.warn(data.massage)\n       }\n     })\n     .catch(() => bad_request('Запрос правил не выполнен'))  \n   }\n }","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { editPayrule } from '../../../../Redux/actions/payrulleAction'\nimport SalaryRuleEditor from './SalaryRuleEditor'\n\nconst SalaryRule = (props) => {\n   return (\n      <div className = ''>\n\n         <div className=\"lableImput mt15\">Зарплата</div>\n         <div \n            className='greenButton'\n            onClick={() => props.setVisibleFlag('statusSalaryEditor', true)}\n         > \n            + Правило\n         </div>\n         <table>\n            <thead>\n               <tr>\n                  <th>Правила</th>\n               </tr>\n            </thead>\n            <tbody>\n               {props.payrules.filter(payrule => !payrule.deleted && props.employee_id === payrule.employee_id).map(payrule => (\n                  <tr \n                     key={payrule.id}\n                     onDoubleClick={() => {\n                        props.editPayrule(payrule)\n                        props.setVisibleFlag('statusSalaryEditor', true)\n                     }}\n                  >\n                     <td>{payrule.title}</td>\n                  </tr>\n               ))}\n               \n            </tbody>\n         </table>\n      {props.statusSalaryEditor ? <SalaryRuleEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   statusSalaryEditor: state.view.statusSalaryEditor,\n   payrules: state.data.payrules,\n   employee_id: state.employee.edit\n   })\n\nconst mapDispatchToProps = {\n   setVisibleFlag,\n   editPayrule\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(SalaryRule)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport LableInput from '../../../general/LableInput'\nimport LableArea from '../../../general/LableInput'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport SalaryRule from './SalaryRule'\n\nimport { changeEmployeEditorForm, changeEmployeeEditorRoleOptions, setRoleEmployeeEdetor } from '../../../../Redux/actions'\n\n\nfunction EditEmployeeGenerally(props) {\n  return (\n    <div className=\"employeeGenterally\">\n      <div className=\"buttons\">\n        <div className=\"flexColumn mr-rg-20\">\n          <LableInput\n            className=\"w250\"\n            title=\"Имя\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'first_name')}\n            value={props.employee.first_name}\n            checkedFlag=\"inputEmployeeNameChecked\"\n            checked={props.view.inputEmployeeNameChecked}\n            redStar={ true }\n            disabled={props.employee.deleted}\n          />\n        </div>\n        <div className=\"flexColumn\">\n          <LableInput\n            className=\"w250\"\n            title=\"Фамилия\"\n            onChange={event => props.changeEmployeEditorForm(event.target.value, 'last_name') }\n            value={props.employee.last_name}\n            disabled={props.employee.deleted}\n          />\n        </div>\n      </div>\n\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"email\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'email')}\n        value={props.employee.email}\n        checkedFlag=\"inputEmployeeEmailChecked\"\n        checked={props.view.inputEmployeeEmailChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameMail ? (\n        <div className=\"errorMassageInput\">Такой email уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"login\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'login') }\n        value={props.employee.login}\n        checkedFlag=\"inputEmployeeLoginChecked\"\n        checked={props.view.inputEmployeeLoginChecked}\n        redStar={ true }\n        disabled={props.employee.deleted}\n      />\n      {props.view.errorSameLogin ? (\n        <div className=\"errorMassageInput\">Такой Login уже существует</div>\n      ) : null}\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Пароль\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'password')}\n        value={props.employee.password}\n        checkedFlag={ props.employee.edit ? null : 'inputEmployeePasswordChecked' }\n        checked={props.view.inputEmployeePasswordChecked}\n        redStar={ !props.employee.edit }\n        disabled={props.employee.deleted}\n      />\n       <LableInput\n        className=\"w250 mt15\"\n        title=\"Телефон\"\n        onChange={value => props.changeEmployeEditorForm(value, 'phone')}\n        value={props.employee.phone}\n        disabled={props.employee.deleted}\n        isPhone={true}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"ИНН Сотрудника\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'inn')}\n        value={props.employee.inn}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Имя в печатных документах\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'doc_name')}\n        value={props.employee.doc_name}\n        disabled={props.employee.deleted}\n      />\n      <LableArea\n        className=\"mt15\"\n        title=\"Примечание\"\n        onChange={event =>\n          props.changeEmployeEditorForm(event.target.value, 'notes')\n        }\n        value={props.employee.notes}\n        disabled={props.employee.deleted}\n      />\n      <LableInput\n        className=\"w250 mt15\"\n        title=\"Должность\"\n        onChange={event => props.changeEmployeEditorForm(event.target.value, 'post')}\n        value={props.employee.post}\n        disabled={props.employee.deleted}\n      />\n      <div className=\"lableImput mt15\">Роль</div>\n      <ChooseOfList\n        id={19}\n        className=\"mt15\"\n        list={props.roles}\n        field=\"role_id\"\n        setElement={props.changeEmployeEditorForm}\n        current_id={props.employee.role_id}\n        width={'250px'}\n        disabled={props.employee.deleted}\n      />\n      {!props.view.inputEmployeeRoleChecked ? <div className=\"errorMassageInput\">Выберете роль</div> : null}\n      {props.employee.edit ? <SalaryRule/> : null}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  employee: state.employee,\n  roles: state.data.roles,\n  employeeEditorRoleOptions: state.view.employeeEditorRoleOptions,\n  view: state.view,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeEditorForm,\n  changeEmployeeEditorRoleOptions,\n  setRoleEmployeeEdetor,\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(EditEmployeeGenerally)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nfunction EditEmployeePermission (props) {\n   return (\n      <div className = 'tempPage'>\n         <div className = 'tempContainer'>\n            <h1 className = 'tempTitle'>Настройки доступа</h1>\n            <p className = 'tempDescription'>Страница на стадии разработки</p>\n         </div>\n      </div>\n   )\n}\n\nexport default connect () (EditEmployeePermission)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee\n} from '../../../../Redux/actions'\nimport { addPayrules } from '../../../../Redux/actions/payrulleAction'\nimport EditEmployeeGenerally from './EditEmployeeGenerally'\nimport EditEmployeePermission from './EditEmployeePermission'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst EmploeeyEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusEmployeeEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  useEffect(() => {\n    props.addPayrules()\n  }, [])\n\n  const hangleCreate = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login &&\n      props.employee.password &&\n      props.employee.role_id !== 0\n    ) {\n      props.createEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n      if (!props.employee.password) {\n        props.setVisibleFlag('inputEmployeePasswordChecked', false)\n      }\n      if (props.employee.role_id === 0) {\n        props.setVisibleFlag('inputEmployeeRoleChecked', false)\n      }\n    }\n  }\n\n  const hangleSave = () => {\n    if (\n      props.employee.first_name &&\n      props.employee.email &&\n      props.employee.login\n    ) {\n      props.seveEditEmployee()\n    } else {\n      if (!props.employee.first_name) {\n        props.setVisibleFlag('inputEmployeeNameChecked', false)\n      }\n      if (!props.employee.email) {\n        props.setVisibleFlag('inputEmployeeEmailChecked', false)\n      }\n      if (!props.employee.login) {\n        props.setVisibleFlag('inputEmployeeLoginChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit\n            ? `${props.employee.last_name} ${props.employee.first_name}`\n            : 'Новый сотрудник'}\n        </div>\n\n        <div className=\"tabs\">\n          <div\n            className={props.tabs === 1 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(1)}\n          >\n            Общие\n          </div>\n          <div\n            className={props.tabs === 2 ? 'tabOn' : 'tab'}\n            onClick={() => props.changeEmployeeTabs(2)}\n          >\n            Доступ\n          </div>\n        </div>\n\n        {props.tabs === 1 ? <EditEmployeeGenerally /> : null}\n        {props.tabs === 2 ? <EditEmployeePermission /> : null}\n\n        <BottomButtons\n          edit={props.edit}\n          create={hangleCreate}\n          save={hangleSave}\n          delete={() => props.deleteEmployee(true)}\n          recover={ props.permissions.includes('setting_recover_employees') ? () => props.deleteEmployee(false) : null}\n          close={() => props.setVisibleFlag('statusEmployeeEditor', false)}\n          deleted={props.employee.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  tabs: state.employee.tabs,\n  edit: state.employee.edit,\n  employee: state.employee,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  changeEmployeeTabs,\n  setVisibleFlag,\n  createEmployee,\n  seveEditEmployee,\n  deleteEmployee,\n  addPayrules\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmploeeyEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changePermissions } from '../../../../Redux/actions'\n\nconst PermissionsCheckbox = (props) => {\n  return (\n\n      <div className='subCheckbox'>\n         <input \n         type='checkbox'\n         onChange={() => props.changePermissions([props.value])}\n         checked={props.list_permissions.includes(props.value)}\n         />\n         <label>{props.description}</label>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsCheckbox)","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport PermissionsCheckbox from './PermissionsCheckbox'\nimport { changePermissions } from '../../../../Redux/actions'\n\n\nconst PermissionsGroup = (props) => {\n\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.data.permission.filter(per => props.list_permissions.includes(per.value))\n      if (values.length === props.data.permission.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.list_permissions])\n\n  return (\n    <div className=\"chackboxes\">\n      <div className='checkbox'>\n         <input \n             ref={mainCheckbox}\n             type='checkbox'\n             onChange={() => props.changePermissions(props.data.permission.map(per => per.value))}\n         />\n         <label>{props.data.description}</label>\n      </div>\n      {props.data.permission.map((permission, idx) => {\n         return <PermissionsCheckbox value={permission.value} description={permission.description} key={idx}/>\n      })}\n     \n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n   list_permissions: state.role.list_permissions\n})\n\nconst mapDispatchToProps = {\n   changePermissions\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionsGroup)","import React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableStatuses, changeVisibleStatuses } from '../../../../Redux/actions'\n\n\nfunction ChooseAvailableStatuses (props) {\n\n   const visibleChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.visible_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = true\n      } else if (!values.length) {\n         visibleChackbox.current.indeterminate = false\n         visibleChackbox.current.checked = false\n      } else {\n         visibleChackbox.current.indeterminate = true\n      }\n   }, [props.visible_statuses])\n\n   const settableChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.status.filter(status => props.settable_statuses.includes(status.id))\n      if (values.length === props.status.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = true\n      } else if (!values.length) {\n         settableChackbox.current.indeterminate = false\n         settableChackbox.current.checked = false\n      } else {\n         settableChackbox.current.indeterminate = true\n      }\n   }, [props.settable_statuses])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th>Статус заказа</th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={visibleChackbox}\n                     onChange={() => props.changeVisibleStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Видеть заказы в статусе</label>\n                  </div>\n               </th>\n               <th>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={settableChackbox}\n                     onChange={() => props.changeSettableStatuses(props.status.map(status => status.id))}\n                     />\n                     <label>Устанавливать статус</label>\n                  </div>\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.status.map(status => {\n               return (\n                  <tr key={status.id}>\n                     <td>\n                        <div \n                        style={{backgroundColor: status.color}}\n                        className='statusListRow'\n                        >\n                           {status.name}\n                        </div>\n                     </td>\n                     <td>\n                        \n\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeVisibleStatuses([status.id])}\n                           checked={props.visible_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n\n                     </td>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableStatuses([status.id])}\n                           checked={props.settable_statuses.includes(status.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   visible_statuses: state.role.visible_statuses,\n   settable_statuses: state.role.settable_statuses\n   })\n\n   const mapDispatchToProps = {\n      changeVisibleStatuses,\n      changeSettableStatuses\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (ChooseAvailableStatuses)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n} from '../../../../Redux/actions'\n\nfunction ChooseButton(props) {\n  return (\n    <div>\n      <div className=\"lableImput mt15\">Отет по сотрудникам</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeEarningsVisibility(true)}\n        >\n          По всем сотрудникам\n        </div>\n        <div\n          className={\n            props.earnings_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeEarningsVisibility(false)}\n        >\n          Только свою ЗП\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Заказы</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeOrdersVisibility(true)}\n        >\n          Все заказы\n        </div>\n        <div\n          className={\n            props.orders_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeOrdersVisibility(false)}\n        >\n          Только свои заказы\n        </div>\n      </div>\n\n      <div className=\"lableImput mt15\">Обращения</div>\n      <div className=\"checkButton\">\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonTwo' : 'checkButtonOne'\n          }\n          onClick={() => props.cahngeLeadsVisibility(true)}\n        >\n          Все обращения\n        </div>\n        <div\n          className={\n            props.leads_visibility ? 'checkButtonOne' : 'checkButtonTwo'\n          }\n          onClick={() => props.cahngeLeadsVisibility(false)}\n        >\n          Только свои обращения\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  earnings_visibility: state.role.earnings_visibility,\n  leads_visibility: state.role.leads_visibility,\n  orders_visibility: state.role.orders_visibility,\n})\n\nconst mapDispatchToProps = {\n  cahngeOrdersVisibility,\n  cahngeLeadsVisibility,\n  cahngeEarningsVisibility,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseButton)\n","\nimport React, { useEffect, useRef} from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeSettableMargin} from '../../../../Redux/actions'\n\n\nfunction CooseAvailablePrices (props) {\n\n\n   const priceChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.discount_margin.filter(margin => props.settable_discount_margin.includes(margin.id))\n      if (values.length === props.discount_margin.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = true\n      } else if (!values.length) {\n         priceChackbox.current.indeterminate = false\n         priceChackbox.current.checked = false\n      } else {\n         priceChackbox.current.indeterminate = true\n      }\n   }, [props.settable_discount_margin])\n\n\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='headerCheckbox'>\n                  <div className='checkbox'>\n                     <input \n                     type='checkbox'\n                     ref={priceChackbox}\n                     onChange={() => props.changeSettableMargin(props.discount_margin.map(margin => margin.id))}\n                     />\n                     <label></label>\n                  </div>\n               </th>\n               <th>\n                  Название\n               </th>\n            </tr>\n         </thead>\n         <tbody>\n            {props.discount_margin.map(margin => {\n               return (\n                  <tr key={margin.id}>\n                     <td>\n                        <div className='checkbox'>\n                           <input \n                           type='checkbox'\n                           onChange={() => props.changeSettableMargin([margin.id])}\n                           checked={props.settable_discount_margin.includes(margin.id)}\n                           />\n                           <label></label>\n                        </div>\n                     </td>\n                     <td>\n                        {margin.title}\n                     </td>\n                  </tr>\n               )\n            })}\n         </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   settable_discount_margin: state.role.settable_discount_margin\n   })\n\n   const mapDispatchToProps = {\n      changeSettableMargin\n   }\n\nexport default connect (mapStateToProps, mapDispatchToProps) (CooseAvailablePrices)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n} from '../../../../Redux/actions'\n\nimport PermissionsGroup from './PermissionsGroup'\nimport ChooseAvailableStatuses from './ChooseAvailableStatuses'\nimport { permission } from '../../../../data/permissions'\nimport ChooseButton from './ChooseButton'\nimport CooseAvailablePrices from './CooseAvailablePrices'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst RoleEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('createNewRoleWiondow')) {\n      props.setVisibleFlag('statusCreateNewRole', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateRole = () => {\n    if (props.title_create) {\n      props.createRole()\n    } else {\n      props.setVisibleFlag('inputRoleTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"createNewRoleWiondow\">\n        <div className=\"createNewTitle\">\n          {props.edit ? props.title_create : ' Новая роль'}\n        </div>\n\n        <div className=\"contentEditor\">\n          <div className=\"lableImput\">\n            Название<span className=\"redStar\">*</span>\n          </div>\n          <input\n            className=\"textInput\"\n            onChange={(event) =>\n              props.changeTitleCreateRole(event.target.value)\n            }\n            value={props.title_create}\n            onBlur={(event) =>\n              props.setVisibleFlag('inputRoleTitleChecked', !!event.target.value)\n            }\n            style={!props.inputRoleTitleChecked ? { borderColor: 'red' } : null}\n          />\n          {!props.inputRoleTitleChecked ? (\n            <div className=\"errorMassageInput\">Необоходимо заполнить</div>\n          ) : null}\n\n          {permission.map((permission, idx) => (\n            <PermissionsGroup data={permission} key={idx} />\n          ))}\n\n          <ChooseButton />\n\n          <div className=\"lableImput mt15\">Доступные статусы заказов</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group < 8)}\n          />\n\n          <div className=\"lableImput mt15\">Доступные статусы обращений</div>\n          <ChooseAvailableStatuses\n            status={props.status.filter((status) => status.group > 7)}\n          />\n\n          <div className=\"lableImput mt15\">Доступ к ценам</div>\n          <CooseAvailablePrices />\n        </div>\n\n        <BottomButtons\n          edit={props.edit}\n          create={handleCreateRole}\n          save={() => props.seveEditRole(props.edit)}\n          delete={() => props.deleteRole(props.edit)}\n          close={() => props.setVisibleFlag('statusCreateNewRole', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  title_create: state.role.title_create,\n  edit: state.role.edit,\n  status: state.data.status,\n  inputRoleTitleChecked: state.view.inputRoleTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  changeTitleCreateRole,\n  createRole,\n  seveEditRole,\n  deleteRole,\n  setVisibleFlag,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoleEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editEmoloyee, setVisibleFlag } from '../../../../Redux/actions'\nimport { showPhone } from '../../../general/utils'\n\nfunction TableEmployees (props) {\n   return (\n      <table>\n      <thead>\n        <tr>\n          <th>Сотрудник</th>\n          <th>Логин</th>\n          <th>email</th>\n          <th>Телефон</th>\n          <th>Роль</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.employees.filter(employee => props.showDeleted || !employee.deleted).map(employee =>{\n          return (\n            <tr \n              key={employee.id}\n              className={employee.deleted ? 'rowDeleted' : null}\n              onDoubleClick={() => {\n                props.editEmoloyee(employee)\n                props.setVisibleFlag('statusEmployeeEditor', true)\n              }} \n            >\n              <td>{`${employee.last_name} ${employee.first_name}`}</td>\n              <td>{employee.login}</td>\n              <td>{employee.email}</td>\n              <td>{employee.phone ? showPhone(employee.phone) : null}</td>\n              <td>{employee.role.title}</td>\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   showDeleted: state.employee.showDeleted\n })\n\nconst mapDispatchToProps = {\n   editEmoloyee,\n   setVisibleFlag\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editRole } from '../../../../Redux/actions'\n\nfunction TableRoles(props) {\n   return (\n      <>\n      <table>\n         <thead>\n         <tr>\n            <th>Название</th>\n         </tr>\n         </thead>\n         <tbody>\n            {props.roles.map(role => {\n               return (\n               <tr \n               key={role.id}\n               onDoubleClick={() => props.editRole(role)}\n               >\n                  <td>{role.title}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {props.roles.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   roles: state.data.roles\n})\n\nconst mapDispatchToProps = {\n   editRole\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TableRoles)","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, addDiscountMargin, addRoles, changeShowDeleted, resetEmoloyee} from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport EmploeeyEditor from './EmploeeyEditor'\nimport RoleEditor from './RoleEditor'\nimport TableEmployees from './TableEmployees'\nimport TableRoles from './TableRoles'\nimport Button from '../../../general/Button'\n\nconst SettingEmployees = (props) => {\n\n    useEffect(() => {\n        props.addDiscountMargin()\n        props.addRoles()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n            <div className='Header'>\n                <span className='headerTitle'>Сотрудники</span>\n            </div>\n            <div className='settingPageBody'>\n\n                {props.permission.includes('setting_roles') ?\n                    <>\n                        <h3>Роли</h3>\n                        <p>Роль — это список прав и возможностей сотрудника.</p>\n                        <Button\n                            className='greenButton'\n                            title='+ Роль'\n                            onClick={() => props.setVisibleFlag('statusCreateNewRole', true)}\n                        />\n                        {props.statusCreateNewRole ? <RoleEditor/> : null}\n\n                        <TableRoles/>\n                    </> : null}\n\n                <h3>Сотрудники</h3>\n                <p>Каждый сотрудник имеет свой логин и пароль для входа в OneTwoService</p>\n\n                <div className='buttons'>\n                    <Button\n                        className='greenButton'\n                        title='+ Сотрудник'\n                        onClick={() => {\n                            props.resetEmoloyee()\n                            props.setVisibleFlag('statusEmployeeEditor', true)\n                        }}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={() => props.changeShowDeleted()}\n                        checked={props.showDeleted}\n                        unvisible={!props.permission.includes('setting_see_employees')}\n                    />\n                </div>\n\n                {props.statusEmployeeEditor ? <EmploeeyEditor/> : null}\n\n                <TableEmployees/>\n\n\n            </div>\n        </div>\n\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewRole: state.view.statusCreateNewRole,\n    statusEmployeeEditor: state.view.statusEmployeeEditor,\n    showDeleted: state.employee.showDeleted,\n    permission: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    addDiscountMargin,\n    addRoles,\n    changeShowDeleted,\n    resetEmoloyee\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingEmployees)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeShedule } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\nconst Schedule = (props) => {\n  const weekdays = [\n    'Понедельник',\n    'Вторник',\n    'Среда',\n    'Четверг',\n    'Пятница',\n    'Суббота',\n    'Воскрсение',\n  ]\n\n  return (\n    <div className=\"schedule mr-rg-20\">\n      <div className=\"lableImput mt15\">График работы локации</div>\n      {props.branch.schedule.map((day, idx) => {\n        return (\n          <div className=\"row mt15\" key={idx}>\n            <Checkbox\n              className=\"w150\"\n              onChange={(event) =>\n                props.changeShedule(idx, 'work_day', event.target.checked)\n              }\n              checked={day.work_day}\n              label={weekdays[idx]}\n              disabled={props.branch.deleted}\n            />\n\n            {props.branch.schedule[idx].work_day ? (\n              <div className=\"row\">\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'start_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.start_time}\n                />\n                <div className=\"w30 tac\">&#8212;</div>\n                <input\n                  className=\"w70\"\n                  onChange={\n                    props.branch.deleted\n                      ? null\n                      : (event) =>\n                          props.changeShedule(\n                            idx,\n                            'end_time',\n                            event.target.value\n                          )\n                  }\n                  value={day.end_time}\n                />\n              </div>\n            ) : null}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n})\n\nconst mapDispatchToProps = {\n  changeShedule,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Schedule)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, changeBranchForm } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\nimport {\n  icon_location,\n  icon_map_location,\n  icon_wrench,\n  icon_hammer,\n  icon_radio,\n  icon_git,\n  icon_svg,\n} from '../../../../data/icons'\n\nconst ChooseIcon = (props) => {\n  const colors = [\n    '#cccccc',\n    '#d70000',\n    '#f6c000',\n    '#2ab676',\n    '#0099e8',\n    '#3d4fb8',\n    '#9a33b4',\n    '#616161',\n    '#7784cd',\n    '#f8622b',\n    '#e87d6f',\n    '#038140',\n  ]\n\n  const icons = [\n    icon_location,\n    icon_map_location,\n    icon_wrench,\n    icon_hammer,\n    icon_radio,\n    icon_git,\n    icon_svg,\n  ]\n\n  return (\n    <div className=\"mt15\">\n      {props.statusChooseIcon ? (\n        <div>\n          {icons.map((icon, idx) => {\n            return (\n              <div className=\"row\" key={idx}>\n                {colors.map((color, idx) => {\n                  return (\n                    <div\n                      key={idx}\n                      onClick={() => {\n                        props.changeBranchForm('color', color)\n                        props.changeBranchForm('icon', icon)\n                        props.setVisibleFlag('statusChooseIcon', false)\n                      }}\n                    >\n                      <Icon icon={icon} color={color} />\n                    </div>\n                  )\n                })}\n              </div>\n            )\n          })}\n        </div>\n      ) : (\n        <>\n          <div className=\"lableImput mt15\">Цвет и иконка локации</div>\n          <div\n            onClick={\n              props.branch.deleted\n                ? null\n                : () => props.setVisibleFlag('statusChooseIcon', 'change')\n            }\n          >\n            <Icon icon={props.branch.icon} color={props.branch.color} />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  statusChooseIcon: state.view.statusChooseIcon,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","\nimport React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport { setBranchEmployee } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\n\n\n\nconst ChooseEmployees = (props) => {\n\n   const employeeChackbox = useRef()\n  \n   useEffect(() => {\n      const values = props.employees.filter(employee => props.branch.employees.includes(employee.id))\n      if (values.length === props.employees.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = true\n      } else if (!values.length) {\n         employeeChackbox.current.indeterminate = false\n         employeeChackbox.current.checked = false\n      } else {\n         employeeChackbox.current.indeterminate = true\n      }\n   }, [props.branch.employees])\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w30'>\n                  <div className='checkbox'>\n                     <input \n                        type='checkbox'\n                        ref={employeeChackbox}\n                        onChange={props.branch.deleted ? null : \n                           () => props.setBranchEmployee(props.employees.map(employee => employee.id))}\n                     />\n                     <label>{props.label}</label>\n                  </div>\n               </th>\n               <th>Сотрудник</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.employees.filter(employee => !employee.deleted).map(employee =>{\n            return (\n               <tr  key={employee.id}>\n                  <td>\n                     <Checkbox\n                        onChange={() => props.setBranchEmployee([employee.id])}\n                        checked={props.branch.employees.includes(employee.id)}\n                        disabled={props.branch.deleted}\n                     />\n                  </td>\n                  <td>{`${employee.last_name} ${employee.first_name}`}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   employees: state.data.employees,\n   branch: state.branch\n   })\n\nconst mapDispatchToProps = {\n   setBranchEmployee\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ChooseEmployees)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n} from '../../../../Redux/actions'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableInput from '../../../general/LableInput'\nimport Schedule from './Schedule'\nimport ChooseIcon from './ChooseIcon'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseEmployees from './ChooseEmployees'\n\nconst BranchEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('BranchEditorWiondow')) {\n      props.setVisibleFlag('statusBranchEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateBranch = () => {\n    if (\n      props.branch.name &&\n      props.branch.orders_prefix &&\n      props.branch.documents_prefix\n    ) {\n      props.createBranch()\n    } else {\n      if (!props.branch.name) {\n        props.setVisibleFlag('inputBranchNameChecked', false)\n      }\n      if (!props.branch.orders_prefix) {\n        props.setVisibleFlag('inputBranchPrefixChecked', false)\n      }\n      if (!props.branch.documents_prefix) {\n        props.setVisibleFlag('inputBranchPrefixDocChecked', false)\n      }\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"BranchEditorWiondow\">\n        <div className=\"createNewTitle\">\n          {props.branch.edit ? props.branch.name : ' Новая локация'}\n        </div>\n\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Название\"\n          onChange={(event) => props.changeBranchForm('name', event.target.value)}\n          value={props.branch.name}\n          checkedFlag=\"inputBranchNameChecked\"\n          checked={props.view.inputBranchNameChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Адрес\"\n          onChange={(event) => props.changeBranchForm('address', event.target.value)}\n          value={props.branch.address}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className='textInput w250'\n          title='Телефон'\n          onChange={value => props.changeBranchForm('phone', value)}\n          value={props.branch.phone}\n          disabled={props.branch.deleted}\n          isPhone={true}\n        />\n        <Schedule />\n        <ChooseIcon />\n        <div className=\"lableImput mt15\">Тип заказа по умолчанию</div>\n        <ChooseOfList\n          id={18}\n          list={props.order_type}\n          field=\"orders_type_id\"\n          setElement={props.changeBranchForm}\n          current_id={props.branch.orders_type_id}\n          width={'250px'}\n          disabled={props.branch.deleted}\n        />\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера заказа\"\n          onChange={(event) => props.changeBranchForm('orders_prefix', event.target.value)}\n          value={props.branch.orders_prefix}\n          checkedFlag=\"inputBranchPrefixChecked\"\n          checked={props.view.inputBranchPrefixChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.orders_prefix}-${\n            props.counters.find((count) => count.id === 1).count\n          }`}\n        </p>\n        <LableInput\n          className=\"w250 mt15\"\n          title=\"Шаблон номера документов\"\n          onChange={(event) => props.changeBranchForm('documents_prefix', event.target.value)}\n          value={props.branch.documents_prefix}\n          checkedFlag=\"inputBranchPrefixDocChecked\"\n          checked={props.view.inputBranchPrefixDocChecked}\n          redStar={ true }\n          disabled={props.branch.deleted}\n        />\n        <p className=\"mt0\">\n          Пример:{' '}\n          {`${props.branch.documents_prefix}-${\n            props.counters.find((count) => count.id === 2).count\n          }`}\n        </p>\n        <ChooseEmployees />\n\n        <BottomButtons\n          edit={props.branch.edit}\n          create={handleCreateBranch}\n          save={() => props.saveBranch()}\n          recover={\n            props.permissions.includes('setting_recover_branch')\n              ? () => props.deleteBranch(false)\n              : null\n          }\n          delete={() => props.deleteBranch(true)}\n          close={() => props.setVisibleFlag('statusBranchEditor', false)}\n          deleted={props.branch.deleted}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  view: state.view,\n  order_type: state.data.order_type,\n  counters: state.data.counters,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBranchForm,\n  createBranch,\n  saveBranch,\n  deleteBranch,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BranchEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { showPhone } from '../../../general/utils'\nimport { editBranch } from '../../../../Redux/actions'\nimport Icon from '../../../general/Icon'\n\nconst TableBranches = (props) => {\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th></th>\n               <th>Название локации</th>\n               <th>Адрес</th>\n               <th>Телефон</th>\n            </tr>\n         </thead>\n         <tbody>\n         {props.branches.filter(branch => props.showDeleted || !branch.deleted).map(branch =>{\n            return (\n               <tr \n                  key={branch.id}\n                  className={branch.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => props.editBranch(branch)} \n               >\n                  <td className='w30'><Icon icon={branch.icon} color={branch.color}/></td>\n                  <td>{branch.name}</td>\n                  <td>{branch.address}</td>\n                  <td>{showPhone(branch.phone)}</td>\n               </tr>\n            )\n         })}\n      </tbody>\n    </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n   branches: state.data.branches,\n   showDeleted: state.branch.showDeleted\n   })\n\nconst mapDispatchToProps = {\n   editBranch\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableBranches)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, addCounters, changeBranchForm } from '../../../../Redux/actions'\nimport Checkbox from '../../../general/Checkbox'\nimport BranchEditor from './BranchEditor'\nimport TableBranches from './TableBranches'\n\nconst SettingBranches = (props) => {\n\n  useEffect(() => {\n    props.addCounters()\n  }, [])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n          <span className='headerTitle'>Локации</span>\n        </div>\n\n        <div className='settingPageBody'>\n        <p>Таблица показывает все локации компании. Каждой локации можно присвоить уникальный код и цвет.</p>\n        <div className='row'>\n          <div \n          className='greenButton'\n          onClick={() => props.setVisibleFlag('statusBranchEditor', true)}\n          > \n            + Добавить локацию\n          </div>\n          {props.permissions.includes('setting_see_branch') ? <Checkbox\n            className='ml10'\n            label='Показать удаленные'\n            onChange={event => props.changeBranchForm('showDeleted', event.target.checked)}\n            checked={props.showDeleted}\n          /> : null}\n        </div>\n\n        <TableBranches/>\n\n        {props.statusBranchEditor ? <BranchEditor/> : null}\n        </div>\n      </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusBranchEditor: state.view.statusBranchEditor,\n  showDeleted: state.branch.showDeleted,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  addCounters,\n  changeBranchForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBranches)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Icon from \"../../../general/Icon\";\nimport {editWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport { setVisibleFlag } from \"../../../../Redux/actions\";\n\nconst TableWherehouse = (props) => {\n\n    const handleEdit = (warehouse) => {\n        if (props.permissions.includes('setting_edit_warehouse')) {\n            props.editWarehouse(warehouse)\n            props.setVisibleFlag('statusWarehouseEditor', true)\n        }\n    }\n\n   return (\n      <table>\n         <thead>\n            <tr>\n               <th className='w15'> </th>\n               <th className='w150'>Название</th>\n               <th className=''>Описание</th>\n            </tr>\n         </thead>\n          <tbody>\n          {props.warehouses.filter(warehouse => props.showDeleted || !warehouse.deleted).map(warehouse => (\n              <tr\n                  key={warehouse.id}\n                  className={warehouse.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={() => handleEdit(warehouse)}\n              >\n                  <td className=''>\n                      <Icon className='icon-s1' icon={warehouse.branch.icon} color={warehouse.branch.color}/>\n                  </td>\n                  <td className=''>{warehouse.title}</td>\n                  <td className=''>{warehouse.description}</td>\n              </tr>\n          ))}\n          </tbody>\n      </table>\n   )\n}\n\nconst mapStateToProps = state => ({\n    warehouses: state.warehouse.warehouses,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    editWarehouse,\n    setVisibleFlag\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(TableWherehouse)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport {changeWarehouseForm, chooseWarehouseSelected} from \"../../../../Redux/actions/warehouseAction\";\n\nimport LableInput from \"../../../general/LableInput\";\nimport LableArea from \"../../../general/LableArea\";\nimport ChooseBotton from \"../../../general/ChooseBotton\";\nimport ChooseOfList from \"../../../general/ChooseOfList\";\nimport Checkbox from \"../../../general/Checkbox\";\n\n\nconst WarehouseInfo = props => {\n    return (\n        <div className=''>\n            <LableInput\n                className=\"w250 mt15\"\n                title=\"Наименование\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'title')}\n                value={props.warehouse.title}\n                checkedFlag=\"inputWarehouseTitleChecked\"\n                checked={props.inputBookTitleChecked}\n                redStar={ true }\n                disabled={props.warehouse.deleted}\n            />\n\n            <LableArea\n                className=\"w250 mt15\"\n                title=\"Описание\"\n                onChange={event => props.changeWarehouseForm(event.target.value, 'description')}\n                value={props.warehouse.description}\n                disabled={props.warehouse.deleted}\n            />\n            <ChooseBotton\n                className='mt15'\n                title='Выберите тип'\n                name={['Склад компании', 'Склад локации']}\n                func1 = {() => props.changeWarehouseForm(true, 'isGlobal')}\n                func2 = {() => props.changeWarehouseForm(false, 'isGlobal')}\n                // checked = { true }\n                disabled={props.warehouse.deleted}\n                unvisible={false}\n            />\n            <ChooseOfList\n                id='brWH'\n                title='Филиал'\n                className='mt15'\n                list={props.branches}\n                field='branch_id'\n                setElement={props.changeWarehouseForm}\n                current_id={ props.warehouse.branch_id }\n                disabled={props.warehouse.deleted}\n                unvisible={props.warehouse.isGlobal}\n            />\n            <div className='lableImput mt15'>Допустимые действия с кассой</div>\n            <Checkbox\n                className='mt15'\n                label='Видеть остатки'\n                onChange={() => props.chooseWarehouseSelected(['show_warehouse_remains'], 'permissions')}\n                checked={props.warehouse.permissions.includes('show_warehouse_remains')}\n                disabled={props.warehouse.deleted}\n            />\n            <div className='row al-itm-bl'>\n                <div>\n                    <div className='lableImput mt15'>Входящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Оприходование'\n                        onChange={() => props.chooseWarehouseSelected(['warehouse_registration'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('warehouse_registration')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_in'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_in')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат от клиента'\n                        onChange={() => props.chooseWarehouseSelected(['return_from_client'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_from_client')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n                <div>\n                    <div className='lableImput mt15'>Исходящие операции:</div>\n                    <Checkbox\n                        className='mt15'\n                        label='Списание'\n                        onChange={() => props.chooseWarehouseSelected(['write_off'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('write_off')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Перемещение'\n                        onChange={() => props.chooseWarehouseSelected(['move_out'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('move_out')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в заказ'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_order'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_order')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Добавление в продажу'\n                        onChange={() => props.chooseWarehouseSelected(['add_to_sale'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('add_to_sale')}\n                        disabled={props.warehouse.deleted}\n                    />\n                    <Checkbox\n                        className='mt15'\n                        label='Возврат поставщику'\n                        onChange={() => props.chooseWarehouseSelected(['return_to_supplier'], 'permissions')}\n                        checked={props.warehouse.permissions.includes('return_to_supplier')}\n                        disabled={props.warehouse.deleted}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nWarehouseInfo.propTypes = {\n    // setVisibleFlag: PropTypes.func,\n    // changeWarehouseForm: PropTypes.func,\n    warehouse: PropTypes.shape({\n        warehouses: PropTypes.arrayOf(PropTypes.object),\n\n        edit: PropTypes.number,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        deleted: PropTypes.bool,\n        isGlobal: PropTypes.bool,\n        permissions: PropTypes.arrayOf(PropTypes.string),\n        branch_id: PropTypes.number,\n        branch: PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            icon: PropTypes.string,\n            color: PropTypes.string\n        }),\n        categories: PropTypes.arrayOf(PropTypes.object)\n    }),\n    branches: PropTypes.arrayOf(PropTypes.object),\n    inputBookTitleChecked: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    branches: state.data.branches.filter(branch => !branch.deleted),\n    inputBookTitleChecked: state.view.inputBookTitleChecked\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    chooseWarehouseSelected\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseInfo)","\nimport React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from \"../../../../Redux/actions\"\nimport { changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\nimport Checkbox from '../../../general/Checkbox'\n\nconst WarehouseEmployeeEditor = (props) => {\n\n    const [perm, setPerm] = useState( props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse )\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEmployeeEditor')) {\n            props.setVisibleFlag('statusWarehouseEmployeeEditor', false)\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    return (\n        <div className=\"centerBlock\">\n            <div className=\"blockWindow\" id='warehouseEmployeeEditor'>\n                <div className=\"createNewTitle\">{`${props.employee.last_name} ${props.employee.first_name}`}</div>\n                <div className=\"createNewTitle mt0\">\n                    {props.employee.role_title}\n                </div>\n                <WarningOrange\n                    text=\"Сотрудник сможет выполнять только те действия, которые разрешены в настройках его роли\"\n                    width=\"500px\"\n                />\n                <ChooseBotton\n                    className='mt15'\n                    title='Выберите права'\n                    name={['Доступные для склада', 'Персональные']}\n                    func1={() => {\n                        setPerm(true)\n                        props.changeWarehousePermission(true, 'like_warehouse')\n                    }}\n                    func2={() => {\n                        setPerm(false)\n                        props.changeWarehousePermission(false, 'like_warehouse')\n                    }}\n                    checked={props.warehouse.employees[props.warehouse.permissions_employee].like_warehouse}\n                    disabled={props.warehouse.deleted}\n                />\n                <Checkbox\n                    className='mt15'\n                    label='Видеть остатки'\n                    onChange={() => props.changeWarehousePermission('show_warehouse_remains', 'permissions')}\n                    checked={\n                        perm ?\n                            props.warehouse.permissions.includes('show_warehouse_remains') :\n                            props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('show_warehouse_remains')\n                    }\n                    disabled={props.warehouse.deleted || perm}\n                />\n                <div className='row'>\n                    <div>\n                        <div className='lableImput mt15'>Входящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Оприходование'\n                            onChange={() => props.changeWarehousePermission('warehouse_registration', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('warehouse_registration') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('warehouse_registration')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_in', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_in') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_in')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат от клиента'\n                            onChange={() => props.changeWarehousePermission('return_from_client', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_from_client') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_from_client')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                    <div className='ml30'>\n                        <div className='lableImput mt15'>Исходящие операции:</div>\n                        <Checkbox\n                            className='mt15'\n                            label='Списание'\n                            onChange={() => props.changeWarehousePermission('write_off', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('write_off') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('write_off')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Перемещение'\n                            onChange={() => props.changeWarehousePermission('move_out', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('move_out') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('move_out')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в заказ'\n                            onChange={() => props.changeWarehousePermission('add_to_order', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_order') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_order')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Добавление в продажу'\n                            onChange={() => props.changeWarehousePermission('add_to_sale', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('add_to_sale') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('add_to_sale')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                        <Checkbox\n                            className='mt15'\n                            label='Возврат поставщику'\n                            onChange={() => props.changeWarehousePermission('return_to_supplier', 'permissions')}\n                            checked={\n                                perm ?\n                                    props.warehouse.permissions.includes('return_to_supplier') :\n                                    props.warehouse.employees[props.warehouse.permissions_employee].permissions.includes('return_to_supplier')\n                            }\n                            disabled={props.warehouse.deleted || perm}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div\n                        className=\"blueButton mr-lf-0\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Сохранить\n                    </div>\n                    <div\n                        className=\"whiteBlueBotton\"\n                        onClick={() => props.setVisibleFlag('statusWarehouseEmployeeEditor', false)}\n                    >\n                        Закрыть\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    employee: state.employee,\n    roles: state.data.roles,\n    warehouse: state.warehouse\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEmployeeEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeWarehouseForm, changeWarehousePermission } from '../../../../Redux/actions/warehouseAction'\nimport { editEmoloyee, setVisibleFlag} from \"../../../../Redux/actions\";\n\nimport Checkbox from \"../../../general/Checkbox\";\nimport WarehouseEmployeeEditor from \"./WarehouseEmployeeEditor\";\n\nconst WarehouseAccess = (props) => {\n\n    const handleEdit = employee => {\n        props.changeWarehouseForm(employee.id, 'permissions_employee')\n        props.editEmoloyee(employee)\n        props.setVisibleFlag('statusWarehouseEmployeeEditor', true)\n    }\n\n    const handleCheck = (employee_id, value) => {\n        props.changeWarehouseForm(employee_id, 'permissions_employee')\n        props.changeWarehousePermission(value, 'available')\n    }\n\n    return (\n        <div className='contentEditor'>\n            <table className='mt15'>\n                <thead>\n                <tr>\n                    <th className='w15'>\n                    </th>\n                    <th>Сотрудник</th>\n                    <th>Права</th>\n                </tr>\n                </thead>\n                <tbody>\n                {props.employees.map(employee => (\n                    <tr\n                        key={employee.id}\n                        onDoubleClick={() => handleEdit(employee)}\n                    >\n                        <td>\n                            <Checkbox\n                                onChange={event => handleCheck(employee.id, event.target.checked)}\n                                checked={props.warehouse.employees[employee.id].available}\n                                disabled={props.warehouse.deleted}\n                            />\n                        </td>\n                        <td>{`${employee.first_name} ${employee.last_name}`}</td>\n                        <td>\n                            {props.warehouse.employees[employee.id].available ?\n                                (props.warehouse.employees[employee.id].like_warehouse  ? 'Доступные для склада' : 'Персональные') :\n                                'Нет доступа'}\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            {props.statusWarehouseEmployeeEditor ? <WarehouseEmployeeEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    warehouse: state.warehouse,\n    statusWarehouseEmployeeEditor: state.view.statusWarehouseEmployeeEditor\n})\n\nconst mapDispatchToProps = {\n    changeWarehouseForm,\n    editEmoloyee,\n    setVisibleFlag,\n    changeWarehousePermission\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseAccess)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from \"prop-types\";\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeWarehouseForm, resetWarehouse, createWarehouse} from \"../../../../Redux/actions/warehouseAction\";\nimport {saveWarehouse, deleteWarehouse} from \"../../../../Redux/actions/warehouseAction\";\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport Tabs from \"../../../general/Tabs\";\nimport WarehouseInfo from \"./WarehouseInfo\"\nimport WarehouseAccess from \"./WarehouseAccess\";\nimport { permission_warehouse} from \"../../../../data/permissions\";\n\n\nconst WarehouseEditor = props => {\n\n    const handleClose = () => {\n        props.resetWarehouse()\n        props.setVisibleFlag('statusWarehouseEditor', false)\n        props.setVisibleFlag('inputWarehouseTitleChecked', true)\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('warehouseEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    useEffect(() => {\n        if (!props.warehouse.edit) {\n            let list_per = {}\n            props.employees.forEach(employee => {\n                list_per[employee.id] = {}\n                list_per[employee.id].available = true\n                list_per[employee.id].like_warehouse = true\n                list_per[employee.id].permissions = permission_warehouse\n            })\n            props.changeWarehouseForm(list_per, 'employees')\n        }\n    }, [])\n\n    const handleCreate = () => {\n        if (props.warehouse.title) {\n            props.createWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.warehouse.title) {\n            props.saveWarehouse()\n        } else {\n            props.setVisibleFlag('inputWarehouseTitleChecked', false)\n        }\n    }\n\n    const can_delete = props.permissions.includes('setting_delete_warehouse')\n    const can_recover = props.permissions.includes('setting_recover_warehouse')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"warehouseEditorWindow\">\n                <div className=\"createNewTitle\">Новый склад</div>\n\n                <div className=\"contentEditor\">\n\n                    <Tabs\n                        className='mt15'\n                        list={['Общие', 'Доступ']}\n                        tab={props.warehouse.tabs}\n                        func={props.changeWarehouseForm}\n                    />\n                    {props.warehouse.tabs === 0 ? <WarehouseInfo/> : null}\n                    {props.warehouse.tabs === 1 ? <WarehouseAccess/> : null}\n\n                </div>\n\n                <BottomButtons\n                    edit={ props.warehouse.edit }\n                    deleted={ props.warehouse.deleted }\n                    create={ handleCreate }\n                    save={ handleSave }\n                    delete={ can_delete ? () => props.deleteWarehouse(true) : null }\n                    recover={ can_recover ? () => props.deleteWarehouse(false) : null }\n                    close={ handleClose }\n                />\n            </div>\n        </div>\n    )\n}\n\nWarehouseEditor.propTypes = {\n    tabs: PropTypes.number\n}\n\nconst mapStateToProps = state => ({\n    warehouse: state.warehouse,\n    employees: state.data.employees.filter(employee => !employee.deleted),\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeWarehouseForm,\n    resetWarehouse,\n    createWarehouse,\n    saveWarehouse,\n    deleteWarehouse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WarehouseEditor)\n","import React, {useEffect, useState} from 'react'\nimport {connect} from 'react-redux'\n\nimport Button from '../../../general/Button'\nimport TableWherehouse from './TableWherehouse'\nimport {addWarehouse} from \"../../../../Redux/actions/warehouseAction\"\nimport {setVisibleFlag} from \"../../../../Redux/actions\"\nimport WarehouseEditor from \"./WarehouseEditor\"\nimport Checkbox from \"../../../general/Checkbox\";\n\nconst SettingWherehouse = (props) => {\n\n    const [showDeleted, setShowDeleted] = useState(false)\n\n    useEffect(() => {\n        props.addWarehouse()\n    }, [])\n\n    return (\n        <div className='settingContent'>\n\n            <div className='Header'>\n                <span className='headerTitle'>Склады</span>\n            </div>\n\n            <div className='settingPageBody'>\n                <h3>Склады товаров или запчастей</h3>\n                <p>Перечень складов компании для хранения товаров. Склады могут принадлежать конкретной локации или всей\n                    компании.</p>\n                <div className='row'>\n                    <Button\n                        className='greenButton'\n                        title='+ Склад'\n                        onClick={() => props.setVisibleFlag('statusWarehouseEditor', true)}\n                        unvisible={!props.permissions.includes('setting_create_warehouse')}\n                    />\n                    <Checkbox\n                        label='Показать удаленных'\n                        onChange={event => setShowDeleted(event.target.checked)}\n                        checked={showDeleted}\n                        unvisible={!props.permissions.includes('setting_see_deleted_warehouse')}\n                    />\n                </div>\n                {props.statusWarehouseEditor ? <WarehouseEditor/> : null}\n\n                <TableWherehouse showDeleted={showDeleted}/>\n            </div>\n        </div>\n    )\n}\n// yj\nconst mapStateToProps = state => ({\n    statusWarehouseEditor: state.view.statusWarehouseEditor,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    addWarehouse,\n    setVisibleFlag\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingWherehouse)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingStatus = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки статусов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingStatus)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTags = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут настройки тегов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTags)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotEventForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_EVENT_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotEvent(event) {\n    return {\n        type: 'EDIT_NOT_EVENT',\n        event\n    }\n}\n\nexport function resetNotEvent() {\n    return {\n        type: 'RESET_NOT_EVENT'\n    }\n}\n\n\nexport function selectedNotEvent( value, field, saveToApp=false ) {\n    return {\n        type: 'SELECTED_NOT_EVENT',\n        field,\n        value,\n        saveToApp\n    }\n}\n\nexport function addNotEvent() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_events', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function createNotEvent() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        notification_type: state.notEvent.notification_type,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на создание события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotEvent() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        event: state.notEvent.event,\n        target_audience: state.notEvent.target_audience,\n        statuses: state.notEvent.statuses,\n        notification_template_id: state.notEvent.notification_template_id\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на изменение события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}\n\nexport function deleteNotEvent(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notEvent.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notEvent.showDeleted,\n        target_audience: state.notEvent.filter_target_audience\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_events', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление события не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_events', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_EVENT_FORM',\n                        field: 'events',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotEventEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_EVENT'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос событий не выполнен'))\n\n    }\n}","import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\n\n\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst ChooseStatusesGruoup = props => {\n\n\n    const mainCheckbox = useRef()\n\n    const current_statuses = props.statuses.filter(status => status.group === props.group)\n\n    useEffect(() => {\n\n        const values = current_statuses.filter(status => props.current_list.includes(status.id))\n        if (values.length === props.statuses.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = true\n        } else if (!values.length) {\n            mainCheckbox.current.indeterminate = false\n            mainCheckbox.current.checked = false\n        } else {\n            mainCheckbox.current.indeterminate = true\n        }\n    }, [props.current_list])\n\n\n\n    const handleChoose = (val) => {\n        props.func(val)\n    }\n\n    return (\n        <div className=\"chackboxes\">\n            <div className='checkbox'>\n                <input\n                    ref={mainCheckbox}\n                    type='checkbox'\n                    onChange={() => handleChoose(current_statuses.map(status => status.id))}\n                />\n                <label>{props.label}</label>\n            </div>\n            {current_statuses.map(status => (\n                <div\n                    key={status.id}\n                    className='row'\n                >\n                    <Checkbox\n                        className='ml20'\n                        labelClassName='statuses'\n                        color={status.color}\n                        onChange={() => handleChoose([status.id])}\n                        checked={props.current_list.includes(status.id)}\n                        unvisible={status.deleted}\n                    />\n                    <div\n                        className='statuses'\n                        style={{backgroundColor: status.color}}\n                    >\n                        {status.name}\n                    </div>\n                </div>\n            ))}\n\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatusesGruoup)\n\n// label\n// group\n// func","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport {selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport {icon_down, icon_left} from '../../../../data/icons'\nimport ChooseStatusesGruoup from './ChooseStatusesGruoup'\nimport Icon from '../../../general/Icon'\n\nconst ChooseStatuses = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    const clickHandel = (event) => {\n        if (!event.path.map(el => el.id).includes('chooseOfListStatuses') ) {\n            if (listVisible) {\n                setListVisible(false)\n            }}\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n\n    return props.unvisible ? null : (\n        <div\n            className={props.className}\n            style={{width: props.width ? props.width : '250px'}}\n            id='chooseOfListStatuses'\n        >\n            <div className='lableImput'>Выберете статусы</div>\n            <div\n                className='optionsButton'\n                onClick={props.disabled ? null : () => setListVisible(!listVisible)}\n            >\n                <div className='noWr'>{`Выбрано ${props.current_list.length}`}</div>\n                <Icon icon={listVisible ? icon_down : icon_left} className='icon-s2' color='grey'/>\n            </div>\n            {listVisible ?\n                <div\n                    className='listOptionsChoose'\n                    style={{width: props.width ? props.width : '250px'}}\n                >\n                    {props.status_group.map(group => (\n                        <ChooseStatusesGruoup\n                            key={group.id}\n                            label={group.name}\n                            group={group.type_group}\n                            func={value => props.func(value)}\n                            current_list={props.current_list}\n                        />\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    status_group: state.data.status_group.filter(group => group.type_group < 8 && group.type_group !== 5)\n\n})\n\nconst mapDispatchToProps = {\n\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseStatuses)\n\n\n// id={}\n// title='Наменование'\n// className='className'\n// list={props.list}\n// field='field'\n// setElement={props.setElement}\n// current_id={props.current_id}\n// width={'250px'}\n// employee={false}\n// checkedFlag='checkedFlag'\n// checked={flag}\n// disabled={false}\n// unvisible={false}","export const eventsClients = [\n    {\n        id: 'ORDER_CREATED',\n        title: 'Заказ создан'\n    },{\n        id: 'ORDER_STATUS_CHANGED',\n        title: 'Статус заказа изменился'\n    },{\n        id: 'ORDER_STATUS_CHANGED_TO',\n        title: 'Статус заказа изменился на'\n    },{\n        id: 'ORDER_STATUS_SCHEDULED_FOR',\n        title: 'Время записи изменилость на'\n    }\n]","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport { changeNotEventForm, createNotEvent, deleteNotEvent} from '../../../../Redux/actions/notEventAction'\nimport { resetNotEvent, saveNotEvent, selectedNotEvent} from '../../../../Redux/actions/notEventAction'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseButton from '../../../general/ChooseBotton'\nimport ChooseStatuses from './ChooseStatuses'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst NotEventEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotEventEditor', false)\n        props.setVisibleFlag('inputNotEventEventChecked', true)\n        props.setVisibleFlag('inputNotEventTemplateChecked', true)\n        props.resetNotEvent()\n    }\n\n    const clickHandel = (event) => {\n        if (\n            !event.path.map((el) => el.id).includes('NotTempEditorWindow') &&\n            !event.path.map((el) => el.id).includes('gb1') &&\n            !event.path.map((el) => el.id).includes('gb2') &&\n            !event.path.map((el) => el.id).includes('gb3')\n        ) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id ) {\n            props.createNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notEvent.event && props.notEvent.notification_template_id) {\n            props.saveNotEvent()\n        } else {\n            if(!props.notEvent.event ) props.setVisibleFlag('inputNotEventEventChecked', false)\n            if(!props.notEvent.notification_template_id) props.setVisibleFlag('inputNotEventTemplateChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_event')\n    const can_recover = props.permissions.includes('setting_recover_not_event')\n\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle w515\">{props.notEvent.edit ? props.notEvent.title : 'Новое оповещение'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <ChooseOfList\n                            id='chooseNotEventType'\n                            title='При событии'\n                            className='mt15'\n                            list={eventsClients}\n                            field='event'\n                            setElement={props.changeNotEventForm}\n                            current_id={props.notEvent.event}\n                            width={'250px'}\n                            checkedFlag='inputNotEventEventChecked'\n                            checked={props.inputNotEventEventChecked}\n                            noChoosed='Не задано'\n                            disabled={props.notEvent.deleted}\n                        />\n                        <ChooseStatuses\n                            className='mt15 ml15 h27'\n                            func={value => props.selectedNotEvent(value, 'statuses')}\n                            current_list={props.notEvent.statuses}\n                            unvisible={props.notEvent.event !== 'ORDER_STATUS_CHANGED_TO'}\n                        />\n                    </div>\n                    <ChooseButton\n                        className='mt15'\n                        title='Отправить'\n                        name={['SMS', 'Email']}\n                        func1 = {() => props.changeNotEventForm(1, 'notification_type')}\n                        func2 = {() => props.changeNotEventForm(2, 'notification_type')}\n                        checked = { true }\n                        disabled={false}\n                        unvisible={false}\n                    />\n                    <ChooseOfList\n                        id='idChooseNotTemplate'\n                        title='Шаблон'\n                        className='mt15'\n                        list={props.templates}\n                        field='notification_template_id'\n                        setElement={props.changeNotEventForm}\n                        current_id={props.notEvent.notification_template_id}\n                        width={'250px'}\n                        checkedFlag='inputNotEventTemplateChecked'\n                        checked={props.inputNotEventTemplateChecked}\n                        noChoosed='Не выбран'\n                        disabled={props.notEvent.deleted}\n                    />\n\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notEvent.edit}\n                    deleted={props.notEvent.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotEvent(true) : null}\n                    recover={can_recover ? () => props.deleteNotEvent(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    inputNotEventEventChecked: state.view.inputNotEventEventChecked,\n    inputNotEventTemplateChecked: state.view.inputNotEventTemplateChecked,\n    permissions: state.data.user.role.permissions,\n    templates: state.notTemplate.templates\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    resetNotEvent,\n    createNotEvent,\n    saveNotEvent,\n    deleteNotEvent,\n    changeNotEventForm,\n    selectedNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotEventEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotEvent} from '../../../../Redux/actions/notEventAction'\nimport {eventsClients} from '../../../../data/events'\n\n\nconst EventTable = props => {\n\n    const handleEdit = (event) => {\n\n        if(props.permissions.includes('setting_edit_not_event')) {\n            props.editNotEvent(event)\n            props.setVisibleFlag('statusNotEventEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th>При событии</th>\n                <th>Отправить</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notEvent.events.filter(event => event.target_audience === props.target_audience).map(event =>{\n                return (\n                    <tr\n                        key={event.id}\n                        className={event.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(event)}\n                    >\n                        <td className='noWr'>\n                            <div>{eventsClients.find(ev => ev.id === event.event).title}</div>\n                            {event.event === 'ORDER_STATUS_CHANGED_TO' ?\n                                <div className='row'>\n                                    {props.statuses.filter(status => event.statuses.includes(status.id)).map(status => (\n                                        <div\n                                            key={status.id}\n                                            className='stat'\n                                            style={{backgroundColor: status.color}}\n                                        >\n                                            {status.name}\n                                        </div>\n                                    ))}\n                                </div>\n                                : null\n                            }\n\n                        </td>\n                        <td className='noWr'>{event.notification_type === 1 ? 'SMS': (event.notification_type === 2 ? 'Email' : 'Не выбрано') }</td>\n                        <td className='noWr'>{event.template_title}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    permissions: state.data.user.role.permissions,\n    statuses: state.data.status\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotEvent\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (EventTable)","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\nimport NotEventEditor from './NotEventEditor'\nimport {changeNotEventForm} from '../../../../Redux/actions/notEventAction'\nimport EventTable from './EventTable'\nimport Checkbox from '../../../general/Checkbox'\n\n\nconst OrderNotification = (props) => {\n\n    const handleCreateClients = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(1, 'target_audience')\n    }\n\n    const handleCreateManagers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(2, 'target_audience')\n    }\n\n    const handleCreateEngineers = () => {\n        props.setVisibleFlag('statusNotEventEditor', true)\n        props.changeNotEventForm(3, 'target_audience')\n    }\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Для клиентов</h3>\n            <p>Настройте уведомления для клиентов о ходе выполнения работ или других событий.</p>\n            <div className='row'>\n                <Button\n                    id='gb1'\n                    className='greenButton'\n                    title='+ Оповещение'\n                    onClick={handleCreateClients}\n                    unvisible={!props.permissions.includes('setting_create_not_event')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotEventForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    unvisible={!props.permissions.includes('setting_see_deleted_not_event')}\n                />\n            </div>\n            {props.statusNotEventEditor ? <NotEventEditor/> : null}\n\n            <EventTable target_audience={1}/>\n\n            <h3>Для менеджеров</h3>\n            <p>Настройте уведомления для менеджеров, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb2'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateManagers}\n            />\n\n            <h3>Для исполнителей</h3>\n            <p>Настройте уведомления для исполнителей, чтобы они не пропустили ничего важного.</p>\n            <Button\n                id='gb3'\n                className='greenButton'\n                title='+ Оповещение'\n                onClick={handleCreateEngineers}\n            />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotEventEditor: state.view.statusNotEventEditor,\n    showDeleted: state.notEvent.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotEventForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderNotification)","import store from '../store'\nimport { getRequestConfig, bad_request } from './actionUtils'\n\n\nexport function changeNotTemplateForm( value, field ) {\n    return {\n        type: 'CHANGE_NOT_TEMPLATE_FORM',\n        field,\n        value\n    }\n}\n\nexport function editNotTemplate(template) {\n    return {\n        type: 'EDIT_NOT_TEMPLATE',\n        template\n    }\n}\n\nexport function resetNotTemplate() {\n    return {\n        type: 'RESET_NOT_TEMPLATE'\n    }\n}\n\n\n// export function selectedTemple( value, field, saveToApp=false ) {\n//     return {\n//         type: 'SELECTED_TEMPLE',\n//         field,\n//         value,\n//         saveToApp\n//     }\n// }\n\nexport function addNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return dispatch => {\n\n        fetch(state.data.url_server + '/get_notification_template', request_config)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function createNotTemplate() {\n\n    const state = store.getState()\n\n    const request_config1 = getRequestConfig({\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на создание шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\n\n\nexport function saveNotTemplate() {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        title: state.notTemplate.title,\n        template: state.notTemplate.template,\n        deleted: false,\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на изменение шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шаблонов не выполнен'))\n\n    }\n}\n\nexport function deleteNotTemplate(flag) {\n\n    const state = store.getState()\n\n    let request_config1 = getRequestConfig({\n        id: state.notTemplate.edit,\n        deleted: flag\n    })\n    request_config1.method = 'PUT'\n\n    const request_config2 = getRequestConfig({\n        deleted: state.notTemplate.showDeleted\n    })\n\n    return async dispatch => {\n\n        await fetch(state.data.url_server + '/notification_template', request_config1)\n            .catch(() => bad_request('Запрос на удаление/восстановление шаблона не выполнен'))\n\n        await fetch(state.data.url_server + '/get_notification_template', request_config2)\n            .then(response =>  response.json())\n            .then(data => {\n                if (data.success) {\n                    dispatch({\n                        type: 'CHANGE_NOT_TEMPLATE_FORM',\n                        field: 'templates',\n                        value: data.data\n                    })\n                    dispatch({\n                        type: 'SET_VISIBLE_FLAG',\n                        field: 'statusNotTemplateEditor',\n                        value: false\n                    })\n                    dispatch({\n                        type: 'RESET_NOT_TEMPLATE'\n                    })\n                } else {\n                    console.warn(data.massage)\n                }\n            })\n            .catch(() => bad_request('Запрос шиблонов не выполнен'))\n\n    }\n}","export const listVarCompany = [\n    '#КОМПАНИЯ-НАЗВАНИЕ',\n    '#КОМПАНИЯ-АДРЕС',\n    '#КОМПАНИЯ-EMAIL',\n    '#КОМПАНИЯ-РЕКВИЗИТЫ'\n]\n\nexport const listVarClient = [\n    '#КЛИЕНТ-ИМЯ',\n    '#КЛИЕНТ-ТЕЛЕФОН',\n    '#КЛИЕНТ-АДРЕС',\n    '#КЛИЕНТ-EMAIL',\n    '#КЛИЕНТ-К/С',\n    '#КЛИЕНТ-Р/С',\n    '#КЛИЕНТ-ДИРЕКТОР',\n    '#КЛИЕНТ-БИК',\n    '#КЛИЕНТ-НАЗВАНИЕ-БАНКА',\n    '#КЛИЕНТ-ЮРИДИЧЕСКИЙ-АДРЕС',\n    '#КЛИЕНТ-КПП',\n    '#КЛИЕНТ-ИНН',\n    '#КЛИЕНТ-ОГРН',\n    '#КЛИЕНТ-ОБРАЩЕНИЕ'\n]\n\nexport const listVarOrder = [\n    '#ЗАКАЗ-НОМЕР',\n    '#ЦЕНА',\n    '#ЗАМЕТКИ-МЕНЕДЖЕРА',\n    '#ЗАМЕТКИ-ИСПОЛНИТЕЛЯ',\n    '#СРОЧНО',\n    '#ЗАКАЗ-НЕИСПРАВНОСТЬ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    // '#ДАТА-ЗАКАЗ-ДЛИТЕЛЬНОСТЬ',\n    '#РЕКЛАМНАЯ-КАМПАНИЯ',\n    '#ЗАКАЗ-ТИП-ИЗДЕЛИЯ',\n    '#ЗАКАЗ-БРЕНД',\n    '#ЗАКАЗ-МОДУЛЬ',\n    '#ЗАКАЗ-МОДЕЛЬ',\n    '#ЗАКАЗ-КОМПЛЕКТАЦИЯ',\n    '#ЗАКАЗ-ВНЕШНИЙ-ВИД',\n    '#ЗАКАЗ-СЕРИЙНЫЙ-НОМЕР',\n    // '#ЗАКАЗ-АДРЕС-ЗАКАЗА'\n]\n\nexport const listVarEmployee = [\n    '#ЗАКАЗ-СОЗДАЛ',\n    // '#СЧЕТ-СОЗДАЛ',\n    '#ИСПОЛНИТЕЛЬ-ИМЯ',\n    '#ИСПОЛНИТЕЛЬ-ТЕЛЕФОН',\n    '#МЕНЕДЖЕР-ИМЯ',\n    '#МЕНЕДЖЕР-ТЕЛЕФОН',\n    '#ЗАКАЗ-ЗАКРЫЛ'\n]\n\nexport const listVarFinance = [\n    // '#ВСЕГО-СУММА',\n    // '#СУММА-ПРОПИСЬЮ',\n    // '#ВАЛЮТА',\n    '#ОРИЕНТИР-ЦЕНА',\n    // '#ОРИЕНТИР-ЦЕНА-ПРОПИСЬЮ',\n    '#К-ОПЛАТЕ',\n    // '#К-ОПЛАТЕ-ПРОПИСЬЮ',\n    '#ОПЛАЧЕНО',\n    // '#ОПЛАЧЕНО-ПРОПИСЬЮ',\n    '#ЗАКАЗ-СУММА',\n    // '#ЗАКАЗ-СУММА-ПРОПИСЬЮ'\n]\n\nexport const listVarDate = [\n    '#ДАТА-СЕГОДНЯ',\n    '#ДАТА-ВРЕМЯ-СЕГОДНЯ',\n    // '#ДАТА-ПРОДАЖИ',\n    // '#ДАТА-ВЫСТАВЛЕНИЯ-СЧЕТА',\n    '#ДАТА-ЗАКАЗ-СОЗДАН',\n    '#ДАТА-ЗАКАЗ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-БУДЕТ-ГОТОВ',\n    '#ДАТА-ЗАКАЗ-ЗАКРЫТ',\n    '#ДАТА-ЗАКАЗ-ЗАПЛАНИРОВАН-НА',\n    '#ДАТА-ГАРАНТИЯ'\n]\n\nexport const listVarAnother = [\n    '#ЗАКАЗ-ТИП',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ОТЗЫВ-КЛИЕНТА',\n    // '#ЗАКАЗ-URL-ДЛЯ-ИСПОЛНИТЕЛЯ-SMS',\n    // '#ЗАКАЗ-URL-ДЛЯ-КЛИЕНТА-SMS',\n    // '#ПРОДАЖА-НОМЕР',\n    // '#ФОРМА-ОПЛАТЫ',\n    // '#СЧЕТ-НОМЕР',\n    '#ВЕРДИКТ',\n    // '#КОММЕНТАРИЙ',\n    // '#ШТРИХ-КОД',\n    // '#КОММЕНТАРИЙ-АВТОР',\n    '#ЛОКАЦИЯ',\n    '#СТАТУС'\n]","import React, {useState} from 'react'\n\nconst BoxVariable = props => {\n\n    const [listVisible, setListVisible] = useState(false)\n\n    return (\n        <div className='boxVariable'>\n            <div\n                className='varLabel mr-tb-15 w200'\n                onClick={() => setListVisible(!listVisible)}\n            >\n                {props.title}\n            </div>\n            {listVisible ?\n                <div>\n                    {props.list_var.map((variable, idx) => (\n                        <div\n                            key={idx}\n                            className='variableItem'\n                            onClick={() => props.func(variable)}\n                        >\n                            {variable}\n                        </div>\n                    ))}\n                </div>\n                : null\n            }\n        </div>\n    )\n}\n\n\nexport default BoxVariable","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {changeNotTemplateForm, createNotTemplate, resetNotTemplate} from '../../../../Redux/actions/notTemplateAction'\nimport {saveNotTemplate, deleteNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nimport {listVarAnother, listVarClient, listVarCompany, listVarDate} from '../../../../data/varNames'\nimport {listVarEmployee, listVarFinance, listVarOrder} from '../../../../data/varNames'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport LableArea from '../../../general/LableArea'\nimport BoxVariable from './BoxVariable'\n\nconst NotTemplateEditor = props => {\n\n    const handleClose = () => {\n        props.setVisibleFlag('statusNotTemplateEditor', false)\n        props.setVisibleFlag('inputNotTempTitleChecked', true)\n        props.setVisibleFlag('inputNotTempTempleChecked', true)\n        props.resetNotTemplate()\n    }\n\n    const clickHandel = (event) => {\n        if (!event.path.map((el) => el.id).includes('NotTempEditorWindow')) {\n            handleClose()\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const handleCreate = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.createNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const handleSave = () => {\n        if (props.notTemplate.title && props.notTemplate.template) {\n            props.saveNotTemplate()\n        } else {\n            if(!props.notTemplate.title) props.setVisibleFlag('inputNotTempTitleChecked', false)\n            if(!props.notTemplate.template) props.setVisibleFlag('inputNotTempTempleChecked', false)\n        }\n    }\n\n    const can_deleted = props.permissions.includes('setting_delete_not_template')\n    const can_recover = props.permissions.includes('setting_recover_not_template')\n\n    return (\n        <div className=\"rightBlock\">\n            <div className=\"rightBlockWindow\" id=\"NotTempEditorWindow\">\n                <div className=\"createNewTitle\">{props.notTemplate.edit ? props.notTemplate.title : 'Новый Шаблон'}</div>\n\n                <div className=\"contentEditor\">\n                    <div className='row al-itm-bl'>\n                        <div>\n                        <LableInput\n                            className=\"w250 mt15\"\n                            title=\"Название\"\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'title')}\n                            value={props.notTemplate.title}\n                            checkedFlag=\"inputNotTempTitleChecked\"\n                            checked={props.inputNotTempTitleChecked}\n                            redStar={ true }\n                            disabled={props.notTemplate.deleted}\n                        />\n                        <LableArea\n                            className='w400 mt15'\n                            title='Текст'\n                            onChange={event => props.changeNotTemplateForm(event.target.value, 'template')}\n                            value={props.notTemplate.template}\n                            checkedFlag='inputNotTempTempleChecked'\n                            checked={props.inputNotTempTempleChecked}\n                            redStar={true}\n                            disabled={props.notTemplate.deleted}\n                        />\n                        </div>\n                        <div className='ml30'>\n                            <h3>Переменные</h3>\n                            <BoxVariable\n                                title='Компания'\n                                list_var={listVarCompany}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Клиент'\n                                list_var={listVarClient}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Заказ'\n                                list_var={listVarOrder}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Сотрудник'\n                                list_var={listVarEmployee}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Финансы'\n                                list_var={listVarFinance}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Дата'\n                                list_var={listVarDate}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                            <BoxVariable\n                                title='Прочие'\n                                list_var={listVarAnother}\n                                func={vr => props.changeNotTemplateForm(props.notTemplate.template + vr, 'template')}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n\n                <BottomButtons\n                    edit={props.notTemplate.edit}\n                    deleted={props.notTemplate.deleted}\n                    create={handleCreate}\n                    save={handleSave}\n                    delete={can_deleted ? () => props.deleteNotTemplate(true) : null}\n                    recover={can_recover ? () => props.deleteNotTemplate(false) : null}\n                    close={handleClose}\n                />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    inputNotTempTitleChecked: state.view.inputNotTempTitleChecked,\n    inputNotTempTempleChecked: state.view.inputNotTempTempleChecked,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm,\n    resetNotTemplate,\n    createNotTemplate,\n    saveNotTemplate,\n    deleteNotTemplate\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotTemplateEditor)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag } from '../../../../Redux/actions'\nimport {editNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst TemplateTable = props => {\n\n    const handleEdit = (template) => {\n        if(props.permissions.includes('setting_edit_not_template')) {\n            props.editNotTemplate(template)\n            props.setVisibleFlag('statusNotTemplateEditor', true)\n        }\n    }\n\n    return (\n        <table>\n            <thead>\n            <tr>\n                <th className='w150'>Название</th>\n                <th>Шаблон</th>\n            </tr>\n            </thead>\n            <tbody>\n            {props.notTemplate.templates.map(template =>{\n                return (\n                    <tr\n                        key={template.id}\n                        className={template.deleted ? 'rowDeleted' : null}\n                        onDoubleClick={() =>handleEdit(template)}\n                    >\n                        <td className='noWr'>{template.title}</td>\n                        <td className='noWr'>{template.template}</td>\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nconst mapStateToProps = state => ({\n    notTemplate: state.notTemplate,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    editNotTemplate\n}\n\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TemplateTable)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {setVisibleFlag} from '../../../../Redux/actions'\n\nimport Button from '../../../general/Button'\nimport NotTemplateEditor from './NotTemplateEditor'\nimport TemplateTable from './TemplateTable'\nimport { changeNotTemplateForm} from '../../../../Redux/actions/notTemplateAction'\nimport Checkbox from '../../../general/Checkbox'\n\nconst NotificationTemplate = props => {\n\n\n\n    return (\n        <div className = 'contentTab'>\n            <h3>Шаблоны</h3>\n            <p>Создайте шаблон для оповещений или напоминаний.</p>\n            <div className='row'>\n                <Button\n                    className='greenButton'\n                    title='+ Шаблон'\n                    onClick={() => props.setVisibleFlag('statusNotTemplateEditor', true)}\n                    unvisible={props.permissions.includes('setting_create_notification')}\n                />\n                <Checkbox\n                    className='ml10'\n                    label='Показать удаленные'\n                    onChange={event => props.changeNotTemplateForm(event.target.checked, 'showDeleted')}\n                    checked={props.showDeleted}\n                    unvisible={!props.permissions.includes('setting_see_deleted_not_template')}\n                />\n            </div>\n            {props.statusNotTemplateEditor ? <NotTemplateEditor/> : null}\n            <TemplateTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusNotTemplateEditor: state.view.statusNotTemplateEditor,\n    showDeleted: state.notTemplate.showDeleted,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    setVisibleFlag,\n    changeNotTemplateForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationTemplate)","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\n\nimport {addNotEvent, changeNotEventForm} from '../../../../Redux/actions/notEventAction'\n\nimport Tabs from '../../../general/Tabs'\nimport OrderNotification from './OrderNotification'\nimport NotificationTemplate from './NotificationTemplate'\nimport {addNotTemplate} from '../../../../Redux/actions/notTemplateAction'\n\nconst SettingNotification = props => {\n\n    useEffect(() => {\n        props.addNotTemplate()\n    }, [props.notTemplate.showDeleted])\n\n    useEffect(() => {\n        props.addNotEvent()\n    }, [props.notEvent.showDeleted])\n\n  return (\n    <div className='settingContent'>\n\n        <div className='Header'>\n            <span className='headerTitle'>Оповещения</span>\n        </div>\n\n        <Tabs\n            className='mt15'\n            list={['Заказы', 'Обращения', 'Задачи', 'Шаблоны']}\n            tab={props.notEvent.tabs}\n            func={props.changeNotEventForm}\n        />\n        {props.notEvent.tabs === 0 ? <OrderNotification/> : null}\n        {props.notEvent.tabs === 1 ? null : null}\n        {props.notEvent.tabs === 2 ? null : null}\n        {props.notEvent.tabs === 3 ? <NotificationTemplate/> : null}\n\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n    notEvent: state.notEvent,\n    notTemplate: state.notTemplate\n})\n\nconst mapDispatchToProps = {\n    changeNotEventForm,\n    addNotTemplate,\n    addNotEvent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingNotification)","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm, \n   resetGruopDictService, \n   createGroupDictService,\n   saveGroupDictService,\n   deleteGroupDictService \n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\n\nconst GroupServiceEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('groupServiceEditorWiondow')) {\n      props.setVisibleFlag('statusGroupServiceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if (props.dictService.group_title) {\n      props.createGroupDictService()\n    } else {\n      props.setVisibleFlag('inputDictServiceChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.group_title) {\n     props.saveGroupDictService()\n   } else {\n     props.setVisibleFlag('inputDictServiceChecked', false)\n   }\n }\n\n  const handleClose = () => {\n   props.setVisibleFlag('statusGroupServiceEditor', false)\n   props.resetGruopDictService()\n  }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow' id='groupServiceEditorWiondow'>\n        <div className='createNewTitle'>{props.dictService.group_edit ? props.dictService.group_title : 'Новая категория'}</div>\n\n        <div className='contentEditor'>\n          <LableInput\n            className='w250 mt15'\n            title='Наименование'\n            onChange={(event) => props.changeDictServiceForm(event.target.value, 'group_title')}\n            value={props.dictService.group_title}\n            checkedFlag='inputDictServiceChecked'\n            checked={props.inputDictServiceChecked}\n            redStar={ true }\n            disabled={props.dictService.group_deleted}\n          />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.group_edit}\n            deleted={props.dictService.group_deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ?  () => props.deleteGroupDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ?  () => props.deleteGroupDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   inputDictServiceChecked: state.view.inputDictServiceChecked,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   resetGruopDictService,\n   createGroupDictService,\n   setVisibleFlag,\n   saveGroupDictService,\n   deleteGroupDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupServiceEditor)\n","\nimport React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n   setVisibleFlag, \n   changeDictServiceForm,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n} from '../../../../Redux/actions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport WarningOrange from '../../../general/WarningOrange'\n\nconst ServiceEditor = (props) => {\n\n   const handleClose = () => {\n      props.setVisibleFlag('statusServiceEditor', false)\n      props.resetService()\n     }\n   \n   const clickHandel = (event) => {\n      if (!event.path.map((el) => el.id).includes('serviceEditorWiondow')) {\n         handleClose()\n      }\n   }\n\n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n         window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   useEffect(() => {\n      if (!props.edit) {props.changeDictServiceForm(props.dictService.seted_categiry, 'category_id')}\n   }, [])\n\n  const handleCreate = () => {\n    if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.createDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n  }\n\n  const handleSave = () => {\n   if (props.dictService.title && props.dictService.category_id && props.dictService.price) {\n      props.saveDictService()\n    } else {\n      if (!props.dictService.title) props.setVisibleFlag('inputServiceTitleChecked', false)\n      if (!props.dictService.category_id) props.setVisibleFlag('inputServiceCategoryIdChacked', false)\n      if (!props.dictService.price) props.setVisibleFlag('inputServicePriceChacked', false)\n    }\n }\n\n  return (\n    <div className='rightBlock'>\n      <div className='rightBlockWindow mwp' id='serviceEditorWiondow'>\n         <div className='createNewTitle'>{props.dictService.edit ? props.dictService.title : 'Новая услуга'}</div>\n\n         <div className='contentEditor'>\n            <LableInput\n               className='w250 mt15'\n               title='Наименование'\n               onChange={(event) => props.changeDictServiceForm(event.target.value, 'title')}\n               value={props.dictService.title}\n               checkedFlag='inputServiceTitleChecked'\n               checked={props.view.inputServiceTitleChecked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <ChooseOfList\n               id={23}\n               title='Категория'\n               className='mt15'\n               list={props.group_dict_service}\n               field='category_id'\n               setElement={props.changeDictServiceForm}\n               current_id={props.dictService.category_id}\n               width={'250px'}\n               checkedFlag='inputServiceCategoryIdChacked'\n               checked={props.view.inputServiceCategoryIdChacked}\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Цена'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'price')}\n               value={props.dictService.price}\n               unit='руб.'\n               checkedFlag='inputServicePriceChacked'\n               checked={props.view.inputServicePriceChacked}\n               redStar={ true }\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Себестоимость'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'cost')}\n               value={props.dictService.cost}\n               unit='руб.'\n               disabled={props.dictService.deleted}\n            />\n            <div className='row al-itm-fe'>\n               <LableInput\n                  className='w70 mt15'\n                  title='Гарантия'\n                  onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9]/g, '') * props.dictService.warranty_value, 'warranty')}\n                  value={parseInt(props.dictService.warranty / props.dictService.warranty_value)}\n                  unit=' '\n                  disabled={props.dictService.deleted}\n               />\n               <ChooseBotton\n                  className='ml30'\n                  name={['Дни', 'Мес']}\n                  func1 = {() => props.changeDictServiceForm(1*24*60*60, 'warranty_value')}\n                  func2 = {() => props.changeDictServiceForm(30*24*60*60, 'warranty_value')}\n                  disabled={props.dictService.deleted}\n               />\n            </div>\n            <LableInput\n               className='w250 mt15'\n               title='Штрихкод'\n               onChange={event => props.changeDictServiceForm(event.target.value, 'code')}\n               value={props.dictService.code}\n               disabled={props.dictService.deleted}\n            />\n            <h3>Вознаграждение исполнителю</h3>\n            <WarningOrange\n               text='Заполните эти поля, если хотите, чтобы за эту услугу исполнитель получал нестандартное вознаграждение. В противном случае оставьте эти поля пустыми, и при расчете ЗП будут учитываться общие правила расчета вознаграждения, заданные в карточке исполнителя'\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Процент'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_percent')}\n               value={props.dictService.earnings_percent}\n               unit='%'\n               disabled={props.dictService.deleted}\n            />\n            <LableInput\n               className='w70 mt15'\n               title='Сумма'\n               onChange={event => props.changeDictServiceForm(event.target.value.replace(/[^0-9.]/g, ''), 'earnings_summ')}\n               value={props.dictService.earnings_summ}\n               unit='руб'\n               disabled={props.dictService.deleted}\n            />\n\n         </div>\n        \n\n         <BottomButtons\n            edit={props.dictService.edit}\n            deleted={props.dictService.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_delete_service') ? () => props.deleteDictService(true) : null}\n            recover={props.permissions.includes('setting_recover_service') ? () => props.deleteDictService(false) : null}\n            close={handleClose}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n   dictService: state.dictService,\n   view: state.view,\n   group_dict_service: state.data.group_dict_service,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   changeDictServiceForm,\n   setVisibleFlag,\n   resetService,\n   createDictService,\n   saveDictService,\n   deleteDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ServiceEditor)\n","\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { createSaveServicePrice } from '../../../../Redux/actions'\n\nconst ServicePrice = (props) => {\n\n   const price = props.service_prices.find(price => price.discount_margin_id === props.margin_id && price.service_id === props.service_id)\n\n   const [flag, setFlag] = useState(false)\n   const [cost, setCost] = useState(price ? price.cost : 0)\n\n   const handelChange = () => {\n      setFlag(false)\n      props.createSaveServicePrice(price ? price.id : null, parseFloat(cost), props.margin_id, props.service_id)\n   }\n\n   return (\n      <td\n         onDoubleClick={props.disabled ? null : () => setFlag(true)}\n      >\n         {flag ?  \n         <input\n            className='inputCell'\n            onChange={event => setCost( event.target.value.replace(/[^0-9.]/g, '') )}\n            value={cost}\n            autoFocus={ true }\n            onBlur={ handelChange }\n            onKeyPress={event => {if (event.key === 'Enter') { handelChange() }}}\n         /> :\n         <div>{price ? price.cost : 0}</div>}\n      </td>\n   )\n}\n\nconst mapStateToProps = state => ({\n   service_prices: state.data.service_prices\n   })\n\nconst mapDispatchToProps = {\n   createSaveServicePrice\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ServicePrice)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { \n  addGroupeService, \n  setVisibleFlag, \n  editGroupDictService, \n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n} from '../../../../Redux/actions'\nimport Button from '../../../general/Button'\n\nimport Checkbox from '../../../general/Checkbox'\nimport TableFields from '../../../general/TableFields'\nimport GroupServiceEditor from './GroupServiceEditor'\nimport ServiceEditor from './ServiceEditor'\nimport ServicePrice from './ServicePrice'\n\nconst SettingServicePrices = (props) => {\n\n  useEffect(() => {\n    props.addGroupeService()\n    props.addDiscountMargin()\n    props.addServicePrices()\n    return () => {\n      props.changeDictServiceForm(null, 'seted_categiry')\n    }\n  }, [])\n\n  useEffect(() => {\n    props.addDictService()\n  }, [props.dictService.seted_categiry])\n\n  const [showDeleted, setShowDeleted] = useState(false)\n\n  const group = props.group_dict_service.filter(group => showDeleted | !group.deleted)\n  const count_group = group.length\n  const services = props.dict_service.filter(service => showDeleted | !service.deleted)\n  const count_services = services.length\n  const tableFields = props.dictService.fields.filter(header => props.dictService.chosed_fields.includes(header.id))\n  const tableMarginFields = props.discount_margin.filter(margin => margin.margin_type === 1).map((margin, idx) => (\n    {\n      id: idx + 6,\n      margin_id: margin.id,\n      title: margin.title\n    }\n  ))\n  const tableMarginFieldsFiltered = tableMarginFields.filter(header => props.dictService.chosed_fields.includes(header.id))\n\n  const editGroup = (group) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editGroupDictService(group)\n      props.setVisibleFlag('statusGroupServiceEditor', true)\n    }\n  }\n\n  const editService = (service) => {\n    if (props.permissions.includes('setting_edit_service')) {\n      props.editDictService(service)\n      props.setVisibleFlag('statusServiceEditor', true)\n    }\n  }\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Перечень работ и услуг</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n        <p>Прейскурант работ и услуг выполняющихся в вашей компании с указанием цены за работу/услугу</p>\n        <Checkbox\n          label='Показать удаленые'\n          onChange={event => setShowDeleted(event.target.checked)}\n          value={showDeleted}\n          unvisible={!props.permissions.includes('setting_see_deleted_service')}\n        />\n\n        <div className='row al-itm-bl'>\n\n          <div className='w250'>\n              <Button\n                title='+ Категория'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusGroupServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n              <table>\n                <thead>\n                  <tr>\n                    <th>Категория</th>\n                    <th>Кол-во</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {group.map(group => (\n                    <tr \n                      key={group.id}\n                      className={group.deleted ? 'rowDeleted' : null}\n                      onClick={() => props.changeDictServiceForm(group.id, 'seted_categiry')}\n                      onDoubleClick={() => editGroup(group)}\n                      style={group.id === props.dictService.seted_categiry ? { backgroundColor: '#cae1f5'} : null}\n                    >\n                      <td>{group.title}</td>\n                      <td>{group.count}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div>Всего - {count_group}</div>\n              {props.statusGroupServiceEditor ? <GroupServiceEditor/> : null}\n          </div>\n\n          <div className='ml10 w100'>\n            <div className='row jc-sb'>\n              <Button\n                title='+ Услуга'\n                className='greenButton'\n                onClick={() => props.setVisibleFlag('statusServiceEditor', true)}\n                unvisible={!props.permissions.includes('setting_create_service')}\n              /> \n                <TableFields\n                  id='service'\n                  height='185px'\n                  list={props.dictService.fields.concat(tableMarginFields)}\n                  checked_list={props.dictService.chosed_fields}\n                  func={props.selectedService}\n                  field='chosed_fields'\n                />\n              </div>\n              <table>\n                <thead>\n                  <tr>\n                    {tableFields.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                    {tableMarginFieldsFiltered.map(header => (\n                      <th key={header.id}>{header.title}</th>\n                    ))}\n                  </tr>\n                </thead>\n                <tbody>\n                  {services.map(service => (\n                    <tr \n                      key={service.id}\n                      className={service.deleted ? 'rowDeleted' : null}\n                    >\n                      {tableFields.map(header => (\n                        <td key={header.id} onDoubleClick={() => editService(service)}>{service[header.field]}</td>\n                      ))}\n                      {tableMarginFieldsFiltered.map(header => (\n                          <ServicePrice\n                            key={header.id}\n                            margin_id={header.margin_id}\n                            service_id={service.id}\n                            disabled={!props.permissions.includes('setting_edit_service')}\n                          />\n                      ))}\n                    </tr>\n                  ))}\n                  \n                </tbody>\n              </table>\n              <div>Всего - {count_services}</div>\n              {props.statusServiceEditor ? <ServiceEditor/> : null}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  group_dict_service: state.data.group_dict_service,\n  dict_service: state.data.dict_service,\n  statusGroupServiceEditor: state.view.statusGroupServiceEditor,\n  statusServiceEditor: state.view.statusServiceEditor,\n  dictService: state.dictService,\n  discount_margin: state.data.discount_margin,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addGroupeService,\n  setVisibleFlag,\n  editGroupDictService,\n  addDictService,\n  changeDictServiceForm,\n  selectedService,\n  addDiscountMargin,\n  addServicePrices,\n  editDictService\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingServicePrices)","import React, { useEffect, useState, useRef } from 'react'\n\nimport Checkbox from './Checkbox'\n\nconst ChooseOfListMany = (props) => {\n\n   const [listVisible, setListVisible] = useState(true)\n\n   const clickHandel = (event) => {\n      if (!event.path.map(el => el.id).includes(`chooseOfList${props.id}`) ) {\n         if (listVisible) {\n            setListVisible(false)\n      }}\n   }\n   \n   useEffect(() => {\n      window.addEventListener('click', clickHandel)\n      return () => {\n        window.removeEventListener('click', clickHandel)\n      }\n   })\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.checked_list.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.checked_list])\n\n\n   const showWord = (len) => {\n      switch (len){\n\n         case 0: {\n            return 'Ничего не выбрано'\n         }\n\n         case props.list.length: {\n            return 'Все'\n         }\n\n         default:\n            return `Выбрано ${len}`\n      }\n   }\n \n\n   return (\n      <div \n         style={{width: props.width ? props.width : '250px'}} \n         id={`chooseOfList${props.id}`}\n         className={props.className}\n      >\n         <div className='lableImput'>{props.title}</div>\n         <div \n            className='optionsButton' \n            onClick={() => setListVisible(!listVisible)}\n         >\n            <span>\n               {showWord(props.checked_list.length)}\n            </span>\n            <span>&#6662;</span>\n         </div>\n         {listVisible ?\n            <div \n               className='listOptionsChoose'\n               style={{width: props.width ? props.width : '250px'}} \n            >\n               \n                  <div className='checkbox'>\n                     <input \n                        ref={ mainCheckbox }\n                        type='checkbox' \n                        onChange={() => props.func(props.list.map(el => el.id))}\n                        disabled={props.disabled}\n                     />\n                     <label>{props.mainLable}</label>\n                  </div>\n                  \n            {props.list.map(element => {\n               return(\n               <div\n                  key={element.id}\n                  className='options'\n               >\n                  <Checkbox\n                     className='ml10'\n                     label={props.employee ? `${element.last_name} ${element.first_name}` : (element.title ? element.title : element.name)}\n                     onChange={() => props.func([element.id])}\n                     checked={props.checked_list.includes(element.id)}\n                     disabled={props.disabled}\n                  />\n                  \n               </div>\n            )})}\n         </div> : null}\n      </div> \n   )\n}\n\n  \n export default ChooseOfListMany\n\n// id='id'\n// className='className'\n// width='250px'\n// title='title'\n// mainLable='mainLable'\n// list={props.list}\n// checked_list={props.checked_list}\n// func={() => console.log('choose element')}\n// employee={false}\n// disabled={props.disabled}","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nconst ChooseIcon = (props) => {\n  \n  const [icons, setIcons] = useState(false)\n\n  const list_icons = [\n    'nothing.svg',\n    'airconditioner.svg',\n    'chip1.svg',\n    'chip2.svg',\n    'cleaner.svg',\n    'cleaner2.svg',\n    'coffee-machine.svg',\n    'coffee-maker.svg',\n    'computer_chip.svg',\n    'cooler.svg',\n    'desktop.svg',\n    'dish-dishwash.svg',\n    'fan.svg',\n    'fridge.svg',\n    'fridge2.svg',\n    'graphic_card2.svg',\n    'hairdrier.svg',\n    'jar.svg',\n    'laundry_press.svg',\n    'microwave.svg',\n    'mixer.svg',\n    'refrigerator.svg',\n    'stove.svg',\n    'toaster.svg',\n    'washer-washing.svg',\n    'washing_machine1.svg',\n    'washing_machine.svg',\n  ]\n\n  return (\n    <div className=\"mt15\">\n      <div className=\"lableImput\">Выберете иконку</div>\n      {icons ? (\n        <div className=\"w250\">\n          {list_icons.map((icon, idx) => (\n            <img\n              key={idx}\n              className=\"icon_equipment\"\n              src={`${process.env.PUBLIC_URL}/data/icon_equipments/${icon}`}\n              alt='icon equipment'\n              onClick={() => {\n                props.changeBookForm(icon === 'nothing.svg' ? null : `data/icon_equipments/${icon}`, 'icon')\n                setIcons(false)\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <img\n          className=\"icon_equipment\"\n          src={props.icon ? `${process.env.PUBLIC_URL}/${props.icon}` : `${process.env.PUBLIC_URL}/data/icon_equipments/nothing.svg`}\n          alt='icon equipment'\n          onClick={props.disabled ? null : () => setIcons(true)}\n        />\n      )}\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  icon: state.book.icon,\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseIcon)\n","import React, {useState, useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {icon_trush} from '../../../../data/icons'\n\nimport {changeBookForm, chooseBookSelected} from '../../../../Redux/actions/bookActions'\nimport Icon from '../../../general/Icon'\n\nconst JoinEquipmets = props => {\n    const [listVisible, setlistVisible] = useState(false)\n\n    const clickHandel = event => {\n        if (\n            !event.path.map((el) => el.id).includes('setEquipment') &&\n            !event.path.map((el) => el.id).includes('listSetEquipments')\n        ) {\n            if (listVisible) {\n                setlistVisible(false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', clickHandel)\n        return () => {\n            window.removeEventListener('click', clickHandel)\n        }\n    })\n\n    const listFilter = ['filter_type', 'filter_brand', 'filter_subtype', 'filter_model']\n    const listData = ['equipment_types', 'equipment_brands', 'equipment_subtypes', 'equipment_models']\n    const listPage = ['page_type', 'page_brand', 'page_subtype', 'page_model']\n\n    const listEquipment = props.book[listData[props.book.type]]\n        .filter(equipment => !equipment.deleted)\n        .filter(equipment => equipment.id !== props.book.edit)\n        .filter(equipment => !props.book.list_for_join.some((eq) => eq.id === equipment.id))\n\n    return props.unvisible ? <div/> :\n        <div className=\"mt15 w250\">\n            <div className=\"lableImput\">Объединить с:</div>\n            <div className=\"blockImput\">\n                <div\n                    id=\"setEquipment\"\n                    className=\"orderInputBox\"\n                    onClick={() => setlistVisible(true)}\n                >\n                    <input\n                        className=\"optionFilterInput\"\n                        onChange={event => {\n                            props.changeBookForm(event.target.value, listFilter[props.book.type])\n                            props.changeBookForm(1, listPage[props.book.type])\n                        }}\n                        velue={props.book[listFilter[props.book.type]]}\n                        disabled={false}\n                    />\n                </div>\n            </div>\n            {listVisible ? (\n                <div className=\"listFilter\" id=\"listSetEquipments\">\n                    {listEquipment.map(equipment => (\n                        <div\n                            key={equipment.id}\n                            className=\"rowGropList\"\n                            onClick={() => {\n                                props.chooseBookSelected([equipment], 'list_for_join')\n                                setlistVisible(false)\n                            }}\n                        >\n                            {equipment.title}\n                        </div>\n                    ))}\n                </div>\n            ) : null}\n            <table className=\"w250\">\n                <tbody>\n                {props.book.list_for_join.map((equipment, idx) => (\n                    <tr key={equipment.id}>\n                        <td className=\"w10\">{idx + 1}</td>\n                        <td className=\"noWr\">{equipment.title}</td>\n                        <td onClick={() => props.chooseBookSelected([equipment], 'list_for_join')}>\n                            <Icon className=\"icon-s1\" icon={icon_trush} color=\"red\"/>\n                        </td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n        </div>\n\n}\n\nconst mapStateToProps = state => ({\n    book: state.book\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    chooseBookSelected,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JoinEquipmets)\n","import React, { useEffect, useState, useRef } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, chooseEquipmentBranches } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment, seveEquipmentModel } from '../../../../Redux/actions/bookActions'\nimport { createEModel, createESubtype, createEbrand, createEType } from '../../../../Redux/actions/bookActions'\nimport { seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype  } from '../../../../Redux/actions/bookActions'\nimport { deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport AddPicture from '../../../general/AddPicture'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport ChooseBotton from '../../../general/ChooseBotton'\nimport ChooseOfListMany from '../../../general/ChooseOfListMany'\nimport ChooseIcon from './CooseIcon'\nimport JoinEquipmets from './JoinEquipmets'\n\nconst EquipmentEditor = (props) => {\n\n  const handleClose = () => {\n    props.setVisibleFlag('statusEquipmentEditor', false)\n    props.resetBookEquipment()\n    props.setVisibleFlag('inputBookTitleChecked', true)\n  }\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('equipmentEditorWiondow')) {\n      handleClose()\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const [all, setAll] = useState(props.branches\n      .filter((branch) => !branch.deleted)\n      .every((branch) => props.book.branches.includes(branch.id))\n  )\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.createEType()\n      if (props.book.type === 1) props.createEbrand()\n      if (props.book.type === 2) props.createESubtype()\n      if (props.book.type === 3) props.createEModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleSaveEquipment = () => {\n    if (props.book.title) {\n\n      if (props.book.type === 0) props.seveEquipmentType()\n      if (props.book.type === 1) props.seveEquipmentBrand()\n      if (props.book.type === 2) props.seveEquipmentSubtype()\n      if (props.book.type === 3) props.seveEquipmentModel()\n\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  const handleDelete = () => {\n    if (props.book.type === 0) props.deleteEquipmentType(true)\n    if (props.book.type === 1) props.deleteEquipmentBrand(true)\n    if (props.book.type === 2) props.deleteEquipmentSubtype(true)\n    if (props.book.type === 3) props.deleteEquipmentModel(true)\n  }\n\n  const handleRecover = () => {\n    if (props.permissions.includes('setting_recover_equipment')) {\n      if (props.book.type === 0) props.deleteEquipmentType(false)\n      if (props.book.type === 1) props.deleteEquipmentBrand(false)\n      if (props.book.type === 2) props.deleteEquipmentSubtype(false)\n      if (props.book.type === 3) props.deleteEquipmentModel(false)\n    }\n  }\n\n\n  const tilte_list = [\n    'Новая группа',\n    'Новый бренд',\n    'Новый модуль / серия',\n    'Новая модель',\n  ]\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"equipmentEditorWiondow\">\n\n        <div className=\"createNewTitle\">\n          {props.book.edit ? props.book.title : tilte_list[props.book.type]}\n        </div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n          {props.book.type === 2 ? (\n            <AddPicture\n              className=\"mt15\"\n              title=\"Добавить изображение\"\n              url={props.book.url}\n              onChange={file => props.changeBookForm(file, 'img')}\n              value={props.book.img}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n          {props.book.type ? (\n            <ChooseOfList\n              id={20}\n              className=\"mt15\"\n              title=\"Родительский элемент\"\n              list={props.book.choose_list}\n              setElement={props.changeBookForm}\n              field=\"parent_id\"\n              current_id={props.book.parent_id}\n              width={'200px'}\n              disabled={props.book.deleted}\n            />\n          ) : null}\n\n          {props.book.type === 0 ? (\n            <ChooseIcon disabled={props.book.deleted} />\n          ) : null}\n\n          <ChooseBotton\n            className=\"mt15\"\n            title=\"Локация\"\n            name={['Все', 'Отдельные']}\n            func1={() => setAll(true)}\n            func2={() => setAll(false)}\n            checked={props.branches\n              .filter((branch) => !branch.deleted)\n              .every((branch) => props.book.branches.includes(branch.id))}\n            disabled={props.book.deleted}\n          />\n\n          {all ? null : (\n            <ChooseOfListMany\n              className=\"mt15\"\n              mainLable=\"Локации\"\n              list={props.branches.filter((branch) => !branch.deleted)}\n              checked_list={props.book.branches}\n              func={props.chooseEquipmentBranches}\n              disabled={props.book.deleted}\n            />\n          )}\n          <JoinEquipmets \n            unvisible={!props.book.edit || props.book.type === 3 || !props.permissions.includes('setting_join_equipment')}\n          />\n        </div>\n\n        <BottomButtons\n          edit={props.book.edit}\n          create={ handleCreateEquipment }\n          save={ handleSaveEquipment }\n          delete={ handleDelete }\n          recover={ handleRecover }\n          close={ handleClose }\n          deleted={ props.book.deleted }\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n  branches: state.data.branches,\n  permissions: state.data.user.role.permissions,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  chooseEquipmentBranches,\n  seveEquipmentType, seveEquipmentBrand, seveEquipmentSubtype, seveEquipmentModel,\n  deleteEquipmentType, deleteEquipmentBrand, deleteEquipmentSubtype, deleteEquipmentModel,\n  createEType, createEbrand, createESubtype, createEModel,\n  resetBookEquipment\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentEditor)\n","import { isNull } from 'lodash'\nimport React, { useState } from 'react'\n\n\n\nconst Paginate = (props) => {\n\n   // Состояния для актвной странцы\n   const [active, setActive] = useState(1)\n\n   // посчитаем количество страниц\n   const pages = (props.allItems % props.onPage) > 0 ? \n   (props.allItems - props.allItems % props.onPage)/props.onPage + 1 :\n   (props.allItems - props.allItems % props.onPage)/props.onPage \n\n   // создадим список для станиц\n   let list_pages = []\n\n   // заполним список номерами начиная с 1\n   for (let i = 0; i < pages; i++) {\n      list_pages[i] = i + 1;\n   }\n\n   // Функция для выбора отображения номеров страниц\n   const choosePage = (page) => {\n      // если номер совпадаетс с активным отображаем\n      if (page == active) return page\n      // если номер боьше или меньнше на count отображаем\n      if (Math.abs(active - page) < props.count) return page\n      // если разница между активными равна count отображаем троеточие\n      if (Math.abs(active - page) == props.count) return '...'\n      \n      // отображаем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n   }\n\n   // функция выбора показывать номер сраници или нет \n   const isShow = (page) => {\n      // если попадает в диапазон count показываем\n      if ((Math.abs(active - page) <= props.count)) return true\n      \n      // показываем count_start_end страниц в начале и конце списка\n      for (let i=0; i < props.count_start_end; i++) {\n         if (page == list_pages[i]) return page\n         if (page == list_pages[list_pages.length-1-i]) return page\n      }\n      return false\n   }\n\n   // функция делает страницу активной и отдает значение внешней функции\n   const handleClick = (page) => {\n      setActive(page)\n      props.func(page)\n   }\n\n   return (\n      <div className = 'row'>\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div \n            className='pages-pagination' \n            onClick={() => handleClick(active-1 < 1 ? active : active - 1)}\n         >\n            {'<'}\n         </div> : null}\n         {/* Отрисовываем елементы списка страниц  */}\n         {list_pages.map(page => {\n            return isShow(page) ? (    // проверяем условие для показа\n            <div\n               key={page}\n               className={active == page ? 'active' :'pages-pagination'} // если страница активна меняем стиль отображения\n               onClick={() => handleClick(page)}\n            >\n               {choosePage(page)} {/* Вычисляме значения для отрисовки */}\n            </div>\n         ) : null\n         })}\n         {/* Если флаг навигации ессть отображаем кнопки навигации */}\n         {props.navigation ? \n         <div className='pages-pagination' onClick={() => handleClick(active+1 > list_pages.length ? active : active+1)}>\n            {'>'}\n         </div> : null}\n      </div>\n   )\n}\n\n export default Paginate\n\n // allItems={100}      // всего элементов\n // onPage={20}         // елеменов на странице\n // count={3}           // количество страниц отображаемое рядом с октивной станицей\n // count_start_end={2} // количество страници отображемое в начале и конце списка\n // navigation={true}   // отображать кнопки навигации","\n\nimport React from 'react'\n\nimport { icon_search } from '../../data/icons'\n\nimport Icon from './Icon'\n\nconst SearchInput = (props) => {\n\n   return (\n     \n      <div className={`searchBox ${props.className}`}>\n         <input \n            className={`searchInput ${props.disabled ? 'ds' : null}`}\n            style={{\n               width: props.width ? props.width : '100%'\n            }}\n            name={props.name}\n            onChange={props.onChange}\n            value={props.value}\n            disabled={props.disabled}\n         />\n         <Icon \n            className='icon-s4'\n            icon={icon_search} \n            color='grey'\n         />\n      </div>\n   )\n}\n\n\n  \n export default SearchInput\n\n\n//  className=''\n//  width=''\n//  name=''\n//  onChange={}\n//  value={}\n//  disabled={}\n","import React, {useEffect} from 'react'\nimport {connect} from 'react-redux'\n\nimport {setVisibleFlag, editEquipment} from '../../../../Redux/actions'\nimport {changeBookForm, addEquipmentType, addEquipmentBrand} from '../../../../Redux/actions/bookActions'\nimport {addEquipmentSubtype, addEquipmentModel, resetBookEquipment} from '../../../../Redux/actions/bookActions'\nimport EquipmentEditor from './EquipmentEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\nimport Paginate from '../../../general/Paginate'\nimport SearchInput from '../../../general/SearchInput'\n\nconst BookEquipment = (props) => {\n\n    useEffect(() => {\n        props.changeBookForm('', 'filter_type')\n        props.changeBookForm('', 'filter_brand')\n        props.changeBookForm('', 'filter_subtype')\n        props.changeBookForm('', 'filter_model')\n    }, [])\n\n    useEffect(() => {\n        props.addEquipmentType()\n    }, [props.book.filter_type, props.book.page_type, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentBrand()\n    }, [props.book.equipment_type, props.book.filter_brand, props.book.page_brand, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentSubtype()\n    }, [props.book.equipment_brand, props.book.filter_subtype, props.book.page_subtype, props.book.showDeleted])\n\n    useEffect(() => {\n        props.addEquipmentModel()\n    }, [props.book.equipment_subtype, props.book.filter_model, props.book.page_model, props.book.showDeleted])\n\n    const addType = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n    }\n\n    const addBrand = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(1, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const addSubtype = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(2, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const addModel = () => {\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(3, 'type')\n        props.resetBookEquipment()\n        props.changeBookForm(props.branches.filter(branch => !branch.deleted).map(branch => branch.id), 'branches')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const chooseType = (equipment) => {\n        props.changeBookForm(equipment, 'equipment_type')\n        props.changeBookForm({}, 'equipment_brand')\n        props.changeBookForm({}, 'equipment_subtype')\n        props.changeBookForm({}, 'equipment_model')\n    }\n\n    const chooseBrand = (brand) => {\n        props.changeBookForm(brand, 'equipment_brand')\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseSubtype = (subtype) => {\n        props.changeBookForm(subtype, 'equipment_subtype')\n        props.changeBookForm(0, 'equipment_model')\n    }\n\n    const chooseModel = (model) => {\n        props.changeBookForm(model, 'equipment_model')\n    }\n\n    const editType = (equipment) => {\n        props.editEquipment(equipment)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'type')\n    }\n\n    const editBrand = (brand) => {\n        props.editEquipment(brand)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_brand')\n        props.changeBookForm(1, 'type')\n        props.changeBookForm(props.book.equipment_types, 'choose_list')\n        props.changeBookForm(props.book.equipment_type.id, 'parent_id')\n    }\n\n    const editSubtype = (subtype) => {\n        props.editEquipment(subtype)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_subtype')\n        props.changeBookForm(2, 'type')\n        props.changeBookForm(props.book.equipment_brands, 'choose_list')\n        props.changeBookForm(props.book.equipment_brand.id, 'parent_id')\n    }\n\n    const editModel = (model) => {\n        props.editEquipment(model)\n        props.setVisibleFlag('statusEquipmentEditor', true)\n        props.changeBookForm(0, 'equipment_model')\n        props.changeBookForm(3, 'type')\n        props.changeBookForm(props.book.equipment_subtypes, 'choose_list')\n        props.changeBookForm(props.book.equipment_subtype.id, 'parent_id')\n    }\n\n    const searchType = (value) => {\n        props.changeBookForm(1, 'page_type')\n        props.changeBookForm(value, 'filter_type')\n    }\n\n    const searchBrand = (value) => {\n        props.changeBookForm(1, 'page_brand')\n        props.changeBookForm(value, 'filter_brand')\n    }\n\n    const searchSubtype = (value) => {\n        props.changeBookForm(1, 'page_subtype')\n        props.changeBookForm(value, 'filter_subtype')\n    }\n\n    const searchModel = (value) => {\n        props.changeBookForm(1, 'page_model')\n        props.changeBookForm(value, 'filter_model')\n    }\n\n    const isTypeChoosed = !!Object.values(props.book.equipment_type).length\n    const isBrandChoosed = !!Object.values(props.book.equipment_brand).length\n    const isSubtypeChoosed = !!Object.values(props.book.equipment_subtype).length\n\n    return (\n        <div className=\"contentTab\">\n            <h4 className=\"mt15\">Изделия</h4>\n            <p>Многоуровневый справочник изделий, которые компания принимает на обслуживание</p>\n            <Checkbox\n                className=\"mt15\"\n                label=\"Показать удаленные\"\n                onChange={event => props.changeBookForm(event.target.checked, 'showDeleted')}\n                checked={props.book.showDeleted}\n                unvisible={!props.permissions.includes('setting_see_equipment')}\n            />\n            <div className=\"bookEquipment mt15\">\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Группа'\n                        onClick={addType}\n                    />\n                    <div className=\"thead\">Группа</div>\n                    <SearchInput\n                        onChange={event => searchType(event.target.value)}\n                        value={props.book.filter_type}\n                    />\n                    <div className=\"tbody\">\n                        {props.book.equipment_types.map(equipment => (\n                            <div\n                                key={equipment.id}\n                                className={`row tr \n                                    ${props.book.equipment_type.id === equipment.id ? 'rowChoosed' : null} \n                                    ${equipment.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseType(equipment)}\n                                onDoubleClick={() => editType(equipment)}\n                            >\n                                <img\n                                    className=\"icon_equipment\"\n                                    style={{display: equipment.icon ? null : 'none'}}\n                                    src={equipment.icon ? `${process.env.PUBLIC_URL}/${equipment.icon}` : null}\n                                    alt='icon equipment'\n                                />\n                                <div className=\"td\">{equipment.title}</div>\n                            </div>\n                        ))}\n                    </div>\n                    <Paginate\n                        allItems={props.book.equipment_type_count}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_type')}\n                    />\n                    <div className=\"tr\">Всего - {props.book.equipment_type_count}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Бренд'\n                        onClick={isTypeChoosed ? addBrand : null}\n                    />\n                    <div className=\"thead\">Бренд</div>\n                    <SearchInput\n                        onChange={event => searchBrand(event.target.value)}\n                        value={props.book.filter_brand}\n                    />\n                    <div className=\"tbody\">\n                        {isTypeChoosed ? props.book.equipment_brands.map(brand => (\n                                <div\n                                    key={brand.id}\n                                    className={`row tr \n                                        ${props.book.equipment_brand.id === brand.id ? 'rowChoosed' : null}\n                                        ${brand.deleted ? 'rowDeleted' : null}\n                                    `}\n                                    onClick={() => chooseBrand(brand)}\n                                    onDoubleClick={() => editBrand(brand)}\n                                >\n                                    <div className=\"td\">{brand.title}</div>\n                                </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете группу</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isTypeChoosed ? props.book.equipment_brand_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_brand')}\n                    />\n                    <div className=\"tr\">Всего - {isTypeChoosed ? props.book.equipment_brand_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модуль / Серия'\n                        onClick={isBrandChoosed ? addSubtype : null}\n                    />\n                    <div className=\"thead\">Модуль / Серия</div>\n                    <SearchInput\n                        onChange={event => searchSubtype(event.target.value)}\n                        value={props.book.filter_subtype}\n                    />\n                    <div className=\"tbody\">\n                        {isBrandChoosed ? props.book.equipment_subtypes.map(subtype => (\n                            <div\n                                key={subtype.id}\n                                className={`row tr \n                                    ${props.book.equipment_subtype.id === subtype.id ? 'rowChoosed' : null}\n                                    ${subtype.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseSubtype(subtype)}\n                                onDoubleClick={() => editSubtype(subtype)}\n                            >\n                                <img\n                                    style={{display: subtype.url ? null : 'none'}}\n                                    src={`${process.env.PUBLIC_URL}/${subtype.url}`}\n                                    className='miniImg'\n                                    alt='subtype phote'\n                                />\n                                <div className=\"td\">{subtype.title}</div>\n                                {/* <span>></span> */}\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете бренд</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isBrandChoosed ? props.book.equipment_subtype_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_subtype')}\n                    />\n                    <div className=\"tr\">Всего - {isBrandChoosed ? props.book.equipment_subtype_count : 0}</div>\n                </div>\n\n                <div className=\"columnEquipment\">\n                    <Button\n                        className='whiteButton mwmc'\n                        title='+ Модель'\n                        onClick={isSubtypeChoosed ? addModel : null}\n                    />\n                    <div className=\"thead\">Модель</div>\n                    <SearchInput\n                        onChange={event => searchModel(event.target.value)}\n                        value={props.book.filter_model}\n                    />\n                    <div className=\"tbody\">\n                        {isSubtypeChoosed ? props.book.equipment_models.map((model) => (\n                            <div\n                                key={model.id}\n                                className={`row tr \n                                    ${props.book.equipment_model.id === model.id ? 'rowChoosed' : null}\n                                    ${model.deleted ? 'rowDeleted' : null}\n                                `}\n                                onClick={() => chooseModel(model)}\n                                onDoubleClick={() => editModel(model)}\n                            >\n                                <div className=\"td\">{model.title}</div>\n                            </div>\n                            ))\n                            :\n                            <div className=\"clPage\">\n                                <div className=\"tempContainer\">Выберете модуль / серию</div>\n                            </div>\n                        }\n                    </div>\n                    <Paginate\n                        allItems={isSubtypeChoosed ? props.book.equipment_models_count : 0}\n                        onPage={50}\n                        count={2}\n                        count_start_end={0}\n                        navigation={true}\n                        func={page => props.changeBookForm(page, 'page_model')}\n                    />\n                    <div className=\"tr\">Всего - {isSubtypeChoosed ? props.book.equipment_models_count : 0}</div>\n                </div>\n            </div>\n\n            {props.statusEquipmentEditor ? <EquipmentEditor/> : null}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    book: state.book,\n    statusEquipmentEditor: state.view.statusEquipmentEditor,\n    branches: state.data.branches,\n    permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n    changeBookForm,\n    setVisibleFlag,\n    editEquipment,\n    resetBookEquipment,\n    addEquipmentType,\n    addEquipmentBrand,\n    addEquipmentSubtype,\n    addEquipmentModel\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookEquipment)\n","\nimport React, { useEffect, useRef} from 'react'\nimport ReactPaginate from 'react-paginate'\nimport { connect } from 'react-redux'\n\nimport { chooseBookSelected } from '../../../../Redux/actions/bookActions'\nimport Checkbox from '../../../general/Checkbox'\nimport { icon_trush } from '../../../../data/icons'\n\nconst DictTable = (props) => {\n\n   const mainCheckbox = useRef()\n  \n   useEffect(() => {\n      const values = props.list.filter(el => props.selected.includes(el.id))\n      if (values.length === props.list.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = true\n      } else if (!values.length) {\n         mainCheckbox.current.indeterminate = false\n         mainCheckbox.current.checked = false\n      } else {\n         mainCheckbox.current.indeterminate = true\n      }\n   }, [props.selected])\n\n   return (\n      <div>\n         <h4 className=\"mt15\">{props.title}</h4>\n         <p>{props.description}</p>\n\n         <div className='row'>\n\n            <div className='greenButton' onClick={ props.addElement }>\n               + Элемент\n            </div>\n            {props.selected.length ? \n            <div className='row'>\n               <div className=\"whiteButton simbolBotton\" onClick={props.delete}>\n                  <svg className=\"icon-table-red-basket\" viewBox=\"0 0 32 32\">\n                     <path d={icon_trush} />\n                  </svg>\n               </div>\n               <div>Выбрано - {props.selected.length}</div>\n            </div> : null }\n         </div>\n         <div className='tableElement'>\n         <table>\n               <thead>\n                  <tr>\n                     <th>\n                        <div className='checkbox'>\n                           <input \n                           ref={mainCheckbox}\n                           type='checkbox' \n                           onChange={() => props.chooseBookSelected(props.list.map(el => el.id), props.selected_field)}\n                           />\n                           <label></label>\n                        </div>\n                     </th>\n                     <th className='wm500'>{props.title}</th>\n                     <th className='wm50'>{props.title2 ? props.title2 : 'Частота'}</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {props.list.map(element => (\n                     <tr key={element.id}>\n                        <td className='w30'>\n                           <Checkbox\n                              onChange={() => props.chooseBookSelected([element.id], props.selected_field)}\n                              checked={props.selected.includes(element.id)}\n                           />\n                        </td>\n                        <td>{element.title}</td>\n                        <td>\n                           {element.count}\n                           {element.direction === 1 ? <div className='redDirection'>Расход</div> : null}\n                           {element.direction === 2 ? <div className='greenDirection'>Приход</div> : null}\n                        </td>\n                     </tr>\n                  ))}\n               </tbody>\n            </table>\n            </div>\n            <ReactPaginate\n               pageCount={ props.count % 20 > 0 ? ( props.count / 20 ) :  props.count / 20 - 1} \n               marginPagesDisplayed={2}\n               pageRangeDisplayed={5}\n               onPageChange={ props.onPageChange }\n               forcePage={ props.page }\n               previousLabel={'<'}\n               nextLabel={'>'}\n               breakLabel={'...'}\n               breakClassName={'pages-pagination'}\n               containerClassName={'pagination'}\n               pageClassName={'pages-pagination'}\n               activeClassName={'active'}\n               nextClassName={'pages-pagination'}\n               previousClassName={'pages-pagination'}\n            />\n            <div>Всего - {props.count}</div>\n          </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   \n   })\n\nconst mapDispatchToProps = {\n   chooseBookSelected\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(DictTable)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, createBookElement } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\n\nimport LableInput from '../../../general/LableInput'\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\n\nconst ElementEditor = (props) => {\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('elementEditorWiondow')) {\n      props.setVisibleFlag('statusElementEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreateEquipment = () => {\n    if (props.book.title) {\n      props.createBookElement()\n      props.setVisibleFlag('statusElementEditor', false)\n    } else {\n      props.setVisibleFlag('inputBookTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"elementEditorWiondow\">\n        <div className=\"createNewTitle\">Новый элемент</div>\n\n        <div className=\"contentEditor\">\n          <LableInput\n            className=\"w250 mt15\"\n            title=\"Наименование\"\n            onChange={(event) => props.changeBookForm(event.target.value, 'title')}\n            value={props.book.title}\n            checkedFlag=\"inputBookTitleChecked\"\n            checked={props.inputBookTitleChecked}\n            redStar={ true }\n            disabled={props.book.deleted}\n          />\n\n        {props.book.type === 2 ?\n          <ChooseOfList\n            id='21'\n            className='mt15'\n            width='250px'\n            title='Направление'\n            list={[{id:1, title: 'Расход'}, {id:2, title: 'Приход'}]}\n            current_id={props.book.direction}\n            setElement={props.changeBookForm}\n            field='direction'\n            // disabled={}\n          /> : null}\n        </div>\n        \n\n        <BottomButtons\n          create={handleCreateEquipment}\n          close={() => props.setVisibleFlag('statusElementEditor', false)}\n        />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  book: state.book,\n  inputBookTitleChecked: state.view.inputBookTitleChecked,\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changeBookForm,\n  createBookElement,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ElementEditor)\n","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { addDictMalfunction, setVisibleFlag, deleteBookElements } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst MalfunctionBooks = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Неисправности'\n            description='Справочник типовых неисправностей'\n            list={ props.dictMalfunction }\n            count={ props.count_malfunction }\n            page={ props.book.page_malfunction }\n            selected={props.book.selected_malfunction}\n            selected_field='selected_malfunction'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_malfunction')\n               props.addDictMalfunction()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(0, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(0, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   addDictMalfunction,\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(MalfunctionBooks)","\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addDictPackagelist } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst PackagelistBook = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Элементы комплектации'\n            description='Справочник элементов комплектации'\n            list={ props.dictPackagelist }\n            count={ props.count_packagelist }\n            page={ props.book.page_packagelist }\n            selected={props.book.selected_packagelist}\n            selected_field='selected_packagelist'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_packagelist')\n               props.addDictPackagelist()\n            }}\n            addElement={() => {\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n               props.changeBookForm(1, 'type')\n            }}\n            delete={ () => {\n               props.changeBookForm(1, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   dictMalfunction: state.data.dictMalfunction,\n   count_malfunction: state.data.count_malfunction,\n   dictPackagelist: state.data.dictPackagelist,\n   count_packagelist: state.data.count_packagelist,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addDictPackagelist\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(PackagelistBook)","\n\n\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { setVisibleFlag, deleteBookElements, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm, resetBookEquipment } from '../../../../Redux/actions/bookActions'\n\nimport DictTable from './DictTable'\nimport ElementEditor from './ElementEditor'\n\nconst ItemPayments = (props) => {\n\n   return (\n      <div className=\"contentTab\">\n         \n         <DictTable\n            title='Статьи движение денежных средств'\n            title2='Направление'\n            description='Справочник содержит перечень статей движения денежных средств, которые предназначены для разделения доходов и расходов организации по различным направлениям'\n            list={ props.item_payments }\n            count={ props.count_item_payments }\n            page={ props.book.page_item_payments }\n            selected={props.book.selected_item_payments}\n            selected_field='selected_item_payments'\n            onPageChange={page => {\n               props.changeBookForm(page.selected, 'page_item_payments')\n               props.addItemPayments()\n            }}\n            addElement={() => {\n               props.changeBookForm(2, 'type')\n               props.resetBookEquipment()\n               props.setVisibleFlag('statusElementEditor', true)\n            }}\n            delete={ () => {\n               props.changeBookForm(2, 'type')\n               props.deleteBookElements()\n               props.resetBookEquipment()\n            }}\n         />\n\n         {props.statusElementEditor ? <ElementEditor/> : null}\n      </div>\n   )\n}\n\nconst mapStateToProps = state => ({\n   item_payments: state.data.item_payments,\n   count_item_payments: state.data.count_item_payments,\n   book: state.book,\n   statusElementEditor: state.view.statusElementEditor\n   })\n\nconst mapDispatchToProps = {\n   changeBookForm,\n   setVisibleFlag,\n   resetBookEquipment,\n   deleteBookElements,\n   addItemPayments\n}\n  \n export default connect(mapStateToProps, mapDispatchToProps)(ItemPayments)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport { addEquipment, addDictMalfunction, addDictPackagelist, addItemPayments } from '../../../../Redux/actions'\nimport { changeBookForm } from '../../../../Redux/actions/bookActions'\nimport BookEquipment from './BookEquipment'\nimport MalfunctionBooks from './MalfunctionBooks'\nimport PackagelistBook from './PackagelistBook'\nimport Tabs from '../../../general/Tabs'\nimport ItemPayments from './ItemPayments'\n\nconst SettingBooks = (props) => {\n\n  useEffect(() => {\n    props.addEquipment()\n    props.addDictMalfunction()\n    props.addDictPackagelist()\n    props.addItemPayments()\n  }, [])\n\n  const tabs_list = ['Изделия', 'Неисправности', 'Комплектация', 'Статьи ДДС']\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Справочники</span>\n      </div>\n        <div className='settingPageBody'>\n      </div>\n\n      <Tabs\n        list={ tabs_list }\n        func={props.changeBookForm}\n        tab={props.tabs}\n      />\n         {props.tabs === 0 ? <BookEquipment/> : null}\n         {props.tabs === 1 ? <MalfunctionBooks/> : null}\n         {props.tabs === 2 ? <PackagelistBook/> : null}\n         {props.tabs === 3 ? <ItemPayments/> : null}\n\n\n    </div>\n\n  )\n}\n\nconst mapStateToProps = state => ({\n  tabs: state.book.tabs\n\n})\n\nconst mapDispatchToProps = {\n  changeBookForm,\n  addEquipment,\n  addDictMalfunction,\n  addDictPackagelist,\n  addItemPayments\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingBooks)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingTemplates = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут шаблоны документов</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingTemplates)","\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nimport { editPrice, setVisibleFlag } from '../../../../Redux/actions'\n\n\nfunction TablePrice(props) {\n\n   const list_margin = props.discount_margin.filter(margin => (!margin.deleted | props.showDeleted) && margin.margin_type === props.type)\n\n   return (\n      <>\n      <table>\n         <thead>\n            <tr>\n               <th>Наименование</th>\n               <th className='w150'>Наценка/Скидка</th>\n            </tr>\n         </thead>\n         <tbody>\n            {list_margin.map(margin => {\n               return (\n               <tr \n                  key={margin.id}\n                  className={margin.deleted ? 'rowDeleted' : null}\n                  onDoubleClick={props.permissions.includes('setting_edit_price') ? () => {\n                     props.editPrice(margin)\n                     props.setVisibleFlag('statusPriceEditor', true)\n                  } : null}\n               >\n                  <td>{margin.title}</td>\n                  <td>{margin.margin}</td>\n               </tr>\n               )\n            })}\n         </tbody>\n      </table>\n      <div>Всего - {list_margin.length}</div>\n      </>\n   )}\n\nconst mapStateToProps = state => ({\n   discount_margin: state.data.discount_margin,\n   permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n   editPrice,\n   setVisibleFlag\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps) (TablePrice)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n} from '../../../../Redux/actions'\n\nimport BottomButtons from '../../../general/BottomButtons'\nimport ChooseOfList from '../../../general/ChooseOfList'\nimport LableInpute from '../../../general/LableInput'\n\nconst PriceEditor = (props) => {\n\n  const clickHandel = (event) => {\n    if (!event.path.map((el) => el.id).includes('priceEditor')) {\n      props.setVisibleFlag('statusPriceEditor', false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', clickHandel)\n    return () => {\n      window.removeEventListener('click', clickHandel)\n    }\n  })\n\n  const handleCreate = () => {\n    if(props.price.title) {\n      props.createPrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  const handleSave = () => {\n    if(props.price.title) {\n      props.savePrice()\n    } else {\n      props.setVisibleFlag('inputPriceTitleChecked', false)\n    }\n  }\n\n  return (\n    <div className=\"rightBlock\">\n      <div className=\"rightBlockWindow\" id=\"priceEditor\">\n\n        <div className=\"createNewTitle\">\n          {props.price.edit ? props.price.title : ' Новая цена'}\n        </div>\n\n        <div className=\"contentEditor\">\n           <LableInpute\n              className='mt15'\n              title='Наименование'\n              onChange={event => props.changePriceForm(event.target.value, 'title')}\n              value={props.price.title}\n              checkedFlag='inputPriceTitleChecked'\n              checked={props.inputPriceTitleChecked}\n              disabled={props.price.deleted}\n              redStar={ true }\n           />\n           <LableInpute\n              className='mt15'\n              width='70px'\n              title='Наценка'\n              onChange={event => props.changePriceForm(event.target.value.replace(/[^0-9]/g, ''), 'margin')}\n              value={props.price.margin}\n              unit='%'\n              disabled={props.price.deleted}\n           />\n           <ChooseOfList\n              id={22}\n              title='Тип наценки'\n              className='mt15'\n              list={props.price.list_type_margin}\n              field='margin_type'\n              setElement={props.changePriceForm}\n              current_id={props.price.margin_type}\n              width={'250px'}\n              disabled={props.price.deleted}\n           />\n\n         </div>\n\n         <BottomButtons\n            edit={props.price.edit}\n            deleted={props.price.deleted}\n            create={handleCreate}\n            save={handleSave}\n            delete={props.permissions.includes('setting_price_delete') ? () => props.deletePrice(true) : null}\n            recover={props.permissions.includes('setting_price_recover_deleted') ? () => props.deletePrice(false) : null}\n            close={() => {\n              props.setVisibleFlag('statusPriceEditor', false)\n              props.resetPrice()\n            }}\n         />\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  price: state.price,\n  inputPriceTitleChecked: state.view.inputPriceTitleChecked,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  setVisibleFlag,\n  changePriceForm,\n  createPrice,\n  resetPrice,\n  savePrice,\n  deletePrice\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PriceEditor)\n","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\n\nimport TablePrice from './TablePrice'\nimport { addDiscountMargin, setVisibleFlag, changePriceForm } from '../../../../Redux/actions'\nimport PriceEditor from './PriceEditor'\nimport Checkbox from '../../../general/Checkbox'\nimport Button from '../../../general/Button'\n\nconst SettingMargin = (props) => {\n\n  useEffect(() => {\n    props.addDiscountMargin()\n  }, [])\n\n  const [showDeletedGood, setShowDeletedGood] = useState(false)\n  const [showDeletedServ, setShowDeletedServ] = useState(false)\n\n  return (\n    <div className='settingContent'>\n\n      <div className='Header'>\n        <span className='headerTitle'>Цены и скидки</span>\n      </div>\n\n      <div className='settingPageBody'>\n\n      <h3>Цены на товары</h3>\n      <p>Настройка цен на товары.</p>\n\n      <div className='row'>\n        <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(2, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedGood(event.target.checked)}\n          checked={showDeletedGood}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n      </div>\n      {props.statusPriceEditor ? <PriceEditor/> : null}\n\n      <TablePrice type={2} showDeleted={showDeletedGood}/>\n\n      <h3>Цены на работы</h3>\n      <p>Настройка цен на работы.</p>\n\n      <div className='row'>\n      <Button\n          className='greenButton'\n          title='+ Цена'\n          onClick={() => {\n            props.setVisibleFlag('statusPriceEditor', true)\n            props.changePriceForm(1, 'margin_type')\n          }}\n          unvisible={!props.permissions.includes('setting_create_price')}\n        />\n        <Checkbox\n          label='Показать удаленных'\n          onChange={event => setShowDeletedServ(event.target.checked)}\n          checked={showDeletedServ}\n          unvisible={!props.permissions.includes('setting_price_show_deleted')}\n        />\n        </div>\n      <TablePrice type={1} showDeleted={showDeletedServ}/>\n\n    </div>\n      \n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  statusPriceEditor: state.view.statusPriceEditor,\n  permissions: state.data.user.role.permissions\n})\n\nconst mapDispatchToProps = {\n  addDiscountMargin,\n  setVisibleFlag,\n  changePriceForm\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingMargin)","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SettingMarkening = (props) => {\n  return (\n    <div className='settingContent'>\n      <div className=\"tempPage\">\n        <div className=\"tempContainer\">\n          <h1 className=\"tempTitle\">Здесь будут маркетинг</h1>\n          <p className=\"tempDescription\">Страница на стадии разработки</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n\n})\n\nexport default connect(mapStateToProps)(SettingMarkening)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, Redirect, withRouter} from 'react-router-dom'\n\nimport SettingMenu from './SettingMenu'\nimport {  } from '../../Redux/actions'\n\nimport Generally from './SettingPages/Generally/Generally'\nimport SettingEmployees from './SettingPages/Employees/SettingEmployees'\nimport SettingBranches from './SettingPages/Branches/SettingBranches'\nimport SettingWherehouse from './SettingPages/Wherehouse/SettingWherehouse'\nimport SettingStatus from './SettingPages/SettingStatus'\nimport SettingTags from './SettingPages/SettingTags'\nimport SettingAlerts from './SettingPages/Notification/SettingNotification'\nimport SettingServicePrices from './SettingPages/ServicePrices/SettingServicePrices'\nimport SettingBooks from './SettingPages/Books/SettingBooks'\nimport SettingTemplates from './SettingPages/SettingTemplates'\nimport SettingMargin from './SettingPages/Margin/SettingMargin'\nimport SettingMarkening from './SettingPages/SettingMarkening'\n\n\nconst Settings = (props) => {\n\n\n  return (\n    <div className='settingPage'>\n      <SettingMenu/>\n      {/* <div className='settingContent'> */}\n          <Switch>\n              <Route path = '/settings/generally' component = {Generally}/>\n              <Route path = '/settings/employees' component={SettingEmployees}/>\n              <Route path = '/settings/branches' component = {SettingBranches}/>\n              <Route path = '/settings/wherehouse' component = {SettingWherehouse}/>\n              <Route path = '/settings/status' component = {SettingStatus}/>\n              <Route path = '/settings/tags' component = {SettingTags}/>\n              <Route path = '/settings/alerts' component = {SettingAlerts}/>\n              <Route path = '/settings/services_pricelist' component = {SettingServicePrices}/>\n              <Route path = '/settings/books' component = {SettingBooks}/>\n              <Route path = '/settings/document-templates' component = {SettingTemplates}/>\n              <Route path = '/settings/prices' component = {SettingMargin}/>\n              <Route path = '/settings/marketing' component = {SettingMarkening}/>\n\n              <Redirect from='/settings' to='/settings/generally'/>\n            </Switch>\n          {/* </div> */}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n//   dataSidebarRows: 'dataSidebarRows',\n})\n\nconst mapDispatchToProps = {\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Settings))\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\n\nimport { addMainData, addEmployees, addStatus, addData } from '../Redux/actions';\n\nimport Sidebar from './sidebar/Sidebar';\nimport Orders from './orders/Orders';\nimport TaskManager from './TaskManager/TaskManager';\nimport Leads from './Leads/Leads';\nimport Shops from './Shops/Shops';\nimport Payments from './Payments/Payments';\nimport Wherehouse from './Wherehouse/Wherehouse';\nimport Clients from './Clients/Clients';\nimport Analytics from './Analytics/Analytics';\nimport Reports from './Reports/Reports';\nimport Telephony from './Telephony/Telephony';\nimport Settings from './Settings/Settings';\n\n\n\n\nfunction Main(props) {\n\n    // Загружаем строки меню в State\n    useEffect(() => {\n        props.addMainData()\n        props.addEmployees()\n        props.addStatus()\n    }, [])\n    useEffect(() => {\n        props.addData(props.branches.filter(branch => branch.employees.includes(props.user_id))[0], 'current_branch')\n    }, [props.branches])\n\n\n    \n    return (\n        <div>\n            <Sidebar/>\n            <div className = 'contentMain'>\n                <Switch>\n                    <Route path = '/tasks' component = {TaskManager}/>\n                    <Route path='/leans' component={Leads}/>\n                    <Route path = '/orders' component = {Orders}/>\n                    <Route path = '/shops' component = {Shops}/>\n                    <Route path = '/payments' component = {Payments}/>\n                    <Route path = '/wherehouse' component = {Wherehouse}/>\n                    <Route path = '/clients' component = {Clients}/>\n                    <Route path = '/analytics' component = {Analytics}/>\n                    <Route path = '/reports' component = {Reports}/>\n                    <Route path = '/telephony' component = {Telephony}/>\n                    <Route path = '/settings' component = {Settings}/>\n\n                    <Redirect from='/' to='/leans'/>\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    statusCreateNewClient: state.view.statusCreateNewClient,\n    user_id: state.data.user.id,\n    branches: state.data.branches\n})\n\n  const mapDispatchToProps = {\n    addEmployees,\n    addStatus,\n    addMainData,\n    addData\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Main))","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { loginAction, loguotAction, addUserAction, log_in } from '../Redux/actions'\n\nfunction Login(props) {\n\n\n  const handleClick = ({target: {form}}) => {\n     props.log_in(form.login.value, form.password.value)\n  }\n\n\n\n  return (\n    <div className=\"mainLoginContaner\">\n      <div className=\"loginContanier\">\n        <h2>Войдите в аккаунт</h2>\n        {props.error_message ? (\n          <span className=\"errorMessageLogin\">{props.error_message}</span>\n        ) : null}\n        <form id=\"loginForm\">\n          <div>\n            <label className=\"loginFormLable\">Логин или Email</label>\n            <input \n              id=\"login\"\n              className=\"loginFormInput\" \n              type=\"text\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <label className=\"loginFormLable\">Пароль</label>\n            <input \n              id=\"password\" \n              className=\"loginFormInput\" \n              type=\"password\" \n              onKeyPress={event => {if (event.key === 'Enter') handleClick(event)}}\n            />\n          </div>\n          <div>\n            <button className=\"loginButtom\" type=\"button\" onClick={handleClick}>\n              Авторизоваться\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n  serverUrl: state.data.url_server,\n  error_message: state.data.error_message\n})\n\nconst mapDispatchToProps = {\n    // explicitly forwarding arguments\n    login: loginAction,\n    loguot: loguotAction,\n    addUser: addUserAction,\n    log_in\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login)\n","import React  from \"react\";\nimport Main from './components/Main'\nimport { connect } from \"react-redux\";\n\n\nimport Login from './components/Login'\n\n\nfunction App(props) {\n\n\n  return props.token ? <Main/> : <Login/>\n\n  \n}\n\nconst mapStateToProps = state => ({\n  token: state.data.token\n})\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nimport './index.css'\nimport App from './App'\nimport store from './Redux/store';\n\n\n\n\n\n\n\nconst app = (\n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\n\n"],"sourceRoot":""}