version: "3.9"
services:
  postgres:
    container_name: postgres_local
    image: stanislavkay/postgres:13.3
    environment:
      PUBLIC_URL: "one_two"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "225567"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U habrpguser -d habrdb" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped


  postgres_test:
    container_name: postgres_test
    image: stanislavkay/postgres:13.3
    environment:
      PUBLIC_URL: "database_test"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "225567"
      PGDATA: "/var/lib/postgresql/data/pgdata_test"
    volumes:
      - ../2. Init Database:/docker-entrypoint-initdb.d
      - .:/var/lib/postgresql/data_test
    ports:
      - "5434:5434"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      - postgres

#  onetwoapi:
#    container_name: onetwoapi_test
#    restart: unless-stopped
#    image: stanislavkay/onetwoapi:test
#    ports:
#      - 5005:5005
#    volumes:
#      - ./datapi:/app/build/static/data
#    networks:
#      - postgres
#
networks:
  postgres:
    driver: bridge
